usage: make_ood_learning_curve.py [-h] --target_features TARGET_FEATURES
                                  [--regressor_type {RF,DT,MLR,SVR,XGBR,KNN,GPR,NGB,sklearn-GPR,MLP,ElasticNet,Lasso,Ridge,HGBR}]
                                  [--numerical_feats {Xn,Mn (g/mol),Mw (g/mol),PDI,Temperature SANS/SLS/DLS/SEC (K),Concentration (mg/ml),solvent dP,polymer dP,solvent dD,polymer dD,solvent dH,polymer dH,Ra,abs(solvent dD - polymer dD),abs(solvent dP - polymer dP),abs(solvent dH - polymer dH),Dark/light,Aging time (hour),To Aging Temperature (K),Sonication/Stirring/heating Temperature (K),Merged Stirring /sonication/heating time(min)} [{Xn,Mn (g/mol),Mw (g/mol),PDI,Temperature SANS/SLS/DLS/SEC (K),Concentration (mg/ml),solvent dP,polymer dP,solvent dD,polymer dD,solvent dH,polymer dH,Ra,abs(solvent dD - polymer dD),abs(solvent dP - polymer dP),abs(solvent dH - polymer dH),Dark/light,Aging time (hour),To Aging Temperature (K),Sonication/Stirring/heating Temperature (K),Merged Stirring /sonication/heating time(min)} ...]]
                                  [--columns_to_impute [{Xn,Mn (g/mol),Mw (g/mol),PDI,Temperature SANS/SLS/DLS/SEC (K),Concentration (mg/ml),solvent dP,polymer dP,solvent dD,polymer dD,solvent dH,polymer dH,Ra} ...]]
                                  [--imputer [{mean,median,most_frequent,distance KNN,None}]]
                                  [--special_impute [{Mw (g/mol),None}]]
                                  [--transform_type {Standard,Robust Scaler}]
                                  [--kernel KERNEL]
                                  [--representation {ECFP,MACCS,Mordred}]
                                  [--oligomer_representation {Monomer,Dimer,Trimer,RRU Monomer,RRU Dimer,RRU Trimer}]
                                  [--radius [{3,4,5,6}]]
                                  [--vector [{count,binary}]]
                                  [--clustering_method [CLUSTERING_METHOD]]
make_ood_learning_curve.py: error: argument --regressor_type: invalid choice: ']XGBR' (choose from 'RF', 'DT', 'MLR', 'SVR', 'XGBR', 'KNN', 'GPR', 'NGB', 'sklearn-GPR', 'MLP', 'ElasticNet', 'Lasso', 'Ridge', 'HGBR')
usage: make_ood_learning_curve.py [-h] --target_features TARGET_FEATURES
                                  [--regressor_type {RF,DT,MLR,SVR,XGBR,KNN,GPR,NGB,sklearn-GPR,MLP,ElasticNet,Lasso,Ridge,HGBR}]
                                  [--numerical_feats {Xn,Mn (g/mol),Mw (g/mol),PDI,Temperature SANS/SLS/DLS/SEC (K),Concentration (mg/ml),solvent dP,polymer dP,solvent dD,polymer dD,solvent dH,polymer dH,Ra,abs(solvent dD - polymer dD),abs(solvent dP - polymer dP),abs(solvent dH - polymer dH),Dark/light,Aging time (hour),To Aging Temperature (K),Sonication/Stirring/heating Temperature (K),Merged Stirring /sonication/heating time(min)} [{Xn,Mn (g/mol),Mw (g/mol),PDI,Temperature SANS/SLS/DLS/SEC (K),Concentration (mg/ml),solvent dP,polymer dP,solvent dD,polymer dD,solvent dH,polymer dH,Ra,abs(solvent dD - polymer dD),abs(solvent dP - polymer dP),abs(solvent dH - polymer dH),Dark/light,Aging time (hour),To Aging Temperature (K),Sonication/Stirring/heating Temperature (K),Merged Stirring /sonication/heating time(min)} ...]]
                                  [--columns_to_impute [{Xn,Mn (g/mol),Mw (g/mol),PDI,Temperature SANS/SLS/DLS/SEC (K),Concentration (mg/ml),solvent dP,polymer dP,solvent dD,polymer dD,solvent dH,polymer dH,Ra} ...]]
                                  [--imputer [{mean,median,most_frequent,distance KNN,None}]]
                                  [--special_impute [{Mw (g/mol),None}]]
                                  [--transform_type {Standard,Robust Scaler}]
                                  [--kernel KERNEL]
                                  [--representation {ECFP,MACCS,Mordred}]
                                  [--oligomer_representation {Monomer,Dimer,Trimer,RRU Monomer,RRU Dimer,RRU Trimer}]
                                  [--radius [{3,4,5,6}]]
                                  [--vector [{count,binary}]]
                                  [--clustering_method [CLUSTERING_METHOD]]
make_ood_learning_curve.py: error: argument --regressor_type: invalid choice: ']XGBR' (choose from 'RF', 'DT', 'MLR', 'SVR', 'XGBR', 'KNN', 'GPR', 'NGB', 'sklearn-GPR', 'MLP', 'ElasticNet', 'Lasso', 'Ridge', 'HGBR')
