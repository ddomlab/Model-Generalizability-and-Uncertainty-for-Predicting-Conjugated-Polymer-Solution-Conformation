usage: train_numerical_only.py [-h] --target_features TARGET_FEATURES
                               --regressor_type REGRESSOR_TYPE
                               --numerical_feats {DP,Mn (g/mol),Mw
                               (g/mol),PDI,Temperature SANS/SLS/DLS/SEC
                               (K),Concentration (mg/ml),solvent dP,polymer
                               dP,solvent dD,polymer dD,solvent dH,polymer
                               dH,Ra,abs(solvent dD - polymer dD),abs(solvent
                               dP - polymer dP),abs(solvent dH - polymer dH)}
                               [{DP,Mn (g/mol),Mw (g/mol),PDI,Temperature SANS/SLS/DLS/SEC (K),Concentration (mg/ml),solvent dP,polymer dP,solvent dD,polymer dD,solvent dH,polymer dH,Ra,abs(solvent dD - polymer dD),abs(solvent dP - polymer dP),abs(solvent dH - polymer dH)} ...]
                               [--columns_to_impute [{Mn (g/mol),Mw (g/mol),PDI,Temperature SANS/SLS/DLS/SEC (K),Concentration (mg/ml),solvent dP,polymer dP,solvent dD,polymer dD,solvent dH,polymer dH,Ra} ...]]
                               [--imputer [{mean,median,most_frequent,distance KNN,None}]]
                               [--special_impute [{Mw (g/mol),None}]]
                               [--transform_type {Standard,Robust Scaler}]
                               [--kernel KERNEL]
train_numerical_only.py: error: argument --numerical_feats: invalid choice: 'Xn' (choose from 'DP', 'Mn (g/mol)', 'Mw (g/mol)', 'PDI', 'Temperature SANS/SLS/DLS/SEC (K)', 'Concentration (mg/ml)', 'solvent dP', 'polymer dP', 'solvent dD', 'polymer dD', 'solvent dH', 'polymer dH', 'Ra', 'abs(solvent dD - polymer dD)', 'abs(solvent dP - polymer dP)', 'abs(solvent dH - polymer dH)')
