


-------------------------------------------------- 
OOD TEST ON 0



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09938702023862594), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1495), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032335964979190515), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 243), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08716731616488205), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 786), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08043973610924907), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031223289846259272), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06002465407581591), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 156), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07614242228019466), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 453), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05933972880884771), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 323), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1172), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07101908301515959), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 66), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 122), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03170196991043615), ('regressor__regressor__max_depth', 6556), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06749193375287366), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02063675639302993), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 353), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06603882441967202), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 128), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04340745791050422), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1376), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03477448367687216), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 348), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 106), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007983667564203514), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1523), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04941491396050009), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.056062187624136034), ('regressor__regressor__max_depth', 29), ('regressor__regressor__n_estimators', 114), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08319939180841453), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010109943903200028), ('regressor__regressor__max_depth', 29), ('regressor__regressor__n_estimators', 503), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015869866447770102), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 808), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07939337556213923), ('regressor__regressor__max_depth', 12), ('regressor__regressor__n_estimators', 89), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08893407015143427), ('regressor__regressor__max_depth', 110), ('regressor__regressor__n_estimators', 138), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004111184600065167), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06665728255250039), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 104), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004936731636568406), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 135), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08208790700827472), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 806), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.024385579474529403), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 305), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 1



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0028248998493416557), ('regressor__regressor__max_depth', 73), ('regressor__regressor__n_estimators', 1591), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.041338261422629655), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1650), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00288590580786823), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 436), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08256589922991081), ('regressor__regressor__max_depth', 6436), ('regressor__regressor__n_estimators', 892), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05576804240752499), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.040561932315108684), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1391), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002880289502556133), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1064), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07693173041362837), ('regressor__regressor__max_depth', 269), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004716554135923048), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 393), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09168454905565578), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1213), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 164), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001929589944825896), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03249732679492177), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03845393842415979), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 808), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0017167786063273021), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.033375156325082554), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 459), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03678960948175754), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 622), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 340), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007701366427284002), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 271), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.048368491797051064), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08038737192635231), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 65), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03594343080618981), ('regressor__regressor__max_depth', 20), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0036980204670838393), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09628997935155736), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05731381982103496), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 102), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05563066713599542), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 292), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06389991410711769), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07777552000913367), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 364), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08845141508241185), ('regressor__regressor__max_depth', 13), ('regressor__regressor__n_estimators', 717), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02838365269622878), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1096), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06796206965283641), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 72), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 2



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011522010098608268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 197), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07355011133222311), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 800), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0865758235143529), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1588), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0031821952855795687), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 946), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08617563347436207), ('regressor__regressor__max_depth', 1083), ('regressor__regressor__n_estimators', 918), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.021598427429789846), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 960), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07964178243911257), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 328), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002411013884233628), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1917), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0031849262480320357), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1147), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004149054643094772), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1400), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0025214032924156275), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07352481813242628), ('regressor__regressor__max_depth', 1264), ('regressor__regressor__n_estimators', 1246), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0036330021967361744), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 326), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06435053042961522), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 119), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0028551680037027767), ('regressor__regressor__max_depth', 3504), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03407765032466739), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 424), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 178), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00213080589615008), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770020061684526), ('regressor__regressor__max_depth', 1090), ('regressor__regressor__n_estimators', 180), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0011287609386345025), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1790), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011532292776336224), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 213), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02808287184621455), ('regressor__regressor__max_depth', 236), ('regressor__regressor__n_estimators', 102), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0596546309039907), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 129), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08559363597613263), ('regressor__regressor__max_depth', 282), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.027407741344374993), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 117), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06449854041502759), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014044590250285796), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 849), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.016426618954466708), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 498), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07661267075590485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 75), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.062197932721112), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 63), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001770105404190914), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 705), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029588400241429198), ('regressor__regressor__max_depth', 614), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020295980595972842), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 3



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003563442389727585), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1245), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0037297718136500625), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 964), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 72), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09357666812166686), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 135), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003634312936998649), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1076), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00323767477383308), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1205), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009637145487774031), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1286), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03001092827836679), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 850), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09999927485321214), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004018255273233563), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0017121122808765221), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1373), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018513161780810041), ('regressor__regressor__max_depth', 1098), ('regressor__regressor__n_estimators', 1842), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001801440849368369), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1819), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026208020128864286), ('regressor__regressor__max_depth', 748), ('regressor__regressor__n_estimators', 143), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09004322956352574), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 129), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07768038039191266), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 969), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018402785115574085), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09231395839955243), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 55), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.028755703761705876), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09020331582822885), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 443), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06842124414152854), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029764492029540717), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005937338574555388), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1224), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07051847969027064), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 66), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07294653330167133), ('regressor__regressor__max_depth', 15), ('regressor__regressor__n_estimators', 88), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.016090752373725224), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 485), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015885246147151915), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1547), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0608833139551811), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 3237), ('regressor__regressor__n_estimators', 76), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08307344551907307), ('regressor__regressor__max_depth', 730), ('regressor__regressor__n_estimators', 54), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0802146147273407), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 64), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0017162445761933981), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 893), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016739533509621083), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 913), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 4



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002915611612342399), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1473), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 140), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0052361850819116615), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1375), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09572874562936179), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 732), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002182193355733927), ('regressor__regressor__max_depth', 35), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0032759882723021674), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1246), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06245004013655008), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005849536482281094), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 426), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0041026430893768675), ('regressor__regressor__max_depth', 2933), ('regressor__regressor__n_estimators', 1212), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03762263403326314), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 177), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003908244675497383), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.053092294135801604), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 252), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.055589973458619636), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 80), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06542792192224373), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 64), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 63), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026981627110074992), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 138), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03485442382083702), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 417), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006629566773310983), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 144), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07697500260599609), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 110), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02712826078557763), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052744753108443954), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03699231856070751), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015309439347152576), ('regressor__regressor__max_depth', 4975), ('regressor__regressor__n_estimators', 1112), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005776057564832034), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 597), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023384715848981832), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1146), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 187), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00319516792558207), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025023648725103514), ('regressor__regressor__max_depth', 22), ('regressor__regressor__n_estimators', 177), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 224), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025408350317261314), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 183), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])


{'CO_0': {'cluster size (%)': 34, 6: {'test_mad': 71.78549118040651, 'test_ystd': 170.29127014494833, 'test_mae': 56.88303282086189, 'test_rmse': 177.78656007920466, 'test_r2': -0.08996633536545895, 'test_pearson_r': array([-0.11951552]), 'test_pearson_p_value': array([0.26460531]), 'test_spearman_r': -0.05940644688049784, 'test_spearman_p_value': 0.5802597201426924, 'test_kendall_r': -0.03154045360694017, 'test_kendall_p_value': 0.6672093952704836, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08716731616488205, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 786, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 71.78549118040651, 'test_ystd': 170.29127014494833, 'test_mae': 55.05659617881518, 'test_rmse': 177.1288039653807, 'test_r2': -0.08191616773085775, 'test_pearson_r': array([-0.09597201]), 'test_pearson_p_value': array([0.37096545]), 'test_spearman_r': -0.0701091588573957, 'test_spearman_p_value': 0.5138449294641959, 'test_kendall_r': -0.042964470855764, 'test_kendall_p_value': 0.5613434138007933, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07101908301515959, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 66, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 71.78549118040651, 'test_ystd': 170.29127014494833, 'test_mae': 56.401053620852345, 'test_rmse': 177.78126765065414, 'test_r2': -0.08990144313638204, 'test_pearson_r': array([-0.11909728]), 'test_pearson_p_value': array([0.26629289]), 'test_spearman_r': 0.03036406704190299, 'test_spearman_p_value': 0.7775833811794917, 'test_kendall_r': 0.03134226919887529, 'test_kendall_p_value': 0.6696622850100407, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02063675639302993, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 71.78549118040651, 'test_ystd': 170.29127014494833, 'test_mae': 56.163813527374685, 'test_rmse': 177.6335590137878, 'test_r2': -0.08809111766563471, 'test_pearson_r': array([-0.11063875]), 'test_pearson_p_value': array([0.30198706]), 'test_spearman_r': 0.12822565393208454, 'test_spearman_p_value': 0.23110064841121972, 'test_kendall_r': 0.09820577682314258, 'test_kendall_p_value': 0.18131529697239668, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03477448367687216, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 348, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 71.78549118040651, 'test_ystd': 170.29127014494833, 'test_mae': 56.53716548386006, 'test_rmse': 177.73994996786175, 'test_r2': -0.08939489967666936, 'test_pearson_r': array([-0.11297651]), 'test_pearson_p_value': array([0.29182313]), 'test_spearman_r': 0.18815639415455485, 'test_spearman_p_value': 0.07743304623766545, 'test_kendall_r': 0.1775817379389229, 'test_kendall_p_value': 0.016021599639301307, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08319939180841453, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 163, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 71.78549118040651, 'test_ystd': 170.29127014494833, 'test_mae': 56.702495104939324, 'test_rmse': 177.67398723156214, 'test_r2': -0.08858645864485237, 'test_pearson_r': array([-0.10830795]), 'test_pearson_p_value': array([0.31234845]), 'test_spearman_r': -0.06420960529062984, 'test_spearman_p_value': 0.5499691570405371, 'test_kendall_r': -0.030599528184261593, 'test_kendall_p_value': 0.6774096087782571, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06665728255250039, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 104, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 71.78549118040651, 'test_ystd': 170.29127014494833, 'test_mae': 57.38349011305433, 'test_rmse': 177.85890329900508, 'test_r2': -0.09085355335231626, 'test_pearson_r': array([-0.11507146]), 'test_pearson_p_value': array([0.28290905]), 'test_spearman_r': -0.1357795426258416, 'test_spearman_p_value': 0.20454156825225422, 'test_kendall_r': -0.08905286182477316, 'test_kendall_p_value': 0.22429921112254858, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08208790700827472, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 806, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_0': {'cluster size (%)': 33, 6: {'fit_time': array([14.66830873, 14.21975493, 13.38226414]), 'score_time': array([0.16561317, 0.15626502, 0.1592617 ]), 'test_pearson_r': array([0.8883835 , 0.98063585, 0.94799869]), 'test_pearson_p': array([-1.77141479e-30, -2.92769817e-61, -1.57201778e-43]), 'test_spearman_r': array([0.84928062, 0.92438731, 0.85006514]), 'test_spearman_p': array([-2.65949673e-25, -6.50217144e-37, -4.13906755e-25]), 'test_kendall_r': array([0.75994092, 0.78752015, 0.7412063 ]), 'test_kendall_p': array([-3.11785148e-25, -1.22409682e-26, -8.68573987e-24]), 'test_rmse': array([-73.34483533, -20.83965408, -24.89615271]), 'test_mae': array([-24.18470686, -11.46449029, -12.29962346]), 'test_r2': array([0.78600709, 0.96084969, 0.89733895]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([11.03922176,  9.86333132,  9.92833185]), 'score_time': array([0.15985489, 0.16336727, 0.15889859]), 'test_pearson_r': array([0.72239301, 0.97860277, 0.98660809]), 'test_pearson_p': array([-2.84531481e-15, -1.86103236e-59, -6.19905610e-68]), 'test_spearman_r': array([0.78927995, 0.887509  , 0.9436355 ]), 'test_spearman_p': array([-1.07665596e-19, -5.28774218e-30, -4.23784997e-42]), 'test_kendall_r': array([0.65174392, 0.80100305, 0.83015791]), 'test_kendall_p': array([-8.41530536e-19, -1.82544408e-27, -2.04098951e-29]), 'test_rmse': array([-91.88346562, -27.27213932, -24.76945666]), 'test_mae': array([-27.38944989, -13.52849847, -13.78053975]), 'test_r2': array([0.32820952, 0.95502686, 0.95445695]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([2.09956527, 1.97330832, 2.07659531]), 'score_time': array([0.15277123, 0.15253067, 0.15518951]), 'test_pearson_r': array([0.98486713, 0.62280047, 0.97719462]), 'test_pearson_p': array([-1.74848711e-66, -1.52630362e-10, -2.62984717e-58]), 'test_spearman_r': array([0.93920573, 0.8380012 , 0.94135087]), 'test_spearman_p': array([-3.16742393e-41, -8.22556556e-24, -2.14519218e-41]), 'test_kendall_r': array([0.82386248, 0.75773431, 0.84146485]), 'test_kendall_p': array([-1.89338604e-29, -8.14324538e-25, -3.82046875e-30]), 'test_rmse': array([ -32.21744783, -118.91807196,  -15.13729386]), 'test_mae': array([-16.04059202, -29.71479547,  -8.69623714]), 'test_r2': array([ 0.95877821, -0.18411536,  0.95458302]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.61080074, 1.76098919, 1.63562131]), 'score_time': array([0.15226817, 0.15599442, 0.1569159 ]), 'test_pearson_r': array([0.39065687, 0.95051075, 0.97860783]), 'test_pearson_p': array([-1.83357994e-04, -2.06871444e-44, -1.84283226e-59]), 'test_spearman_r': array([0.86396352, 0.8590934 , 0.92800634]), 'test_spearman_p': array([-4.69592638e-27, -3.70219369e-26, -8.93429249e-38]), 'test_kendall_r': array([0.76955294, 0.74214556, 0.81364834]), 'test_kendall_p': array([-9.36066281e-26, -6.26630352e-24, -1.66085585e-28]), 'test_rmse': array([-120.48348597,  -45.50863964,  -28.89724322]), 'test_mae': array([-27.79180033, -21.849011  , -12.40489064]), 'test_r2': array([-2.26436537,  0.89173077,  0.95556494]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([1.69557977, 1.69867253, 1.78024411]), 'score_time': array([0.14973569, 0.15061784, 0.14903641]), 'test_pearson_r': array([0.9848838 , 0.81654802, 0.97521422]), 'test_pearson_p': array([-1.66906073e-66, -9.55755960e-22, -8.34556909e-57]), 'test_spearman_r': array([0.92293882, 0.83155556, 0.93955663]), 'test_spearman_p': array([-5.35753101e-37, -3.68142682e-23, -7.32932261e-41]), 'test_kendall_r': array([0.81459974, 0.74335073, 0.85683056]), 'test_kendall_p': array([-8.63452140e-29, -4.83934884e-24, -2.19532115e-31]), 'test_rmse': array([-19.70596014, -89.71241262, -23.81464607]), 'test_mae': array([-10.25576493, -22.44965121, -11.65035244]), 'test_r2': array([0.96903561, 0.57409607, 0.9497432 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.68158531, 0.62657452, 0.6993432 ]), 'score_time': array([0.21574855, 0.18871856, 0.18566537]), 'test_pearson_r': array([0.95426058, 0.93721708, 0.90818804]), 'test_pearson_p': array([-2.42608630e-46, -3.44192575e-40, -1.61110167e-33]), 'test_spearman_r': array([0.90302443, 0.91076114, 0.76127153]), 'test_spearman_p': array([-6.14704511e-33, -5.15238513e-34, -1.77852103e-17]), 'test_kendall_r': array([0.76939041, 0.76285108, 0.68285629]), 'test_kendall_p': array([-9.95898992e-26, -3.89634251e-25, -2.36322723e-20]), 'test_rmse': array([-22.59813159, -41.41552381, -65.8404739 ]), 'test_mae': array([-13.72790951, -20.18765821, -28.22861403]), 'test_r2': array([0.90082347, 0.86407236, 0.82381434]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([9.79544663, 9.07025361, 9.95220232]), 'score_time': array([0.15717864, 0.19907665, 0.15292597]), 'test_pearson_r': array([0.97487494, 0.44202607, 0.98615401]), 'test_pearson_p': array([-3.24883508e-57, -2.03667657e-05, -2.49213124e-67]), 'test_spearman_r': array([0.82975905, 0.82799814, 0.98007322]), 'test_spearman_p': array([-3.06713925e-23, -8.19531586e-23, -9.63865277e-61]), 'test_kendall_r': array([0.76965593, 0.74252127, 0.89421843]), 'test_kendall_p': array([-9.34909239e-26, -6.03411344e-24, -4.40273167e-34]), 'test_rmse': array([ -40.13955672, -121.55894289,  -21.82289346]), 'test_mae': array([-15.87849024, -28.148264  , -11.42298173]), 'test_r2': array([ 0.92738388, -1.6793653 ,  0.96744605]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_1': {'cluster size (%)': 6, 6: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.4658637523651, 'test_rmse': 180.72186764084339, 'test_r2': -0.8835384406555085, 'test_pearson_r': array([-0.84504241]), 'test_pearson_p_value': array([3.77967605e-05]), 'test_spearman_r': -0.6593388532852816, 'test_spearman_p_value': 0.005461940258178988, 'test_kendall_r': -0.4314704791779718, 'test_kendall_p_value': 0.025719039359654118, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 145.14634613990782, 'test_rmse': 180.73730718503745, 'test_r2': -0.8838602856829798, 'test_pearson_r': array([-0.84626392]), 'test_pearson_p_value': array([3.58822148e-05]), 'test_spearman_r': -0.6744613040487055, 'test_spearman_p_value': 0.004160546791390076, 'test_kendall_r': -0.46742635244280273, 'test_kendall_p_value': 0.015679264187725396, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.040561932315108684, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1391, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.4658637523651, 'test_rmse': 180.72186764084339, 'test_r2': -0.8835384406555085, 'test_pearson_r': array([-0.84504241]), 'test_pearson_p_value': array([3.77967605e-05]), 'test_spearman_r': -0.6593388532852816, 'test_spearman_p_value': 0.005461940258178988, 'test_kendall_r': -0.4314704791779718, 'test_kendall_p_value': 0.025719039359654118, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 393, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.63740735054014, 'test_rmse': 179.6867124790447, 'test_r2': -0.8620228313502589, 'test_pearson_r': array([-0.84611496]), 'test_pearson_p_value': array([3.61112426e-05]), 'test_spearman_r': -0.679677541504564, 'test_spearman_p_value': 0.0037744862509452273, 'test_kendall_r': -0.48829782699345753, 'test_kendall_p_value': 0.013150586201222912, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0017167786063273021, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.46561770439146, 'test_rmse': 180.72253524021968, 'test_r2': -0.8835523565299641, 'test_pearson_r': array([-0.84504232]), 'test_pearson_p_value': array([3.77969163e-05]), 'test_spearman_r': -0.6593388532852816, 'test_spearman_p_value': 0.005461940258178988, 'test_kendall_r': -0.4314704791779718, 'test_kendall_p_value': 0.025719039359654118, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 145.04978137016295, 'test_rmse': 180.4872533989312, 'test_r2': -0.8786511726422692, 'test_pearson_r': array([-0.84499362]), 'test_pearson_p_value': array([3.78749812e-05]), 'test_spearman_r': -0.6744613040487055, 'test_spearman_p_value': 0.004160546791390076, 'test_kendall_r': -0.46742635244280273, 'test_kendall_p_value': 0.015679264187725396, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05563066713599542, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 292, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.46575098037718, 'test_rmse': 180.72215412542852, 'test_r2': -0.8835444123197402, 'test_pearson_r': array([-0.84504232]), 'test_pearson_p_value': array([3.77969025e-05]), 'test_spearman_r': -0.6593388532852816, 'test_spearman_p_value': 0.005461940258178988, 'test_kendall_r': -0.4314704791779718, 'test_kendall_p_value': 0.025719039359654118, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 150, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_1': {'cluster size (%)': 6, 6: {'fit_time': array([33.58862424, 27.63854003, 30.82902718, 32.82216716, 32.2739625 ,
       32.79552174, 33.91452003, 34.83144927, 31.25225616, 30.86470914,
       30.86533999, 31.06552386, 32.56231642, 34.54743695, 34.48671293,
       28.20715141]), 'score_time': array([0.15713763, 0.29815602, 0.15760827, 0.1590538 , 0.16177845,
       0.16109943, 0.15946436, 0.16152668, 0.1658113 , 0.16428113,
       0.15781617, 0.15245652, 0.16199899, 0.15124369, 0.15711188,
       0.15634894]), 'test_pearson_r': array([0.95978752, 0.99748343, 0.99452061, 0.74823348, 0.9967084 ,
       0.16810122, 0.97437537, 0.99409289, 0.99635552, 0.98606698,
       0.99589218, 0.99760064, 0.99440701, 0.85602802, 0.99720138,
       0.90301592]), 'test_pearson_p': array([-1.11326419e-09, -1.16765700e-18, -3.96322054e-16, -8.56758351e-04,
       -1.11284453e-16, -5.33734867e-01, -1.81792403e-10, -6.62552190e-15,
       -2.26794088e-16, -2.63466012e-12, -5.23512164e-16, -1.21974130e-17,
       -4.52337832e-15, -2.32932039e-05, -3.57893553e-17, -1.66904169e-06]), 'test_spearman_r': array([0.65686275, 0.96382605, 0.99141179, 0.87941176, 0.89117647,
       0.69705882, 0.98529412, 0.81176471, 0.94334095, 0.84915402,
       0.9757177 , 0.97277436, 0.9757177 , 0.86892583, 0.97201873,
       0.95364264]), 'test_spearman_p': array([-4.17478639e-03, -5.09295480e-10, -1.14272617e-14, -7.18727304e-06,
       -3.61864891e-06, -2.69058940e-03, -3.83671954e-12, -1.34322375e-04,
       -4.32397330e-08, -3.16732673e-05, -1.25183504e-10, -2.76678019e-10,
       -1.25183504e-10, -1.25158918e-05, -3.34448567e-10, -1.09099012e-08]), 'test_kendall_r': array([0.57352941, 0.89299501, 0.96298938, 0.75      , 0.76666667,
       0.66666667, 0.95      , 0.73333333, 0.86193223, 0.6778302 ,
       0.91214188, 0.89540533, 0.91214188, 0.73952191, 0.90759507,
       0.82845913]), 'test_kendall_p': array([-9.01334702e-04, -6.08366508e-07, -8.13306630e-08, -8.91848950e-06,
       -4.72451181e-06, -1.34937165e-04, -7.63760478e-11, -1.62687222e-05,
       -3.45008795e-06, -2.61704221e-04, -8.99518934e-07, -1.41912826e-06,
       -8.99518934e-07, -7.18614621e-05, -1.10296350e-06, -8.12917002e-06]), 'test_rmse': array([ -21.87888316,   -7.08873923,  -31.56731427,  -64.65428586,
        -18.6729078 , -195.41788006,  -12.01878845,   -9.66158572,
         -7.45155955,  -33.41304207,   -5.85625655,   -6.32231646,
        -15.74180142,  -23.43113098,   -6.30573113,  -26.55572623]), 'test_mae': array([-11.89328229,  -4.94729153, -12.63793923, -22.38421412,
       -13.14618114, -59.88832651,  -8.30748958,  -6.49718847,
        -5.19759356, -16.7737103 ,  -3.79956243,  -4.27247294,
       -10.60693785, -12.33495256,  -4.49411791, -13.50094265]), 'test_r2': array([ 0.89860111,  0.98796038,  0.9853385 ,  0.32706717,  0.99109581,
       -4.93635597,  0.9487489 ,  0.97934676,  0.99102958,  0.96945442,
        0.99052372,  0.9950124 ,  0.97744144,  0.44192123,  0.99246579,
        0.7982232 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([33.3857739 , 33.48258901, 32.80941701, 34.41423774, 17.1389153 ,
       34.65833282, 32.10624075, 28.73105955, 34.20794487, 16.70134377,
       31.34231257, 31.84877443, 33.3164413 , 35.11061192, 16.93697786,
       26.15491223]), 'score_time': array([0.29798436, 0.16012073, 0.15813351, 0.16202211, 0.15851164,
       0.15839696, 0.18154454, 0.16951346, 0.16202068, 0.197294  ,
       0.35814595, 0.35563087, 0.15885568, 0.15450096, 0.16283679,
       0.18941998]), 'test_pearson_r': array([0.98798248, 0.9852372 , 0.65035227, 0.99954185, 0.24746581,
       0.98501365, 0.98877809, 0.98715094, 0.83548649, 0.95914069,
       0.88335008, 0.99493691, 0.99595986, 0.96126914, 0.97652182,
       0.98161007]), 'test_pearson_p': array([-1.40602545e-13, -6.52696431e-13, -4.70383661e-03, -1.13458614e-22,
       -3.55457617e-01, -4.37594945e-12, -5.83422004e-13, -1.49882613e-12,
       -5.59422770e-05, -4.57517099e-09, -5.75882645e-06, -2.25667601e-15,
       -4.66126524e-16, -3.16399655e-09, -9.91048734e-11, -1.81700052e-11]), 'test_spearman_r': array([0.83507067, 0.77225306, 0.8887565 , 0.85935199, 0.66666685,
       0.91979422, 0.90294118, 0.98749107, 0.87858743, 0.98527353,
       0.90721748, 0.98823529, 1.        , 0.93529412, 0.87776237,
       0.89705882]), 'test_spearman_p': array([-3.03071218e-05, -2.80387118e-04, -1.86072399e-06, -1.99634802e-05,
       -4.79590355e-03, -4.62206235e-07, -1.67772437e-06, -1.24331763e-12,
       -7.52120583e-06, -3.87426958e-12, -1.23824457e-06, -8.10888105e-13,
       -0.00000000e+00, -1.07201672e-07, -7.86842475e-06, -2.49237597e-06]), 'test_kendall_r': array([0.70111178, 0.60223464, 0.80605994, 0.77310924, 0.6778302 ,
       0.84519568, 0.75      , 0.94561497, 0.74477639, 0.9412097 ,
       0.73952191, 0.95      , 1.        , 0.81666667, 0.78994386,
       0.75      ]), 'test_kendall_p': array([-8.97976474e-05, -8.22570773e-04, -7.95010666e-06, -3.31810562e-05,
       -2.61704221e-04, -5.31661458e-06, -8.91848950e-06, -3.52984089e-07,
       -6.04438410e-05, -4.35438108e-07, -7.18614621e-05, -7.63760478e-11,
       -9.55895466e-14, -5.50848432e-07, -2.22802570e-05, -8.91848950e-06]), 'test_rmse': array([  -6.42474983,  -20.02746241,  -59.82837866,  -24.44828672,
       -189.79930115,  -33.89379257,  -12.69718459,  -34.6418153 ,
        -18.56056012,  -15.55447029,  -25.81383942,  -40.61526479,
        -10.10463454,  -23.74603406,  -19.18786792,  -14.38876277]), 'test_mae': array([ -5.26493911, -13.80967896, -19.06627977,  -9.63338966,
       -55.10362877, -17.63261189,  -9.42242404, -18.11560246,
        -9.42341435, -10.13119699, -14.14918766, -18.85018382,
        -5.45442699, -15.43705489, -12.2881059 , -10.82102555]), 'test_r2': array([ 0.97113363,  0.9412877 , -0.02456964,  0.98645321, -3.15225779,
        0.96911126,  0.97358033,  0.96731063,  0.47437392,  0.87606971,
        0.6774328 ,  0.96336666,  0.97641881,  0.92123016,  0.93587213,
        0.96161118]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([6.05722237, 5.95673442, 5.74215508, 5.93095708, 3.43938208,
       6.4159677 , 6.56472135, 5.22345781, 6.45509219, 3.51857829,
       6.34485149, 5.91560221, 6.18375468, 5.80787349, 3.21908808,
       6.16211987]), 'score_time': array([0.36132717, 0.3013742 , 0.29698157, 0.32530069, 0.24999881,
       0.15383458, 0.15236831, 0.32329035, 0.14976978, 0.15833378,
       0.15869236, 0.26915002, 0.16090012, 0.2001791 , 0.15826726,
       0.15460968]), 'test_pearson_r': array([0.99460445, 0.996091  , 0.88706446, 0.99758168, 0.99785005,
       0.99696131, 0.75543465, 0.98313914, 0.06631439, 0.98340149,
       0.99558728, 0.97750223, 0.9782542 , 0.99163342, 0.9656584 ,
       0.99359012]), 'test_pearson_p': array([-3.53122995e-16, -3.16230193e-17, -2.07321560e-06, -1.28877432e-17,
       -5.66085997e-18, -6.36320067e-17, -7.14072729e-04, -9.93591972e-12,
       -8.07224476e-01, -8.90913773e-12, -8.63465543e-16, -7.37138830e-11,
       -5.82190073e-11, -7.52692911e-14, -1.37929828e-09, -1.17211970e-14]), 'test_spearman_r': array([0.99202962, 0.98712465, 0.93807498, 0.97058824, 0.94411765,
       0.95588235, 0.89705882, 0.98380077, 0.63823529, 0.78440051,
       0.96983102, 0.97058824, 0.95217097, 0.90037513, 0.80294118,
       0.97938251]), 'test_spearman_p': array([-6.53940522e-15, -2.35235248e-13, -2.66240836e-08, -4.72340113e-10,
       -3.93392920e-08, -7.76027446e-09, -2.49237597e-06, -7.52089449e-12,
       -7.80113863e-03, -3.21258144e-04, -5.63193822e-10, -4.72340113e-10,
       -1.35244908e-08, -1.99988222e-06, -1.80516795e-04, -4.02148125e-11]), 'test_kendall_r': array([0.96679625, 0.93727575, 0.81919377, 0.9       , 0.81666667,
       0.85      , 0.8       , 0.92440239, 0.6       , 0.72803985,
       0.89540533, 0.9       , 0.89540533, 0.77977303, 0.8       ,
       0.90759507]), 'test_kendall_p': array([-6.63375843e-08, -1.64175866e-07, -4.73348832e-06, -4.72556483e-09,
       -5.50848432e-07, -1.02027025e-07, -1.17934846e-06, -6.95749778e-07,
       -7.73831095e-04, -8.82060896e-05, -1.41912826e-06, -4.72556483e-09,
       -1.41912826e-06, -3.15745343e-05, -1.17934846e-06, -1.10296350e-06]), 'test_rmse': array([  -8.66374732,  -16.76931286,  -31.71456355,  -30.24873798,
        -13.75092752,  -16.91019221,  -63.92484807,  -13.5151016 ,
       -197.2091149 ,  -17.87303012,  -10.41507348,  -10.05235141,
        -19.3741889 ,   -9.520811  ,  -12.7993128 ,   -9.29300154]), 'test_mae': array([ -6.37381642,  -8.54547485, -13.89754877, -15.27383531,
        -8.19335047,  -9.96666053, -22.66612757,  -5.65186671,
       -57.05668159, -10.59011043,  -6.79735579,  -5.68962444,
       -11.88228894,  -5.67342202,  -6.71959916,  -5.623405  ]), 'test_r2': array([  0.98524661,   0.9914771 ,   0.78456301,   0.97988078,
         0.99547661,   0.99208119,   0.43236961,   0.95802285,
       -18.11535514,   0.95916447,   0.98794674,   0.94654317,
         0.95057093,   0.97726136,   0.92834227,   0.98533354]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([3.19045305, 3.34731126, 3.96652603, 3.96807146, 2.93141365,
       2.20584249, 3.53152609, 3.37604332, 3.36582232, 3.84714675,
       4.03164577, 3.84943628, 3.48505282, 3.810673  , 2.73468685,
       3.58705783]), 'score_time': array([0.15202975, 0.15367007, 0.15072727, 0.15895867, 0.15499449,
       0.34385371, 0.1485548 , 0.15128708, 0.15812182, 0.15801716,
       0.15286779, 0.15213227, 0.15004659, 0.15483737, 0.46744466,
       0.15896368]), 'test_pearson_r': array([ 0.98700307,  0.99578908,  0.98015908,  0.99823286, -0.08340779,
        0.99410824,  0.99573286,  0.98793372,  0.99548652,  0.76375035,
        0.99589694,  0.99592971,  0.6853534 ,  0.9980428 ,  0.98559494,
        0.99755923]), 'test_pearson_p': array([-2.52326751e-13, -5.52030643e-17, -5.90596173e-12, -1.43618975e-18,
       -7.58764932e-01, -6.50622615e-15, -6.83014150e-16, -9.67303725e-13,
       -1.01104344e-15, -5.74190267e-04, -5.19287519e-16, -4.90985666e-16,
       -3.38769406e-03, -2.93460518e-18, -3.32256219e-12, -1.37482022e-17]), 'test_spearman_r': array([0.83128834, 0.9877451 , 0.96995726, 0.98669374, 0.57731959,
       0.97941176, 0.98235294, 0.98230516, 0.97126251, 0.74025038,
       0.98749107, 0.97058824, 0.69117647, 0.97352941, 0.92058824,
       0.97647059]), 'test_spearman_p': array([-3.55098199e-05, -1.62708343e-13, -1.28761744e-10, -1.91214071e-12,
       -1.91955219e-02, -3.98200979e-11, -1.36412383e-11, -1.39001436e-11,
       -4.02278911e-10, -1.04142867e-03, -1.24331763e-12, -4.72340113e-10,
       -3.02471880e-03, -2.27689766e-10, -4.32041043e-07, -1.00615044e-10]), 'test_kendall_r': array([0.8       , 0.94117647, 0.87823476, 0.94048016, 0.50420168,
       0.91666667, 0.93333333, 0.91990493, 0.90302594, 0.72803985,
       0.94561497, 0.9       , 0.6       , 0.9       , 0.8       ,
       0.91666667]), 'test_kendall_p': array([-8.33692000e-06, -2.62815024e-11, -9.29113866e-07, -5.83620144e-07,
       -6.79309811e-03, -1.38948965e-09, -3.55879882e-10, -8.40185652e-07,
       -1.35084085e-06, -8.82060896e-05, -3.52984089e-07, -4.72556483e-09,
       -7.73831095e-04, -4.72556483e-09, -1.17934846e-06, -1.38948965e-09]), 'test_rmse': array([ -12.4835401 ,   -6.10965418,  -18.6330302 ,   -3.7699694 ,
       -277.86776386,   -8.5710209 ,  -28.67769372,  -14.27182866,
         -6.61654882,  -36.00369743,   -8.51322679,   -7.05335428,
        -64.93652422,  -13.39902282,  -17.2515188 ,  -17.15175534]), 'test_mae': array([  -6.3096136 ,   -4.53878374,  -10.53954675,   -2.24203356,
       -106.24933785,   -4.52883817,  -16.06003612,   -6.99722141,
         -4.5690198 ,  -16.88427593,   -6.58998024,   -4.53586511,
        -27.06002179,   -7.29668626,  -12.32197868,  -11.00736654]), 'test_r2': array([ 9.67721514e-01,  9.89239067e-01,  9.60465891e-01,  9.91830373e-01,
       -5.86445724e+01,  9.88146142e-01,  9.88422523e-01,  9.69907814e-01,
        9.90879726e-01,  1.36991195e-02,  9.82139131e-01,  9.91497056e-01,
        1.02292391e-02,  9.95311668e-01,  9.54653438e-01,  9.93056819e-01]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([3.26902652, 3.42723131, 3.50825262, 3.9369545 , 2.83835745,
       3.75215006, 3.20417333, 2.52838326, 3.35740209, 4.01727962,
       3.82465315, 3.61551881, 3.63562202, 3.54712081, 3.86360645,
       3.67376924]), 'score_time': array([0.34304023, 0.15564799, 0.15497065, 0.15019512, 0.17448163,
       0.1604991 , 0.15678287, 0.33901548, 0.35062337, 0.14939499,
       0.15410542, 0.15086126, 0.16044521, 0.15120649, 0.15207195,
       0.15062952]), 'test_pearson_r': array([0.99796798, 0.97442679, 0.98797641, 0.99596081, 0.98825719,
       0.99052412, 0.9921006 , 0.26047619, 0.49405398, 0.99631606,
       0.98850433, 0.99105249, 0.89430404, 0.98680923, 0.93907036,
       0.99469594]), 'test_pearson_p': array([-2.35131127e-19, -3.89726668e-11, -1.41134187e-13, -4.65356058e-16,
       -8.00429204e-13, -1.79411131e-13, -5.04054915e-14, -3.29883985e-01,
       -5.17582661e-02, -2.44523969e-16, -6.90147444e-13, -1.20236201e-13,
       -2.97591728e-06, -1.79949514e-12, -7.10905658e-08, -3.12277258e-15]), 'test_spearman_r': array([0.97058824, 0.83602082, 0.81840491, 0.95805765, 0.98160439,
       0.98235294, 0.97941176, 0.75882353, 0.84705882, 0.94767896,
       0.95217097, 0.98235294, 0.84071162, 0.96983102, 0.75588235,
       0.96470588]), 'test_spearman_p': array([-1.10013067e-10, -2.91067062e-05, -5.92622110e-05, -5.47877174e-09,
       -1.82090718e-11, -1.36412383e-11, -3.98200979e-11, -6.54030236e-04,
       -3.46804648e-05, -2.50488881e-08, -1.35244908e-08, -1.36412383e-11,
       -4.52882807e-05, -5.63193822e-10, -7.05890587e-04, -1.66620775e-09]), 'test_kendall_r': array([0.91176471, 0.73702963, 0.76296296, 0.84519568, 0.92887842,
       0.93333333, 0.9       , 0.75      , 0.73333333, 0.86920605,
       0.86193223, 0.91666667, 0.75111503, 0.87866878, 0.73333333,
       0.91666667]), 'test_kendall_p': array([-3.85990589e-10, -4.76443323e-05, -2.13740150e-05, -5.31661458e-06,
       -5.65704076e-07, -3.55879882e-10, -4.72556483e-09, -8.91848950e-06,
       -1.62687222e-05, -3.29681493e-06, -3.45008795e-06, -1.38948965e-09,
       -5.77113463e-05, -2.22140114e-06, -1.62687222e-05, -1.38948965e-09]), 'test_rmse': array([  -5.79428449,  -14.06223858,  -11.97995729,  -21.77513697,
        -16.82582387,   -6.4377872 ,  -12.95431273, -199.34584627,
        -63.67424945,  -26.00186521,  -12.10140676,  -15.27624996,
        -31.48799363,  -14.36763346,  -13.66916716,  -21.13660692]), 'test_mae': array([ -3.71922091,  -7.82687133,  -6.28607414, -12.46624326,
       -10.61989394,  -4.42345821,  -7.36626819, -54.8455048 ,
       -24.45608982, -12.34728504,  -6.84375698,  -7.14293989,
       -14.24419988,  -9.3820587 ,  -6.13410078, -12.12622316]), 'test_r2': array([ 0.9939296 ,  0.94188094,  0.9739682 ,  0.98828182,  0.96921699,
        0.98032715,  0.98352765, -4.10981297, -2.04097007,  0.99064016,
        0.97552569,  0.97180996,  0.71733409,  0.9540586 ,  0.87586047,
        0.98757458]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([1.56078529, 1.52302623, 1.38695312, 1.61873198, 0.87244678,
       0.93785715, 1.63966393, 1.22975993, 1.54902887, 1.18965602,
       1.62916398, 1.30778909, 1.12798667, 1.47112799, 1.57633352,
       1.35537195]), 'score_time': array([0.22258329, 0.16269112, 0.20165133, 0.16432548, 0.20284915,
       0.22597599, 0.17599893, 0.20709991, 0.15799284, 0.2021718 ,
       0.16206837, 0.15126753, 0.21863246, 0.18533134, 0.14833808,
       0.16053843]), 'test_pearson_r': array([0.97507949, 0.9229966 , 0.99472907, 0.98844174, 0.99683489,
       0.97205398, 0.99664206, 0.69336852, 0.99601054, 0.99560768,
       0.97311846, 0.99957706, 0.99536769, 0.87453677, 0.982259  ,
       0.76968681]), 'test_pearson_p': array([-3.21639650e-11, -1.30550758e-07, -2.96463099e-16, -7.16764488e-13,
       -8.46143138e-17, -3.31541493e-10, -1.27944042e-16, -2.89650275e-03,
       -4.26763325e-16, -8.35950264e-16, -2.53340199e-10, -6.48305200e-23,
       -1.21237549e-15, -9.35835850e-06, -1.41542456e-11, -4.88818484e-04]), 'test_spearman_r': array([0.83232161, 0.96078431, 0.96196391, 0.99043441, 0.91605302,
       0.89411765, 0.97201767, 0.8550407 , 0.87352941, 0.93519882,
       0.94117647, 0.99410462, 0.98600094, 0.79911721, 0.83100197,
       0.67844021]), 'test_spearman_p': array([-3.40187898e-05, -9.24915993e-10, -7.38099260e-10, -1.91599035e-13,
       -6.29537130e-07, -3.01130993e-06, -3.34535840e-10, -2.43675207e-05,
       -9.86965167e-06, -1.08283925e-07, -5.58893763e-08, -6.53417850e-15,
       -2.72286416e-12, -2.04273128e-04, -6.66843678e-05, -3.86334348e-03]), 'test_kendall_r': array([0.75207105, 0.86764706, 0.88891328, 0.96235152, 0.82352941,
       0.81666667, 0.90756303, 0.72803985, 0.75      , 0.88235294,
       0.83333333, 0.97054189, 0.93678391, 0.62762056, 0.71196668,
       0.62762056]), 'test_kendall_p': array([-3.32635548e-05, -9.57597523e-09, -7.36343941e-07, -2.18526649e-07,
       -9.81814824e-06, -5.50848432e-07, -1.10319426e-06, -8.82060896e-05,
       -8.91848950e-06, -2.16973828e-06, -2.44193725e-07, -2.02597451e-07,
       -5.36536512e-07, -7.24551643e-04, -1.44750601e-04, -7.24551643e-04]), 'test_rmse': array([ -16.36835262,  -26.55348389,  -12.81392845,  -14.27398583,
         -6.61066688,  -15.18132744,  -39.31964296,  -63.37900799,
         -8.50758633,  -10.47648106,  -15.30414535,   -5.8207185 ,
        -11.01511565,  -31.63853743,  -18.74592578, -189.56085963]), 'test_mae': array([ -9.82910095, -14.76638988,  -8.93058472,  -6.76154066,
        -5.16640493,  -7.40174595, -19.32655571, -20.40248213,
        -6.08497165,  -8.30627447,  -8.84295056,  -4.28203794,
        -8.30928448, -21.34682942, -10.15430512, -72.55296683]), 'test_r2': array([0.94626035, 0.78603257, 0.97785912, 0.95996209, 0.99129351,
       0.9052461 , 0.96598953, 0.00263671, 0.98518132, 0.95199648,
       0.94079557, 0.99900594, 0.98670341, 0.7439972 , 0.93774724,
       0.49979563]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([24.00929546, 19.65327787, 21.08544087, 23.61059809, 24.06010699,
       22.801301  , 18.62716007, 22.71316767, 24.17439389, 24.06524873,
       24.28525209, 20.12949133, 24.89161253, 19.23648953, 18.42199612,
       24.06061029]), 'score_time': array([0.1669271 , 0.15218139, 0.22846079, 0.16077161, 0.15168357,
       0.15852213, 0.31544375, 0.15394783, 0.15757322, 0.15390944,
       0.15078306, 0.16053677, 0.1479528 , 0.32109451, 0.33070374,
       0.17107201]), 'test_pearson_r': array([0.99582668, 0.99702758, 0.99929836, 0.98474089, 0.81740443,
       0.24069142, 0.99356997, 0.60899174, 0.96442292, 0.98396481,
       0.99421505, 0.9901049 , 0.98817376, 0.99749481, 0.94321092,
       0.9991742 ]), 'test_pearson_p': array([-5.16177115e-17, -4.06455030e-18, -8.11679865e-23, -4.96125672e-12,
       -1.10309954e-04, -3.69200203e-01, -1.19808426e-14, -1.22845863e-02,
       -1.76066821e-09, -7.00674467e-12, -5.72572987e-15, -2.42647580e-13,
       -8.40908936e-13, -1.64953191e-17, -4.39237866e-08, -7.00680096e-21]), 'test_spearman_r': array([0.69037413, 0.85258243, 0.97914184, 0.94334095, 0.91096419,
       0.64312012, 0.99117647, 0.89117647, 0.80559734, 0.97352941,
       0.99705449, 0.98598457, 0.97941176, 0.98160439, 0.94411765,
       0.98235294]), 'test_spearman_p': array([-2.15713172e-03, -1.37786098e-05, -8.56778542e-12, -4.32397330e-08,
       -9.37408818e-07, -7.19968646e-03, -1.09082915e-13, -3.61864891e-06,
       -1.65403905e-04, -2.27689766e-10, -5.11806168e-17, -2.74510261e-12,
       -3.98200979e-11, -1.82090718e-11, -3.93392920e-08, -1.36412383e-11]), 'test_kendall_r': array([0.67159129, 0.79558851, 0.91854372, 0.84519568, 0.84519568,
       0.72803985, 0.95      , 0.78333333, 0.72271459, 0.88333333,
       0.98742088, 0.94928891, 0.9       , 0.91214188, 0.86666667,
       0.95      ]), 'test_kendall_p': array([-1.75630107e-04, -9.80693735e-06, -3.11133291e-07, -5.31661458e-06,
       -5.31661458e-06, -8.82060896e-05, -7.63760478e-11, -2.41022656e-06,
       -1.04538557e-04, -1.43717927e-08, -1.24121435e-07, -4.05106961e-07,
       -4.72556483e-09, -8.99518934e-07, -3.98309214e-08, -7.63760478e-11]), 'test_rmse': array([ -17.54877783,  -19.34455119,   -9.75868644,  -10.47286082,
        -29.85155747, -199.41890032,  -10.10576415,  -60.31961103,
        -16.52348827,  -15.48637481,  -10.29914272,  -14.72887026,
        -13.49713658,   -6.49487762,  -25.7989649 ,  -26.27141313]), 'test_mae': array([ -9.25096286, -10.87043994,  -5.98158219,  -6.24105596,
        -9.85084709, -54.21158535,  -6.22383325, -20.03148352,
        -9.63299349,  -9.12925782,  -6.01778857,  -9.41905774,
        -7.25762321,  -4.63591086, -15.81254967, -11.99422077]), 'test_r2': array([ 0.99050352,  0.99054593,  0.99720604,  0.96706002,  0.53408296,
       -5.76065013,  0.98659486, -0.39625149,  0.9255284 ,  0.96711091,
        0.98318492,  0.97658439,  0.96469221,  0.99471651,  0.80556277,
        0.98524484]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_2': {'cluster size (%)': 22, 6: {'test_mad': 77.45631985731274, 'test_ystd': 87.04923771082645, 'test_mae': 92.95325439338026, 'test_rmse': 123.15175919080434, 'test_r2': -1.0014801869246512, 'test_pearson_r': array([-0.29427728]), 'test_pearson_p_value': array([0.02494416]), 'test_spearman_r': -0.05631744744030747, 'test_spearman_p_value': 0.674560117235228, 'test_kendall_r': -0.11610664395808534, 'test_kendall_p_value': 0.2020501292955531, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0865758235143529, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1588, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 77.45631985731274, 'test_ystd': 87.04923771082645, 'test_mae': 93.34771618958177, 'test_rmse': 123.694069837437, 'test_r2': -1.0191464209467482, 'test_pearson_r': array([-0.3086502]), 'test_pearson_p_value': array([0.01840775]), 'test_spearman_r': -0.08927808862836008, 'test_spearman_p_value': 0.505121355340592, 'test_kendall_r': -0.15258498764875456, 'test_kendall_p_value': 0.09433228295026003, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07964178243911257, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 328, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 77.45631985731274, 'test_ystd': 87.04923771082645, 'test_mae': 93.85824092207284, 'test_rmse': 123.86341904383787, 'test_r2': -1.0246790211687733, 'test_pearson_r': array([-0.32888799]), 'test_pearson_p_value': array([0.01170996]), 'test_spearman_r': -0.07614229693254783, 'test_spearman_p_value': 0.5699773423313461, 'test_kendall_r': -0.13207823492693266, 'test_kendall_p_value': 0.14847821832802446, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0028551680037027767, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 3504, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 77.45631985731274, 'test_ystd': 87.04923771082645, 'test_mae': 93.48818624545787, 'test_rmse': 123.56686066682765, 'test_r2': -1.014995504652779, 'test_pearson_r': array([-0.31421086]), 'test_pearson_p_value': array([0.01630355]), 'test_spearman_r': -0.06594277080404327, 'test_spearman_p_value': 0.6228546007524369, 'test_kendall_r': -0.13076809933454542, 'test_kendall_p_value': 0.15230935919396935, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03770020061684526, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 1090, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 180, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 77.45631985731274, 'test_ystd': 87.04923771082645, 'test_mae': 93.43301990229507, 'test_rmse': 123.68835955295374, 'test_r2': -1.0189599991666967, 'test_pearson_r': array([-0.31245056]), 'test_pearson_p_value': array([0.01694621]), 'test_spearman_r': -0.06735782298392423, 'test_spearman_p_value': 0.6153959457533721, 'test_kendall_r': -0.1257783280295558, 'test_kendall_p_value': 0.1683276490470832, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0596546309039907, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 129, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 77.45631985731274, 'test_ystd': 87.04923771082645, 'test_mae': 93.30518012326338, 'test_rmse': 123.59945005890478, 'test_r2': -1.0160585103440423, 'test_pearson_r': array([-0.31027155]), 'test_pearson_p_value': array([0.01777159]), 'test_spearman_r': -0.06658664010160967, 'test_spearman_p_value': 0.6194560746621134, 'test_kendall_r': -0.1288060467213917, 'test_kendall_p_value': 0.1581958465614357, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.016426618954466708, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 498, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 77.45631985731274, 'test_ystd': 87.04923771082645, 'test_mae': 92.649470301661, 'test_rmse': 122.75295161172869, 'test_r2': -0.9885382193588526, 'test_pearson_r': array([-0.30138896]), 'test_pearson_p_value': array([0.02149998]), 'test_spearman_r': -0.054019558459812066, 'test_spearman_p_value': 0.6871400103776846, 'test_kendall_r': -0.1153838137267199, 'test_kendall_p_value': 0.2064504747034186, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 63, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_2': {'cluster size (%)': 25, 6: {'fit_time': array([17.12201738, 16.13709044, 16.79286551, 16.17302442]), 'score_time': array([0.17068791, 0.15647769, 0.15422392, 0.18537354]), 'test_pearson_r': array([0.97196464, 0.73994775, 0.98951478, 0.96431548]), 'test_pearson_p': array([-2.53845528e-41, -1.89358047e-12, -1.15800281e-54, -1.72063223e-37]), 'test_spearman_r': array([0.86372634, 0.90478741, 0.93816612, 0.94167489]), 'test_spearman_p': array([-2.05558943e-20, -4.85926045e-25, -1.00881804e-30, -5.06085150e-31]), 'test_kendall_r': array([0.77314013, 0.82851792, 0.82032305, 0.81743891]), 'test_kendall_p': array([-1.27353917e-19, -2.05698321e-22, -7.51479357e-22, -1.89606592e-21]), 'test_rmse': array([-36.4624077 , -97.0872734 , -17.6886833 , -20.45896042]), 'test_mae': array([-13.87345752, -21.16511402,  -8.34469784, -11.00967451]), 'test_r2': array([0.94260248, 0.33026777, 0.97693276, 0.92757728]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([12.51010871, 12.40398383, 11.03242135, 11.0562911 ]), 'score_time': array([0.15921855, 0.15689278, 0.15667915, 0.16148949]), 'test_pearson_r': array([0.9180649 , 0.81120596, 0.97723631, 0.96194678]), 'test_pearson_p': array([-5.25938151e-27, -2.55638279e-16, -3.88347550e-44, -1.21824233e-36]), 'test_spearman_r': array([0.80874386, 0.83634123, 0.94394412, 0.92089447]), 'test_spearman_p': array([-3.69428921e-16, -4.25554761e-18, -5.01062965e-32, -4.69457974e-27]), 'test_kendall_r': array([0.64950682, 0.76399366, 0.81916273, 0.79422654]), 'test_kendall_p': array([-3.64747558e-14, -3.94197471e-19, -8.33340966e-22, -2.50833601e-20]), 'test_rmse': array([-49.27715338, -99.14878847, -28.65543164, -21.90433558]), 'test_mae': array([-21.47733772, -23.67946075, -14.11442406, -13.24224718]), 'test_r2': array([0.83064847, 0.55861469, 0.94125149, 0.91621316]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([2.31657815, 2.13342571, 2.38974762, 2.32565999]), 'score_time': array([0.18461919, 0.2015183 , 0.15404892, 0.15218353]), 'test_pearson_r': array([0.98771795, 0.97596936, 0.52885409, 0.97429207]), 'test_pearson_p': array([-1.64420486e-52, -2.09875392e-43, -5.93377601e-06, -7.66967474e-42]), 'test_spearman_r': array([0.96073097, 0.95435323, 0.85306785, 0.94128713]), 'test_spearman_p': array([-8.73243841e-37, -9.08237733e-35, -1.86145961e-19, -6.17898086e-31]), 'test_kendall_r': array([0.87108175, 0.85053285, 0.78282437, 0.85359411]), 'test_kendall_p': array([-1.67047974e-24, -1.70789095e-23, -4.08816181e-20, -4.03355189e-23]), 'test_rmse': array([-25.64314811, -32.67176932, -98.74863685, -16.45727487]), 'test_mae': array([-12.66037519, -12.37974975, -21.33419137,  -9.35728409]), 'test_r2': array([ 0.97162048,  0.95221926, -0.84722605,  0.94900587]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.83340025, 1.75254273, 1.90347004, 1.90779424]), 'score_time': array([0.1526463 , 0.15011764, 0.15067887, 0.15888453]), 'test_pearson_r': array([0.96661862, 0.70472758, 0.94466947, 0.97126019]), 'test_pearson_p': array([-5.71994593e-39, -5.69041753e-11, -3.36124166e-32, -2.32440751e-40]), 'test_spearman_r': array([0.93506117, 0.86673442, 0.90286341, 0.9153206 ]), 'test_spearman_p': array([-4.50324265e-30, -1.06706526e-20, -8.85772737e-25, -3.56215567e-26]), 'test_kendall_r': array([0.83710078, 0.78795217, 0.82364699, 0.8047694 ]), 'test_kendall_p': array([-1.16145103e-22, -2.08402606e-20, -4.17122067e-22, -6.18990530e-21]), 'test_rmse': array([ -18.77079275, -139.44296887,  -22.71743527,  -37.4052884 ]), 'test_mae': array([ -9.8118669 , -33.61795854,  -9.41870454, -15.67456339]), 'test_r2': array([0.93151775, 0.17336716, 0.87678592, 0.93987622]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([1.94120073, 1.83883238, 1.94829297, 1.96754408]), 'score_time': array([0.15873957, 0.25142908, 0.1677165 , 0.1611588 ]), 'test_pearson_r': array([0.99364056, 0.59423262, 0.96591062, 0.97761697]), 'test_pearson_p': array([-1.77750508e-61, -1.80383665e-07, -1.09619997e-38, -1.10003269e-43]), 'test_spearman_r': array([0.92318123, 0.92136722, 0.83495106, 0.90978409]), 'test_spearman_p': array([-7.46391181e-28, -1.51416486e-27, -5.43251310e-18, -2.33315356e-25]), 'test_kendall_r': array([0.83334121, 0.84737602, 0.75882503, 0.81949441]), 'test_kendall_p': array([-1.51044410e-22, -2.16883843e-23, -5.97728646e-19, -1.29797697e-21]), 'test_rmse': array([-14.1999113 , -98.40112538, -39.26575346, -23.83343205]), 'test_mae': array([ -7.45128871, -19.29239612, -15.45449995, -12.26840857]), 'test_r2': array([ 0.98583041, -0.30887008,  0.93287482,  0.95334561]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.72656226, 0.75500035, 0.7551434 , 0.70276856]), 'score_time': array([0.15256453, 0.1508584 , 0.14612913, 0.19562006]), 'test_pearson_r': array([0.94356845, 0.94923344, 0.99630546, 0.78520474]), 'test_pearson_p': array([-6.14881179e-32, -2.39250128e-33, -6.87736336e-69, -1.58481637e-14]), 'test_spearman_r': array([0.9330842 , 0.90355298, 0.95574335, 0.79749437]), 'test_spearman_p': array([-1.12380351e-29, -7.15314406e-25, -3.50124204e-35, -3.10960855e-15]), 'test_kendall_r': array([0.81113937, 0.747771  , 0.84969219, 0.70363418]), 'test_kendall_p': array([-2.09519829e-21, -1.75424942e-18, -2.34624038e-23, -3.13514724e-16]), 'test_rmse': array([ -24.95563124,  -40.02098291,  -10.15309996, -103.91604192]), 'test_mae': array([-14.5794426 , -15.19045616,  -6.90205636, -34.51199383]), 'test_r2': array([0.88216673, 0.89632578, 0.99114264, 0.55393417]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([11.57872677,  9.92710996, 10.87027621, 11.00502062]), 'score_time': array([0.19173598, 0.16247797, 0.15736079, 0.15058708]), 'test_pearson_r': array([0.9773031 , 0.48479035, 0.9817462 , 0.99135019]), 'test_pearson_p': array([-3.54369681e-44, -4.26926380e-05, -3.96220664e-47, -2.13022106e-56]), 'test_spearman_r': array([0.79740654, 0.86975052, 0.95054378, 0.97904003]), 'test_spearman_p': array([-1.88442196e-15, -5.44070451e-21, -1.07084623e-33, -1.46588873e-44]), 'test_kendall_r': array([0.73833579, 0.78969035, 0.8672221 , 0.88806158]), 'test_kendall_p': array([-5.57009831e-18, -1.68611186e-20, -2.65665733e-24, -3.56593530e-25]), 'test_rmse': array([ -43.93065866, -104.21765927,  -15.62517065,  -19.52004052]), 'test_mae': array([-17.34701766, -24.82457318,  -8.81699799, -10.39372137]), 'test_r2': array([ 0.93318565, -1.35580183,  0.9636328 ,  0.97679567]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_3': {'cluster size (%)': 7, 6: {'test_mad': 32.5180055401662, 'test_ystd': 36.91696679946946, 'test_mae': 39.976538889031666, 'test_rmse': 47.83842946436278, 'test_r2': -0.6791975993733359, 'test_pearson_r': array([0.2190025]), 'test_pearson_p_value': array([0.36769068]), 'test_spearman_r': 0.21089639073901403, 'test_spearman_p_value': 0.3861198524088575, 'test_kendall_r': 0.10651074037450894, 'test_kendall_p_value': 0.527856971158073, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09357666812166686, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 135, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 32.5180055401662, 'test_ystd': 36.91696679946946, 'test_mae': 39.71724407798366, 'test_rmse': 47.600617512722906, 'test_r2': -0.6625440139513021, 'test_pearson_r': array([0.21778385]), 'test_pearson_p_value': array([0.37042898]), 'test_spearman_r': 0.2402117558327032, 'test_spearman_p_value': 0.3218911544941517, 'test_kendall_r': 0.13732872982610236, 'test_kendall_p_value': 0.41902143544602233, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03001092827836679, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 850, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 32.5180055401662, 'test_ystd': 36.91696679946946, 'test_mae': 39.881962625603926, 'test_rmse': 47.708799869555804, 'test_r2': -0.6701095591712505, 'test_pearson_r': array([0.21092544]), 'test_pearson_p_value': array([0.38605291]), 'test_spearman_r': 0.23603729963186856, 'test_spearman_p_value': 0.33062574833368386, 'test_kendall_r': 0.1396438430468253, 'test_kendall_p_value': 0.4292189969302912, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.004018255273233563, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 32.5180055401662, 'test_ystd': 36.91696679946946, 'test_mae': 39.87190085963199, 'test_rmse': 47.54295110483186, 'test_r2': -0.6585182313892142, 'test_pearson_r': array([0.20891962]), 'test_pearson_p_value': array([0.39069034]), 'test_spearman_r': 0.22706249736449716, 'test_spearman_p_value': 0.3498703065537374, 'test_kendall_r': 0.12694894822438663, 'test_kendall_p_value': 0.4723488538653945, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09231395839955243, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 55, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 32.5180055401662, 'test_ystd': 36.91696679946946, 'test_mae': 39.849812156275696, 'test_rmse': 47.28365507504832, 'test_r2': -0.6404766728132287, 'test_pearson_r': array([0.19995751]), 'test_pearson_p_value': array([0.41178244]), 'test_spearman_r': 0.12474975151646284, 'test_spearman_p_value': 0.6108568147826474, 'test_kendall_r': 0.05077957928975465, 'test_kendall_p_value': 0.7737562774465028, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.029764492029540717, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 124, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 32.5180055401662, 'test_ystd': 36.91696679946946, 'test_mae': 39.92649520070929, 'test_rmse': 47.52870473229885, 'test_r2': -0.6575244214573046, 'test_pearson_r': array([0.2057355]), 'test_pearson_p_value': array([0.39811475]), 'test_spearman_r': 0.22706249736449716, 'test_spearman_p_value': 0.3498703065537374, 'test_kendall_r': 0.12694894822438663, 'test_kendall_p_value': 0.4723488538653945, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0608833139551811, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 79, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 32.5180055401662, 'test_ystd': 36.91696679946946, 'test_mae': 39.85904380396793, 'test_rmse': 47.723888947671014, 'test_r2': -0.6711661524535237, 'test_pearson_r': array([0.21570633]), 'test_pearson_p_value': array([0.37512355]), 'test_spearman_r': 0.20404605006185622, 'test_spearman_p_value': 0.40208514480173907, 'test_kendall_r': 0.08333923910091334, 'test_kendall_p_value': 0.6230038198210659, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 3237, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 76, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_3': {'cluster size (%)': 7, 6: {'fit_time': array([26.47176266, 26.94555879, 28.62663293, 25.77437043, 25.293293  ,
       25.8344686 , 28.08468127, 30.34552383, 27.10458922, 28.48795557,
       31.97674799, 23.92080259, 29.74985647, 30.78133154]), 'score_time': array([0.22755575, 0.16461277, 0.14916468, 0.15927362, 0.3449316 ,
       0.1571002 , 0.15296531, 0.16299081, 0.15623665, 0.15342045,
       0.16075778, 0.28553295, 0.15079618, 0.15364408]), 'test_pearson_r': array([0.95265244, 0.99916399, 0.99238802, 0.95299858, 0.09946255,
       0.98194615, 0.9924181 , 0.99700094, 0.98644372, 0.99625177,
       0.9958847 , 0.95620027, 0.99164437, 0.90229355]), 'test_pearson_p': array([-3.23175254e-10, -4.74969195e-25, -6.61773525e-17, -3.03995096e-10,
       -6.85388390e-01, -9.85199667e-14, -6.39936129e-17, -3.25964914e-19,
       -5.49659753e-14, -1.93589757e-18, -4.08302323e-18, -5.93460990e-10,
       -1.16376261e-15, -3.06192863e-07]), 'test_spearman_r': array([0.65614035, 0.99034241, 0.98245614, 0.87017544, 0.68889871,
       0.98245614, 0.86315789, 0.95090554, 0.93340229, 0.9628483 ,
       0.98502853, 0.89979387, 0.97210796, 0.94829572]), 'test_spearman_p': array([-2.28228868e-03, -4.97018651e-16, -7.73558991e-14, -1.28288236e-06,
       -1.10623477e-03, -7.73558991e-14, -1.95749994e-06, -1.45407914e-09,
       -1.57680662e-08, -1.62399435e-10, -1.21105572e-13, -3.71743858e-07,
       -1.68763179e-11, -2.18242419e-09]), 'test_kendall_r': array([0.56725146, 0.94705882, 0.92982456, 0.75438596, 0.63343381,
       0.91812865, 0.77777778, 0.87132984, 0.82623395, 0.89542484,
       0.93115255, 0.7697535 , 0.9013353 , 0.83172394]), 'test_kendall_p': array([-4.29034340e-04, -1.70481486e-08, -2.06767062e-12, -5.24238695e-07,
       -1.56352712e-04, -7.20796807e-12, -1.64978258e-07, -5.42460793e-07,
       -1.78800684e-06, -2.96242626e-10, -7.34599652e-08, -9.07720685e-06,
       -2.02850566e-07, -1.70822672e-06]), 'test_rmse': array([ -22.28737117,   -7.07207081,  -32.11808585,  -58.93550925,
       -179.50057817,  -14.69157821,   -9.56469884,   -6.44395283,
        -31.48744641,   -6.4589207 ,  -12.2294939 ,  -22.25555183,
         -9.76948414,  -25.43288286]), 'test_mae': array([-11.59625496,  -4.92756406, -13.69238169, -21.98989755,
       -53.37180515,  -9.33877795,  -6.75927282,  -4.05223477,
       -14.91252395,  -4.38653613,  -7.14488339, -12.7177323 ,
        -5.84043582, -12.66261853]), 'test_r2': array([  0.88815104,   0.9983128 ,   0.97436528,   0.90488842,
       -10.01055427,   0.96099472,   0.97661743,   0.99279971,
         0.97043626,   0.99183349,   0.98519309,   0.90819725,
         0.98063919,   0.79502313]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([24.49879479, 24.86567855, 27.04403877, 26.63717389, 17.17292452,
       18.74906731, 25.34623957, 19.89611053, 24.815557  , 15.86532092,
       24.91505051, 24.67659855, 23.02418184, 25.11301398]), 'score_time': array([0.16354632, 0.16726923, 0.18435836, 0.15837884, 0.16311383,
       0.17176127, 0.15375471, 0.17317033, 0.2509656 , 0.16263437,
       0.1548295 , 0.15137386, 0.15958309, 0.15311432]), 'test_pearson_r': array([0.98702364, 0.9853404 , 0.95399078, 0.99867458, 0.64513417,
       0.98451964, 0.98667933, 0.87760774, 0.95784235, 0.98889137,
       0.99184788, 0.98650911, 0.95987518, 0.98077891]), 'test_pearson_p': array([-6.05240435e-15, -1.69706297e-14, -2.54436238e-10, -2.38321134e-23,
       -2.85755178e-03, -2.68902694e-14, -7.55258938e-15, -1.71283893e-06,
       -4.39430652e-10, -1.12610819e-14, -9.56027559e-16, -5.28914889e-14,
       -2.97836289e-10, -8.82043587e-13]), 'test_spearman_r': array([0.84101897, 0.841089  , 0.93807651, 0.8205354 , 0.72375996,
       0.87055735, 0.97017544, 0.91219057, 0.9705154 , 0.95818288,
       0.98657077, 0.96078431, 0.87822497, 0.92720714]), 'test_spearman_p': array([-6.47022373e-06, -6.44765773e-06, -3.00918779e-09, -1.68355149e-05,
       -4.60058454e-04, -1.25285079e-06, -6.74895947e-12, -1.34535861e-07,
       -2.61829819e-11, -4.12268255e-10, -5.09977899e-14, -2.48656703e-10,
       -1.64827026e-06, -3.14918237e-08]), 'test_kendall_r': array([0.69616822, 0.70001211, 0.84956122, 0.7155456 , 0.68439258,
       0.73900611, 0.90643275, 0.79606986, 0.90736436, 0.87869325,
       0.92765165, 0.85620915, 0.77777778, 0.8000043 ]), 'test_kendall_p': array([-3.53615201e-05, -3.06761171e-05, -4.48423156e-07, -1.94725637e-05,
       -4.78684059e-05, -1.02950287e-05, -2.27996852e-11, -4.43688739e-06,
       -1.92223638e-07, -3.78914056e-07, -8.87180979e-08, -5.28843419e-09,
       -4.36097754e-07, -3.75687779e-06]), 'test_rmse': array([  -6.62922141,  -20.9877731 ,  -57.70540263,   -7.44913976,
       -178.06502418,  -14.7468112 ,  -31.9889781 ,  -20.72908793,
        -13.83485388,  -42.93654746,   -9.18355731,  -16.39972139,
        -25.31712805,  -15.51184879]), 'test_mae': array([ -5.49050953, -13.75544648, -20.54058869,  -5.30771876,
       -57.91437261, -10.43000731, -16.58764573, -10.79757318,
        -9.90031526, -20.38615147,  -6.55039863, -10.27947738,
       -16.82931133, -11.56076365]), 'test_r2': array([0.96654268, 0.94131175, 0.90573687, 0.99265187, 0.03575383,
       0.96074818, 0.96736992, 0.54947613, 0.9132435 , 0.95339482,
       0.9829585 , 0.94444435, 0.91886745, 0.95653684]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([4.96063828, 4.69980145, 5.40980721, 5.30606151, 3.01970673,
       4.09948349, 5.14875102, 4.94941497, 5.47900748, 3.01707101,
       5.50420022, 4.39062095, 5.20466995, 5.23515821]), 'score_time': array([0.25417137, 0.16335058, 0.15236807, 0.15507197, 0.1605773 ,
       0.4477818 , 0.16709685, 0.19411802, 0.15105557, 0.15852261,
       0.15203929, 0.27064991, 0.14900064, 0.15790462]), 'test_pearson_r': array([0.99477329, 0.98525016, 0.99634232, 0.99819299, 0.91737087,
       0.94951256, 0.98641658, 0.05694934, 0.99265328, 0.99402837,
       0.98663998, 0.98266611, 0.97184557, 0.99387031]), 'test_pearson_p': array([-2.73153638e-18, -1.78739234e-14, -1.32130079e-19, -3.31601505e-22,
       -3.25244276e-08, -5.51820185e-10, -8.90870845e-15, -8.22406323e-01,
       -4.17007513e-16, -7.98002032e-17, -4.89433321e-14, -3.88152472e-13,
       -1.81740048e-11, -9.83000621e-17]), 'test_spearman_r': array([0.97323397, 0.92233445, 0.96972366, 0.98552006, 0.91794656,
       0.94736842, 0.98727522, 0.63880289, 0.8295459 , 0.95872033,
       0.98915862, 0.85611179, 0.82249742, 0.98553772]), 'test_spearman_p': array([-2.71850932e-12, -1.95433775e-08, -7.65719604e-12, -1.52912058e-14,
       -3.07092205e-08, -7.80082922e-10, -5.12890798e-15, -4.32212480e-03,
       -2.06767678e-05, -3.72370945e-10, -9.27540331e-15, -5.82336862e-06,
       -2.79261707e-05, -9.19675963e-14]), 'test_kendall_r': array([0.9266902 , 0.83284816, 0.89149943, 0.93842046, 0.76246662,
       0.84795322, 0.9266902 , 0.59477124, 0.79606986, 0.86928105,
       0.94426737, 0.75757961, 0.76470588, 0.92765165]), 'test_kendall_p': array([-3.18217344e-08, -6.66104086e-07, -1.03161918e-07, -2.12970819e-08,
       -5.34143245e-06, -2.53233265e-09, -3.18217344e-08, -3.24628494e-04,
       -4.43688739e-06, -2.15825858e-09, -4.80698932e-08, -1.45284610e-05,
       -8.04176944e-07, -8.87180979e-08]), 'test_rmse': array([  -8.30255002,  -31.30871245,  -32.02568594,  -11.80184533,
        -16.52976024,  -59.03116823,  -12.39808134, -186.00506232,
        -16.90450566,   -7.86856227,  -16.36393258,  -14.87609836,
        -12.29218939,   -8.76292811]), 'test_mae': array([ -5.9466156 , -14.42413046, -17.11024987,  -7.65778986,
       -10.15566084, -20.16525508,  -5.61369291, -53.06325123,
       -10.58575133,  -5.64603669, -10.18473194,  -9.01183149,
        -6.40027581,  -5.06333863]), 'test_r2': array([  0.98561286,   0.96737115,   0.97487375,   0.99616376,
         0.83920039,   0.89765822,   0.96493334, -25.53914302,
         0.97378393,   0.98655854,   0.95975034,   0.9537098 ,
         0.94074791,   0.98596649]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([4.31622982, 3.70766783, 3.34759617, 3.97823954, 2.10627294,
       3.73221922, 4.27307868, 4.00825667, 4.40381145, 2.3607049 ,
       3.67877603, 4.36532044, 4.2344954 , 3.69401622]), 'score_time': array([0.15146184, 0.32794571, 0.50443673, 0.16375065, 0.20563245,
       0.3192203 , 0.19747782, 0.1552    , 0.15233827, 0.16602254,
       0.17271709, 0.16671491, 0.14906192, 0.15952325]), 'test_pearson_r': array([ 0.98845213,  0.99279207,  0.98363887, -0.02402435,  0.99225501,
        0.99862391,  0.99741864,  0.9962967 ,  0.87580253,  0.9922048 ,
        0.97660902,  0.94940415,  0.97936591,  0.99708003]), 'test_pearson_p': array([-2.25676537e-15, -4.16829687e-17, -4.29119386e-14, -9.22230961e-01,
       -7.66408199e-17, -3.27781261e-23, -6.85540576e-21, -1.75809166e-18,
       -1.91433776e-06, -6.68972377e-16, -4.18762658e-12, -1.84151818e-09,
       -1.54889931e-12, -2.63282990e-19]), 'test_spearman_r': array([0.87752414, 0.9877193 , 0.97323397, 0.67908555, 0.97192982,
       0.97719298, 0.97323397, 0.96797572, 0.73102746, 0.95252838,
       0.98555212, 0.83900929, 0.94427245, 0.99174407]), 'test_spearman_p': array([-8.02375581e-07, -3.79790244e-15, -2.71850932e-12, -1.38702810e-03,
       -4.05534963e-12, -7.06769745e-13, -2.71850932e-12, -5.03056755e-11,
       -5.67719966e-04, -1.11695903e-09, -9.12417033e-14, -1.35126625e-05,
       -3.92399721e-09, -1.05753411e-15]), 'test_kendall_r': array([0.82941176, 0.92982456, 0.90322969, 0.61654215, 0.88304094,
       0.90643275, 0.87976918, 0.9013353 , 0.68197088, 0.85620915,
       0.92156863, 0.73856209, 0.84313725, 0.96078431]), 'test_kendall_p': array([-7.85254763e-07, -2.06767062e-12, -7.00361385e-08, -3.09023200e-04,
       -1.79983887e-10, -2.27996852e-11, -1.51234358e-07, -2.02850566e-07,
       -8.07679747e-05, -5.28843419e-09, -2.92550870e-11, -2.52158005e-06,
       -1.22726897e-08, -3.50182620e-13]), 'test_rmse': array([ -12.29382994,   -9.89236785,  -15.8083123 , -254.97825278,
         -8.97302925,  -25.77806204,  -14.63877466,   -6.59961004,
        -34.10847461,   -6.50412886,  -17.78474645,  -61.9867333 ,
        -14.99748215,  -17.48505228]), 'test_mae': array([ -6.48753469,  -5.08198955,  -7.42259402, -88.06151511,
        -4.97264039, -12.86355193,  -8.58223992,  -4.48391082,
       -16.08225978,  -4.2523475 ,  -8.83930612, -23.76716322,
        -9.95733112, -11.58513707]), 'test_r2': array([  0.96805105,   0.98021734,   0.96373305, -28.34583342,
         0.98430879,   0.98333097,   0.99330644,   0.98995155,
         0.67323434,   0.98315944,   0.93188093,   0.89146424,
         0.95519168,   0.99211192]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([4.38432217, 4.31136131, 4.00698066, 4.02510548, 2.14864278,
       3.83863926, 4.180722  , 4.41919684, 3.89181852, 2.23361373,
       4.2338841 , 4.39595747, 4.23973131, 4.41947412]), 'score_time': array([0.15203953, 0.15061998, 0.17517948, 0.16250777, 0.16330099,
       0.20122766, 0.20927262, 0.15080285, 0.16552758, 0.16955137,
       0.15671015, 0.21453595, 0.16021228, 0.15047598]), 'test_pearson_r': array([0.99787831, 0.98389753, 0.97980434, 0.99252449, 0.99539206,
       0.99295793, 0.27749274, 0.54748654, 0.99598579, 0.99434449,
       0.86185851, 0.97705567, 0.94620119, 0.99540739]), 'test_pearson_p': array([-1.29655298e-21, -3.75086256e-14, -2.53645831e-13, -5.67706303e-17,
       -9.37940214e-19, -3.42186314e-17, -2.50055737e-01, -1.86837749e-02,
       -3.34742168e-18, -5.16969848e-17, -4.28355072e-06, -3.59413274e-12,
       -2.97862481e-09, -9.80861421e-18]), 'test_spearman_r': array([0.94035088, 0.90158311, 0.76679849, 0.95568241, 0.91052632,
       0.98245614, 0.75087719, 0.83884298, 0.98604664, 0.95611784,
       0.85493042, 0.98348813, 0.82662539, 0.98142415]), 'test_spearman_p': array([-2.20654144e-09, -1.36072655e-07, -1.28111108e-04, -1.86125755e-10,
       -6.24664266e-08, -7.73558991e-14, -2.11664863e-04, -1.36171995e-05,
       -6.91609552e-14, -6.02298234e-10, -6.19280424e-06, -2.63828912e-13,
       -2.34565531e-05, -6.72563970e-13]), 'test_kendall_r': array([0.87134503, 0.79059143, 0.73746634, 0.86803892, 0.8128655 ,
       0.91812865, 0.69590643, 0.67763158, 0.93729883, 0.82623395,
       0.81311912, 0.90849673, 0.77777778, 0.93464052]), 'test_kendall_p': array([-4.58322529e-10, -2.61922646e-06, -1.18018662e-05, -2.20656528e-07,
       -2.37852170e-08, -7.20796807e-12, -6.49122200e-06, -9.34513479e-05,
       -7.03810661e-08, -1.78800684e-06, -2.59896801e-06, -9.76656516e-11,
       -4.36097754e-07, -7.81116540e-12]), 'test_rmse': array([  -5.63481511,  -14.07360567,   -9.24606981,  -25.87366009,
         -9.85222586,  -11.55574368, -182.88552783,  -59.90820688,
        -24.96348731,  -10.40404424,  -29.02197493,  -16.6060788 ,
        -13.73383276,  -18.74667039]), 'test_mae': array([ -3.51656312,  -8.82794265,  -5.17480215, -15.54235925,
        -6.02204193,  -5.18005477, -47.49600185, -22.97092826,
       -12.4095374 ,  -5.93419639, -10.68946466, -11.57944037,
        -6.46595834, -10.2732924 ]), 'test_r2': array([ 0.99385116,  0.96709744,  0.95753549,  0.98109501,  0.98270548,
        0.98479052, -3.98483921, -1.74018838,  0.99004292,  0.98750763,
        0.71631103,  0.95301085,  0.89337638,  0.98930268]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([1.39996505, 1.3136375 , 0.90143323, 1.37608552, 1.6130116 ,
       1.62890673, 1.593014  , 1.60723805, 0.84590364, 0.94107437,
       1.29581046, 1.39370418, 1.31385803, 1.60271931]), 'score_time': array([0.171345  , 0.21151471, 0.15843844, 0.17249799, 0.19462991,
       0.16480875, 0.16720486, 0.15184498, 0.15315509, 0.16834116,
       0.1620605 , 0.15028691, 0.23953867, 0.14867902]), 'test_pearson_r': array([0.97400367, 0.91821522, 0.99164011, 0.99372849, 0.98131794,
       0.99695107, 0.75769006, 0.98701585, 0.98953821, 0.99706902,
       0.99722322, 0.97487771, 0.97610062, 0.77410006]), 'test_pearson_p': array([-2.12692729e-12, -2.98928465e-08, -1.46415971e-16, -1.28115365e-17,
       -1.31482950e-13, -2.81771659e-20, -1.71523923e-04, -3.89992114e-14,
       -6.98263864e-15, -2.71316955e-19, -1.76162545e-19, -7.37381042e-12,
       -4.96569863e-12, -1.63107992e-04]), 'test_spearman_r': array([0.83084507, 0.93508772, 0.98683093, 0.98594177, 0.93146014,
       0.96270303, 0.87845555, 0.79606796, 0.97729618, 0.92927219,
       0.99122367, 0.78265369, 0.89959026, 0.72999493]), 'test_spearman_p': array([-1.05683507e-05, -4.44614837e-09, -6.85587369e-15, -1.19111358e-14,
       -6.97087151e-09, -4.40088650e-11, -7.54442824e-07, -7.75438253e-05,
       -3.30605345e-12, -2.51816334e-08, -1.72171485e-15, -1.23328329e-04,
       -3.77580298e-07, -5.83284366e-04]), 'test_kendall_r': array([0.72035296, 0.77777778, 0.9353103 , 0.9321899 , 0.83779092,
       0.86803892, 0.79765739, 0.6046812 , 0.90849673, 0.8524636 ,
       0.9573822 , 0.6950857 , 0.78416135, 0.66885605]), 'test_kendall_p': array([-2.08221512e-05, -1.64978258e-07, -2.55431689e-08, -3.02184546e-08,
       -6.38684879e-07, -2.20656528e-07, -1.92681603e-06, -5.38366683e-04,
       -9.76656516e-11, -8.32299419e-07, -3.12802418e-08, -5.87142144e-05,
       -7.19458129e-06, -1.10498991e-04]), 'test_rmse': array([ -15.94352107,  -25.73184265,  -18.24062525,   -8.02737409,
        -15.07408154,  -36.20161565,  -58.24912889,   -9.48191619,
         -9.61879889,  -14.00180952,  -10.07597568,  -16.90664629,
        -20.04042912, -178.76850737]), 'test_mae': array([ -9.73212766, -14.49964609, -10.74370446,  -5.42633009,
        -6.76010419, -17.44197865, -18.37630093,  -6.8442639 ,
        -7.25249675,  -7.443134  ,  -7.64126822, -10.49147843,
       -12.30912671, -65.75364176]), 'test_r2': array([0.94459297, 0.79187841, 0.96068464, 0.9867431 , 0.87053127,
       0.96743673, 0.36738708, 0.96040885, 0.96289184, 0.99386463,
       0.98282107, 0.94535836, 0.9390194 , 0.50922252]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([23.98227239, 22.94399071, 23.20934153, 21.86250877, 15.4383347 ,
       21.33103824, 22.39109874, 23.20747089, 23.24401617, 15.0323534 ,
       22.17360306, 23.80056858, 23.17818451, 23.51326823]), 'score_time': array([0.14782238, 0.15344834, 0.17397332, 0.18549895, 0.16759515,
       0.17373323, 0.24303675, 0.20127559, 0.15696573, 0.17035127,
       0.14958858, 0.15828395, 0.15458751, 0.17122793]), 'test_pearson_r': array([0.99462642, 0.99706342, 0.99934179, 0.95998374, 0.11129   ,
       0.99508345, 0.63655493, 0.98248772, 0.97362962, 0.98862397,
       0.9937438 , 0.99645579, 0.9376297 , 0.99912493]), 'test_pearson_p': array([-3.45534780e-18, -2.04863101e-20, -6.22584934e-26, -7.93046481e-11,
       -6.50129483e-01, -1.62565342e-18, -3.38493666e-03, -4.21049998e-13,
       -1.08254436e-11, -1.36099978e-14, -1.15706387e-16, -1.23795662e-18,
       -9.45788096e-09, -1.72389913e-23]), 'test_spearman_r': array([0.72751214, 0.82952676, 0.99692664, 0.8924968 , 0.58245614,
       0.99298246, 0.90478289, 0.85124012, 0.96644308, 0.99327803,
       0.97263823, 0.99174407, 0.96078431, 0.9876161 ]), 'test_spearman_p': array([-4.15416290e-04, -1.12357035e-05, -3.01519019e-20, -2.79211735e-07,
       -8.87579399e-03, -3.32215984e-17, -1.03899466e-07, -7.47927098e-06,
       -7.27678973e-11, -2.05219493e-16, -1.44981731e-11, -1.05753411e-15,
       -2.48656703e-10, -2.67561271e-14]), 'test_kendall_r': array([0.69208509, 0.76699169, 0.97938938, 0.72727585, 0.64912281,
       0.95321637, 0.78592713, 0.79606986, 0.87869325, 0.96034914,
       0.89180807, 0.96078431, 0.89542484, 0.96078431]), 'test_kendall_p': array([-3.61461714e-05, -5.15534651e-06, -5.94502052e-09, -1.41920797e-05,
       -3.57225177e-05, -1.16815227e-13, -2.71955004e-06, -4.43688739e-06,
       -3.78914056e-07, -3.57316367e-08, -2.53540670e-07, -3.50182620e-13,
       -2.96242626e-10, -3.50182620e-13]), 'test_rmse': array([ -18.88218497,  -18.40329208,   -9.03350813,  -14.1112067 ,
       -185.05579228,   -9.56441094,  -55.2256917 ,  -15.49302754,
        -15.27752443,  -13.22369031,  -15.07913423,   -7.7559831 ,
        -25.8662518 ,  -24.7799861 ]), 'test_mae': array([ -9.45722836, -10.16762702,  -5.32053379,  -7.54494132,
       -53.19233903,  -5.77119293, -17.60316386,  -8.5469898 ,
        -8.64016711,  -8.68275285,  -9.12082716,  -4.74602494,
       -15.21555902, -10.71480529]), 'test_r2': array([  0.98780013,   0.99062085,   0.99736379,   0.9146252 ,
       -10.8405094 ,   0.98979532,  -0.2886681 ,   0.96493537,
         0.93881781,   0.97376835,   0.9768297 ,   0.9925689 ,
         0.78883094,   0.98544367]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_4': {'cluster size (%)': 30, 6: {'test_mad': 34.698835891381336, 'test_ystd': 43.62393148250803, 'test_mae': 36.284510684322996, 'test_rmse': 61.85578425780505, 'test_r2': -1.0105321865278691, 'test_pearson_r': array([-0.14619311]), 'test_pearson_p_value': array([0.20455326]), 'test_spearman_r': -0.07731915319787984, 'test_spearman_p_value': 0.5038929243006166, 'test_kendall_r': -0.025517629759984048, 'test_kendall_p_value': 0.7446520544339611, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09572874562936179, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 732, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 34.698835891381336, 'test_ystd': 43.62393148250803, 'test_mae': 35.97348615225259, 'test_rmse': 61.70231139944047, 'test_r2': -1.0005677399593682, 'test_pearson_r': array([-0.15063693]), 'test_pearson_p_value': array([0.19097871]), 'test_spearman_r': -0.09291652046271698, 'test_spearman_p_value': 0.42154480407442596, 'test_kendall_r': -0.03136891295627062, 'test_kendall_p_value': 0.6887760057701018, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06245004013655008, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 34.698835891381336, 'test_ystd': 43.62393148250803, 'test_mae': 36.27416385407881, 'test_rmse': 61.83357403305355, 'test_r2': -1.009088623719129, 'test_pearson_r': array([-0.14357376]), 'test_pearson_p_value': array([0.2128696]), 'test_spearman_r': -0.047839499873666945, 'test_spearman_p_value': 0.6794891223085457, 'test_kendall_r': -0.007929780526244382, 'test_kendall_p_value': 0.9193675126655982, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.053092294135801604, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 252, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 34.698835891381336, 'test_ystd': 43.62393148250803, 'test_mae': 35.999912698968664, 'test_rmse': 61.671917476938376, 'test_r2': -0.9985973072969003, 'test_pearson_r': array([-0.14498865]), 'test_pearson_p_value': array([0.20834816]), 'test_spearman_r': -0.021964176967597056, 'test_spearman_p_value': 0.8496184558701891, 'test_kendall_r': 0.024134804321943006, 'test_kendall_p_value': 0.7608855817989661, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.055589973458619636, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 80, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 34.698835891381336, 'test_ystd': 43.62393148250803, 'test_mae': 36.41240311189131, 'test_rmse': 62.204644021166814, 'test_r2': -1.0332744953624577, 'test_pearson_r': array([-0.14875495]), 'test_pearson_p_value': array([0.19664608]), 'test_spearman_r': -0.09906659141688351, 'test_spearman_p_value': 0.39133520517036835, 'test_kendall_r': -0.036686090360983824, 'test_kendall_p_value': 0.640693081460512, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07697500260599609, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 110, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 34.698835891381336, 'test_ystd': 43.62393148250803, 'test_mae': 36.784144626097245, 'test_rmse': 62.22691750816627, 'test_r2': -1.034730856759957, 'test_pearson_r': array([-0.17249179]), 'test_pearson_p_value': array([0.13358301]), 'test_spearman_r': -0.12244778100934843, 'test_spearman_p_value': 0.2887359186941847, 'test_kendall_r': -0.041703088390439194, 'test_kendall_p_value': 0.5943451243151865, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.052744753108443954, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 34.698835891381336, 'test_ystd': 43.62393148250803, 'test_mae': 36.928372540412006, 'test_rmse': 62.33896440993954, 'test_r2': -1.0420649994357083, 'test_pearson_r': array([-0.16974668]), 'test_pearson_p_value': array([0.13997294]), 'test_spearman_r': -0.18257022673022663, 'test_spearman_p_value': 0.11200798269586056, 'test_kendall_r': -0.08617833229744676, 'test_kendall_p_value': 0.27119558482480344, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 187, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_4': {'cluster size (%)': 33, 6: {'fit_time': array([15.83972406, 15.33892035, 15.37703037]), 'score_time': array([0.17264724, 0.1680243 , 0.17345428]), 'test_pearson_r': array([0.8883835 , 0.98063585, 0.94799869]), 'test_pearson_p': array([-1.77141479e-30, -2.92769817e-61, -1.57201778e-43]), 'test_spearman_r': array([0.84928062, 0.92438731, 0.85006514]), 'test_spearman_p': array([-2.65949673e-25, -6.50217144e-37, -4.13906755e-25]), 'test_kendall_r': array([0.75994092, 0.78752015, 0.7412063 ]), 'test_kendall_p': array([-3.11785148e-25, -1.22409682e-26, -8.68573987e-24]), 'test_rmse': array([-73.34483533, -20.83965408, -24.89615271]), 'test_mae': array([-24.18470686, -11.46449029, -12.29962346]), 'test_r2': array([0.78600709, 0.96084969, 0.89733895]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([11.32641315,  9.6281774 ,  9.88517904]), 'score_time': array([0.15727687, 0.15970922, 0.15373206]), 'test_pearson_r': array([0.72239301, 0.97860277, 0.98660809]), 'test_pearson_p': array([-2.84531481e-15, -1.86103236e-59, -6.19905610e-68]), 'test_spearman_r': array([0.78927995, 0.887509  , 0.9436355 ]), 'test_spearman_p': array([-1.07665596e-19, -5.28774218e-30, -4.23784997e-42]), 'test_kendall_r': array([0.65174392, 0.80100305, 0.83015791]), 'test_kendall_p': array([-8.41530536e-19, -1.82544408e-27, -2.04098951e-29]), 'test_rmse': array([-91.88346562, -27.27213932, -24.76945666]), 'test_mae': array([-27.38944989, -13.52849847, -13.78053975]), 'test_r2': array([0.32820952, 0.95502686, 0.95445695]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([2.14788294, 1.95316005, 2.14642262]), 'score_time': array([0.15270305, 0.15820622, 0.16338325]), 'test_pearson_r': array([0.98486713, 0.62280047, 0.97719462]), 'test_pearson_p': array([-1.74848711e-66, -1.52630362e-10, -2.62984717e-58]), 'test_spearman_r': array([0.93920573, 0.8380012 , 0.94135087]), 'test_spearman_p': array([-3.16742393e-41, -8.22556556e-24, -2.14519218e-41]), 'test_kendall_r': array([0.82386248, 0.75773431, 0.84146485]), 'test_kendall_p': array([-1.89338604e-29, -8.14324538e-25, -3.82046875e-30]), 'test_rmse': array([ -32.21744783, -118.91807196,  -15.13729386]), 'test_mae': array([-16.04059202, -29.71479547,  -8.69623714]), 'test_r2': array([ 0.95877821, -0.18411536,  0.95458302]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.61612678, 1.67490482, 1.53006029]), 'score_time': array([0.15269685, 0.15037966, 0.15140653]), 'test_pearson_r': array([0.39065687, 0.95051075, 0.97860783]), 'test_pearson_p': array([-1.83357994e-04, -2.06871444e-44, -1.84283226e-59]), 'test_spearman_r': array([0.86396352, 0.8590934 , 0.92800634]), 'test_spearman_p': array([-4.69592638e-27, -3.70219369e-26, -8.93429249e-38]), 'test_kendall_r': array([0.76955294, 0.74214556, 0.81364834]), 'test_kendall_p': array([-9.36066281e-26, -6.26630352e-24, -1.66085585e-28]), 'test_rmse': array([-120.48348597,  -45.50863964,  -28.89724322]), 'test_mae': array([-27.79180033, -21.849011  , -12.40489064]), 'test_r2': array([-2.26436537,  0.89173077,  0.95556494]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([1.62889051, 1.65267873, 1.72963738]), 'score_time': array([0.1476593 , 0.21369362, 0.1585207 ]), 'test_pearson_r': array([0.9848838 , 0.81654802, 0.97521422]), 'test_pearson_p': array([-1.66906073e-66, -9.55755960e-22, -8.34556909e-57]), 'test_spearman_r': array([0.92293882, 0.83155556, 0.93955663]), 'test_spearman_p': array([-5.35753101e-37, -3.68142682e-23, -7.32932261e-41]), 'test_kendall_r': array([0.81459974, 0.74335073, 0.85683056]), 'test_kendall_p': array([-8.63452140e-29, -4.83934884e-24, -2.19532115e-31]), 'test_rmse': array([-19.70596014, -89.71241262, -23.81464607]), 'test_mae': array([-10.25576493, -22.44965121, -11.65035244]), 'test_r2': array([0.96903561, 0.57409607, 0.9497432 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.68565774, 0.61577702, 0.70985126]), 'score_time': array([0.14908767, 0.15044212, 0.15429616]), 'test_pearson_r': array([0.95426058, 0.93721708, 0.90818804]), 'test_pearson_p': array([-2.42608630e-46, -3.44192575e-40, -1.61110167e-33]), 'test_spearman_r': array([0.90302443, 0.91076114, 0.76127153]), 'test_spearman_p': array([-6.14704511e-33, -5.15238513e-34, -1.77852103e-17]), 'test_kendall_r': array([0.76939041, 0.76285108, 0.68285629]), 'test_kendall_p': array([-9.95898992e-26, -3.89634251e-25, -2.36322723e-20]), 'test_rmse': array([-22.59813159, -41.41552381, -65.8404739 ]), 'test_mae': array([-13.72790951, -20.18765821, -28.22861403]), 'test_r2': array([0.90082347, 0.86407236, 0.82381434]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([9.75312328, 9.12960005, 9.77148199]), 'score_time': array([0.19344115, 0.15126729, 0.15203285]), 'test_pearson_r': array([0.97487494, 0.44202607, 0.98615401]), 'test_pearson_p': array([-3.24883508e-57, -2.03667657e-05, -2.49213124e-67]), 'test_spearman_r': array([0.82975905, 0.82799814, 0.98007322]), 'test_spearman_p': array([-3.06713925e-23, -8.19531586e-23, -9.63865277e-61]), 'test_kendall_r': array([0.76965593, 0.74252127, 0.89421843]), 'test_kendall_p': array([-9.34909239e-26, -6.03411344e-24, -4.40273167e-34]), 'test_rmse': array([ -40.13955672, -121.55894289,  -21.82289346]), 'test_mae': array([-15.87849024, -28.148264  , -11.42298173]), 'test_r2': array([ 0.92738388, -1.6793653 ,  0.96744605]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'overall data shape': {'targets_shape': (259, 1), 'training_features_shape': (259, 532)}}
Trimer_scaler
Filename: (Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM5 polymer_solvent HSP and polysize cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM5 polymer_solvent HSP and polysize cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_predictions.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM5 polymer_solvent HSP and polysize cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_ClusterTruth.json
Done Saving scores!
------------------------------ 
Plotted Comparitive Cluster Scores!
______________________________ 
Plotted Parity Plots!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c207n03>
Subject: Job 294644: <XGBR_Rg1 (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311> in cluster <Hazel> Done

Job <XGBR_Rg1 (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311> was submitted from host <c040n04> by user <sdehgha2> in cluster <Hazel> at Tue Mar 11 18:17:47 2025
Job was executed on host(s) <6*c207n03>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Wed Mar 12 05:18:13 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Wed Mar 12 05:18:13 2025
Terminated at Thu Mar 13 14:49:22 2025
Results reported at Thu Mar 13 14:49:22 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input



#BSUB -n 6
#BSUB -W 72:05
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "XGBR_Rg1 (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../make_ood_prediction.py --target_features "Rg1 (nm)"                                       --representation "Mordred"                                       --regressor_type "XGBR"                                       --oligomer_representation "Trimer"                                       --numerical_feats 'Mw (g/mol)' 'PDI' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" 'solvent dP' 'solvent dD' 'solvent dH'                                       --clustering_method "KM5 polymer_solvent HSP and polysize cluster" 



------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   491885.50 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.98 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   120687 sec.
    Turnaround time :                            160295 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311.err> for stderr output of this job.

