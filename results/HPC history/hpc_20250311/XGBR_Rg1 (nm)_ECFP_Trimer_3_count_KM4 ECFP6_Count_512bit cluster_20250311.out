


-------------------------------------------------- 
OOD TEST ON 0



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 170), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06417974430963572), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 356), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08136521329041473), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012746221984375443), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0585024815243816), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 377), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09833949263552134), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 772), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0033128862830936676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1717), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0140521706556793), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 301), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07785392658428184), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06991692945397764), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 586), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07382811370325684), ('regressor__regressor__max_depth', 61), ('regressor__regressor__n_estimators', 537), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00467737046778523), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012884190399073006), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 941), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030175755341803503), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1044), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09179206628090139), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1777), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08789612372390584), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 851), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003986006602672576), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1149), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08431053648424619), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01441359877133314), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 960), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 155), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 72), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04930272642769172), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06963380840333412), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 729), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03191616669721422), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 186), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014538077718185273), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004174354571610549), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1072), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.023789738454866115), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026134935811874684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 756), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03091554039652946), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 130), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09125129433504907), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 963), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004664017447798385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 261), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03978763772444338), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 583), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013953757051049982), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1011), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06724095862939687), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 101), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008476489393453555), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09783661224450786), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1253), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06612451013508984), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 193), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07937370579692231), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0926226199654984), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07726954154821165), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1996), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0032809933795535508), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 962), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07338404215728302), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 232), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06185626026917689), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 133), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08322004736048987), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0230006481273428), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 291), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06678639058063013), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052629883546321456), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0027506333059973014), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1055), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08753122168005657), ('regressor__regressor__max_depth', 456), ('regressor__regressor__n_estimators', 61), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 707), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06394918199463148), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 569), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020940186074374827), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 612), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029299815296515142), ('regressor__regressor__max_depth', 43), ('regressor__regressor__n_estimators', 574), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05225400716467375), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 345), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08064687686284065), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002922641992768343), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 1



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.023225922753936486), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 490), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007151570461855307), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 968), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008874731697916015), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 316), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008330206252349797), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1694), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0585024815243816), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 377), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09833949263552134), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 772), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0033128862830936676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1717), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0140521706556793), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 301), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07785392658428184), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08832085383891655), ('regressor__regressor__max_depth', 99), ('regressor__regressor__n_estimators', 231), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 63), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003954437695449533), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1404), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004144414590785924), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1244), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008862450662732396), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012884190399073006), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 941), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030175755341803503), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1044), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09179206628090139), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1777), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08789612372390584), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 851), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003986006602672576), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1149), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03558450107805116), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029137859466327022), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 149), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09071038140422102), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06963380840333412), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 729), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03191616669721422), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 186), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014538077718185273), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03496002463447589), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 159), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06722136535089449), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 846), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.056726927539583104), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 583), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017385043467751344), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1019), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07425649823001222), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03091554039652946), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 130), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09125129433504907), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 963), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004664017447798385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 261), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03978763772444338), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 583), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013953757051049982), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1011), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 59), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08208118961877538), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08922603201120653), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1091), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01534020400030893), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 633), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 173), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06612451013508984), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 193), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07937370579692231), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09330768254821205), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 85), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.060993146228989104), ('regressor__regressor__max_depth', 4417), ('regressor__regressor__n_estimators', 74), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09657715823164348), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 151), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08614897306625405), ('regressor__regressor__max_depth', 4923), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03925987871531828), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 313), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08322004736048987), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0230006481273428), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 291), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06678639058063013), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052629883546321456), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0027506333059973014), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1055), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04486838393688683), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 101), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 103), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 74), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08596031614286463), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025110050741759458), ('regressor__regressor__max_depth', 19), ('regressor__regressor__n_estimators', 849), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020940186074374827), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 612), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029299815296515142), ('regressor__regressor__max_depth', 43), ('regressor__regressor__n_estimators', 574), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05225400716467375), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 345), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08064687686284065), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002922641992768343), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 2



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0971031565976681), ('regressor__regressor__max_depth', 300), ('regressor__regressor__n_estimators', 1043), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08447327212596226), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1187), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006323462691239024), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 632), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004883161432255028), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1124), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.055382148724101285), ('regressor__regressor__max_depth', 21), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0585024815243816), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 377), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09833949263552134), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 772), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0033128862830936676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1717), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0140521706556793), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 301), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07785392658428184), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 106), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 146), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08626481242911258), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 70), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07693173041362837), ('regressor__regressor__max_depth', 269), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012884190399073006), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 941), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030175755341803503), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1044), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09179206628090139), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1777), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08789612372390584), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 851), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003986006602672576), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1149), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018045213469581607), ('regressor__regressor__max_depth', 7427), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03226359734948682), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08158462601006129), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07352481813242628), ('regressor__regressor__max_depth', 1264), ('regressor__regressor__n_estimators', 1246), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06963380840333412), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 729), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03191616669721422), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 186), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014538077718185273), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07143592871212966), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013142235135500063), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1455), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06271496134140643), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0035126743302233542), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03091554039652946), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 130), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09125129433504907), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 963), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004664017447798385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 261), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03978763772444338), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 583), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013953757051049982), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1011), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.021341243440749925), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 269), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06418757353637114), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1700), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05490498184012382), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 242), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09444797193853444), ('regressor__regressor__max_depth', 43), ('regressor__regressor__n_estimators', 83), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.021311273431330727), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06612451013508984), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 193), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07937370579692231), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0026973157292766873), ('regressor__regressor__max_depth', 183), ('regressor__regressor__n_estimators', 987), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 263), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02198187097923922), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.048328505325749574), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 183), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05354387915338609), ('regressor__regressor__max_depth', 166), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08322004736048987), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0230006481273428), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 291), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06678639058063013), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052629883546321456), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0027506333059973014), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1055), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09030403117497494), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1501), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 162), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02269934654213734), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0727880237480246), ('regressor__regressor__max_depth', 502), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 165), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020940186074374827), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 612), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029299815296515142), ('regressor__regressor__max_depth', 43), ('regressor__regressor__n_estimators', 574), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05225400716467375), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 345), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08064687686284065), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002922641992768343), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 3



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 923), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08670669063871135), ('regressor__regressor__max_depth', 7001), ('regressor__regressor__n_estimators', 762), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 198), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08496882729760503), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 819), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002015675192053761), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1515), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0585024815243816), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 377), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09833949263552134), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 772), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0033128862830936676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1717), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0140521706556793), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 301), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07785392658428184), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06991692945397764), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 586), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 218), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003549596362330068), ('regressor__regressor__max_depth', 6399), ('regressor__regressor__n_estimators', 1125), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023056145294942584), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025710983173146927), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012884190399073006), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 941), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030175755341803503), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1044), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09179206628090139), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1777), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08789612372390584), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 851), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003986006602672576), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1149), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04516697364425213), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03434644904578944), ('regressor__regressor__max_depth', 55), ('regressor__regressor__n_estimators', 194), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0027746420270600195), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0362240486079947), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 174), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06963380840333412), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 729), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03191616669721422), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 186), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014538077718185273), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07372858591119259), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 54), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.033365016483243116), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 602), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02988730839856647), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 720), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03634314031867854), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 232), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.039194141866325735), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 843), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03091554039652946), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 130), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09125129433504907), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 963), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004664017447798385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 261), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03978763772444338), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 583), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013953757051049982), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1011), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01063346994156447), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09151649581538918), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03974753100623968), ('regressor__regressor__max_depth', 352), ('regressor__regressor__n_estimators', 232), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 148), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06612451013508984), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 193), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07937370579692231), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08494258287465348), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0788093507903413), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 81), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06418785487892018), ('regressor__regressor__max_depth', 19), ('regressor__regressor__n_estimators', 254), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08322004736048987), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0230006481273428), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 291), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06678639058063013), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052629883546321456), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0027506333059973014), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1055), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01598695091362954), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0727880237480246), ('regressor__regressor__max_depth', 502), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 60), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.024352417928657787), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1565), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008243237190692577), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020940186074374827), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 612), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029299815296515142), ('regressor__regressor__max_depth', 43), ('regressor__regressor__n_estimators', 574), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05225400716467375), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 345), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08064687686284065), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002922641992768343), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])


{'CO_0': {'cluster size (%)': 55, 6: {'test_mad': 59.70019501884546, 'test_ystd': 138.37116490639434, 'test_mae': 104.08204823372424, 'test_rmse': 184.3111181195983, 'test_r2': -0.7742379863291606, 'test_pearson_r': array([-0.08667874]), 'test_pearson_p_value': array([0.30503353]), 'test_spearman_r': 0.23551498500255447, 'test_spearman_p_value': 0.004780256275647096, 'test_kendall_r': 0.1928227052409628, 'test_kendall_p_value': 0.0007940035362956124, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 170, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 59.70019501884546, 'test_ystd': 138.37116490639434, 'test_mae': 103.70607964985162, 'test_rmse': 182.93095520939784, 'test_r2': -0.7477656916531066, 'test_pearson_r': array([-0.08941316]), 'test_pearson_p_value': array([0.28997136]), 'test_spearman_r': 0.12822543318223958, 'test_spearman_p_value': 0.12831958258388404, 'test_kendall_r': 0.16041760323123685, 'test_kendall_p_value': 0.005223961871925566, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07382811370325684, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 61, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 537, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 59.70019501884546, 'test_ystd': 138.37116490639434, 'test_mae': 103.47547222754679, 'test_rmse': 183.64419993717968, 'test_r2': -0.7614212795758348, 'test_pearson_r': array([-0.08725951]), 'test_pearson_p_value': array([0.30179226]), 'test_spearman_r': 0.24408241905013045, 'test_spearman_p_value': 0.003419432578133855, 'test_kendall_r': 0.20027311547461996, 'test_kendall_p_value': 0.0005062068749616917, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 72, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 59.70019501884546, 'test_ystd': 138.37116490639434, 'test_mae': 103.04776403157838, 'test_rmse': 183.01094011786614, 'test_r2': -0.7492944153263104, 'test_pearson_r': array([-0.08785145]), 'test_pearson_p_value': array([0.29851205]), 'test_spearman_r': 0.15434129104561062, 'test_spearman_p_value': 0.0666632335689243, 'test_kendall_r': 0.1582922071345236, 'test_kendall_p_value': 0.005941651712894737, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.004174354571610549, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 59.70019501884546, 'test_ystd': 138.37116490639434, 'test_mae': 104.08207859011797, 'test_rmse': 184.31111767578386, 'test_r2': -0.7742379777845603, 'test_pearson_r': array([-0.08667875]), 'test_pearson_p_value': array([0.30503348]), 'test_spearman_r': 0.23551498500255447, 'test_spearman_p_value': 0.004780256275647096, 'test_kendall_r': 0.1928227052409628, 'test_kendall_p_value': 0.0007940035362956124, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1253, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 59.70019501884546, 'test_ystd': 138.37116490639434, 'test_mae': 104.79926053462928, 'test_rmse': 183.9663510167817, 'test_r2': -0.7676065168522268, 'test_pearson_r': array([-0.0877864]), 'test_pearson_p_value': array([0.29887136]), 'test_spearman_r': 0.10392800547057036, 'test_spearman_p_value': 0.2183846063240397, 'test_kendall_r': 0.1274387572955249, 'test_kendall_p_value': 0.026814184323765207, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07338404215728302, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 232, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 59.70019501884546, 'test_ystd': 138.37116490639434, 'test_mae': 102.89761643234468, 'test_rmse': 183.34027922482073, 'test_r2': -0.755595999628186, 'test_pearson_r': array([-0.08876605]), 'test_pearson_p_value': array([0.29349031]), 'test_spearman_r': 0.2230155991641201, 'test_spearman_p_value': 0.007636482541204696, 'test_kendall_r': 0.18778445791741735, 'test_kendall_p_value': 0.0010881532533134207, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06394918199463148, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 569, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_0': {'cluster size (%)': 50, 6: {'fit_time': array([1.0963316 , 1.15151668]), 'score_time': array([0.13261175, 0.13505268]), 'test_pearson_r': array([0.83373537, 0.9745632 ]), 'test_pearson_p': array([-8.12351261e-35, -2.34137266e-84]), 'test_spearman_r': array([0.83234292, 0.89814363]), 'test_spearman_p': array([-1.32174721e-34, -3.76859491e-47]), 'test_kendall_r': array([0.6966922, 0.804449 ]), 'test_kendall_p': array([-1.14318253e-31, -3.63006057e-41]), 'test_rmse': array([-77.13795063, -22.30853916]), 'test_mae': array([-26.79956772, -10.931696  ]), 'test_r2': array([0.68044285, 0.94879305]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0140521706556793, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 301, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([3.67213702, 2.95466089]), 'score_time': array([0.12308979, 0.12398481]), 'test_pearson_r': array([0.86308157, 0.95870066]), 'test_pearson_p': array([-8.68360267e-40, -3.30800953e-71]), 'test_spearman_r': array([0.78388106, 0.84299357]), 'test_spearman_p': array([-2.87688827e-28, -5.29077560e-36]), 'test_kendall_r': array([0.68865278, 0.72966401]), 'test_kendall_p': array([-1.32109793e-30, -3.22862620e-34]), 'test_rmse': array([-70.72966583, -29.42481473]), 'test_mae': array([-22.02207326, -16.59097868]), 'test_r2': array([0.7301677 , 0.91241436]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0030175755341803503, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1044, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([0.81100345, 0.91652989]), 'score_time': array([0.12507319, 0.12645745]), 'test_pearson_r': array([0.23829319, 0.67133321]), 'test_pearson_p': array([-6.33027543e-03, -3.13856254e-18]), 'test_spearman_r': array([0.72854919, 0.86549824]), 'test_spearman_p': array([-8.91224619e-23, -6.03247319e-40]), 'test_kendall_r': array([0.65506471, 0.76505269]), 'test_kendall_p': array([-2.98351183e-28, -1.61539450e-37]), 'test_rmse': array([-152.32427039,  -72.39669413]), 'test_mae': array([-45.17145571, -17.22048919]), 'test_r2': array([-0.01743356,  0.01453474]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03191616669721422, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 186, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.53839421, 1.51731777]), 'score_time': array([0.15250826, 0.14632273]), 'test_pearson_r': array([0.74319854, 0.96896945]), 'test_pearson_p': array([-4.30678327e-24, -5.96293246e-79]), 'test_spearman_r': array([0.88164625, 0.88405684]), 'test_spearman_p': array([-1.42995112e-43, -8.90845082e-44]), 'test_kendall_r': array([0.77091829, 0.76381462]), 'test_kendall_p': array([-1.90931448e-38, -1.49022496e-37]), 'test_rmse': array([-100.67437372,  -30.22353898]), 'test_mae': array([-24.16436206, -14.68207804]), 'test_r2': array([0.29881659, 0.93483049]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09125129433504907, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 963, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([1.87512016, 1.91155791]), 'score_time': array([0.13631701, 0.13658834]), 'test_pearson_r': array([0.80903124, 0.96884343]), 'test_pearson_p': array([-2.48835833e-31, -7.68289392e-79]), 'test_spearman_r': array([0.88085525, 0.87278957]), 'test_spearman_p': array([-2.13383011e-43, -2.22571816e-41]), 'test_kendall_r': array([0.77094524, 0.77451781]), 'test_kendall_p': array([-1.87776924e-38, -1.78157163e-38]), 'test_rmse': array([-71.87745959, -34.63879508]), 'test_mae': array([-16.92170125, -15.01936403]), 'test_r2': array([0.52252111, 0.93200083]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05913781436124809, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2125, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.32001781, 0.32923245]), 'score_time': array([0.18688202, 0.13493872]), 'test_pearson_r': array([0.92784483, 0.83488995]), 'test_pearson_p': array([-1.13032287e-56, -9.86181434e-35]), 'test_spearman_r': array([0.85847043, 0.84190443]), 'test_spearman_p': array([-6.20524294e-39, -7.91425602e-36]), 'test_kendall_r': array([0.70723885, 0.7226515 ]), 'test_kendall_p': array([-2.04373727e-32, -1.53102628e-33]), 'test_rmse': array([-38.84666652, -76.84682235]), 'test_mae': array([-19.34847128, -25.78783471]), 'test_r2': array([0.85444394, 0.67350095]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06678639058063013, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.10032415, 1.09057164]), 'score_time': array([0.14797449, 0.14735055]), 'test_pearson_r': array([0.86271961, 0.96816624]), 'test_pearson_p': array([-1.01592135e-39, -2.94654574e-78]), 'test_spearman_r': array([0.88664573, 0.93995175]), 'test_spearman_p': array([-1.06424126e-44, -3.84706771e-61]), 'test_kendall_r': array([0.79140364, 0.83351706]), 'test_kendall_p': array([-2.28103173e-40, -2.18156489e-44]), 'test_rmse': array([-81.36765557, -28.85565083]), 'test_mae': array([-19.22761662, -15.01559635]), 'test_r2': array([0.60606236, 0.92789815]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05225400716467375, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 345, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_1': {'cluster size (%)': 7, 6: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 122.24788150988127, 'test_rmse': 264.4698823403005, 'test_r2': -132.44188763191974, 'test_pearson_r': array([-0.2335138]), 'test_pearson_p_value': array([0.33597275]), 'test_spearman_r': 0.23866196109235743, 'test_spearman_p_value': 0.3251178141466685, 'test_kendall_r': 0.22756122983182978, 'test_kendall_p_value': 0.18138535910446807, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.023225922753936486, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 490, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 121.83692443446108, 'test_rmse': 264.2099603190298, 'test_r2': -132.17972211934233, 'test_pearson_r': array([-0.23100113]), 'test_pearson_p_value': array([0.34134672]), 'test_spearman_r': 0.22633256088832418, 'test_spearman_p_value': 0.3514633154121274, 'test_kendall_r': 0.20360741616532138, 'test_kendall_p_value': 0.2317678740158704, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.008862450662732396, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1115, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 120.18171664990876, 'test_rmse': 262.153950384036, 'test_r2': -130.1150502219615, 'test_pearson_r': array([-0.23455711]), 'test_pearson_p_value': array([0.333756]), 'test_spearman_r': 0.21454743818115476, 'test_spearman_p_value': 0.37775673988579683, 'test_kendall_r': 0.1708111107700618, 'test_kendall_p_value': 0.32112995349132456, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03558450107805116, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 152, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 121.14821451287521, 'test_rmse': 264.114901179346, 'test_r2': -132.0839068642772, 'test_pearson_r': array([-0.2362959]), 'test_pearson_p_value': array([0.33008065]), 'test_spearman_r': 0.22695927344783315, 'test_spearman_p_value': 0.35009532871532956, 'test_kendall_r': 0.1952126980229278, 'test_kendall_p_value': 0.25684798977363055, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06722136535089449, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 846, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 121.44130448993883, 'test_rmse': 264.24703507751485, 'test_r2': -132.21710112244116, 'test_pearson_r': array([-0.23878608]), 'test_pearson_p_value': array([0.3248587]), 'test_spearman_r': 0.23866196109235743, 'test_spearman_p_value': 0.3251178141466685, 'test_kendall_r': 0.22756122983182978, 'test_kendall_p_value': 0.18138535910446807, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.01534020400030893, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 633, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 120.11619647377417, 'test_rmse': 263.5980933010169, 'test_r2': -131.5635915043062, 'test_pearson_r': array([-0.23748236]), 'test_pearson_p_value': array([0.32758651]), 'test_spearman_r': 0.22633256088832418, 'test_spearman_p_value': 0.3514633154121274, 'test_kendall_r': 0.20360741616532138, 'test_kendall_p_value': 0.2317678740158704, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09657715823164348, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 151, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 121.52079037314968, 'test_rmse': 264.0167674388198, 'test_r2': -131.98502872256756, 'test_pearson_r': array([-0.23179261]), 'test_pearson_p_value': array([0.33964858]), 'test_spearman_r': 0.22633256088832418, 'test_spearman_p_value': 0.3514633154121274, 'test_kendall_r': 0.20360741616532138, 'test_kendall_p_value': 0.2317678740158704, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.025110050741759458, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 19, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 849, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_1': {'cluster size (%)': 7, 6: {'fit_time': array([1.60338688, 1.53511477, 1.513309  , 2.44939995, 1.47598052,
       1.69200993, 1.59320259, 2.10337448, 2.71635127, 2.60066128,
       1.83029556, 2.68472147, 2.67274117, 2.51503658]), 'score_time': array([0.16102624, 0.19260192, 0.1966238 , 0.13137674, 0.13804483,
       0.1533308 , 0.14532208, 0.13935447, 0.1322217 , 0.134269  ,
       0.16364646, 0.13556528, 0.14430189, 0.18912888]), 'test_pearson_r': array([0.9513341 , 0.99912049, 0.99243704, 0.95138398, 0.09951213,
       0.98182602, 0.99473599, 0.9965471 , 0.98641197, 0.99611481,
       0.99552779, 0.95205535, 0.99185893, 0.90365033]), 'test_pearson_p': array([-4.06311570e-10, -7.30909429e-25, -6.26516217e-17, -4.02854096e-10,
       -6.85239218e-01, -1.04191067e-13, -2.90134066e-18, -1.00494319e-18,
       -5.59990247e-14, -2.57860641e-18, -7.93353127e-18, -1.20735197e-09,
       -9.45737764e-16, -2.74991893e-07]), 'test_spearman_r': array([0.6754386 , 0.99209833, 0.98245614, 0.86666667, 0.69298246,
       0.98070175, 0.9245614 , 0.96744302, 0.94166249, 0.97316821,
       0.98502853, 0.88533105, 0.97210796, 0.94829572]), 'test_spearman_p': array([-1.50551238e-03, -9.08163885e-17, -7.73558991e-14, -1.58937749e-06,
       -1.00432582e-03, -1.72884140e-13, -1.53799335e-08, -5.73067097e-11,
       -5.61230323e-09, -1.24188235e-11, -1.21105572e-13, -1.04283965e-06,
       -1.68763179e-11, -2.18242419e-09]), 'test_kendall_r': array([0.60233918, 0.95882353, 0.92982456, 0.73099415, 0.6374269 ,
       0.90643275, 0.83625731, 0.89773377, 0.8524636 , 0.90849673,
       0.93115255, 0.73027896, 0.9013353 , 0.83172394]), 'test_kendall_p': array([-1.58318567e-04, -1.13228376e-08, -2.06767062e-12, -1.52091530e-06,
       -5.28075820e-05, -2.27996852e-11, -5.55516932e-09, -2.43687175e-07,
       -8.32299419e-07, -9.76656516e-11, -7.34599652e-08, -2.54839973e-05,
       -2.02850566e-07, -1.70822672e-06]), 'test_rmse': array([ -22.36326326,   -7.24108995,  -32.15146239,  -59.99152177,
       -179.48373459,  -14.76202531,   -8.13603949,   -6.89068419,
        -31.49897076,   -6.65525863,  -13.13990738,  -23.16832992,
         -9.66313928,  -25.09936505]), 'test_mae': array([-11.67169336,  -5.0850347 , -13.93411223, -22.41561995,
       -53.36415488,  -9.38918596,  -5.91144055,  -4.211648  ,
       -14.86780033,  -4.61277621,  -7.54616612, -13.33510736,
        -5.83516423, -12.52799024]), 'test_r2': array([  0.88738802,   0.99823119,   0.97431198,   0.90144944,
       -10.008488  ,   0.96061976,   0.98308096,   0.99176678,
         0.97041462,   0.99132945,   0.98290646,   0.90051252,
         0.9810584 ,   0.80036387]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0140521706556793, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 301, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([7.12546778, 5.13523841, 8.18760371, 5.46257067, 8.34873843,
       6.65761948, 6.88765097, 6.84237576, 5.88512874, 7.61649394,
       4.82711434, 7.4137187 , 7.17537642, 6.24583697]), 'score_time': array([0.14130187, 0.13877416, 0.121521  , 0.13485718, 0.11840105,
       0.13421082, 0.1387949 , 0.14092255, 0.24168658, 0.1315732 ,
       0.13422346, 0.13467145, 0.22511196, 0.23143363]), 'test_pearson_r': array([0.98571658, 0.98513819, 0.94631005, 0.99860602, 0.64461952,
       0.98768522, 0.9883358 , 0.8793699 , 0.9576937 , 0.98893567,
       0.9927347 , 0.9861561 , 0.95988474, 0.98151926]), 'test_pearson_p': array([-1.36234525e-14, -1.90535057e-14, -9.20577392e-10, -3.65785921e-23,
       -2.88714159e-03, -3.88797325e-15, -2.45649929e-15, -1.53403643e-06,
       -4.51767435e-10, -1.09082410e-14, -3.81536507e-16, -6.49603288e-14,
       -2.97278345e-10, -6.45697131e-13]), 'test_spearman_r': array([0.84628906, 0.841089  , 0.93807651, 0.81351478, 0.72495718,
       0.91092593, 0.9679685 , 0.9163228 , 0.9705154 , 0.95198774,
       0.98657077, 0.94785764, 0.88028896, 0.97624019]), 'test_spearman_p': array([-4.95087034e-06, -6.44765773e-06, -3.00918779e-09, -2.27417385e-05,
       -4.45394275e-04, -6.02180863e-08, -1.22887146e-11, -9.27154202e-08,
       -2.61829819e-11, -1.22077937e-09, -5.09977899e-14, -2.33156775e-09,
       -1.44733680e-06, -4.74047396e-12]), 'test_kendall_r': array([0.70796768, 0.70001211, 0.84956122, 0.69208509, 0.69235618,
       0.77419688, 0.89149943, 0.80922804, 0.90736436, 0.8524636 ,
       0.92765165, 0.83934877, 0.77777778, 0.9013353 ]), 'test_kendall_p': array([-2.59967470e-05, -3.06761171e-05, -4.48423156e-07, -3.61461714e-05,
       -4.07176784e-05, -3.82034206e-06, -1.03161918e-07, -3.07634090e-06,
       -1.92223638e-07, -8.32299419e-07, -8.87180979e-08, -1.22329014e-06,
       -4.36097754e-07, -2.02850566e-07]), 'test_rmse': array([  -7.05745256,  -21.18648841,  -61.88997293,   -8.13114345,
       -177.86996271,  -13.02988631,  -30.45253183,  -20.53627889,
        -13.85124068,  -43.32666735,   -8.79269778,  -16.66068228,
        -25.34664118,  -15.39651566]), 'test_mae': array([ -5.87992419, -13.87916634, -21.75608846,  -5.62387447,
       -58.27777994,  -9.77323023, -16.24232468, -10.82127305,
        -9.89572724, -20.5345269 ,  -6.5082121 , -10.70534044,
       -16.91630275, -11.03714305]), 'test_r2': array([0.96208055, 0.94019515, 0.89157   , 0.99124477, 0.03786524,
       0.96935605, 0.97042912, 0.55781814, 0.91303786, 0.95254407,
       0.98437823, 0.94266223, 0.91867818, 0.95718075]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0030175755341803503, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1044, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.95209408, 1.22318316, 2.03059387, 1.42514324, 1.87252307,
       1.88808918, 1.18499923, 1.29551125, 2.20001268, 2.2054677 ,
       1.53929853, 2.00685883, 2.01375866, 1.69621062]), 'score_time': array([0.14261746, 0.13742781, 0.14527082, 0.36297941, 0.14776707,
       0.14268613, 0.13668132, 0.14217687, 0.13975453, 0.14061809,
       0.1419735 , 0.13812232, 0.13789558, 0.13991594]), 'test_pearson_r': array([0.9947651 , 0.98494844, 0.99670044, 0.99833827, 0.91730279,
       0.94821167, 0.98505577, 0.0568274 , 0.99231505, 0.99382608,
       0.98712814, 0.98228879, 0.9915461 , 0.99434854]), 'test_pearson_p': array([-2.76802487e-18, -2.12094317e-14, -5.50995513e-20, -1.62711697e-22,
       -3.27451716e-08, -6.81982410e-10, -1.99650225e-14, -8.22780872e-01,
       -5.97126391e-16, -1.04105867e-16, -3.63942236e-14, -4.60582447e-13,
       -1.27747159e-15, -5.14021131e-17]), 'test_spearman_r': array([0.98200975, 0.92233445, 0.96972366, 0.97894737, 0.91970171,
       0.94561404, 0.98903037, 0.63880289, 0.8171492 , 0.96078431,
       0.98915862, 0.88509744, 0.89060888, 0.98760383]), 'test_spearman_p': array([-9.56293130e-14, -1.95433775e-08, -7.65719604e-12, -3.60064188e-13,
       -2.57096149e-08, -1.02463740e-09, -1.46115981e-15, -4.32212480e-03,
       -3.47817513e-05, -2.48656703e-10, -9.27540331e-15, -1.05914999e-06,
       -7.27747371e-07, -2.69678454e-14]), 'test_kendall_r': array([0.95015071, 0.83284816, 0.89149943, 0.90643275, 0.77419688,
       0.83625731, 0.93842046, 0.59477124, 0.75659532, 0.88235294,
       0.94426737, 0.79745222, 0.80392157, 0.94080983]), 'test_kendall_p': array([-1.41855104e-08, -6.66104086e-07, -1.03161918e-07, -2.27996852e-11,
       -3.82034206e-06, -5.55516932e-09, -2.12970819e-08, -3.24628494e-04,
       -1.28761880e-05, -8.28241250e-10, -4.80698932e-08, -5.02085393e-06,
       -1.16879681e-07, -5.81823612e-08]), 'test_rmse': array([  -8.09258628,  -31.92990188,  -30.2775453 ,  -11.37162389,
        -16.54333895,  -59.94644602,  -12.88161069, -187.17335833,
        -16.77662577,   -7.90346236,  -15.74958576,  -15.13431259,
         -7.06399188,   -8.80981665]), 'test_mae': array([ -5.73460541, -14.49571661, -16.21326761,  -7.24279485,
       -10.27225878, -20.0812942 ,  -5.70988607, -52.87252033,
       -10.6033445 ,  -5.42893568,  -9.64429678,  -9.00413184,
        -4.50682684,  -4.77078589]), 'test_r2': array([  0.98633133,   0.96606354,   0.97754194,   0.99643835,
         0.83893609,   0.89446   ,   0.96214477, -25.87357421,
         0.97417907,   0.98643903,   0.96271578,   0.95208887,
         0.98043204,   0.98581591]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03191616669721422, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 186, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.79485869, 1.82119274, 2.05390334, 1.71628284, 2.06799698,
       2.33794427, 2.35194635, 2.02716708, 1.82992315, 2.31861305,
       2.06806684, 2.35951447, 2.58912778, 1.88694596]), 'score_time': array([0.12787724, 0.12304235, 0.16973376, 0.12342405, 0.13866878,
       0.11787367, 0.11761355, 0.13797522, 0.1248951 , 0.12485123,
       0.1247406 , 0.17140245, 0.11901736, 0.14130282]), 'test_pearson_r': array([ 0.99009664,  0.99256684,  0.98323824, -0.02869392,  0.99310861,
        0.9985326 ,  0.9972833 ,  0.99621545,  0.89217318,  0.9923814 ,
        0.97598353,  0.94950282,  0.97898433,  0.99697334]), 'test_pearson_p': array([-6.14863857e-16, -5.41023247e-17, -5.26372642e-14, -9.07172229e-01,
       -2.84866678e-17, -5.65742216e-23, -1.05798880e-20, -2.09088878e-18,
       -6.51853721e-07, -5.57223843e-16, -5.16180723e-12, -1.81355280e-09,
       -1.79129294e-12, -3.50718462e-19]), 'test_spearman_r': array([0.87752414, 0.98947368, 0.97323397, 0.67908555, 0.97368421,
       0.97894737, 0.97715441, 0.96590961, 0.80949933, 0.91537668,
       0.9876161 , 0.84520124, 0.94427245, 0.98915862]), 'test_spearman_p': array([-8.02375581e-07, -1.03053958e-15, -2.71850932e-12, -1.38702810e-03,
       -2.35705500e-12, -3.60064188e-13, -7.16901319e-13, -8.24154170e-11,
       -4.70504360e-05, -1.01132711e-07, -2.67561271e-14, -1.00789527e-05,
       -3.92399721e-09, -9.27540331e-15]), 'test_kendall_r': array([0.82941176, 0.94152047, 0.90322969, 0.61654215, 0.89473684,
       0.91812865, 0.89679028, 0.88817712, 0.72131535, 0.81699346,
       0.93464052, 0.76470588, 0.84313725, 0.94426737]), 'test_kendall_p': array([-7.85254763e-07, -5.27929196e-13, -7.00361385e-08, -3.09023200e-04,
       -6.63913300e-11, -7.20796807e-12, -9.83316810e-08, -3.04174616e-07,
       -3.05216065e-05, -5.74338967e-08, -7.81116540e-12, -8.04176944e-07,
       -1.22726897e-08, -4.80698932e-08]), 'test_rmse': array([ -11.36436504,  -10.46310688,  -15.97118618, -254.91895333,
         -8.47905375,  -25.84309638,  -14.93805773,   -6.64044992,
        -31.4620227 ,   -6.40909608,  -17.9836789 ,  -62.05112216,
        -15.14016578,  -17.74225756]), 'test_mae': array([ -6.13167202,  -5.85251011,  -7.44974121, -88.09855645,
        -4.76918686, -12.94085041,  -8.64030604,  -4.59876373,
       -14.03307389,  -4.11137243,  -8.54629786, -23.6725191 ,
        -9.95181023, -11.70050732]), 'test_r2': array([  0.97269938,   0.97786878,   0.96298188, -28.33218528,
         0.98598887,   0.98324675,   0.99302995,   0.9898268 ,
         0.7219742 ,   0.98364796,   0.9303485 ,   0.89123864,
         0.95433502,   0.99187815]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09125129433504907, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 963, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.32372618, 2.60075784, 2.26293111, 2.79680109, 2.24025655,
       2.87742472, 2.58540463, 3.22755384, 3.10023379, 3.22472739,
       2.40463376, 2.31613231, 3.17478681, 3.17427158]), 'score_time': array([0.1387887 , 0.13714862, 0.13842797, 0.1271162 , 0.1361444 ,
       0.12245989, 0.14155555, 0.12174249, 0.12345004, 0.12005138,
       0.13902426, 0.15601277, 0.11847568, 0.11808443]), 'test_pearson_r': array([0.99800698, 0.9841399 , 0.98089981, 0.99260888, 0.99391607,
       0.99352861, 0.27711781, 0.52653802, 0.99598009, 0.99303846,
       0.85260466, 0.97869154, 0.98768492, 0.99526613]), 'test_pearson_p': array([-7.62127021e-22, -3.29990488e-14, -1.58476815e-13, -5.15628972e-17,
       -9.90319524e-18, -1.67156386e-17, -2.50722718e-01, -2.47749724e-02,
       -3.38558542e-18, -2.71369167e-16, -6.97918691e-06, -1.99911762e-12,
       -2.55949365e-14, -1.24930800e-17]), 'test_spearman_r': array([0.98596491, 0.90158311, 0.76679849, 0.97323397, 0.92631579,
       0.98421053, 0.75087719, 0.84090909, 0.98397946, 0.94785764,
       0.84873527, 0.98555212, 0.89680083, 0.9752322 ]), 'test_spearman_p': array([-1.17464029e-14, -1.36072655e-07, -1.28111108e-04, -2.71850932e-12,
       -1.26686179e-08, -3.17781778e-14, -2.11664863e-04, -1.23663953e-05,
       -2.07509679e-13, -2.33156775e-09, -8.47753187e-06, -9.12417033e-14,
       -4.65886148e-07, -6.58873719e-12]), 'test_kendall_r': array([0.92982456, 0.79059143, 0.73746634, 0.89149943, 0.80116959,
       0.92982456, 0.69590643, 0.69078947, 0.92409744, 0.81311912,
       0.78688948, 0.92156863, 0.83006536, 0.93464052]), 'test_kendall_p': array([-2.06767062e-12, -2.61922646e-06, -1.18018662e-05, -1.03161918e-07,
       -4.67377304e-08, -2.06767062e-12, -6.49122200e-06, -6.80913598e-05,
       -1.07081462e-07, -2.59896801e-06, -5.40069919e-06, -2.92550870e-11,
       -2.71335027e-08, -7.81116540e-12]), 'test_rmse': array([  -5.27352418,  -13.96488551,   -8.94305127,  -25.78450958,
        -10.59134563,  -11.08550202, -182.97741761,  -62.73259838,
        -24.99368044,  -11.33566953,  -29.62668526,  -16.05636436,
         -7.06232844,  -18.80732616]), 'test_mae': array([ -3.05776767,  -8.75427718,  -4.89442732, -15.40447952,
        -6.56481273,  -5.41784154, -48.02860174, -23.76816769,
       -12.57734703,  -6.50260726, -11.4799866 , -10.96023183,
        -4.31092668, -10.00079734]), 'test_r2': array([ 0.99461438,  0.96760383,  0.96027323,  0.98122506,  0.98001326,
        0.98600318, -3.98984968, -2.00465305,  0.99001882,  0.98517021,
        0.70436581,  0.95607034,  0.97180541,  0.98923334]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05913781436124809, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2125, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.36627054, 0.57577324, 0.38752604, 0.6897428 , 0.36803484,
       0.43987966, 0.54889107, 0.38205147, 0.6346612 , 0.36406088,
       0.52995253, 0.61460972, 0.57679343, 0.40422392]), 'score_time': array([0.12643719, 0.18271065, 0.20046473, 0.12616301, 0.13105249,
       0.14846158, 0.14369297, 0.19110441, 0.12999034, 0.12448406,
       0.12881875, 0.12529087, 0.12541723, 0.19213557]), 'test_pearson_r': array([0.97348078, 0.91606857, 0.99230405, 0.99359816, 0.98119501,
       0.99691583, 0.75758577, 0.98683896, 0.98935835, 0.99707493,
       0.99707403, 0.98700524, 0.9764207 , 0.7737871 ]), 'test_pearson_p': array([-2.51476048e-12, -3.69803953e-08, -7.26248219e-17, -1.52523357e-17,
       -1.38962991e-13, -3.10643616e-20, -1.72085546e-04, -4.34339063e-14,
       -7.99836270e-15, -2.66974395e-19, -2.67632599e-19, -3.92537552e-14,
       -4.46243162e-12, -1.64747833e-04]), 'test_spearman_r': array([0.85375278, 0.93859649, 0.98507501, 0.98594177, 0.9525498 ,
       0.96094788, 0.86616946, 0.77703146, 0.96904025, 0.9251421 ,
       0.99328872, 0.88590616, 0.89959026, 0.73412503]), 'test_spearman_p': array([-3.33063034e-06, -2.80606429e-09, -1.97488574e-14, -1.19111358e-14,
       -3.29063281e-10, -6.46690017e-11, -1.63757308e-06, -1.48406281e-04,
       -3.85140601e-11, -3.91301914e-08, -2.02628027e-16, -1.00360690e-06,
       -3.77580298e-07, -5.23097424e-04]), 'test_kendall_r': array([0.7679796 , 0.78947368, 0.92354539, 0.9321899 , 0.86139066,
       0.85630867, 0.77419688, 0.56954891, 0.88235294, 0.82623395,
       0.97049702, 0.76065983, 0.78416135, 0.68197088]), 'test_kendall_p': array([-5.69875718e-06, -8.90628326e-08, -3.80934215e-08, -3.02184546e-08,
       -3.06518708e-07, -3.20420144e-07, -3.82034206e-06, -1.08158890e-03,
       -8.28241250e-10, -1.78800684e-06, -2.02413707e-08, -1.09773191e-05,
       -7.19458129e-06, -8.07679747e-05]), 'test_rmse': array([ -16.07916019,  -26.11316288,  -17.83462197,   -8.16654691,
        -15.05096903,  -36.17891372,  -58.26139263,   -9.5519375 ,
         -9.64719379,  -13.98091777,  -10.4238994 ,  -11.93699017,
        -19.91827264, -178.88585939]), 'test_mae': array([ -9.72764619, -14.51325742, -10.53286072,  -5.57729633,
        -6.70217176, -17.42771349, -18.42071746,  -6.90346419,
        -7.34573336,  -7.42302927,  -7.79503867,  -8.82829034,
       -12.24998767, -65.90006574]), 'test_r2': array([0.94364621, 0.7856644 , 0.96241534, 0.98627944, 0.87092798,
       0.96747755, 0.36712067, 0.95982195, 0.96267243, 0.99388292,
       0.98161421, 0.97276054, 0.93976055, 0.50857797]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06678639058063013, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.63704658, 1.72666383, 1.52309966, 1.6124742 , 2.0944972 ,
       1.50495148, 1.53611946, 1.6422224 , 1.8106575 , 2.34751129,
       2.11310935, 1.81438446, 2.13665867, 1.94659209]), 'score_time': array([0.17677736, 0.13496161, 0.14893293, 0.12794495, 0.12442636,
       0.13913298, 0.14885497, 0.13044214, 0.12651396, 0.12185478,
       0.12085938, 0.12630558, 0.1234951 , 0.12861013]), 'test_pearson_r': array([0.99476034, 0.99814535, 0.99941566, 0.96189643, 0.11202736,
       0.9948656 , 0.59805243, 0.98255912, 0.97363484, 0.98927235,
       0.99439655, 0.99665029, 0.93960852, 0.99772694]), 'test_pearson_p': array([-2.78947646e-18, -4.13621520e-22, -2.26417869e-26, -5.26416119e-11,
       -6.47953795e-01, -2.34834508e-18, -6.83751837e-03, -4.07602223e-13,
       -1.08084787e-11, -8.52803658e-15, -4.80181058e-17, -7.88622866e-19,
       -7.35392553e-09, -3.55757922e-20]), 'test_spearman_r': array([0.72751214, 0.86819115, 0.99341325, 0.91531382, 0.57894737,
       0.99298246, 0.88723133, 0.84710789, 0.96437803, 0.99327803,
       0.98296348, 0.99174407, 0.96078431, 0.9752322 ]), 'test_spearman_p': array([-4.15416290e-04, -1.44919349e-06, -1.94170448e-17, -3.97996537e-08,
       -9.39610415e-03, -3.32215984e-17, -4.11543795e-07, -9.18553718e-06,
       -1.16572513e-10, -2.05219493e-16, -3.38288146e-13, -1.05753411e-15,
       -2.48656703e-10, -6.58873719e-12]), 'test_kendall_r': array([0.69208509, 0.77879156, 0.96758951, 0.76246662, 0.6374269 ,
       0.95321637, 0.75073637, 0.78291168, 0.86557842, 0.96034914,
       0.93115255, 0.96078431, 0.89542484, 0.92156863]), 'test_kendall_p': array([-3.61461714e-05, -3.68335665e-06, -9.02000966e-09, -5.34143245e-06,
       -5.28075820e-05, -1.16815227e-13, -7.43302335e-06, -6.36380428e-06,
       -5.63141283e-07, -3.57316367e-08, -7.34599652e-08, -3.50182620e-13,
       -2.96242626e-10, -2.92550870e-11]), 'test_rmse': array([ -18.66551796,  -15.60919836,   -8.7814604 ,  -13.73071962,
       -185.063092  ,   -9.77756989,  -60.00314832,  -15.46785286,
        -15.20444512,  -12.77937182,  -14.58812111,   -7.50560788,
        -25.89316524,  -24.75688052]), 'test_mae': array([ -9.51557135,  -8.46289846,  -5.2811774 ,  -7.30228063,
       -52.99882024,  -5.79380332, -20.33781864,  -8.68960247,
        -8.83947759,  -8.48691276,  -8.52806224,  -4.50829317,
       -15.66154852, -10.78385909]), 'test_r2': array([  0.9880785 ,   0.99325264,   0.99750884,   0.91916713,
       -10.84144354,   0.9893354 ,  -0.52127184,   0.96504923,
         0.93940174,   0.97550151,   0.9783141 ,   0.99304093,
         0.78839127,   0.9854708 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05225400716467375, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 345, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_2': {'cluster size (%)': 10, 6: {'test_mad': 77.669408, 'test_ystd': 96.78734890552586, 'test_mae': 80.53119419555662, 'test_rmse': 138.52150506233997, 'test_r2': -1.0483172129751122, 'test_pearson_r': array([-0.35352706]), 'test_pearson_p_value': array([0.08298441]), 'test_spearman_r': -0.16801864820061613, 'test_spearman_p_value': 0.4220816096853466, 'test_kendall_r': 0.025184418686953494, 'test_kendall_p_value': 0.8676888016846811, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.055382148724101285, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 21, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 56, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 77.669408, 'test_ystd': 96.78734890552586, 'test_mae': 81.7336177871704, 'test_rmse': 140.1574719350637, 'test_r2': -1.0969849916394678, 'test_pearson_r': array([-0.35921573]), 'test_pearson_p_value': array([0.07781111]), 'test_spearman_r': -0.15767201084879906, 'test_spearman_p_value': 0.45161439044800755, 'test_kendall_r': 0.04292728552741069, 'test_kendall_p_value': 0.775497856674767, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08626481242911258, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 70, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 77.669408, 'test_ystd': 96.78734890552586, 'test_mae': 81.21595421295164, 'test_rmse': 139.89918690771685, 'test_r2': -1.0892633801627567, 'test_pearson_r': array([-0.3514125]), 'test_pearson_p_value': array([0.08497224]), 'test_spearman_r': -0.16625811044947628, 'test_spearman_p_value': 0.4270307442633283, 'test_kendall_r': 0.02861819035160712, 'test_kendall_p_value': 0.8492093801373672, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 77.669408, 'test_ystd': 96.78734890552586, 'test_mae': 81.41203146820068, 'test_rmse': 140.19013778186797, 'test_r2': -1.097962574525416, 'test_pearson_r': array([-0.35040838]), 'test_pearson_p_value': array([0.08592865]), 'test_spearman_r': -0.16576723807478821, 'test_spearman_p_value': 0.42841626170637104, 'test_kendall_r': 0.02829842399853393, 'test_kendall_p_value': 0.849708414311552, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 77.669408, 'test_ystd': 96.78734890552586, 'test_mae': 81.46794502716062, 'test_rmse': 140.1268730383367, 'test_r2': -1.0960694725154685, 'test_pearson_r': array([-0.35774327]), 'test_pearson_p_value': array([0.07912603]), 'test_spearman_r': -0.16625811044947628, 'test_spearman_p_value': 0.4270307442633283, 'test_kendall_r': 0.02861819035160712, 'test_kendall_p_value': 0.8492093801373672, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.021341243440749925, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 269, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 77.669408, 'test_ystd': 96.78734890552586, 'test_mae': 81.81200911407471, 'test_rmse': 140.33214856663054, 'test_r2': -1.10221514489321, 'test_pearson_r': array([-0.3574981]), 'test_pearson_p_value': array([0.07934659]), 'test_spearman_r': -0.1580779724808573, 'test_spearman_p_value': 0.45043550574285174, 'test_kendall_r': 0.038838476366029426, 'test_kendall_p_value': 0.7943452369509995, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.048328505325749574, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 183, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 77.669408, 'test_ystd': 96.78734890552586, 'test_mae': 81.70628111724854, 'test_rmse': 140.07192328139303, 'test_r2': -1.0944258773600448, 'test_pearson_r': array([-0.35412542]), 'test_pearson_p_value': array([0.08242834]), 'test_spearman_r': -0.15960398827477454, 'test_spearman_p_value': 0.446018642789895, 'test_kendall_r': 0.03524274215216256, 'test_kendall_p_value': 0.8127272447244895, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09030403117497494, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1501, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_2': {'cluster size (%)': 10, 6: {'fit_time': array([1.43010616, 1.40717936, 1.45377898, 1.54036498, 1.42945051,
       1.4118185 , 1.4230566 , 1.3759892 , 1.59569955, 1.43672752]), 'score_time': array([0.12888408, 0.16016674, 0.12731385, 0.1345613 , 0.13157773,
       0.1310823 , 0.18228555, 0.13232899, 0.1207726 , 0.13032556]), 'test_pearson_r': array([0.9236867 , 0.99482704, 0.95148077, 0.2624107 , 0.99053038,
       0.93964157, 0.99760532, 0.99425381, 0.95744131, 0.93639833]), 'test_pearson_p': array([-1.73688290e-11, -2.36114714e-25, -8.76029871e-14, -1.95297237e-01,
       -3.27144649e-22, -1.13154847e-12, -2.31925999e-29, -8.30888671e-25,
       -1.87420995e-14, -6.06476967e-12]), 'test_spearman_r': array([0.75226536, 0.98836626, 0.90222222, 0.78454177, 0.92528639,
       0.95107788, 0.98273211, 0.96614233, 0.91515572, 0.97845332]), 'test_spearman_p': array([-9.33123215e-06, -3.82463745e-21, -3.03579597e-10, -2.09633640e-06,
       -1.35834640e-11, -9.65400325e-14, -4.24939920e-19, -1.25994483e-15,
       -5.92311113e-11, -2.92864431e-17]), 'test_kendall_r': array([0.70878358, 0.94264586, 0.77846154, 0.71913923, 0.81972362,
       0.85760158, 0.91217366, 0.87963382, 0.77709351, 0.90301508]), 'test_kendall_p': array([-3.96170661e-07, -1.96279004e-11, -1.67268944e-10, -2.77414734e-07,
       -4.50549884e-09, -9.87295047e-10, -6.76014225e-11, -3.28073037e-10,
       -3.06294247e-08, -2.80329637e-10]), 'test_rmse': array([ -27.710981  ,  -25.77712535,  -52.15013515, -153.6062218 ,
         -8.73629907,  -23.58360695,  -14.10312418,  -12.86586028,
        -22.6192854 ,  -22.15670902]), 'test_mae': array([-12.45500207,  -9.74415157, -19.68575918, -41.24876331,
        -5.89426529,  -8.43171143,  -8.50270648,  -7.54963867,
       -11.79718973, -10.80041739]), 'test_r2': array([ 0.84780503,  0.98623944,  0.9022067 , -3.67673993,  0.98012928,
        0.86876168,  0.99172143,  0.98287727,  0.90476729,  0.87456167]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0140521706556793, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 301, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([4.47920156, 4.64192986, 4.54074287, 4.44224358, 4.71643066,
       4.51405072, 4.4104619 , 4.51762581, 4.54084635, 4.60404801]), 'score_time': array([0.12411284, 0.12315726, 0.16364574, 0.1266129 , 0.1200037 ,
       0.12880421, 0.18624711, 0.1209991 , 0.12881255, 0.12191629]), 'test_pearson_r': array([0.99049756, 0.94720186, 0.99841189, 0.67231246, 0.98916642,
       0.95345711, 0.98745942, 0.99006818, 0.96334788, 0.98610068]), 'test_pearson_p': array([-3.40956249e-22, -2.36227157e-13, -1.68548748e-31, -1.68515187e-04,
       -1.63302496e-21, -5.37330478e-14, -9.37040097e-21, -5.78192986e-22,
       -3.21660866e-15, -1.96509732e-19]), 'test_spearman_r': array([0.86316212, 0.85171358, 0.88506928, 0.75145538, 0.91484273,
       0.92989062, 0.95228335, 0.98990949, 0.90290598, 0.96940559]), 'test_spearman_p': array([-1.39043425e-08, -3.42765023e-08, -1.92745280e-09, -9.65945076e-06,
       -6.18048920e-11, -6.48645717e-12, -7.20109970e-14, -6.98770063e-22,
       -2.80074848e-10, -1.57936632e-15]), 'test_kendall_r': array([0.70828988, 0.73837509, 0.77279845, 0.7165422 , 0.79321365,
       0.81173226, 0.8346303 , 0.93354945, 0.80923077, 0.88108315]), 'test_kendall_p': array([-5.27621771e-07, -1.64332704e-07, -3.49972832e-08, -3.78607686e-07,
       -1.44953027e-08, -6.64153532e-09, -2.59182200e-09, -2.71222902e-11,
       -1.30362573e-11, -7.87690784e-10]), 'test_rmse': array([ -13.03878694,  -54.36247743,   -7.81162081, -152.2935546 ,
        -26.20205867,  -17.24807726,  -37.17964841,  -11.93419155,
        -19.78447498,  -16.67453136]), 'test_mae': array([ -8.36230838, -20.68098412,  -5.51946273, -45.68495124,
       -12.57767174,  -9.79293437, -18.12632534,  -7.8874657 ,
       -12.2804086 , -11.2042883 ]), 'test_r2': array([0.96224224, 0.89335833, 0.99016449, 0.13241567, 0.97169677,
       0.85484427, 0.95238671, 0.97447873, 0.92452338, 0.95520855]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0030175755341803503, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1044, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.55562401, 1.21650314, 1.38924742, 1.17494202, 1.25277853,
       1.35636377, 1.58949709, 1.86435461, 1.92806673, 1.63434482]), 'score_time': array([0.13318419, 0.13992739, 0.18152547, 0.18609881, 0.18431187,
       0.15640783, 0.13233471, 0.19085479, 0.13595247, 0.21869159]), 'test_pearson_r': array([0.99445637, 0.98198955, 0.99721615, 0.99693714, 0.74542566,
       0.22683186, 0.99628575, 0.98414643, 0.98001067, 0.97713731]), 'test_pearson_p': array([-5.40707658e-25, -7.01618320e-19, -1.41018189e-28, -4.43037411e-28,
       -1.24444947e-05, -2.65133712e-01, -4.46609272e-27, -1.53504369e-19,
       -2.42652483e-18, -5.75400562e-17]), 'test_spearman_r': array([0.98221029, 0.94817857, 0.97931272, 0.96631904, 0.93109935,
       0.66564103, 0.97998325, 0.98939814, 0.88177087, 0.84532519]), 'test_spearman_p': array([-6.05790507e-19, -1.89767716e-13, -3.65001219e-18, -1.18433566e-15,
       -5.29811612e-12, -2.06326901e-04, -2.46642176e-18, -1.26132064e-21,
       -2.65941584e-09, -1.04904766e-07]), 'test_kendall_r': array([0.93973189, 0.84080471, 0.90601032, 0.87519364, 0.84437697,
       0.61230769, 0.90094606, 0.94136251, 0.7613855 , 0.82943608]), 'test_kendall_p': array([-1.99200994e-11, -1.97723013e-09, -9.06403612e-11, -3.81728436e-10,
       -1.53302077e-09, -2.94451338e-06, -1.35049159e-10, -1.74460726e-11,
       -6.87820858e-08, -6.82422400e-09]), 'test_rmse': array([  -8.09194479,  -29.81385816,  -30.37085511,  -13.83066723,
        -52.8769447 , -156.25774909,  -10.16009708,  -14.53733856,
        -12.31021302,  -15.03234551]), 'test_mae': array([ -5.49937854, -13.84486385, -15.03734013,  -7.70684826,
       -16.7273122 , -40.84956373,  -6.53899699,  -8.83802418,
        -6.73525726,  -6.65246244]), 'test_r2': array([ 0.98769982,  0.96327756,  0.98210097,  0.99269012,  0.28568019,
       -6.3315992 ,  0.98798935,  0.96515452,  0.95806921,  0.94843335]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03191616669721422, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 186, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.78667092, 2.13709593, 1.80433083, 1.88232017, 2.34830737,
       1.84427643, 2.21617675, 3.0255692 , 2.21523881, 2.3650291 ]), 'score_time': array([0.14269447, 0.13474441, 0.14460993, 0.12965155, 0.1339438 ,
       0.13555741, 0.14345145, 0.12394977, 0.14083195, 0.13448977]), 'test_pearson_r': array([0.99295444, 0.97965191, 0.01097193, 0.99805932, 0.99482026,
       0.93134449, 0.98287391, 0.77938217, 0.99716377, 0.99563845]), 'test_pearson_p': array([-9.53022231e-24, -2.99841758e-18, -9.57575711e-01, -1.86571738e-30,
       -2.39848284e-25, -5.08280156e-12, -3.85185235e-19, -2.70546288e-06,
       -1.76320555e-28, -3.34899074e-25]), 'test_spearman_r': array([0.92372158, 0.97315782, 0.7585269 , 0.97196581, 0.93828006,
       0.94610813, 0.86320109, 0.86168577, 0.96802874, 0.98288134]), 'test_spearman_p': array([-1.72769587e-11, -8.05293957e-17, -7.11121184e-06, -1.34814543e-16,
       -1.46838602e-12, -3.00411337e-13, -1.38598083e-08, -1.56897645e-08,
       -6.39445185e-16, -2.12354622e-18]), 'test_kendall_r': array([0.88408143, 0.88135698, 0.69733092, 0.88307692, 0.81972362,
       0.86379365, 0.7808642 , 0.78274361, 0.87519364, 0.91152047]), 'test_kendall_p': array([-2.81801839e-10, -2.87422002e-10, -9.28521604e-07, -5.02648846e-15,
       -4.50549884e-09, -7.43346356e-10, -2.41600375e-08, -2.14457728e-08,
       -3.81728436e-10, -1.79830650e-10]), 'test_rmse': array([  -9.95648618,  -16.75856831, -217.91215147,  -20.49014901,
        -16.72916889,  -23.98711408,  -11.2154883 ,  -53.51782523,
        -13.12023698,  -17.90533844]), 'test_mae': array([ -5.3836202 ,  -8.42494614, -64.93569397,  -8.4801675 ,
       -10.21991996,  -8.52272772,  -7.10057759, -18.475431  ,
        -7.9681415 , -12.00227553]), 'test_r2': array([  0.97951264,   0.95943554, -26.14183083,   0.98646282,
         0.98908872,   0.85103466,   0.96169114,   0.35583047,
         0.9936756 ,   0.98890796]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09125129433504907, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 963, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([3.29550099, 2.53009319, 2.64129329, 2.60767961, 2.5390451 ,
       2.32283902, 2.96921229, 3.65283608, 3.51907063, 2.70530605]), 'score_time': array([0.125525  , 0.13964176, 0.18265367, 0.14029765, 0.19818878,
       0.13704324, 0.13089824, 0.12042761, 0.20884252, 0.20203185]), 'test_pearson_r': array([0.99110124, 0.98570571, 0.99250448, 0.99377402, 0.44795595,
       0.57135612, 0.99545321, 0.9171582 , 0.98947622, 0.99634905]), 'test_pearson_p': array([-1.55585788e-22, -4.46689874e-20, -1.99865438e-23, -2.16979732e-24,
       -2.17374459e-02, -2.29711467e-03, -5.03610085e-26, -4.49421941e-11,
       -1.15471319e-21, -4.34708834e-26]), 'test_spearman_r': array([0.8931881 , 0.88353003, 0.95485636, 0.97965466, 0.83589744,
       0.88896504, 0.98717304, 0.88972475, 0.988887  , 0.93902675]), 'test_spearman_p': array([-8.35577032e-10, -2.24256801e-09, -3.75238647e-14, -2.99360191e-18,
       -1.06115192e-07, -1.30105860e-09, -1.22686319e-20, -1.20302807e-09,
       -2.21352154e-21, -3.78175670e-12]), 'test_kendall_r': array([0.83543999, 0.79443681, 0.83641975, 0.90601032, 0.74769231,
       0.75232559, 0.93354945, 0.78274361, 0.93066366, 0.87813144]), 'test_kendall_p': array([-2.85426487e-09, -1.43798856e-08, -2.28458786e-09, -9.06403612e-11,
       -1.59717434e-09, -8.22295479e-08, -2.71222902e-11, -2.14457728e-08,
       -2.77265727e-11, -8.04523480e-10]), 'test_rmse': array([ -11.41196983,  -11.2644071 ,  -22.44417537,   -9.5109293 ,
       -156.73730809,  -52.42469039,  -22.42294345,  -26.95380981,
        -11.22505945,  -14.88871919]), 'test_mae': array([ -5.92725656,  -6.28485786, -12.83290249,  -5.59046566,
       -37.63546165, -17.38996709, -11.3034378 , -11.80013763,
        -7.69640256,  -8.35518369]), 'test_r2': array([ 0.9751166 ,  0.97056424,  0.98189673,  0.98057514, -1.37158968,
       -1.58940861,  0.98950867,  0.83710927,  0.97039169,  0.99118596]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05913781436124809, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2125, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.3780055 , 0.38137007, 0.64593959, 0.4522934 , 0.39294791,
       0.40832758, 0.72138429, 0.45796967, 0.68605494, 0.55955982]), 'score_time': array([0.1359899 , 0.15196228, 0.14744067, 0.13753915, 0.1701169 ,
       0.14482117, 0.1427629 , 0.16671586, 0.21921849, 0.14598989]), 'test_pearson_r': array([0.97194074, 0.95663934, 0.99034352, 0.97279726, 0.94715967,
       0.99327786, 0.97479247, 0.99854992, 0.92454487, 0.78748537]), 'test_pearson_p': array([-1.36250742e-16, -2.33511124e-14, -4.13203943e-22, -9.43385422e-17,
       -2.38450031e-13, -5.43146082e-24, -3.82076028e-17, -5.66476974e-32,
       -1.52331380e-11, -2.99070758e-06]), 'test_spearman_r': array([0.88062268, 0.96476246, 0.99195907, 0.92591993, 0.87812439,
       0.90510582, 0.93363005, 0.99025154, 0.88653122, 0.77589578]), 'test_spearman_p': array([-2.96815110e-09, -2.02043616e-15, -4.63006335e-23, -1.23047771e-11,
       -3.75504120e-09, -2.15228527e-10, -3.42647295e-12, -4.62768176e-22,
       -1.66593275e-09, -5.17810259e-06]), 'test_kendall_r': array([0.79072153, 0.88856193, 0.95666093, 0.8142571 , 0.75274438,
       0.76638861, 0.82844785, 0.94591434, 0.72361644, 0.68237704]), 'test_kendall_p': array([-2.15309273e-08, -2.41876932e-10, -9.19589772e-12, -6.49407000e-09,
       -9.09211149e-08, -5.43991849e-08, -3.37150235e-09, -1.48217457e-11,
       -2.68950694e-07, -2.05029495e-06]), 'test_rmse': array([ -14.86766146,  -24.34707911,  -12.28539846,  -12.50352484,
        -58.2388031 ,   -9.18658801,  -13.10158301,   -9.58233189,
        -28.78762245, -151.82347125]), 'test_mae': array([-10.00718451, -12.20019582,  -6.73360492,  -6.51725095,
       -23.67050681,  -6.70963823,  -7.51934826,  -6.72525331,
       -17.63270647, -49.61596197]), 'test_r2': array([0.9386681 , 0.91039607, 0.97339112, 0.90705392, 0.89056882,
       0.9805424 , 0.94355402, 0.99638266, 0.8448779 , 0.53729504]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06678639058063013, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.53257918, 1.62686563, 1.50280023, 2.42149305, 1.99553847,
       1.90359998, 2.40118051, 1.61962819, 2.13742232, 1.99873519]), 'score_time': array([0.13968158, 0.14460397, 0.20277524, 0.15735722, 0.13680005,
       0.13613939, 0.1587019 , 0.13226509, 0.13240981, 0.13512254]), 'test_pearson_r': array([0.99418453, 0.99811754, 0.88402446, 0.30825671, 0.80965667,
       0.97162571, 0.99114939, 0.99361047, 0.96831783, 0.99808994]), 'test_pearson_p': array([-9.59077531e-25, -1.29491151e-30, -2.13659752e-09, -1.25500231e-01,
       -5.44772043e-07, -1.55532877e-16, -1.45814275e-22, -2.95932337e-24,
       -5.74262577e-16, -2.54815404e-29]), 'test_spearman_r': array([0.79157484, 0.90675824, 0.87500128, 0.78009576, 0.92460251,
       0.88440498, 0.99178228, 0.9881954 , 0.9615319 , 0.97769231]), 'test_spearman_p': array([-1.46407606e-06, -1.75852159e-10, -5.00272444e-09, -2.61273254e-06,
       -1.50986433e-11, -2.05815685e-09, -6.00535919e-23, -4.55189742e-21,
       -5.69308806e-15, -4.34920782e-17]), 'test_kendall_r': array([0.74652335, 0.82664123, 0.74847969, 0.78703704, 0.83821363,
       0.78086792, 0.95345753, 0.93809848, 0.86286697, 0.91333333]), 'test_kendall_p': array([-1.14281301e-07, -3.82065062e-09, -1.01939396e-07, -1.87317729e-08,
       -2.01294843e-09, -2.41594578e-08, -1.19308029e-11, -2.29081188e-11,
       -6.69494483e-10, -3.83758895e-16]), 'test_rmse': array([ -17.26123981,  -13.54357342,  -26.09171784, -156.5034163 ,
        -51.52201117,  -17.78469965,  -11.37694893,  -12.75367306,
        -21.44973499,  -20.94074971]), 'test_mae': array([ -8.49995352,  -8.00780391, -10.46752613, -34.69526565,
       -16.12462746, -10.34824699,  -7.32496931,  -6.84979193,
       -11.98233354,  -8.65957428]), 'test_r2': array([ 0.98635282,  0.99607287,  0.72610777, -4.44688703,  0.55021488,
        0.94188067,  0.98046754,  0.97828194,  0.92909974,  0.98617102]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05225400716467375, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 345, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_3': {'cluster size (%)': 28, 6: {'test_mad': 74.12939575905423, 'test_ystd': 83.65967404707361, 'test_mae': 193.7710264378378, 'test_rmse': 319.0242551050228, 'test_r2': -13.541696300716902, 'test_pearson_r': array([-0.32213203]), 'test_pearson_p_value': array([0.00544773]), 'test_spearman_r': -0.5564409806620089, 'test_spearman_p_value': 3.1948162831628303e-07, 'test_kendall_r': -0.42590256575665236, 'test_kendall_p_value': 1.3426643231228538e-07, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 923, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 74.12939575905423, 'test_ystd': 83.65967404707361, 'test_mae': 193.53693768775628, 'test_rmse': 318.9128888332572, 'test_r2': -13.531545524947356, 'test_pearson_r': array([-0.31970236]), 'test_pearson_p_value': array([0.00583072]), 'test_spearman_r': -0.5784722068760247, 'test_spearman_p_value': 8.319694725006393e-08, 'test_kendall_r': -0.45053448955941267, 'test_kendall_p_value': 2.6178761231551513e-08, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06991692945397764, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 25, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 586, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 74.12939575905423, 'test_ystd': 83.65967404707361, 'test_mae': 193.17472154173134, 'test_rmse': 318.20246021180964, 'test_r2': -13.46687503049149, 'test_pearson_r': array([-0.32197477]), 'test_pearson_p_value': array([0.00547183]), 'test_spearman_r': -0.61395902463024, 'test_spearman_p_value': 7.637792119366739e-09, 'test_kendall_r': -0.5060460782545775, 'test_kendall_p_value': 8.021726757841651e-10, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04516697364425213, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 152, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 74.12939575905423, 'test_ystd': 83.65967404707361, 'test_mae': 193.5153333483657, 'test_rmse': 318.93998797051074, 'test_r2': -13.534015221792032, 'test_pearson_r': array([-0.32181665]), 'test_pearson_p_value': array([0.00549615]), 'test_spearman_r': -0.5648799139879698, 'test_spearman_p_value': 1.9303038061327393e-07, 'test_kendall_r': -0.4488538422946301, 'test_kendall_p_value': 2.5312312228019597e-08, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02988730839856647, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 720, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 74.12939575905423, 'test_ystd': 83.65967404707361, 'test_mae': 193.3804272105596, 'test_rmse': 318.70974189536986, 'test_r2': -13.5130382845207, 'test_pearson_r': array([-0.32184098]), 'test_pearson_p_value': array([0.0054924]), 'test_spearman_r': -0.6030488308490072, 'test_spearman_p_value': 1.641878951462536e-08, 'test_kendall_r': -0.4965172242329741, 'test_kendall_p_value': 1.1097830872599727e-09, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03974753100623968, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 352, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 232, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 74.12939575905423, 'test_ystd': 83.65967404707361, 'test_mae': 193.1447054983165, 'test_rmse': 317.96637176723596, 'test_r2': -13.445415768482428, 'test_pearson_r': array([-0.32177494]), 'test_pearson_p_value': array([0.00550258]), 'test_spearman_r': -0.6185327022132858, 'test_spearman_p_value': 5.493290380246522e-09, 'test_kendall_r': -0.47859769731875185, 'test_kendall_p_value': 7.339197515594203e-09, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0788093507903413, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 81, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 74.12939575905423, 'test_ystd': 83.65967404707361, 'test_mae': 193.5338614897532, 'test_rmse': 318.94422714360775, 'test_r2': -13.53440158046828, 'test_pearson_r': array([-0.32189996]), 'test_pearson_p_value': array([0.00548332]), 'test_spearman_r': -0.6018053597167663, 'test_spearman_p_value': 1.788271149804237e-08, 'test_kendall_r': -0.49000281127306733, 'test_kendall_p_value': 1.5368547955731173e-09, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.01598695091362954, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_3': {'cluster size (%)': 25, 6: {'fit_time': array([1.48898864, 1.37927675, 1.3445828 , 1.39253497]), 'score_time': array([0.13203621, 0.14575624, 0.13793254, 0.14670849]), 'test_pearson_r': array([0.96549251, 0.74062833, 0.98950376, 0.96218861]), 'test_pearson_p': array([-1.59930438e-38, -1.76362520e-12, -1.19677227e-54, -1.00335798e-36]), 'test_spearman_r': array([0.85806102, 0.91495198, 0.9355428 , 0.93993453]), 'test_spearman_p': array([-6.78043598e-20, -1.62275914e-26, -3.58817906e-30, -1.22680643e-30]), 'test_kendall_r': array([0.77035038, 0.84063641, 0.81935569, 0.81544637]), 'test_kendall_p': array([-1.65932785e-19, -4.79568100e-23, -8.38788710e-22, -2.36879083e-21]), 'test_rmse': array([-40.15048263, -97.05161993, -17.69393431, -21.07925478]), 'test_mae': array([-14.35530885, -20.91247351,  -8.27831365, -11.40111953]), 'test_r2': array([0.93040405, 0.33075957, 0.97691906, 0.92311914]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0140521706556793, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 301, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([4.4615283 , 4.58849096, 4.01548457, 4.19307017]), 'score_time': array([0.12891674, 0.13408232, 0.19050241, 0.12858057]), 'test_pearson_r': array([0.89110996, 0.80990504, 0.97720078, 0.96153906]), 'test_pearson_p': array([-2.69528079e-23, -3.10745487e-16, -4.07685974e-44, -1.68498854e-36]), 'test_spearman_r': array([0.79357715, 0.84956173, 0.94335383, 0.93820985]), 'test_spearman_p': array([-3.19273609e-15, -3.70055968e-19, -6.90726342e-32, -2.87538609e-30]), 'test_kendall_r': array([0.63601315, 0.75587911, 0.81432706, 0.81832122]), 'test_kendall_p': array([-1.32301199e-13, -8.94444739e-19, -1.44113901e-21, -1.61635634e-21]), 'test_rmse': array([-56.6251066 , -98.91139071, -28.80357761, -22.05534062]), 'test_mae': array([-23.86602552, -24.90883467, -14.20133811, -13.15937583]), 'test_r2': array([0.77637726, 0.56072583, 0.94064247, 0.91505395]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0030175755341803503, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1044, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.10951304, 1.02643871, 0.99576783, 1.02072716]), 'score_time': array([0.13213706, 0.13377786, 0.12514257, 0.12744546]), 'test_pearson_r': array([0.98729075, 0.97105043, 0.52855785, 0.97460815]), 'test_pearson_p': array([-4.79670006e-52, -6.88025703e-41, -6.01865949e-06, -5.25093724e-42]), 'test_spearman_r': array([0.95990035, 0.95191573, 0.85897886, 0.94368293]), 'test_spearman_p': array([-1.66745001e-36, -4.50689608e-34, -5.60814416e-20, -1.76021723e-31]), 'test_kendall_r': array([0.87108175, 0.84956852, 0.79141937, 0.85815995]), 'test_kendall_p': array([-1.67047974e-24, -1.91239462e-23, -1.50611096e-20, -2.26491319e-23]), 'test_rmse': array([-25.60437006, -36.1233766 , -99.33472407, -16.44105693]), 'test_mae': array([-12.35162226, -12.54026904, -21.06278321,  -9.31646507]), 'test_r2': array([ 0.97170624,  0.9415904 , -0.86921822,  0.94910633]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03191616669721422, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 186, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.51717663, 1.49903417, 1.5655992 , 1.46853805]), 'score_time': array([0.1165843 , 0.11886954, 0.11910868, 0.11993217]), 'test_pearson_r': array([0.96728222, 0.70157205, 0.96431227, 0.97134517]), 'test_pearson_p': array([-3.06921359e-39, -7.53454939e-11, -4.53215186e-38, -2.12318665e-40]), 'test_spearman_r': array([0.94244123, 0.86806102, 0.94310384, 0.91600747]), 'test_spearman_p': array([-1.12700804e-31, -7.95075629e-21, -7.90490969e-32, -2.79625162e-26]), 'test_kendall_r': array([0.84553734, 0.79527948, 0.85838782, 0.80874357]), 'test_kendall_p': array([-4.44932691e-23, -8.91988411e-21, -7.15779007e-24, -3.98250625e-21]), 'test_rmse': array([ -18.54827334, -140.60945394,  -17.97157136,  -37.36558753]), 'test_mae': array([ -9.70259918, -33.76622778,  -7.82566064, -15.63785696]), 'test_r2': array([0.93313178, 0.15947921, 0.92288944, 0.94000378]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09125129433504907, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 963, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.01177788, 1.89293075, 2.02241278, 1.92503905]), 'score_time': array([0.1210537 , 0.12102365, 0.12200809, 0.12052536]), 'test_pearson_r': array([0.99345653, 0.59100737, 0.96561671, 0.98251451]), 'test_pearson_p': array([-4.35398772e-61, -2.18263675e-07, -1.43026071e-38, -5.59929521e-47]), 'test_spearman_r': array([0.92663683, 0.91394853, 0.82318995, 0.94525598]), 'test_spearman_p': array([-1.84628295e-28, -2.31209479e-26, -3.93184303e-17, -7.48782634e-32]), 'test_kendall_r': array([0.83458805, 0.83128763, 0.74819181, 0.84819941]), 'test_kendall_p': array([-1.28034313e-22, -1.39955123e-22, -1.82113022e-18, -4.55522042e-23]), 'test_rmse': array([-14.38812035, -99.00504779, -39.43022666, -20.94918234]), 'test_mae': array([ -7.40168052, -19.67726725, -15.7198965 , -10.77815649]), 'test_r2': array([ 0.98545231, -0.32498537,  0.9323113 ,  0.96395429]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05913781436124809, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2125, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.31207275, 0.34470391, 0.32344604, 0.32301068]), 'score_time': array([0.11576748, 0.12382698, 0.11625504, 0.11729527]), 'test_pearson_r': array([0.94527728, 0.9492499 , 0.99642518, 0.79175724]), 'test_pearson_p': array([-2.39549219e-32, -2.36877770e-33, -2.44071073e-69, -6.74171679e-15]), 'test_spearman_r': array([0.93433784, 0.90342183, 0.9649263 , 0.85724439]), 'test_spearman_p': array([-6.31351282e-30, -7.45082864e-25, -2.64779798e-38, -1.56964767e-19]), 'test_kendall_r': array([0.81192996, 0.74584002, 0.86018294, 0.72297423]), 'test_kendall_p': array([-2.08093134e-21, -2.14472904e-18, -6.31591589e-24, -4.91263125e-17]), 'test_rmse': array([ -24.6133791 ,  -40.00676727,   -9.96435825, -102.3193497 ]), 'test_mae': array([-14.4072366 , -15.16022441,  -6.77209773, -32.8899206 ]), 'test_r2': array([0.8853766 , 0.89639942, 0.99146888, 0.56753665]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06678639058063013, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.29797816, 1.19796634, 1.20279932, 1.24967933]), 'score_time': array([0.12057137, 0.11993361, 0.12019181, 0.12102842]), 'test_pearson_r': array([0.98770639, 0.47594917, 0.9817497 , 0.9895182 ]), 'test_pearson_p': array([-1.69333708e-52, -6.14528861e-05, -3.93858983e-47, -8.00066813e-54]), 'test_spearman_r': array([0.79804955, 0.87163012, 0.94490413, 0.97455212]), 'test_spearman_p': array([-1.72285541e-15, -3.54523790e-21, -2.95055654e-32, -5.61770058e-42]), 'test_kendall_r': array([0.72957204, 0.79450848, 0.85563338, 0.8775766 ]), 'test_kendall_p': array([-1.29411500e-17, -9.89434005e-21, -1.06288889e-23, -1.33715486e-24]), 'test_rmse': array([ -33.82813218, -106.03341497,  -15.62465368,  -21.03374348]), 'test_mae': array([-14.45054614, -25.77885036,  -8.84315283, -11.12840059]), 'test_r2': array([ 0.9603822 , -1.43860591,  0.96363521,  0.97305733]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05225400716467375, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 345, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'overall data shape': {'targets_shape': (259, 1), 'training_features_shape': (259, 522)}}
Trimer_scaler
Filename: (ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM4 ECFP6_Count_512bit cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM4 ECFP6_Count_512bit cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_predictions.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM4 ECFP6_Count_512bit cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_ClusterTruth.json
Done Saving scores!
------------------------------ 
Plotted Comparitive Cluster Scores!
______________________________ 
Plotted Parity Plots!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c014n03>
Subject: Job 294626: <XGBR_Rg1 (nm)_ECFP_Trimer_KM4 ECFP6_Count_512bit cluster_20250311> in cluster <Hazel> Done

Job <XGBR_Rg1 (nm)_ECFP_Trimer_KM4 ECFP6_Count_512bit cluster_20250311> was submitted from host <c040n04> by user <sdehgha2> in cluster <Hazel> at Tue Mar 11 18:16:47 2025
Job was executed on host(s) <6*c014n03>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Tue Mar 11 18:17:54 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Tue Mar 11 18:17:54 2025
Terminated at Wed Mar 12 06:27:17 2025
Results reported at Wed Mar 12 06:27:17 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input



#BSUB -n 6
#BSUB -W 72:05
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "XGBR_Rg1 (nm)_ECFP_Trimer_KM4 ECFP6_Count_512bit cluster_20250311"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_ECFP_Trimer_3_count_KM4 ECFP6_Count_512bit cluster_20250311.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_ECFP_Trimer_3_count_KM4 ECFP6_Count_512bit cluster_20250311.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../make_ood_prediction.py --target_features "Rg1 (nm)"                                       --representation "ECFP"                                       --regressor_type "XGBR"                                       --radius "3"                                       --vector "count"                                       --oligomer_representation "Trimer"                                       --numerical_feats 'Mw (g/mol)' 'PDI' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" 'solvent dP' 'solvent dD' 'solvent dH'                                       --clustering_method "KM4 ECFP6_Count_512bit cluster" 



------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   162884.59 sec.
    Max Memory :                                 6 GB
    Average Memory :                             5.15 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               10.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   43764 sec.
    Turnaround time :                            43830 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_ECFP_Trimer_3_count_KM4 ECFP6_Count_512bit cluster_20250311.err> for stderr output of this job.

