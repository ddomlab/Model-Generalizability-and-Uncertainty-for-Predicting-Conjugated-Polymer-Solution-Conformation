


-------------------------------------------------- 
OOD TEST ON ionic-EG



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030130300809799505), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 961), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 156), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06831042354489458), ('regressor__regressor__max_depth', 8497), ('regressor__regressor__n_estimators', 477), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022212173794614373), ('regressor__regressor__max_depth', 3371), ('regressor__regressor__n_estimators', 143), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03774462230484414), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 178), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05354054869805472), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06866344794309186), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 192), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 184), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014802991064959354), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1229), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05082576163662753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05920658006461146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03427544215886672), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0379946260355663), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1017), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021632256599230515), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1535), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006196355162376137), ('regressor__regressor__max_depth', 810), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05972069569421927), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 177), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.051051654372960324), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054381382632834915), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 624), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06048574530226919), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 240), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 344), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022420809114951697), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08211955999025321), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 63), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.076634331492369), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 1382), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07075934075038105), ('regressor__regressor__max_depth', 8463), ('regressor__regressor__n_estimators', 349), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07672681553662733), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 398), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06165697655748211), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002157166904588675), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1308), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06942094706700487), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00876824589538263), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 331), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05555582421232305), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 106), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.057791131040396466), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 99), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01108484726818982), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1329), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003733987964678198), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007822694349900915), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 538), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011195530108082438), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 271), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031061518378147693), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 252), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004346889544867211), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004564039856497446), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1607), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0565204721917438), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.028092495289451434), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06812955014673891), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03507372269231158), ('regressor__regressor__max_depth', 5007), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06163281946791306), ('regressor__regressor__max_depth', 8857), ('regressor__regressor__n_estimators', 949), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 830), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029313474843246806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1452), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.048094379354093816), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06530354928280767), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 173), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0017200467734173148), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0727880237480246), ('regressor__regressor__max_depth', 502), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008335258720839973), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 364), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 112), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015039363284612632), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1911), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05992734954599357), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 681), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0064346824732958744), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 530), ('regressor__regressor__n_jobs', -2)])


{'CO_ionic-EG': {'cluster size (%)': 6, 6: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7711857913640059, 'test_rmse': 0.8621372056317725, 'test_r2': 0.10154301322413206, 'test_pearson_r': array([0.49221583]), 'test_pearson_p_value': array([0.05277121]), 'test_spearman_r': 0.4592812613648528, 'test_spearman_p_value': 0.07351102811378721, 'test_kendall_r': 0.27230002934486813, 'test_kendall_p_value': 0.16210617956889972, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 156, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7600934228506602, 'test_rmse': 0.8497322095522883, 'test_r2': 0.12721218045468596, 'test_pearson_r': array([0.51061034]), 'test_pearson_p_value': array([0.04327345]), 'test_spearman_r': 0.47140749928867726, 'test_spearman_p_value': 0.06528601922464779, 'test_kendall_r': 0.290453364634526, 'test_kendall_p_value': 0.135902572360324, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 184, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7707388831880606, 'test_rmse': 0.86904779002736, 'test_r2': 0.08708186525981931, 'test_pearson_r': array([0.52039702]), 'test_pearson_p_value': array([0.03877514]), 'test_spearman_r': 0.47140749928867726, 'test_spearman_p_value': 0.06528601922464779, 'test_kendall_r': 0.290453364634526, 'test_kendall_p_value': 0.135902572360324, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.054381382632834915, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 624, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7680689005759276, 'test_rmse': 0.862669886355223, 'test_r2': 0.10043242765658489, 'test_pearson_r': array([0.51643806]), 'test_pearson_p_value': array([0.04055022]), 'test_spearman_r': 0.46837593980772113, 'test_spearman_p_value': 0.06727589403455614, 'test_kendall_r': 0.27230002934486813, 'test_kendall_p_value': 0.16210617956889972, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.076634331492369, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 17, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1382, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7195578414431607, 'test_rmse': 0.8099793050120996, 'test_r2': 0.20696498938623575, 'test_pearson_r': array([0.5534013]), 'test_pearson_p_value': array([0.02616374]), 'test_spearman_r': 0.47140749928867726, 'test_spearman_p_value': 0.06528601922464779, 'test_kendall_r': 0.290453364634526, 'test_kendall_p_value': 0.135902572360324, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05555582421232305, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 106, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7710269375350989, 'test_rmse': 0.8681737013083702, 'test_r2': 0.08891736878918544, 'test_pearson_r': array([0.51648756]), 'test_pearson_p_value': array([0.04052766]), 'test_spearman_r': 0.47140749928867726, 'test_spearman_p_value': 0.06528601922464779, 'test_kendall_r': 0.290453364634526, 'test_kendall_p_value': 0.135902572360324, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06812955014673891, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 715, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7745216137376345, 'test_rmse': 0.8718806987870125, 'test_r2': 0.08112033112869721, 'test_pearson_r': array([0.51502074]), 'test_pearson_p_value': array([0.04120033]), 'test_spearman_r': 0.47140749928867726, 'test_spearman_p_value': 0.06528601922464779, 'test_kendall_r': 0.290453364634526, 'test_kendall_p_value': 0.135902572360324, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06530354928280767, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 173, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_ionic-EG': {'cluster size (%)': 6, 6: {'fit_time': array([1.76723504, 1.7222054 , 1.73665452, 1.87687492, 1.73800015,
       1.80450535, 1.74055409, 1.99862957, 1.8700645 , 1.83766389,
       1.82109213, 1.83088923, 1.90800786, 1.77871871, 2.13382769,
       1.79033184]), 'score_time': array([0.12090063, 0.11951876, 0.12131023, 0.12140274, 0.12006736,
       0.12006545, 0.12250018, 0.13082838, 0.12008882, 0.125669  ,
       0.12985253, 0.14251208, 0.1232636 , 0.12663555, 0.12398052,
       0.11849856]), 'test_pearson_r': array([0.88561561, 0.99201513, 0.99569466, 0.93770395, 0.96634145,
       0.70066927, 0.99265409, 0.85140044, 0.97557342, 0.91330312,
       0.99146917, 0.96211477, 0.95413021, 0.94842342, 0.98617768,
       0.98246967]), 'test_pearson_p': array([-2.27129885e-06, -6.62876824e-15, -6.51742674e-17, -8.27252366e-08,
       -1.20052553e-09, -2.50074812e-03, -3.03577549e-14, -2.86947896e-05,
       -1.30434188e-10, -7.83004372e-07, -8.62050322e-14, -2.71709043e-09,
       -1.01447995e-08, -2.27032635e-08, -2.49231573e-12, -1.30260526e-11]), 'test_spearman_r': array([0.88235294, 0.97854096, 0.9889578 , 0.87352941, 0.91764706,
       0.71764706, 0.99411765, 0.81470588, 0.97647059, 0.87352941,
       0.98749107, 0.9256809 , 0.91096419, 0.89411765, 0.97790975,
       0.9506993 ]), 'test_spearman_p': array([-2.77727034e-06, -1.05833145e-11, -7.47344211e-14, -9.86965167e-06,
       -5.52865496e-07, -1.74753506e-03, -6.43399749e-15, -1.21309506e-04,
       -1.00615044e-10, -9.86965167e-06, -1.24331763e-12, -2.75438509e-07,
       -9.37408818e-07, -3.01130993e-06, -6.49300516e-11, -1.66548390e-08]), 'test_kendall_r': array([0.82352941, 0.90775526, 0.94817416, 0.78333333, 0.81666667,
       0.71666667, 0.96666667, 0.75      , 0.9       , 0.75      ,
       0.94561497, 0.82845913, 0.81172259, 0.76666667, 0.92440239,
       0.84519568]), 'test_kendall_p': array([-1.25716600e-07, -3.95736275e-07, -1.28042376e-07, -2.41022656e-06,
       -5.50848432e-07, -2.87624658e-05, -1.29045888e-11, -8.91848950e-06,
       -4.72556483e-09, -8.91848950e-06, -3.52984089e-07, -8.12917002e-06,
       -1.23329686e-05, -4.72451181e-06, -6.95749778e-07, -5.31661458e-06]), 'test_rmse': array([-0.28227498, -0.08786633, -0.07572808, -0.24443198, -0.12105623,
       -0.54058479, -0.08394281, -0.39136143, -0.15397529, -0.25051725,
       -0.0773884 , -0.17627519, -0.20542781, -0.1901674 , -0.09959023,
       -0.09304055]), 'test_mae': array([-0.11926446, -0.0519349 , -0.04579798, -0.13867301, -0.08972663,
       -0.18916243, -0.06255345, -0.15699975, -0.08158208, -0.10848588,
       -0.05040916, -0.1010544 , -0.09931312, -0.12404622, -0.05748015,
       -0.06873625]), 'test_r2': array([0.76312612, 0.97961316, 0.98961686, 0.86208922, 0.93156808,
       0.34364155, 0.97866186, 0.68914062, 0.9505299 , 0.81696296,
       0.98243762, 0.91813357, 0.90405332, 0.84738157, 0.96469045,
       0.96306745]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([3.2130878 , 4.0252161 , 3.21948814, 3.22037864, 3.49271441,
       3.4545579 , 3.24539757, 3.51791692, 3.17252278, 3.32070923,
       3.60132289, 3.64327097, 3.49972963, 3.18408799, 3.40510416,
       3.45854664]), 'score_time': array([0.12160659, 0.13008451, 0.11944818, 0.12133718, 0.12148023,
       0.1216352 , 0.1197474 , 0.12485194, 0.12082291, 0.12580323,
       0.1277101 , 0.12567472, 0.12322927, 0.15038848, 0.1276803 ,
       0.12504411]), 'test_pearson_r': array([0.98834617, 0.90460705, 0.98608291, 0.99296723, 0.65681915,
       0.93634602, 0.82980415, 0.99456733, 0.99167397, 0.97948501,
       0.92961449, 0.98953408, 0.99070777, 0.9753904 , 0.98387706,
       0.95457813]), 'test_pearson_p': array([-1.11776994e-13, -6.16021850e-07, -4.20357377e-13, -2.23971291e-14,
       -5.70730231e-03, -9.58528626e-08, -6.98281655e-05, -3.69175498e-15,
       -7.27603534e-14, -3.88464408e-11, -1.90249123e-07, -3.58776044e-13,
       -1.56517529e-13, -1.37364243e-10, -7.27789347e-12, -9.48269457e-09]), 'test_spearman_r': array([0.92581256, 0.87798913, 0.96560488, 0.97277436, 0.66176471,
       0.9256809 , 0.89411765, 0.99117647, 0.96394434, 0.98307606,
       0.89330414, 0.97647059, 0.99117647, 0.95588235, 0.98969179,
       0.94411765]), 'test_spearman_p': array([-9.95522543e-08, -3.60194970e-06, -3.50731305e-10, -2.76678019e-10,
       -5.23375330e-03, -2.75438509e-07, -3.01130993e-06, -1.09082915e-13,
       -1.93084048e-09, -1.01973765e-11, -3.16996646e-06, -1.00615044e-10,
       -1.09082915e-13, -7.76027446e-09, -3.22732424e-13, -3.93392920e-08]), 'test_kendall_r': array([0.80443352, 0.78967327, 0.88481339, 0.91214188, 0.68333333,
       0.84519568, 0.8       , 0.96666667, 0.87866878, 0.92887842,
       0.72803985, 0.93333333, 0.96666667, 0.85      , 0.95801702,
       0.83333333]), 'test_kendall_p': array([-6.99598360e-06, -1.02725536e-05, -8.77713838e-07, -8.99518934e-07,
       -8.26619198e-05, -5.31661458e-06, -1.17934846e-06, -1.29045888e-11,
       -2.22140114e-06, -5.65704076e-07, -8.82060896e-05, -3.55879882e-10,
       -1.29045888e-11, -1.02027025e-07, -2.70381998e-07, -2.44193725e-07]), 'test_rmse': array([-0.08000049, -0.28520517, -0.1003589 , -0.09546522, -0.53076827,
       -0.25064048, -0.40417635, -0.07738518, -0.06685105, -0.12703838,
       -0.22508588, -0.09993048, -0.07891238, -0.14363358, -0.11682788,
       -0.1621152 ]), 'test_mae': array([-0.0529346 , -0.1254295 , -0.07380889, -0.05268127, -0.18884963,
       -0.1113885 , -0.18850801, -0.0504538 , -0.05604831, -0.08887263,
       -0.15564863, -0.07106036, -0.04932995, -0.10202866, -0.05904095,
       -0.10948483]), 'test_r2': array([0.97589759, 0.8054638 , 0.97032467, 0.98077936, 0.2408648 ,
       0.86701241, 0.65964913, 0.98849456, 0.98027718, 0.94776898,
       0.86065464, 0.9783814 , 0.98073235, 0.94151984, 0.96521064,
       0.89539652]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05920658006461146, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([10.60335422, 10.53252912, 11.09770441, 10.02034378, 10.07705569,
        9.89135075,  9.93151355,  9.97330475, 10.17895126, 10.57329607,
       10.50351977, 12.22361517, 10.06158352, 10.52783155, 10.72447991,
       10.17008996]), 'score_time': array([0.12732387, 0.12975407, 0.18080401, 0.12685704, 0.12663078,
       0.12713814, 0.12806177, 0.12585497, 0.12558174, 0.1259768 ,
       0.13595057, 0.18564248, 0.13505125, 0.13524532, 0.12348247,
       0.21414733]), 'test_pearson_r': array([0.9232223 , 0.99681141, 0.92811997, 0.97820513, 0.98717045,
       0.98379443, 0.95613661, 0.98441788, 0.54423752, 0.95572344,
       0.9837905 , 0.97526   , 0.91680409, 0.98978866, 0.81657933,
       0.99450634]), 'test_pearson_p': array([-1.27793410e-07, -6.87712309e-18, -7.90854287e-08, -5.91371820e-11,
       -1.48304575e-12, -7.54140623e-12, -7.45763769e-09, -5.73989700e-12,
       -2.92935860e-02, -7.95468564e-09, -7.55413089e-12, -1.42491715e-10,
       -5.92359968e-07, -3.02169291e-13, -1.13581169e-04, -3.99114435e-15]), 'test_spearman_r': array([0.90619269, 0.99202962, 0.92892157, 0.93235294, 0.95      ,
       0.95294118, 0.94039761, 0.98160439, 0.67352941, 0.91685087,
       0.97277436, 0.96764706, 0.95217097, 0.94760793, 0.85588235,
       0.97938251]), 'test_spearman_p': array([-5.45823921e-07, -6.53940522e-15, -7.28779911e-08, -1.45175444e-07,
       -1.83461727e-08, -1.20965793e-08, -6.11516412e-08, -1.82090718e-11,
       -4.23273925e-03, -5.90106916e-07, -2.76678019e-10, -9.13289481e-10,
       -1.35244908e-08, -2.52830943e-08, -2.34491569e-05, -4.02148125e-11]), 'test_kendall_r': array([0.84871427, 0.952036  , 0.79411765, 0.85      , 0.83333333,
       0.83333333, 0.86193223, 0.91214188, 0.7       , 0.81172259,
       0.89540533, 0.88333333, 0.89540533, 0.84757938, 0.8       ,
       0.90759507]), 'test_kendall_p': array([-2.12480839e-06, -1.04704970e-07, -5.45407093e-07, -1.02027025e-07,
       -2.44193725e-07, -2.44193725e-07, -3.45008795e-06, -8.99518934e-07,
       -4.94106357e-05, -1.23329686e-05, -1.41912826e-06, -1.43717927e-08,
       -1.41912826e-06, -6.07683023e-06, -1.17934846e-06, -1.10296350e-06]), 'test_rmse': array([-0.25888289, -0.05910988, -0.25192854, -0.12541429, -0.11603107,
       -0.11664218, -0.16053838, -0.09770462, -0.54315812, -0.19499837,
       -0.11836553, -0.14320737, -0.28345954, -0.09686343, -0.37775763,
       -0.07130396]), 'test_mae': array([-0.12774968, -0.04296467, -0.13626813, -0.08291909, -0.07054789,
       -0.08478578, -0.0956648 , -0.06706257, -0.20394379, -0.12303349,
       -0.07392459, -0.08738963, -0.10466228, -0.06160884, -0.15299155,
       -0.05079618]), 'test_r2': array([ 0.84374615,  0.99222118,  0.8427275 ,  0.95141074,  0.97056725,
        0.96604033,  0.91160793,  0.96040981, -0.18486374,  0.88029314,
        0.96341244,  0.93667211,  0.83433876,  0.97827787,  0.63538352,
        0.98822805]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0022420809114951697, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.37445951, 1.80762506, 1.6988759 , 1.49255729, 1.5482688 ,
       1.49547648, 1.60183597, 1.70568371, 1.52546   , 1.50130272,
       2.073174  , 1.31697607, 2.13696289, 1.3390007 , 2.09974289,
       1.62586713]), 'score_time': array([0.12583232, 0.1252594 , 0.12821746, 0.13365555, 0.13141298,
       0.13049936, 0.12423897, 0.12494373, 0.13064194, 0.13016987,
       0.12710381, 0.12585354, 0.1390748 , 0.24182773, 0.13347602,
       0.12343454]), 'test_pearson_r': array([0.99416645, 0.99227687, 0.9822661 , 0.99752585, 0.40613645,
       0.98979228, 0.97888539, 0.98265542, 0.95694907, 0.72127664,
       0.99275351, 0.99547417, 0.83838012, 0.97074572, 0.97925246,
       0.97682182]), 'test_pearson_p': array([-6.33301475e-16, -5.16655717e-15, -2.56007337e-12, -1.51180254e-17,
       -1.18538835e-01, -3.01423044e-13, -4.74508688e-11, -1.20959741e-11,
       -6.55701783e-09, -1.61342031e-03, -2.76031605e-14, -1.03052674e-15,
       -4.98105122e-05, -4.55108440e-10, -4.20098254e-11, -9.06453504e-11]), 'test_spearman_r': array([0.99079755, 0.99264706, 0.96995726, 0.98965678, 0.59499264,
       0.96470588, 0.97058824, 0.96460597, 0.96241945, 0.81089058,
       0.98749107, 0.99411765, 0.86764706, 0.97058824, 0.92352941,
       0.97058824]), 'test_spearman_p': array([-1.91505662e-14, -3.57827382e-15, -1.28761744e-10, -3.30454141e-13,
       -1.50450364e-02, -1.66620775e-09, -4.72340113e-10, -1.69905595e-09,
       -2.56986058e-09, -1.38406226e-04, -1.24331763e-12, -6.43399749e-15,
       -1.33486813e-05, -4.72340113e-10, -3.34390001e-07, -4.72340113e-10]), 'test_kendall_r': array([0.94814815, 0.95588235, 0.87823476, 0.9575798 , 0.55462185,
       0.86666667, 0.9       , 0.86926796, 0.88614695, 0.74477639,
       0.94561497, 0.96666667, 0.75      , 0.88333333, 0.8       ,
       0.9       ]), 'test_kendall_p': array([-1.28065488e-07, -5.34739170e-12, -9.29113866e-07, -3.62993104e-07,
       -2.90607252e-03, -3.98309214e-08, -4.72556483e-09, -3.24532792e-06,
       -2.11823604e-06, -6.04438410e-05, -3.52984089e-07, -1.29045888e-11,
       -8.91848950e-06, -1.43717927e-08, -1.17934846e-06, -4.72556483e-09]), 'test_rmse': array([-0.0699877 , -0.05887332, -0.1217783 , -0.04777797, -0.75345777,
       -0.08974659, -0.17261497, -0.11687985, -0.16374127, -0.43654225,
       -0.07926776, -0.06382634, -0.30443521, -0.1863279 , -0.12355277,
       -0.15969693]), 'test_mae': array([-0.05669017, -0.03859845, -0.07804154, -0.03309118, -0.33002658,
       -0.06353472, -0.10392366, -0.07793633, -0.09497748, -0.19568205,
       -0.06273661, -0.04489683, -0.13954738, -0.09990712, -0.08054097,
       -0.09450817]), 'test_r2': array([ 0.98828446,  0.98451709,  0.9588998 ,  0.99223548, -1.35728805,
        0.97966123,  0.95214051,  0.96087511,  0.90717197,  0.37146543,
        0.97696519,  0.99075773,  0.65346214,  0.92608388,  0.95063738,
        0.9531975 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06942094706700487, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 306, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([0.92322183, 0.99744272, 1.17975116, 1.00906348, 0.92367411,
       1.12182832, 1.01316404, 1.02723742, 1.09548235, 1.24734092,
       1.22195959, 1.18630242, 1.13279295, 1.05092168, 1.26257658,
       1.21141434]), 'score_time': array([0.12631249, 0.12355185, 0.1242249 , 0.12841797, 0.1250639 ,
       0.14929461, 0.13006186, 0.12999296, 0.12581134, 0.13034177,
       0.123981  , 0.11982179, 0.11945629, 0.12128687, 0.12741661,
       0.12441635]), 'test_pearson_r': array([0.9754865 , 0.8772001 , 0.99435095, 0.98949393, 0.96614144,
       0.9773043 , 0.97416074, 0.65090978, 0.92662723, 0.96581762,
       0.99603632, 0.99357538, 0.87467516, 0.98955861, 0.81892491,
       0.99760808]), 'test_pearson_p': array([-2.84606381e-11, -3.77137644e-06, -4.97919530e-16, -3.68482043e-13,
       -1.25069755e-09, -7.83338982e-11, -1.92613033e-10, -6.31734277e-03,
       -2.52451295e-07, -1.33571675e-09, -4.07855669e-16, -1.19107163e-14,
       -9.28989194e-06, -3.52953764e-13, -1.04487125e-04, -1.19355086e-17]), 'test_spearman_r': array([0.93382353, 0.85821606, 0.99263804, 0.96983102, 0.98749107,
       0.96764706, 0.97058824, 0.75294118, 0.92058824, 0.93961708,
       0.97866104, 0.97941176, 0.84179567, 0.94334095, 0.85588235,
       0.99117647]), 'test_spearman_p': array([-4.32632699e-08, -1.04650126e-05, -3.61124062e-15, -5.63193822e-10,
       -1.24331763e-12, -9.13289481e-10, -4.72340113e-10, -7.61081073e-04,
       -4.32041043e-07, -6.68419289e-08, -5.10643005e-11, -3.98200979e-11,
       -4.33057196e-05, -4.32397330e-08, -2.34491569e-05, -1.09082915e-13]), 'test_kendall_r': array([0.83823529, 0.75207105, 0.95555556, 0.87866878, 0.94561497,
       0.88333333, 0.88333333, 0.73333333, 0.78333333, 0.84033613,
       0.91214188, 0.9       , 0.74477639, 0.84519568, 0.8       ,
       0.96666667]), 'test_kendall_p': array([-5.63431609e-08, -3.32635548e-05, -1.02150953e-07, -2.22140114e-06,
       -3.52984089e-07, -1.43717927e-08, -1.43717927e-08, -1.62687222e-05,
       -2.41022656e-06, -6.44110257e-06, -8.99518934e-07, -4.72556483e-09,
       -6.04438410e-05, -5.31661458e-06, -1.17934846e-06, -1.29045888e-11]), 'test_rmse': array([-0.13734351, -0.30620015, -0.06685049, -0.10297298, -0.1899322 ,
       -0.1139919 , -0.16538107, -0.54062694, -0.18164192, -0.20143804,
       -0.06513719, -0.06801006, -0.26161411, -0.09149059, -0.36089705,
       -0.04272205]), 'test_mae': array([-0.08429047, -0.14170929, -0.05455119, -0.07955661, -0.09346073,
       -0.07834949, -0.10606467, -0.17977871, -0.11954267, -0.09324773,
       -0.04617886, -0.05134562, -0.1329215 , -0.0726719 , -0.15480466,
       -0.0329845 ]), 'test_r2': array([0.94895163, 0.7344536 , 0.98770367, 0.96850495, 0.92632055,
       0.95377261, 0.9462025 , 0.15499787, 0.83097067, 0.926253  ,
       0.9917159 , 0.98688354, 0.71115795, 0.97750476, 0.6204597 ,
       0.99491191]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 252, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([1.15865111, 0.71282172, 0.73363185, 0.74535346, 0.8603313 ,
       0.85743952, 0.78987265, 0.7874341 , 0.81744623, 0.84719753,
       1.18754745, 0.77589822, 0.76972032, 0.88136768, 0.79204917,
       1.11639333]), 'score_time': array([0.11969304, 0.1231637 , 0.12011385, 0.12368083, 0.13134193,
       0.12217569, 0.13288903, 0.12020206, 0.12386131, 0.13413024,
       0.12103796, 0.12314534, 0.17929149, 0.13051844, 0.12457538,
       0.11930728]), 'test_pearson_r': array([0.80499959, 0.95418492, 0.9846897 , 0.99471774, 0.99559768,
       0.98692409, 0.96683927, 0.99824817, 0.97679954, 0.96752137,
       0.98598557, 0.99468827, 0.98950476, 0.86332718, 0.99020078,
       0.73607804]), 'test_pearson_p': array([-9.69838388e-05, -2.91308957e-09, -8.56323175e-13, -3.03423884e-15,
       -8.49347852e-16, -1.69314519e-12, -1.08304649e-09, -1.35137695e-18,
       -9.12516684e-11, -9.38103338e-10, -2.74373819e-12, -3.15449128e-15,
       -3.65843163e-13, -1.65148186e-05, -2.26717766e-13, -1.15018284e-03]), 'test_spearman_r': array([0.78378615, 0.92647059, 0.97177987, 0.99043441, 0.98454773,
       0.97352941, 0.97866104, 0.98529412, 0.93156758, 0.9757177 ,
       0.97647059, 0.99115475, 0.98674628, 0.92352941, 0.96755583,
       0.70787363]), 'test_spearman_p': array([-1.96906132e-04, -9.32988232e-08, -8.09524658e-11, -1.91599035e-13,
       -5.41517846e-12, -2.27689766e-10, -5.10643005e-11, -3.83671954e-12,
       -1.57059247e-07, -1.25183504e-10, -1.00615044e-10, -1.10969762e-13,
       -1.86016303e-12, -3.34390001e-07, -9.31243359e-10, -2.15429806e-03]), 'test_kendall_r': array([0.69149282, 0.79411765, 0.9037285 , 0.96235152, 0.92887842,
       0.91666667, 0.92887842, 0.91666667, 0.81172259, 0.91214188,
       0.91666667, 0.9536629 , 0.9412097 , 0.8       , 0.88614695,
       0.6778302 ]), 'test_kendall_p': array([-1.21595108e-04, -5.45407093e-07, -4.80224875e-07, -2.18526649e-07,
       -5.65704076e-07, -1.38948965e-09, -5.65704076e-07, -1.38948965e-09,
       -1.23329686e-05, -8.99518934e-07, -1.38948965e-09, -3.28081900e-07,
       -4.35438108e-07, -1.17934846e-06, -2.08474693e-06, -2.61704221e-04]), 'test_rmse': array([-0.29170502, -0.14833778, -0.12779878, -0.06864322, -0.06025637,
       -0.096778  , -0.1849573 , -0.04472681, -0.10776719, -0.18982619,
       -0.08719458, -0.07678615, -0.11315661, -0.3847719 , -0.10263143,
       -0.55062869]), 'test_mae': array([-0.12226355, -0.10728663, -0.0719785 , -0.04691439, -0.04272746,
       -0.06117038, -0.0908097 , -0.03365842, -0.07627946, -0.13878189,
       -0.06341595, -0.04752755, -0.07077484, -0.20428302, -0.08272437,
       -0.22200161]), 'test_r2': array([0.64247086, 0.88533537, 0.96828063, 0.98747851, 0.99043579,
       0.96733089, 0.93365937, 0.99493258, 0.95358451, 0.87256284,
       0.97108124, 0.98857986, 0.97006856, 0.71232798, 0.97093874,
       0.4341877 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.048094379354093816, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 115, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.9849112 , 3.52830386, 3.29394126, 3.48961926, 2.83331585,
       2.94402742, 2.86082888, 3.05608964, 3.98004317, 3.82099152,
       2.85509062, 2.91030645, 3.89781785, 4.37171865, 4.1318078 ,
       3.64899731]), 'score_time': array([0.13495898, 0.19907093, 0.16818261, 0.12211013, 0.11637235,
       0.12139916, 0.12092352, 0.12381196, 0.13799572, 0.12115717,
       0.13131952, 0.1714015 , 0.11514854, 0.12933183, 0.12353849,
       0.12366843]), 'test_pearson_r': array([0.99062553, 0.73366241, 0.98443916, 0.94169463, 0.91138495,
       0.54477404, 0.99310667, 0.92838744, 0.85385137, 0.96888566,
       0.9836152 , 0.99413074, 0.99073109, 0.97536598, 0.96525859,
       0.99638336]), 'test_pearson_p': array([-2.19932341e-14, -8.02164726e-04, -9.66482278e-13, -5.26061247e-08,
       -9.07874880e-07, -2.91028318e-02, -1.94746629e-14, -2.14005269e-07,
       -2.57165338e-05, -6.97214992e-10, -8.14111097e-12, -6.33460762e-15,
       -1.53798660e-13, -1.38312278e-10, -1.49411599e-09, -2.14953304e-16]), 'test_spearman_r': array([0.94297994, 0.73218894, 0.95950992, 0.90802085, 0.8903608 ,
       0.64017677, 0.99411765, 0.94411765, 0.79970632, 0.92941176,
       0.99410462, 0.98598457, 0.97941176, 0.9757177 , 0.94411765,
       0.96764706]), 'test_spearman_p': array([-1.45460594e-08, -8.32107073e-04, -1.17126395e-09, -1.16766988e-06,
       -3.80430564e-06, -7.55749602e-03, -6.43399749e-15, -3.93392920e-08,
       -2.00453108e-04, -1.94011895e-07, -6.53417850e-15, -2.74510261e-12,
       -3.98200979e-11, -1.25183504e-10, -3.93392920e-08, -9.13289481e-10]), 'test_kendall_r': array([0.84871427, 0.75097607, 0.85928283, 0.79498604, 0.84519568,
       0.7113033 , 0.96666667, 0.85      , 0.70590728, 0.8       ,
       0.97054189, 0.94928891, 0.9       , 0.91214188, 0.86666667,
       0.91666667]), 'test_kendall_p': array([-2.12480839e-06, -3.00010062e-05, -1.69737286e-06, -1.85653874e-05,
       -5.31661458e-06, -1.27728091e-04, -1.29045888e-11, -1.02027025e-07,
       -1.50901721e-04, -1.17934846e-06, -2.02597451e-07, -4.05106961e-07,
       -4.72556483e-09, -8.99518934e-07, -3.98309214e-08, -1.38948965e-09]), 'test_rmse': array([-0.08892991, -0.54556855, -0.11967608, -0.20580567, -0.24700025,
       -0.54490447, -0.07508176, -0.21086011, -0.31166248, -0.16104127,
       -0.11958685, -0.08374408, -0.08809358, -0.12963438, -0.15816608,
       -0.06265044]), 'test_mae': array([-0.05994136, -0.17731673, -0.07773784, -0.1203319 , -0.09603559,
       -0.18890638, -0.05906493, -0.12119297, -0.15544874, -0.09754702,
       -0.06615468, -0.06447785, -0.07123057, -0.06023101, -0.11895097,
       -0.04734816]), 'test_r2': array([ 0.9792216 ,  0.45303161,  0.96551039,  0.88309987,  0.80688562,
       -0.12389479,  0.98558571,  0.83643609,  0.72025529,  0.91061392,
        0.9662189 ,  0.98228861,  0.98144262,  0.94137615,  0.9265017 ,
        0.99178541]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 112, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'overall data shape': {'targets_shape': (259, 1), 'training_features_shape': (259, 522)}}
Trimer_scaler
Filename: (ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_log Rg (nm)/EG-Ionic-Based Cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_log Rg (nm)/EG-Ionic-Based Cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_predictions.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_log Rg (nm)/EG-Ionic-Based Cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_ClusterTruth.json
Done Saving scores!
------------------------------ 
Plotted Comparitive Cluster Scores!
______________________________ 
Plotted Parity Plots!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c018n01>
Subject: Job 295232: <XGBR_log Rg (nm)_ECFP_Trimer_EG-Ionic-Based Cluster_20250311> in cluster <Hazel> Done

Job <XGBR_log Rg (nm)_ECFP_Trimer_EG-Ionic-Based Cluster_20250311> was submitted from host <c040n02> by user <sdehgha2> in cluster <Hazel> at Tue Mar 11 19:12:46 2025
Job was executed on host(s) <8*c018n01>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Wed Mar 12 17:03:07 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Wed Mar 12 17:03:07 2025
Terminated at Wed Mar 12 20:22:14 2025
Results reported at Wed Mar 12 20:22:14 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input



#BSUB -n 8
#BSUB -W 72:05
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "XGBR_log Rg (nm)_ECFP_Trimer_EG-Ionic-Based Cluster_20250311"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_log Rg (nm)_ECFP_Trimer_3_count_EG-Ionic-Based Cluster_20250311.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_log Rg (nm)_ECFP_Trimer_3_count_EG-Ionic-Based Cluster_20250311.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../make_ood_prediction.py --target_features "log Rg (nm)"                                       --representation "ECFP"                                       --regressor_type "XGBR"                                       --radius "3"                                       --vector "count"                                       --oligomer_representation "Trimer"                                       --numerical_feats 'Mw (g/mol)' 'PDI' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" 'solvent dP' 'solvent dD' 'solvent dH'                                       --clustering_method "EG-Ionic-Based Cluster" 



------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   45621.00 sec.
    Max Memory :                                 6 GB
    Average Memory :                             5.38 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               10.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   11948 sec.
    Turnaround time :                            90568 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_log Rg (nm)_ECFP_Trimer_3_count_EG-Ionic-Based Cluster_20250311.err> for stderr output of this job.

