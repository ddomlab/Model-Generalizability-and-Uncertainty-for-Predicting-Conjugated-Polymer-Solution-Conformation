


-------------------------------------------------- 
OOD TEST ON 0



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00991492009245209), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 324), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06028773957399324), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 169), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 121), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 173), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0691624604291886), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 185), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08960118167988082), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 677), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0061405384815923355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 993), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011062696125215524), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 383), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07759170759117386), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 131), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 189), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03379845228961698), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1416), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08409271218349178), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 262), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011670401982762393), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005592513510247297), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012884199524986868), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 941), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030283052736145835), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1045), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09179255039511836), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1777), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0883216843484537), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1185), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003947059303971283), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1160), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06160948961886609), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04556551851107523), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 281), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 107), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.050779807413380645), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 624), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.027364528220782454), ('regressor__regressor__max_depth', 33), ('regressor__regressor__n_estimators', 454), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06773430528937506), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 175), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0362850535778949), ('regressor__regressor__max_depth', 24), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03998602926227516), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1009), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031638177115660686), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 842), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09479649302168836), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 317), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 104), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04495144135539553), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04723974827484833), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032180402688041745), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08122368239609294), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 512), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.000605996349213885), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05232867409766464), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1249), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013830699244364202), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1018), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04376397754090451), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1438), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07414064822643127), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 530), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.036391646152900005), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0844537258947195), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 377), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04633083765829739), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06623916752104912), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06927537169721393), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.059074871357120744), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 305), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05029984967385875), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 359), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 133), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014421139544109481), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08852981070328089), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 770), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04028468582270285), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 166), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08654637942603259), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0696278814212129), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 83), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0667858300486432), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052555403997857575), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0026007011306272074), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1066), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0647984390791052), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 169), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05952760406067899), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 51), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 831), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008072482952499556), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022422556604652687), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 565), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025992441646526317), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 162), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03850823381506591), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1113), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08055363703160898), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 1



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08839643569391473), ('regressor__regressor__max_depth', 4407), ('regressor__regressor__n_estimators', 780), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004170965032742357), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1364), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006595553265074935), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 809), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05734248392241917), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 680), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01563962422456329), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 310), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0691624604291886), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 185), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08960118167988082), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 677), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0061405384815923355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 993), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011062696125215524), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 383), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07759170759117386), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 131), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.050366403296816215), ('regressor__regressor__max_depth', 29), ('regressor__regressor__n_estimators', 754), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002846283042442937), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1056), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034769668589043685), ('regressor__regressor__max_depth', 2287), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 90), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0037646902188796607), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1519), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012884199524986868), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 941), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030283052736145835), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1045), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09179255039511836), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1777), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0883216843484537), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1185), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003947059303971283), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1160), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04384416527485477), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 74), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09395627586487752), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022833285817742263), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1871), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02121826111171745), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07241804580058284), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06773430528937506), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 175), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0362850535778949), ('regressor__regressor__max_depth', 24), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03998602926227516), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1009), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.058119653209219746), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 65), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 68), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 55), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 179), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06310351573432241), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032180402688041745), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08122368239609294), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 512), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.000605996349213885), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05232867409766464), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1249), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013830699244364202), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1018), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031904823037658694), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 123), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0520106646747411), ('regressor__regressor__max_depth', 279), ('regressor__regressor__n_estimators', 262), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08464675905748642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 86), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.027974293530998097), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04633083765829739), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06623916752104912), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06927537169721393), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.059074871357120744), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 305), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.038804057561228844), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 101), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 93), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07800086849158916), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 81), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016883560697827215), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 996), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.013244236952990969), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08654637942603259), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0696278814212129), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 83), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0667858300486432), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052555403997857575), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0026007011306272074), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1066), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.027680530227657124), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 285), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03673945805405588), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03235110348949668), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1141), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022422556604652687), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 565), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025992441646526317), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 162), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03850823381506591), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1113), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08055363703160898), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 2



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010374838417154147), ('regressor__regressor__max_depth', 47), ('regressor__regressor__n_estimators', 352), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08789568860705022), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 790), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06332697859542225), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011592985880893077), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 906), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02015651221551462), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 361), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0691624604291886), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 185), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08960118167988082), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 677), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0061405384815923355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 993), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011062696125215524), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 383), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07759170759117386), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 131), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09542624160390455), ('regressor__regressor__max_depth', 382), ('regressor__regressor__n_estimators', 363), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003945365363956344), ('regressor__regressor__max_depth', 2798), ('regressor__regressor__n_estimators', 1170), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08878624866471861), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012884199524986868), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 941), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030283052736145835), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1045), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09179255039511836), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1777), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0883216843484537), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1185), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003947059303971283), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1160), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035059605417437203), ('regressor__regressor__max_depth', 4423), ('regressor__regressor__n_estimators', 166), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08853149678651946), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04547227949254318), ('regressor__regressor__max_depth', 4900), ('regressor__regressor__n_estimators', 208), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07352481813242628), ('regressor__regressor__max_depth', 1264), ('regressor__regressor__n_estimators', 1246), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04183159010334869), ('regressor__regressor__max_depth', 5565), ('regressor__regressor__n_estimators', 361), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06773430528937506), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 175), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0362850535778949), ('regressor__regressor__max_depth', 24), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03998602926227516), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1009), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04318631897042582), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 89), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.033374431315141805), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 170), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03320352578380334), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 378), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.041107576866252375), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 748), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 85), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032180402688041745), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08122368239609294), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 512), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.000605996349213885), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05232867409766464), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1249), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013830699244364202), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1018), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04135414091602007), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.041342684720231025), ('regressor__regressor__max_depth', 527), ('regressor__regressor__n_estimators', 230), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06410196001337301), ('regressor__regressor__max_depth', 20), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054004325172724674), ('regressor__regressor__max_depth', 28), ('regressor__regressor__n_estimators', 104), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0303964589839436), ('regressor__regressor__max_depth', 422), ('regressor__regressor__n_estimators', 605), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04633083765829739), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06623916752104912), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06927537169721393), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.059074871357120744), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 305), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09394226353571954), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 106), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.027448575610811973), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 567), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015634215679287657), ('regressor__regressor__max_depth', 872), ('regressor__regressor__n_estimators', 918), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 141), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06958182793795643), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08654637942603259), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0696278814212129), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 83), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0667858300486432), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052555403997857575), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0026007011306272074), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1066), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007203153284813177), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1578), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03693499023328491), ('regressor__regressor__max_depth', 28), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06813317438899666), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 167), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008723303810978172), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 345), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019603079045241955), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022422556604652687), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 565), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025992441646526317), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 162), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03850823381506591), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1113), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08055363703160898), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 3



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0039663074286238114), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1327), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0031943234033048823), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03923355197174213), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.056170480224062846), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 316), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0691624604291886), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 185), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08960118167988082), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 677), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0061405384815923355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 993), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011062696125215524), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 383), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07759170759117386), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 131), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0028552783136706608), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1495), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05652255306284977), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08510310036794118), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 653), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07693173041362837), ('regressor__regressor__max_depth', 269), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0009620334603611233), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1932), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012884199524986868), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 941), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030283052736145835), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1045), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09179255039511836), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1777), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0883216843484537), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1185), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003947059303971283), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1160), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.020315112086611187), ('regressor__regressor__max_depth', 953), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00031027339382584587), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06443866330491725), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05840426475430046), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 547), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04780788822392648), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 201), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06773430528937506), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 175), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0362850535778949), ('regressor__regressor__max_depth', 24), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03998602926227516), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1009), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03396543014325179), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 120), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0019194779013461262), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1425), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.021615281964007593), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05749609537125058), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 201), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032180402688041745), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08122368239609294), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 512), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.000605996349213885), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05232867409766464), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1249), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013830699244364202), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1018), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.024777779016901303), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 166), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00858497367312896), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 384), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0251208154269107), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007314854575259556), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 283), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029024364928833455), ('regressor__regressor__max_depth', 125), ('regressor__regressor__n_estimators', 105), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04633083765829739), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06623916752104912), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06927537169721393), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.059074871357120744), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 305), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06530479985898201), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.088508199042521), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06289099067126315), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 80), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0025497135830494914), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1090), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06739302333655617), ('regressor__regressor__max_depth', 933), ('regressor__regressor__n_estimators', 1766), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08654637942603259), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0696278814212129), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 83), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0667858300486432), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052555403997857575), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0026007011306272074), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1066), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016687668067833542), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1007), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.023308555510341323), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 164), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07391100016818171), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.023349692434501346), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 117), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015582952666832696), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1735), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022422556604652687), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 565), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025992441646526317), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 162), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03850823381506591), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1113), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08055363703160898), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])


{'CO_0': {'cluster size (%)': 37, 6: {'test_mad': 71.69790676586247, 'test_ystd': 164.7422417759401, 'test_mae': 90.10530822933865, 'test_rmse': 194.35660371723074, 'test_r2': -0.39183790507742944, 'test_pearson_r': array([-0.00537156]), 'test_pearson_p_value': array([0.95835475]), 'test_spearman_r': 0.478594497936385, 'test_spearman_p_value': 7.106827898170588e-07, 'test_kendall_r': 0.33093368547248964, 'test_kendall_p_value': 3.1350146554572385e-06, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 121, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 71.69790676586247, 'test_ystd': 164.7422417759401, 'test_mae': 90.72325035511136, 'test_rmse': 195.3896763170104, 'test_r2': -0.40667342867407386, 'test_pearson_r': array([-0.00709751]), 'test_pearson_p_value': array([0.94499199]), 'test_spearman_r': 0.4876869442917959, 'test_spearman_p_value': 4.052150618341554e-07, 'test_kendall_r': 0.3588232157204719, 'test_kendall_p_value': 3.3129884833331436e-07, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.005592513510247297, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 71.69790676586247, 'test_ystd': 164.7422417759401, 'test_mae': 87.16873737947759, 'test_rmse': 192.40912484093107, 'test_r2': -0.3640848500416578, 'test_pearson_r': array([-0.00275111]), 'test_pearson_p_value': array([0.97866383]), 'test_spearman_r': 0.506343202601759, 'test_spearman_p_value': 1.214562011962503e-07, 'test_kendall_r': 0.3479391779717575, 'test_kendall_p_value': 9.571195024847582e-07, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06160948961886609, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 98, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 71.69790676586247, 'test_ystd': 164.7422417759401, 'test_mae': 89.95453932008094, 'test_rmse': 194.25332633141915, 'test_r2': -0.3903591059444236, 'test_pearson_r': array([-0.00511811]), 'test_pearson_p_value': array([0.96031813]), 'test_spearman_r': 0.48226586791184695, 'test_spearman_p_value': 5.675486056459332e-07, 'test_kendall_r': 0.3322698914703597, 'test_kendall_p_value': 2.8604667919724187e-06, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 104, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 71.69790676586247, 'test_ystd': 164.7422417759401, 'test_mae': 91.49529781088918, 'test_rmse': 196.16452879475187, 'test_r2': -0.41785237769426264, 'test_pearson_r': array([-0.00823247]), 'test_pearson_p_value': array([0.9362129]), 'test_spearman_r': 0.4486121999216333, 'test_spearman_p_value': 4.057306658350006e-06, 'test_kendall_r': 0.3226931335014823, 'test_kendall_p_value': 5.325895030979824e-06, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.036391646152900005, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 71.69790676586247, 'test_ystd': 164.7422417759401, 'test_mae': 91.90944163079645, 'test_rmse': 196.8726456247643, 'test_r2': -0.42810721093622783, 'test_pearson_r': array([-0.00697071]), 'test_pearson_p_value': array([0.94597322]), 'test_spearman_r': 0.47720511175608055, 'test_spearman_p_value': 7.732919047836886e-07, 'test_kendall_r': 0.3530745401762415, 'test_kendall_p_value': 4.955731266401387e-07, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08852981070328089, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 770, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 71.69790676586247, 'test_ystd': 164.7422417759401, 'test_mae': 89.03973592721842, 'test_rmse': 193.59286477523702, 'test_r2': -0.38092073305642327, 'test_pearson_r': array([-0.00570366]), 'test_pearson_p_value': array([0.95578252]), 'test_spearman_r': 0.461908053479665, 'test_spearman_p_value': 1.912353910649447e-06, 'test_kendall_r': 0.3254366784967864, 'test_kendall_p_value': 4.447021547083245e-06, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0647984390791052, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 150, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_0': {'cluster size (%)': 33, 6: {'fit_time': array([1.98146439, 2.14007616, 2.25493383]), 'score_time': array([0.19755936, 0.2419138 , 0.19279814]), 'test_pearson_r': array([0.8448111 , 0.97887423, 0.94499327]), 'test_pearson_p': array([-8.35115718e-25, -1.09458717e-59, -1.56495836e-42]), 'test_spearman_r': array([0.84121155, 0.93113374, 0.84253018]), 'test_spearman_p': array([-2.04512256e-24, -1.47610072e-38, -2.75792929e-24]), 'test_kendall_r': array([0.7557093 , 0.79236835, 0.73257918]), 'test_kendall_p': array([-5.54921758e-25, -5.12159342e-27, -2.80195229e-23]), 'test_rmse': array([-87.33271653, -21.69157944, -25.63254874]), 'test_mae': array([-25.95352833, -12.08266364, -12.64511583]), 'test_r2': array([0.69660092, 0.95758333, 0.89117597]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.011062696125215524, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 383, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([5.07040548, 4.62790442, 4.95750618]), 'score_time': array([0.18844056, 0.19135952, 0.204175  ]), 'test_pearson_r': array([0.70887073, 0.98441352, 0.98535627]), 'test_pearson_p': array([-1.56446129e-14, -3.47646356e-65, -2.57842021e-66]), 'test_spearman_r': array([0.78332995, 0.9366173 , 0.95347502]), 'test_spearman_p': array([-3.07410329e-19, -5.06819534e-40, -1.64227161e-45]), 'test_kendall_r': array([0.64606576, 0.82329107, 0.83794677]), 'test_kendall_p': array([-1.72636727e-18, -7.72368585e-29, -5.71832135e-30]), 'test_rmse': array([-94.61808261, -22.73743897, -25.48983079]), 'test_mae': array([-29.13857624, -12.1807512 , -14.08070243]), 'test_r2': array([0.28762709, 0.96873936, 0.95176935]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0030283052736145835, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1045, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.29427433, 1.19927025, 1.31424856]), 'score_time': array([0.19467711, 0.18728232, 0.19701099]), 'test_pearson_r': array([0.98565301, 0.61531145, 0.97399276]), 'test_pearson_p': array([-1.84211069e-67, -2.90289343e-10, -6.13972743e-56]), 'test_spearman_r': array([0.93502245, 0.8430824 , 0.94438709]), 'test_spearman_p': array([-4.90923606e-40, -2.40821333e-24, -2.44906036e-42]), 'test_kendall_r': array([0.81115296, 0.75364195, 0.85051075]), 'test_kendall_p': array([-1.32076282e-28, -1.35138075e-24, -8.49214637e-31]), 'test_rmse': array([ -29.99856283, -121.23458363,  -16.24961832]), 'test_mae': array([-15.24432106, -30.89320579,  -9.05647062]), 'test_r2': array([ 0.96426075, -0.23069758,  0.94766309]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0362850535778949, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 24, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 163, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.69501638, 1.73303103, 1.63779116]), 'score_time': array([0.19749427, 0.191957  , 0.26986432]), 'test_pearson_r': array([0.39159675, 0.89578093, 0.97347388]), 'test_pearson_p': array([-1.76342664e-04, -2.54657305e-31, -1.39288979e-55]), 'test_spearman_r': array([0.86662213, 0.86847023, 0.92518599]), 'test_spearman_p': array([-2.15001788e-27, -2.50930060e-27, -4.23224014e-37]), 'test_kendall_r': array([0.77617481, 0.74272658, 0.8068498 ]), 'test_kendall_p': array([-3.53313306e-26, -6.01683748e-24, -4.50179745e-28]), 'test_rmse': array([-120.4106512 ,  -66.96090873,  -32.26061784]), 'test_mae': array([-27.55292801, -27.83463207, -12.65165469]), 'test_r2': array([-2.26041981,  0.76559871,  0.94461931]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08122368239609294, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 512, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.86839461, 2.89792323, 2.85976171]), 'score_time': array([0.19796824, 0.18922472, 0.19822288]), 'test_pearson_r': array([0.98486107, 0.8126474 , 0.98382152]), 'test_pearson_p': array([-1.77826478e-66, -2.12282579e-21, -1.64406445e-64]), 'test_spearman_r': array([0.92203645, 0.82948922, 0.95556877]), 'test_spearman_p': array([-8.62167790e-37, -5.87310418e-23, -2.47826425e-46]), 'test_kendall_r': array([0.81620962, 0.74280233, 0.87947447]), 'test_kendall_p': array([-6.74377472e-29, -5.22223969e-24, -5.53135207e-33]), 'test_rmse': array([-19.72613439, -90.90899915, -19.32184621]), 'test_mae': array([-10.20079653, -22.7095993 ,  -9.59446161]), 'test_r2': array([0.96897217, 0.56265886, 0.96691708]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05913781436124809, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2125, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.58099246, 0.56603169, 0.62362885]), 'score_time': array([0.20895481, 0.20162225, 0.19722652]), 'test_pearson_r': array([0.9532089 , 0.93721317, 0.83939534]), 'test_pearson_p': array([-6.23765397e-46, -3.45067129e-40, -5.89718140e-24]), 'test_spearman_r': array([0.90229923, 0.90833087, 0.87121555]), 'test_spearman_p': array([-8.30777869e-33, -1.51364732e-33, -1.09712717e-27]), 'test_kendall_r': array([0.77460842, 0.75993303, 0.73819701]), 'test_kendall_p': array([-4.74917440e-26, -5.97382025e-25, -1.66605271e-23]), 'test_rmse': array([-22.85505292, -41.42028276, -89.19877753]), 'test_mae': array([-13.98451626, -20.19402159, -28.86900007]), 'test_r2': array([0.89855555, 0.86404112, 0.67662795]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0667858300486432, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([3.25580239, 3.1636796 , 3.1757586 ]), 'score_time': array([0.24744439, 0.1970098 , 0.19657469]), 'test_pearson_r': array([0.98655701, 0.43946653, 0.98672964]), 'test_pearson_p': array([-1.18048386e-68, -2.30288432e-05, -4.23711739e-68]), 'test_spearman_r': array([0.83724306, 0.83016839, 0.98120542]), 'test_spearman_p': array([-5.35189839e-24, -5.04074765e-23, -8.45203756e-62]), 'test_kendall_r': array([0.76431486, 0.75130526, 0.89476653]), 'test_kendall_p': array([-2.10251955e-25, -1.77545524e-24, -4.01801368e-34]), 'test_rmse': array([ -30.46909352, -122.4157341 ,  -21.3729353 ]), 'test_mae': array([-13.16607104, -28.43843982, -11.02987092]), 'test_r2': array([ 0.95815853, -1.71726867,  0.96877464]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03850823381506591, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1113, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_1': {'cluster size (%)': 6, 6: {'test_mad': 126.72399999999996, 'test_ystd': 132.27156534947335, 'test_mae': 145.50177110290528, 'test_rmse': 183.45062765553863, 'test_r2': -0.9235585834682796, 'test_pearson_r': array([-0.94223187]), 'test_pearson_p_value': array([1.52687331e-07]), 'test_spearman_r': -0.8647176142873031, 'test_spearman_p_value': 3.1803228486241e-05, 'test_kendall_r': -0.6964070030630782, 'test_kendall_p_value': 0.0005701858891263775, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.004170965032742357, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1364, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 126.72399999999996, 'test_ystd': 132.27156534947335, 'test_mae': 145.67183488464354, 'test_rmse': 183.3670793588571, 'test_r2': -0.9218069029267133, 'test_pearson_r': array([-0.94099477]), 'test_pearson_p_value': array([1.74705464e-07]), 'test_spearman_r': -0.8055916235668039, 'test_spearman_p_value': 0.00028879877678823025, 'test_kendall_r': -0.6340421968186235, 'test_kendall_p_value': 0.0017076226698716187, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 90, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 126.72399999999996, 'test_ystd': 132.27156534947335, 'test_mae': 144.45813605244953, 'test_rmse': 181.50667334012797, 'test_r2': -0.8830081851798737, 'test_pearson_r': array([-0.94624294]), 'test_pearson_p_value': array([9.65840739e-08]), 'test_spearman_r': -0.91040022956475, 'test_spearman_p_value': 2.448410687822336e-06, 'test_kendall_r': -0.7641922568145713, 'test_kendall_p_value': 0.0002212785266028761, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04384416527485477, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 74, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 126.72399999999996, 'test_ystd': 132.27156534947335, 'test_mae': 145.53963019307454, 'test_rmse': 183.12691089079152, 'test_r2': -0.9167759545725487, 'test_pearson_r': array([-0.94029527]), 'test_pearson_p_value': array([1.88292727e-07]), 'test_spearman_r': -0.9127574817477091, 'test_spearman_p_value': 2.0708619789842657e-06, 'test_kendall_r': -0.7587718093075331, 'test_kendall_p_value': 0.00017406385458217466, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 179, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 126.72399999999996, 'test_ystd': 132.27156534947335, 'test_mae': 144.83882656351724, 'test_rmse': 182.4388921725695, 'test_r2': -0.9024001278226008, 'test_pearson_r': array([-0.94278294]), 'test_pearson_p_value': array([1.43657613e-07]), 'test_spearman_r': -0.91040022956475, 'test_spearman_p_value': 2.448410687822336e-06, 'test_kendall_r': -0.7641922568145713, 'test_kendall_p_value': 0.0002212785266028761, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.031904823037658694, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 126.72399999999996, 'test_ystd': 132.27156534947335, 'test_mae': 145.1164467010498, 'test_rmse': 183.28571071206034, 'test_r2': -0.9201016880954727, 'test_pearson_r': array([-0.94140363]), 'test_pearson_p_value': array([1.6715181e-07]), 'test_spearman_r': -0.8277638700869911, 'test_spearman_p_value': 0.00013915242439474875, 'test_kendall_r': -0.6756187343149267, 'test_kendall_p_value': 0.0008300773773979266, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07800086849158916, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 81, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 126.72399999999996, 'test_ystd': 132.27156534947335, 'test_mae': 145.1785090789795, 'test_rmse': 182.67658504490257, 'test_r2': -0.907360490321317, 'test_pearson_r': array([-0.94012291]), 'test_pearson_p_value': array([1.9177349e-07]), 'test_spearman_r': -0.8673933621750252, 'test_spearman_p_value': 2.8119109218609982e-05, 'test_kendall_r': -0.7108057085060272, 'test_kendall_p_value': 0.0004627747652897296, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_1': {'cluster size (%)': 6, 6: {'fit_time': array([2.57580471, 2.46648359, 2.56584191, 2.58909392, 2.54853511,
       2.58292532, 2.44373655, 2.47617722, 2.56040597, 2.55784822,
       2.49938941, 2.56307006, 2.57400656, 2.6482687 , 2.62629318,
       2.54226923, 2.50245166]), 'score_time': array([0.18944097, 0.24199438, 0.20175123, 0.18828821, 0.20129395,
       0.19737625, 0.19165301, 0.18975806, 0.20319009, 0.25361109,
       0.19457769, 0.19277573, 0.1862998 , 0.19882345, 0.20078969,
       0.19858503, 0.19030237]), 'test_pearson_r': array([0.95899776, 0.99803176, 0.99959158, 0.94511385, 0.99770112,
       0.12096987, 0.97364453, 0.99065876, 0.99507582, 0.99700136,
       0.98629285, 0.99055696, 0.9979936 , 0.99410186, 0.951808  ,
       0.99474069, 0.89697973]), 'test_pearson_p': array([-4.68659298e-09, -3.05240537e-18, -5.07727426e-23, -3.47780034e-08,
       -1.38290741e-16, -6.67594430e-01, -1.00359026e-09, -1.23385410e-12,
       -1.94262980e-14, -7.76641457e-16, -1.47655479e-11, -1.32359017e-12,
       -5.71420481e-17, -6.26404645e-14, -4.81161458e-08, -2.97788586e-14,
       -5.86739152e-06]), 'test_spearman_r': array([0.67647059, 0.94922763, 0.98749107, 0.92273756, 0.96428571,
       0.66785714, 0.96785714, 0.95084935, 0.89642857, 0.88372234,
       0.95621128, 0.98571429, 0.96336053, 0.975     , 0.94906204,
       0.97765901, 0.94370011]), 'test_spearman_p': array([-4.00825239e-03, -2.03820935e-08, -1.24331763e-12, -3.58624443e-07,
       -7.07230301e-09, -6.50995669e-03, -3.59653554e-09, -5.45609879e-08,
       -6.06614302e-06, -1.24689226e-05, -2.60885982e-08, -1.92909487e-11,
       -8.33271134e-09, -7.14370597e-10, -6.85211474e-08, -3.46144222e-10,
       -1.29623310e-07]), 'test_kendall_r': array([0.61666667, 0.89540533, 0.94561497, 0.82845913, 0.86666667,
       0.61904762, 0.86666667, 0.88039285, 0.77142857, 0.74041884,
       0.88039285, 0.94285714, 0.86125388, 0.9047619 , 0.86125388,
       0.9186708 , 0.80383695]), 'test_kendall_p': array([-5.14926454e-04, -1.41912826e-06, -3.52984089e-07, -8.12917002e-06,
       -1.54339647e-07, -8.36408388e-04, -1.54339647e-07, -5.15437155e-06,
       -1.00560004e-05, -1.33517664e-04, -5.15437155e-06, -1.01554334e-09,
       -8.22244396e-06, -1.65377563e-08, -8.22244396e-06, -1.96884727e-06,
       -3.15442760e-05]), 'test_rmse': array([ -22.50652004,   -5.80483988,   -5.5058381 ,  -72.93773549,
        -17.52859941, -201.28828973,  -17.59307675,  -10.5767162 ,
         -8.86395573,   -4.10358672,  -34.49635175,   -6.94357608,
         -6.0445039 ,  -16.94186061,  -20.98436187,   -6.54828952,
        -27.54968204]), 'test_mae': array([-12.68934397,  -3.65309313,  -3.8951883 , -32.99079171,
       -12.30982269, -60.16980252, -11.29039834,  -7.20461656,
        -6.65099027,  -2.71402697, -17.58368588,  -4.71375399,
        -4.472     , -11.85813075, -10.15671685,  -4.49539913,
       -14.40589988]), 'test_r2': array([  0.89701582,   0.9917647 ,   0.99914286,   0.88567637,
         0.99259825, -10.40450072,   0.9419191 ,   0.9808913 ,
         0.98709507,   0.98018144,   0.96991482,   0.97991635,
         0.99563936,   0.97504089,   0.88297334,   0.98668894,
         0.78755156]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.011062696125215524, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 383, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([6.01235151, 5.91989088, 6.12811112, 6.23516822, 6.1055398 ,
       6.07965207, 5.92181993, 6.14151812, 5.99371028, 6.01727319,
       5.80638003, 6.01847196, 6.08915734, 5.85225821, 5.96935868,
       5.91341662, 5.91643643]), 'score_time': array([0.19698334, 0.18826151, 0.19654155, 0.19290233, 0.19135737,
       0.18581867, 0.19048285, 0.1901896 , 0.19103575, 0.20099735,
       0.20605159, 0.19368792, 0.19807196, 0.18903422, 0.20216489,
       0.20400238, 0.20254326]), 'test_pearson_r': array([0.98671526, 0.98485906, 0.6386181 , 0.99961394, 0.99846656,
       0.64185624, 0.98740215, 0.99980928, 0.98898951, 0.87602045,
       0.95483432, 0.98895504, 0.99036002, 0.99498555, 0.95724422,
       0.97662968, 0.98248593]), 'test_pearson_p': array([-1.89070480e-12, -4.69994749e-12, -7.75261219e-03, -3.42369580e-23,
       -9.96716946e-18, -9.89130338e-03, -8.55408050e-12, -1.30516926e-23,
       -3.57800109e-12, -1.85570561e-05, -3.17980925e-08, -3.65114215e-12,
       -1.51292055e-12, -2.18563083e-14, -2.23949754e-08, -4.62740584e-10,
       -7.19688500e-11]), 'test_spearman_r': array([0.82266395, 0.71333844, 0.86956734, 0.93888071, 0.86428571,
       0.67681533, 0.97229708, 0.92142857, 0.98838288, 0.90616658,
       0.96601228, 0.91689045, 0.97765901, 0.98480826, 0.91071429,
       0.89087799, 0.96071429]), 'test_spearman_p': array([-9.12475992e-05, -1.91836547e-03, -1.21148517e-05, -7.26169800e-08,
       -3.24337314e-05, -5.58502071e-03, -1.38325447e-09, -1.07131730e-06,
       -5.06299681e-12, -3.27089173e-06, -5.14628156e-09, -1.52607666e-06,
       -3.46144222e-10, -2.87075990e-11, -2.39502084e-06, -8.40012191e-06,
       -1.30274898e-08]), 'test_kendall_r': array([0.6778302 , 0.58228366, 0.78487301, 0.82352941, 0.73333333,
       0.63774814, 0.89953183, 0.86666667, 0.93780978, 0.80383695,
       0.89427211, 0.78469798, 0.89953183, 0.93780978, 0.77142857,
       0.81734548, 0.86666667]), 'test_kendall_p': array([-2.61704221e-04, -1.83328732e-03, -2.67052399e-05, -9.81814824e-06,
       -3.70285640e-05, -1.04464839e-03, -3.20072183e-06, -1.54339647e-07,
       -1.19967260e-06, -3.15442760e-05, -3.95717604e-06, -4.84614653e-05,
       -3.20072183e-06, -1.19967260e-06, -1.00560004e-05, -2.47850122e-05,
       -1.54339647e-07]), 'test_rmse': array([  -6.94102587,  -19.49999001,  -63.59034177,  -24.95136856,
        -10.341902  , -200.1614562 ,  -14.34216029,  -16.72944072,
         -9.10477692,  -21.25421093,  -14.82825722,  -47.28338664,
        -10.09287494,  -10.84494599,  -24.63216664,  -19.80781216,
        -14.52047805]), 'test_mae': array([ -5.7565369 , -12.54098786, -22.77168243,  -9.76078343,
        -7.17822566, -70.61442446, -10.94171315,  -8.33245629,
        -6.94685107, -11.29792929, -10.53211386, -23.86898964,
        -7.41845745,  -6.54328118, -16.20288978, -12.76278323,
       -10.59335829]), 'test_r2': array([0.9676951 , 0.94290031, 0.05240128, 0.98588192, 0.98602216,
       0.00511624, 0.96796081, 0.99273376, 0.97159565, 0.54703323,
       0.90964698, 0.95133019, 0.980168  , 0.97459891, 0.91494125,
       0.93480036, 0.96225409]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0030283052736145835, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1045, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.61725688, 1.54906011, 1.5189383 , 1.54742169, 1.5437007 ,
       1.55611777, 1.62210608, 1.44270205, 1.59847188, 1.43245554,
       1.54044318, 1.53356719, 1.55122089, 1.61626339, 1.47754407,
       1.46173024, 1.56753421]), 'score_time': array([0.20853162, 0.23561597, 0.25364041, 0.187217  , 0.19238448,
       0.19066858, 0.18968725, 0.19967389, 0.19873452, 0.19164014,
       0.19104314, 0.20600605, 0.27146363, 0.19933963, 0.25832653,
       0.19365144, 0.19011116]), 'test_pearson_r': array([0.99480647, 0.99501363, 0.8856999 , 0.99865723, 0.99756318,
       0.92919155, 0.9469983 , 0.98382951, 0.98606637, 0.00864772,
       0.99786711, 0.99399016, 0.98422711, 0.97937121, 0.99226721,
       0.97841285, 0.9938636 ]), 'test_pearson_p': array([-2.69555035e-15, -2.02831718e-15, -5.02664013e-06, -2.10288227e-19,
       -2.01907915e-16, -5.55304471e-07, -8.82586515e-08, -4.29763009e-11,
       -1.64163197e-11, -9.75598856e-01, -8.49973380e-17, -7.07454736e-14,
       -3.65902390e-11, -2.06994684e-10, -3.62649833e-13, -2.77426624e-10,
       -8.09836672e-14]), 'test_spearman_r': array([0.99926444, 0.96764706, 0.92941176, 0.99705882, 0.97857143,
       0.92761431, 0.94642857, 0.96428571, 0.96071429, 0.425     ,
       0.9839014 , 0.98571429, 0.96693515, 0.91071429, 0.92736358,
       0.83571429, 0.98211248]), 'test_spearman_p': array([-3.11777344e-21, -9.13289481e-10, -1.94011895e-07, -5.06558834e-17,
       -2.64545601e-10, -6.38323204e-07, -9.44793851e-08, -7.07230301e-09,
       -1.30274898e-08, -1.14295475e-01, -4.17567304e-11, -1.92909487e-11,
       -4.31271816e-09, -2.39502084e-06, -6.52430794e-07, -1.04446873e-04,
       -8.24734169e-11]), 'test_kendall_r': array([0.99582462, 0.88333333, 0.8       , 0.98333333, 0.9047619 ,
       0.80383695, 0.84761905, 0.88571429, 0.86666667, 0.42857143,
       0.93273543, 0.92380952, 0.88039285, 0.80952381, 0.82539834,
       0.80952381, 0.93273543]), 'test_kendall_p': array([-8.17975955e-08, -1.43717927e-08, -1.17934846e-06, -1.52943275e-12,
       -1.65377563e-08, -3.15442760e-05, -4.07346059e-07, -5.33772028e-08,
       -1.54339647e-07, -2.74952652e-02, -1.49386838e-06, -4.47206135e-09,
       -5.15437155e-06, -2.27466721e-06, -2.33013125e-05, -2.27466721e-06,
       -1.49386838e-06]), 'test_rmse': array([  -8.65218489,  -19.52026335,  -32.50696697,  -27.4953875 ,
        -15.9248101 ,  -16.83113974,  -67.37505227,  -13.60622575,
         -6.37655999, -205.54412571,  -14.81894756,   -8.22831396,
         -9.77497548,  -19.3676968 ,   -9.69868068,   -6.17441295,
         -9.68555548]), 'test_mae': array([ -6.0190867 ,  -9.79335091, -13.97062513, -12.57309421,
       -10.09378952, -10.40680857, -24.29292488,  -5.71463824,
        -3.94740006, -65.25408527,  -9.29036133,  -5.59079363,
        -5.14860205, -12.79750599,  -5.41956695,  -3.51840912,
        -5.645761  ]), 'test_r2': array([  0.98539034,   0.9888237 ,   0.78259117,   0.98388452,
         0.99411019,   0.84750766,   0.89199211,   0.96148331,
         0.96621957, -27.73306902,   0.98222151,   0.9870067 ,
         0.96496171,   0.94973412,   0.98021644,   0.95367362,
         0.98454418]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0362850535778949, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 24, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 163, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.81815791, 1.81657147, 1.72064996, 1.87768984, 1.9108274 ,
       1.82680607, 1.84499669, 1.92270708, 1.83843684, 1.86148739,
       1.85666084, 1.87834215, 1.93951821, 1.79723573, 1.88362002,
       1.85036421, 1.87277293]), 'score_time': array([0.23850703, 0.19296455, 0.19151068, 0.19058394, 0.19396853,
       0.19026184, 0.1924932 , 0.19046307, 0.19721961, 0.19087934,
       0.24189091, 0.20344043, 0.19676089, 0.19458985, 0.18603802,
       0.21042514, 0.2024889 ]), 'test_pearson_r': array([ 0.98763276,  0.99729539,  0.97049158,  0.99937787, -0.10403345,
        0.99147663,  0.99843468,  0.99795754,  0.99377309,  0.99236643,
        0.89067782,  0.99098663,  0.99623178,  0.67264333,  0.99776804,
        0.98559216,  0.99756472]), 'test_pearson_p': array([-1.14845253e-12, -2.81825668e-17, -4.83189348e-10, -9.65624647e-22,
       -7.12151205e-01, -6.81483980e-13, -1.13923845e-17, -6.41505959e-17,
       -8.90507450e-14, -3.33530271e-13, -8.49655094e-06, -9.78906194e-13,
       -3.42216473e-15, -6.00188651e-03, -1.14147120e-16, -2.03824305e-11,
       -2.01081056e-16]), 'test_spearman_r': array([0.83149397, 0.99411765, 0.96176471, 0.98219896, 0.45080501,
       0.95714286, 0.96428571, 0.90357143, 0.99285714, 0.9534899 ,
       0.76785714, 0.975     , 0.98571429, 0.8       , 0.98571429,
       0.91785714, 0.97857143]), 'test_spearman_p': array([-6.54277487e-05, -6.43399749e-15, -2.89508013e-09, -1.44906700e-11,
       -9.17045420e-02, -2.27367516e-08, -7.07230301e-09, -3.88050413e-06,
       -2.16812149e-13, -3.83517842e-08, -8.29329629e-04, -7.14370597e-10,
       -1.92909487e-11, -3.42269833e-04, -1.92909487e-11, -1.41769685e-06,
       -2.64545601e-10]), 'test_kendall_r': array([0.79498604, 0.96666667, 0.85      , 0.94001934, 0.45192308,
       0.86666667, 0.88571429, 0.79047619, 0.96190476, 0.89427211,
       0.67619048, 0.92380952, 0.92380952, 0.67619048, 0.92380952,
       0.77142857, 0.92380952]), 'test_kendall_p': array([-1.85653874e-05, -1.29045888e-11, -1.02027025e-07, -7.54786759e-07,
       -1.97224516e-02, -1.54339647e-07, -5.33772028e-08, -4.90647531e-06,
       -1.82002497e-10, -3.95717604e-06, -1.99899920e-04, -4.47206135e-09,
       -4.47206135e-09, -1.99899920e-04, -4.47206135e-09, -1.00560004e-05,
       -4.47206135e-09]), 'test_rmse': array([ -12.37710779,   -6.46139094,  -21.22888501,   -2.3495967 ,
       -286.9558067 ,   -9.1659831 ,  -28.91433929,  -14.81830445,
         -9.30552872,   -6.84152395,  -34.33651675,   -7.22777384,
         -6.35417901,  -70.00464147,  -14.2706651 ,  -17.3880368 ,
        -17.60635516]), 'test_mae': array([  -6.53436736,   -4.11896772,  -12.16623979,   -1.50127754,
       -112.50549808,   -5.15646316,  -15.3338291 ,   -8.3605453 ,
         -4.98559425,   -4.61854469,  -16.18487652,   -4.79391496,
         -4.00743282,  -29.64402764,   -8.54483983,  -12.06736765,
        -11.63178009]), 'test_r2': array([ 9.69422302e-01,  9.88775550e-01,  9.41441455e-01,  9.98495784e-01,
       -3.14271669e+01,  9.82896041e-01,  9.82577619e-01,  9.94332464e-01,
        9.85152001e-01,  9.80111039e-01,  7.10559497e-01,  9.81121151e-01,
        9.91796847e-01, -1.93839405e-02,  9.94894383e-01,  9.56378342e-01,
        9.93009781e-01]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08122368239609294, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 512, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([3.20800638, 3.18991494, 3.13313246, 3.10704017, 3.01457548,
       3.12957931, 3.18863893, 3.13409352, 3.18375182, 3.12010789,
       3.159343  , 3.19822645, 3.06073618, 3.15744042, 3.19367504,
       3.18858242, 3.15898108]), 'score_time': array([0.18804026, 0.1911447 , 0.19536662, 0.19844151, 0.19370484,
       0.18647385, 0.24397135, 0.23922944, 0.1874032 , 0.19738531,
       0.19616866, 0.19181466, 0.1963284 , 0.18954277, 0.18957376,
       0.20297623, 0.20069742]), 'test_pearson_r': array([0.99805238, 0.97329277, 0.98533128, 0.93617636, 0.99735043,
       0.99632182, 0.99846957, 0.31608289, 0.42492312, 0.94775485,
       0.99587489, 0.99227747, 0.98844557, 0.91182607, 0.98410009,
       0.90283768, 0.99864318]), 'test_pearson_p': array([-2.83556357e-18, -2.42174275e-10, -3.76972748e-12, -9.76109688e-08,
       -3.47708903e-16, -2.92498072e-15, -9.84047277e-18, -2.51087419e-01,
       -1.14368021e-01, -8.05326739e-08, -6.15712320e-15, -3.59542172e-13,
       -4.88876289e-12, -2.21375905e-06, -3.85367123e-11, -4.06909093e-06,
       -4.50092621e-18]), 'test_spearman_r': array([0.98529412, 0.84956122, 0.81824893, 0.95805765, 0.9579986 ,
       0.98571429, 0.98928571, 0.73928571, 0.79285714, 0.79103425,
       0.98657157, 0.94906204, 0.98928571, 0.88531035, 0.98123364,
       0.81785714, 0.99642857]), 'test_spearman_p': array([-3.83671954e-12, -3.11149595e-05, -1.07043403e-04, -5.47877174e-09,
       -1.99844984e-08, -1.92909487e-11, -2.99893426e-12, -1.63551114e-03,
       -4.22077185e-04, -4.44703406e-04, -1.29284827e-11, -6.85211474e-08,
       -2.99893426e-12, -1.14480917e-05, -1.12406985e-10, -1.95136547e-04,
       -2.41597932e-15]), 'test_kendall_r': array([0.93333333, 0.76799402, 0.76151294, 0.84519568, 0.86125388,
       0.94285714, 0.94285714, 0.71428571, 0.67619048, 0.63109771,
       0.94687095, 0.8421149 , 0.94285714, 0.79235375, 0.9186708 ,
       0.73333333, 0.98095238]), 'test_kendall_p': array([-3.55879882e-10, -3.91635038e-05, -4.10999309e-05, -5.31661458e-06,
       -8.22244396e-06, -1.01554334e-09, -1.01554334e-09, -6.71036430e-05,
       -1.99899920e-04, -1.21603834e-03, -1.12994797e-06, -1.29935955e-05,
       -1.01554334e-09, -4.57598275e-05, -1.96884727e-06, -3.70285640e-05,
       -2.29414912e-11]), 'test_rmse': array([  -5.75559134,  -14.709447  ,  -13.38127439,  -19.48235864,
        -17.94313637,  -10.32577452,   -5.11295907, -206.4501915 ,
        -68.69697269,   -9.72336777,  -27.19364197,  -11.75911501,
        -18.95276073,  -33.6287287 ,  -10.91521712,  -15.2714104 ,
        -11.6469654 ]), 'test_mae': array([ -3.6571871 ,  -8.42488092,  -6.68291499, -10.35647745,
       -11.65367425,  -6.42806848,  -3.41247519, -62.53971919,
       -26.27615683,  -5.54683678, -14.18163937,  -6.3315508 ,
        -9.04563592, -16.76962075,  -8.09984228,  -6.79169258,
        -7.56982465]), 'test_r2': array([ 0.99419374,  0.93870476,  0.96920081,  0.84659431,  0.99278403,
        0.98362837,  0.99579534, -2.5034939 , -2.88013277,  0.88016647,
        0.98963841,  0.98363297,  0.93399318,  0.80867151,  0.95921616,
        0.71910919,  0.99642369]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05913781436124809, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2125, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.629426  , 0.62107849, 0.55470181, 0.64016509, 0.63313985,
       0.66407037, 0.63611579, 0.6273303 , 0.62321758, 0.70036745,
       0.61210251, 0.61124611, 0.6086638 , 0.6903429 , 0.67184091,
       0.61825681, 0.61722183]), 'score_time': array([0.18850946, 0.19413853, 0.19174385, 0.20056558, 0.19139576,
       0.20173907, 0.18915367, 0.18602347, 0.18849683, 0.19403219,
       0.18965673, 0.18936634, 0.19236612, 0.1916194 , 0.18512392,
       0.2634232 , 0.1934979 ]), 'test_pearson_r': array([0.9745202 , 0.9145078 , 0.99585442, 0.98771285, 0.99684431,
       0.98065016, 0.98579176, 0.99524982, 0.69996713, 0.99297078,
       0.97212286, 0.97760548, 0.99964193, 0.99124182, 0.97495001,
       0.97518555, 0.76392326]), 'test_pearson_p': array([-1.74788097e-10, -7.12274813e-07, -5.58088591e-16, -1.09762290e-12,
       -1.08183746e-15, -1.36967257e-10, -1.86244581e-11, -1.53821054e-14,
       -3.66835442e-03, -1.95402336e-13, -1.44018136e-09, -3.51525641e-10,
       -7.83010037e-22, -8.12698922e-13, -7.23618767e-10, -6.80906411e-10,
       -9.15545198e-04]), 'test_spearman_r': array([0.80446652, 0.95294118, 0.98085526, 0.98823529, 0.98389982,
       0.97229708, 0.90616658, 0.9641639 , 0.85714286, 0.89704602,
       0.96428571, 0.92403969, 1.        , 0.97674575, 0.93571429,
       0.80217903, 0.61662223]), 'test_spearman_p': array([-1.71704107e-04, -1.20965793e-08, -2.40310904e-11, -8.10888105e-13,
       -4.17831228e-11, -1.38325447e-09, -3.27089173e-06, -7.22844739e-09,
       -4.44600445e-05, -5.84385820e-06, -7.07230301e-09, -8.65565027e-07,
       -0.00000000e+00, -4.48129262e-10, -3.01064562e-07, -3.20546167e-04,
       -1.43531374e-02]), 'test_kendall_r': array([0.73528449, 0.85      , 0.9412097 , 0.95      , 0.93269231,
       0.89953183, 0.765559  , 0.86965655, 0.73333333, 0.76329393,
       0.88571429, 0.82297593, 1.        , 0.89427211, 0.84761905,
       0.6963797 , 0.59330823]), 'test_kendall_p': array([-9.36808148e-05, -1.02027025e-07, -4.35438108e-07, -7.63760478e-11,
       -1.49429006e-06, -3.20072183e-06, -7.37568107e-05, -7.67778329e-06,
       -3.70285640e-05, -8.71504671e-05, -5.33772028e-08, -2.03407556e-05,
       -1.52943275e-12, -3.95717604e-06, -4.07346059e-07, -3.91763725e-04,
       -2.12652387e-03]), 'test_rmse': array([ -16.97977511,  -27.83529798,  -10.0610161 ,  -16.96398832,
         -6.80043819,  -16.62788337,   -7.90292943,  -40.42668077,
        -65.60489844,   -9.31123129,   -8.7501485 ,  -15.2564222 ,
         -5.69947219,  -14.47893534,  -20.97721617,  -11.17751313,
       -195.84966108]), 'test_mae': array([-10.30331587, -15.33589135,  -7.28311757,  -9.39946364,
        -5.2257456 ,  -7.14806391,  -5.90922626, -19.98825695,
       -22.72854581,  -6.17392153,  -6.87620453,  -8.42354562,
        -4.55346128, -10.79139833, -13.92880903,  -6.88671155,
       -77.38697495]), 'test_r2': array([0.94501973, 0.76621574, 0.98598386, 0.94661653, 0.99116934,
       0.86607801, 0.96940389, 0.96478923, 0.19856043, 0.96184532,
       0.919332  , 0.94968177, 0.99908831, 0.9776264 , 0.93681806,
       0.94798712, 0.48890989]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0667858300486432, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([3.4929142 , 3.55213547, 3.61780906, 3.5221386 , 3.620821  ,
       3.56094885, 3.68769145, 3.43936753, 3.59476638, 3.61381173,
       3.5880475 , 3.62751698, 3.51709819, 3.50283194, 3.43295193,
       3.64934683, 3.6188879 ]), 'score_time': array([0.18923593, 0.19011831, 0.25079226, 0.19673419, 0.19282079,
       0.19932675, 0.20390844, 0.19992495, 0.19317222, 0.19860625,
       0.194906  , 0.18898153, 0.19669652, 0.18591738, 0.23520446,
       0.18826342, 0.18932199]), 'test_pearson_r': array([0.99580827, 0.99851311, 0.9992869 , 0.98913458, 0.7543218 ,
       0.11522223, 0.99370997, 0.74982954, 0.97875571, 0.98648133,
       0.97496892, 0.99002065, 0.99576198, 0.98905607, 0.97952871,
       0.96163064, 0.99913534]), 'test_pearson_p': array([-6.02989614e-16, -4.29141837e-19, -2.50956534e-21, -4.65852365e-13,
       -1.15675724e-03, -6.82608677e-01, -9.50702889e-14, -1.28600660e-03,
       -2.50213755e-10, -1.35008270e-11, -7.20109552e-10, -1.89293426e-12,
       -7.33646943e-15, -3.44028534e-12, -1.97009673e-10, -1.11994980e-08,
       -2.40950131e-19]), 'test_spearman_r': array([0.66961019, 0.8849596 , 0.96983102, 0.94922763, 0.85254726,
       0.61071429, 0.99642857, 0.95      , 0.94548742, 0.79285714,
       0.97765901, 0.99553212, 0.9919575 , 0.98214286, 0.95978591,
       0.98928571, 0.97857143]), 'test_spearman_p': array([-4.54744509e-03, -5.24831240e-06, -5.63193822e-10, -2.03820935e-08,
       -5.39889501e-05, -1.55928314e-02, -2.41597932e-15, -6.08625796e-08,
       -1.05561216e-07, -4.22077185e-04, -3.46144222e-10, -1.03359251e-14,
       -4.67760510e-13, -8.15733351e-11, -1.51292714e-08, -2.99893426e-12,
       -2.64545601e-10]), 'test_kendall_r': array([0.6778302 , 0.81863099, 0.89540533, 0.87866878, 0.765559  ,
       0.67619048, 0.98095238, 0.84761905, 0.82297593, 0.71428571,
       0.9186708 , 0.97608773, 0.95694875, 0.9047619 , 0.86125388,
       0.94285714, 0.94285714]), 'test_kendall_p': array([-2.61704221e-04, -1.16785197e-05, -1.41912826e-06, -2.22140114e-06,
       -7.37568107e-05, -1.99899920e-04, -2.29414912e-11, -4.07346059e-07,
       -2.03407556e-05, -6.71036430e-05, -1.96884727e-06, -4.32916538e-07,
       -7.24094172e-07, -1.65377563e-08, -8.22244396e-06, -1.01554334e-09,
       -1.01554334e-09]), 'test_rmse': array([ -18.08540568,  -16.4509624 ,  -10.10625632,   -9.53356189,
        -31.32198772, -205.97384977,   -9.98808361,  -66.56213555,
        -14.44321396,  -12.72114239,  -16.00813267,  -13.7408195 ,
        -10.36136951,  -14.69774423,  -17.55814567,  -23.37573294,
        -27.28889331]), 'test_mae': array([ -9.99497756,  -8.44251744,  -6.24712461,  -4.93849059,
       -11.86932285, -57.74370741,  -6.79935579, -20.53415806,
       -10.62529753,  -6.17307257,  -8.82479139,  -9.22944545,
        -6.57378786,  -8.6365932 ,  -7.97420874, -13.23042863,
       -13.04264292]), 'test_r2': array([  0.99044458,   0.99354413,   0.99716572,   0.9762816 ,
         0.23016124, -13.11295084,   0.98634103,   0.24000862,
         0.95374521,   0.97255837,   0.93627772,   0.97502396,
         0.98658308,   0.97227406,   0.95328855,   0.8542578 ,
         0.9848504 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03850823381506591, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1113, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_2': {'cluster size (%)': 32, 6: {'test_mad': 63.707134562345765, 'test_ystd': 75.7565433212244, 'test_mae': 64.38961157787277, 'test_rmse': 90.8758034496586, 'test_r2': -0.4389848675169803, 'test_pearson_r': array([0.29264606]), 'test_pearson_p_value': array([0.00725849]), 'test_spearman_r': 0.35221932165331477, 'test_spearman_p_value': 0.0010926230184551797, 'test_kendall_r': 0.28306180808122294, 'test_kendall_p_value': 0.00022117491472809194, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02015651221551462, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 361, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 63.707134562345765, 'test_ystd': 75.7565433212244, 'test_mae': 64.67359557829707, 'test_rmse': 90.6582877590548, 'test_r2': -0.43210454992312264, 'test_pearson_r': array([0.28644897]), 'test_pearson_p_value': array([0.00865583]), 'test_spearman_r': 0.3559138325518796, 'test_spearman_p_value': 0.0009593260907105749, 'test_kendall_r': 0.2927435064917751, 'test_kendall_p_value': 0.00013170530309203406, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 63.707134562345765, 'test_ystd': 75.7565433212244, 'test_mae': 64.37559275845447, 'test_rmse': 90.83321554232562, 'test_r2': -0.4376364559047883, 'test_pearson_r': array([0.29440144]), 'test_pearson_p_value': array([0.00690065]), 'test_spearman_r': 0.34085534595311706, 'test_spearman_p_value': 0.001614672663010317, 'test_kendall_r': 0.2719808955702728, 'test_kendall_p_value': 0.00031125740482756915, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04183159010334869, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 5565, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 361, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 63.707134562345765, 'test_ystd': 75.7565433212244, 'test_mae': 64.3903120803833, 'test_rmse': 90.45818383875792, 'test_r2': -0.42578955150935216, 'test_pearson_r': array([0.29416881]), 'test_pearson_p_value': array([0.00694716]), 'test_spearman_r': 0.3521566232539999, 'test_spearman_p_value': 0.0010950235017914622, 'test_kendall_r': 0.2770700566050331, 'test_kendall_p_value': 0.00024002527926592895, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 85, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 154, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 63.707134562345765, 'test_ystd': 75.7565433212244, 'test_mae': 64.51277919608427, 'test_rmse': 90.85621021767163, 'test_r2': -0.4383644311885191, 'test_pearson_r': array([0.29037135]), 'test_pearson_p_value': array([0.00774644]), 'test_spearman_r': 0.3437290404316505, 'test_spearman_p_value': 0.0014648186203171747, 'test_kendall_r': 0.27021304393079926, 'test_kendall_p_value': 0.0004757778303420647, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.054004325172724674, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 28, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 104, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 63.707134562345765, 'test_ystd': 75.7565433212244, 'test_mae': 64.47466703828559, 'test_rmse': 90.57898343988352, 'test_r2': -0.42960014784543255, 'test_pearson_r': array([0.29203047]), 'test_pearson_p_value': array([0.00738779]), 'test_spearman_r': 0.3440674381858652, 'test_spearman_p_value': 0.0014480264772177194, 'test_kendall_r': 0.2673621538171429, 'test_kendall_p_value': 0.00042979978347875634, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 141, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 63.707134562345765, 'test_ystd': 75.7565433212244, 'test_mae': 64.45678104308715, 'test_rmse': 90.87705116709817, 'test_r2': -0.4390243820801969, 'test_pearson_r': array([0.2922504]), 'test_pearson_p_value': array([0.00734137]), 'test_spearman_r': 0.34711091016174744, 'test_spearman_p_value': 0.001304645877938198, 'test_kendall_r': 0.28176629158720307, 'test_kendall_p_value': 0.00023885314816026135, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03693499023328491, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 28, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 168, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_2': {'cluster size (%)': 33, 6: {'fit_time': array([2.06284785, 2.20580816, 2.2467525 ]), 'score_time': array([0.2393136 , 0.18951058, 0.19139647]), 'test_pearson_r': array([0.8448111 , 0.97887423, 0.94499327]), 'test_pearson_p': array([-8.35115718e-25, -1.09458717e-59, -1.56495836e-42]), 'test_spearman_r': array([0.84121155, 0.93113374, 0.84253018]), 'test_spearman_p': array([-2.04512256e-24, -1.47610072e-38, -2.75792929e-24]), 'test_kendall_r': array([0.7557093 , 0.79236835, 0.73257918]), 'test_kendall_p': array([-5.54921758e-25, -5.12159342e-27, -2.80195229e-23]), 'test_rmse': array([-87.33271653, -21.69157944, -25.63254874]), 'test_mae': array([-25.95352833, -12.08266364, -12.64511583]), 'test_r2': array([0.69660092, 0.95758333, 0.89117597]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.011062696125215524, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 383, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([5.38013196, 4.99421144, 4.99777603]), 'score_time': array([0.19620657, 0.1958642 , 0.18968678]), 'test_pearson_r': array([0.70887073, 0.98441352, 0.98535627]), 'test_pearson_p': array([-1.56446129e-14, -3.47646356e-65, -2.57842021e-66]), 'test_spearman_r': array([0.78332995, 0.9366173 , 0.95347502]), 'test_spearman_p': array([-3.07410329e-19, -5.06819534e-40, -1.64227161e-45]), 'test_kendall_r': array([0.64606576, 0.82329107, 0.83794677]), 'test_kendall_p': array([-1.72636727e-18, -7.72368585e-29, -5.71832135e-30]), 'test_rmse': array([-94.61808261, -22.73743897, -25.48983079]), 'test_mae': array([-29.13857624, -12.1807512 , -14.08070243]), 'test_r2': array([0.28762709, 0.96873936, 0.95176935]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0030283052736145835, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1045, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.38171864, 1.2588563 , 1.28824019]), 'score_time': array([0.19551778, 0.19403601, 0.19014692]), 'test_pearson_r': array([0.98565301, 0.61531145, 0.97399276]), 'test_pearson_p': array([-1.84211069e-67, -2.90289343e-10, -6.13972743e-56]), 'test_spearman_r': array([0.93502245, 0.8430824 , 0.94438709]), 'test_spearman_p': array([-4.90923606e-40, -2.40821333e-24, -2.44906036e-42]), 'test_kendall_r': array([0.81115296, 0.75364195, 0.85051075]), 'test_kendall_p': array([-1.32076282e-28, -1.35138075e-24, -8.49214637e-31]), 'test_rmse': array([ -29.99856283, -121.23458363,  -16.24961832]), 'test_mae': array([-15.24432106, -30.89320579,  -9.05647062]), 'test_r2': array([ 0.96426075, -0.23069758,  0.94766309]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0362850535778949, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 24, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 163, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.68186426, 1.66502047, 1.60766768]), 'score_time': array([0.190974  , 0.19483352, 0.19472098]), 'test_pearson_r': array([0.39159675, 0.89578093, 0.97347388]), 'test_pearson_p': array([-1.76342664e-04, -2.54657305e-31, -1.39288979e-55]), 'test_spearman_r': array([0.86662213, 0.86847023, 0.92518599]), 'test_spearman_p': array([-2.15001788e-27, -2.50930060e-27, -4.23224014e-37]), 'test_kendall_r': array([0.77617481, 0.74272658, 0.8068498 ]), 'test_kendall_p': array([-3.53313306e-26, -6.01683748e-24, -4.50179745e-28]), 'test_rmse': array([-120.4106512 ,  -66.96090873,  -32.26061784]), 'test_mae': array([-27.55292801, -27.83463207, -12.65165469]), 'test_r2': array([-2.26041981,  0.76559871,  0.94461931]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08122368239609294, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 512, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.86074424, 2.89502764, 2.91284108]), 'score_time': array([0.18861413, 0.19626522, 0.19574428]), 'test_pearson_r': array([0.98486107, 0.8126474 , 0.98382152]), 'test_pearson_p': array([-1.77826478e-66, -2.12282579e-21, -1.64406445e-64]), 'test_spearman_r': array([0.92203645, 0.82948922, 0.95556877]), 'test_spearman_p': array([-8.62167790e-37, -5.87310418e-23, -2.47826425e-46]), 'test_kendall_r': array([0.81620962, 0.74280233, 0.87947447]), 'test_kendall_p': array([-6.74377472e-29, -5.22223969e-24, -5.53135207e-33]), 'test_rmse': array([-19.72613439, -90.90899915, -19.32184621]), 'test_mae': array([-10.20079653, -22.7095993 ,  -9.59446161]), 'test_r2': array([0.96897217, 0.56265886, 0.96691708]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05913781436124809, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2125, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.46080089, 0.46524143, 0.47056484]), 'score_time': array([0.18836117, 0.19123602, 0.18852305]), 'test_pearson_r': array([0.9532089 , 0.93721317, 0.83939534]), 'test_pearson_p': array([-6.23765397e-46, -3.45067129e-40, -5.89718140e-24]), 'test_spearman_r': array([0.90229923, 0.90833087, 0.87121555]), 'test_spearman_p': array([-8.30777869e-33, -1.51364732e-33, -1.09712717e-27]), 'test_kendall_r': array([0.77460842, 0.75993303, 0.73819701]), 'test_kendall_p': array([-4.74917440e-26, -5.97382025e-25, -1.66605271e-23]), 'test_rmse': array([-22.85505292, -41.42028276, -89.19877753]), 'test_mae': array([-13.98451626, -20.19402159, -28.86900007]), 'test_r2': array([0.89855555, 0.86404112, 0.67662795]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0667858300486432, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.96505857, 2.91078234, 3.21074009]), 'score_time': array([0.17582107, 0.17507696, 0.18918848]), 'test_pearson_r': array([0.98655701, 0.43946653, 0.98672964]), 'test_pearson_p': array([-1.18048386e-68, -2.30288432e-05, -4.23711739e-68]), 'test_spearman_r': array([0.83724306, 0.83016839, 0.98120542]), 'test_spearman_p': array([-5.35189839e-24, -5.04074765e-23, -8.45203756e-62]), 'test_kendall_r': array([0.76431486, 0.75130526, 0.89476653]), 'test_kendall_p': array([-2.10251955e-25, -1.77545524e-24, -4.01801368e-34]), 'test_rmse': array([ -30.46909352, -122.4157341 ,  -21.3729353 ]), 'test_mae': array([-13.16607104, -28.43843982, -11.02987092]), 'test_r2': array([ 0.95815853, -1.71726867,  0.96877464]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03850823381506591, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1113, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_3': {'cluster size (%)': 25, 6: {'test_mad': 34.19891552734375, 'test_ystd': 44.9654841206328, 'test_mae': 106.57699423694612, 'test_rmse': 152.69349478778463, 'test_r2': -10.531412903560263, 'test_pearson_r': array([0.46783652]), 'test_pearson_p_value': array([9.6987353e-05]), 'test_spearman_r': 0.39236374296878446, 'test_spearman_p_value': 0.0013427401273412246, 'test_kendall_r': 0.2911512481284983, 'test_kendall_p_value': 0.0008117368008255545, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 34.19891552734375, 'test_ystd': 44.9654841206328, 'test_mae': 100.41001970434189, 'test_rmse': 147.05384879130474, 'test_r2': -9.695331353831381, 'test_pearson_r': array([0.49177597]), 'test_pearson_p_value': array([3.67747497e-05]), 'test_spearman_r': 0.3825311241594532, 'test_spearman_p_value': 0.0018115445875517204, 'test_kendall_r': 0.2723099263310175, 'test_kendall_p_value': 0.0017801078564163681, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0028552783136706608, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1495, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 34.19891552734375, 'test_ystd': 44.9654841206328, 'test_mae': 96.39633427762986, 'test_rmse': 135.2188043326768, 'test_r2': -8.043064647557593, 'test_pearson_r': array([0.45230493]), 'test_pearson_p_value': array([0.00017528]), 'test_spearman_r': 0.3738363795743502, 'test_spearman_p_value': 0.0023430994559815468, 'test_kendall_r': 0.25968567816390054, 'test_kendall_p_value': 0.0029363685105122314, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06443866330491725, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 34.19891552734375, 'test_ystd': 44.9654841206328, 'test_mae': 98.80643016958237, 'test_rmse': 142.6602595274446, 'test_r2': -9.065780884789538, 'test_pearson_r': array([0.48589773]), 'test_pearson_p_value': array([4.69766061e-05]), 'test_spearman_r': 0.380191133475219, 'test_spearman_p_value': 0.0019427626743232676, 'test_kendall_r': 0.2682607080956121, 'test_kendall_p_value': 0.0020825755193548635, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03396543014325179, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 120, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 34.19891552734375, 'test_ystd': 44.9654841206328, 'test_mae': 98.46838224792481, 'test_rmse': 142.07487910390117, 'test_r2': -8.983344162975136, 'test_pearson_r': array([0.48271836]), 'test_pearson_p_value': array([5.35289765e-05]), 'test_spearman_r': 0.38172956444920525, 'test_spearman_p_value': 0.0018555700601250334, 'test_kendall_r': 0.2728728415081611, 'test_kendall_p_value': 0.0017758655797565322, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0251208154269107, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 154, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 34.19891552734375, 'test_ystd': 44.9654841206328, 'test_mae': 104.36434465312959, 'test_rmse': 150.66934778031032, 'test_r2': -10.227712136615256, 'test_pearson_r': array([0.47842588]), 'test_pearson_p_value': array([6.37187551e-05]), 'test_spearman_r': 0.38992630984500903, 'test_spearman_p_value': 0.001447447589059265, 'test_kendall_r': 0.2859517764392915, 'test_kendall_p_value': 0.0009816512456576104, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06289099067126315, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 26, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 80, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 34.19891552734375, 'test_ystd': 44.9654841206328, 'test_mae': 85.46834124231339, 'test_rmse': 118.81863475096621, 'test_r2': -5.982493959627212, 'test_pearson_r': array([0.4623802]), 'test_pearson_p_value': array([0.00011979]), 'test_spearman_r': 0.35878425958044047, 'test_spearman_p_value': 0.0035992076354056705, 'test_kendall_r': 0.23736894019669036, 'test_kendall_p_value': 0.0065535827121553135, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.023349692434501346, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 117, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_3': {'cluster size (%)': 25, 6: {'fit_time': array([2.4301796 , 2.60733461, 2.27113104, 2.11996579]), 'score_time': array([0.19208241, 0.19099331, 0.19143367, 0.20695186]), 'test_pearson_r': array([0.96555994, 0.74065258, 0.98950422, 0.96221106]), 'test_pearson_p': array([-1.50526886e-38, -1.75915625e-12, -1.19514039e-54, -9.85383557e-37]), 'test_spearman_r': array([0.85683685, 0.91495198, 0.93558652, 0.94020932]), 'test_spearman_p': array([-8.71602053e-20, -1.62275914e-26, -3.51464044e-30, -1.06862781e-30]), 'test_kendall_r': array([0.76841847, 0.84063641, 0.81838833, 0.81644264]), 'test_kendall_p': array([-2.04065037e-19, -4.79568100e-23, -9.36123039e-22, -2.11942935e-21]), 'test_rmse': array([-40.1120777 , -97.05080186, -17.68410536, -21.07278501]), 'test_mae': array([-14.35123464, -20.9232218 ,  -8.25197691, -11.39318919]), 'test_r2': array([0.93053712, 0.33077085, 0.9769447 , 0.92316633]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.011062696125215524, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 383, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([5.08665943, 5.19206882, 5.01011753, 5.26851702]), 'score_time': array([0.19574952, 0.18962884, 0.20691347, 0.26216173]), 'test_pearson_r': array([0.89116224, 0.81001553, 0.97695093, 0.96145258]), 'test_pearson_p': array([-2.65698342e-23, -3.05653640e-16, -5.72542977e-44, -1.80418128e-36]), 'test_spearman_r': array([0.79357715, 0.85263163, 0.94078432, 0.94079732]), 'test_spearman_p': array([-3.19273609e-15, -2.02955435e-19, -2.68679317e-31, -7.93576164e-31]), 'test_kendall_r': array([0.63601315, 0.76138748, 0.81210674, 0.82130779]), 'test_kendall_p': array([-1.32301199e-13, -5.10229181e-19, -1.89013652e-21, -1.15573539e-21]), 'test_rmse': array([-56.6255889 , -98.97557853, -28.84401298, -22.05606516]), 'test_mae': array([-23.83339354, -24.86936009, -14.16012666, -13.12423567]), 'test_r2': array([0.77637345, 0.56015552, 0.9404757 , 0.91504837]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0030283052736145835, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1045, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.42922688, 1.32937002, 1.33290958, 1.44200587]), 'score_time': array([0.18874121, 0.20368767, 0.19023967, 0.19652772]), 'test_pearson_r': array([0.98728394, 0.971174  , 0.52882799, 0.97476473]), 'test_pearson_p': array([-4.87785084e-52, -6.02406819e-41, -5.94120836e-06, -4.34469791e-42]), 'test_spearman_r': array([0.95990035, 0.95460408, 0.85849171, 0.94448468]), 'test_spearman_p': array([-1.66745001e-36, -7.66403859e-35, -6.20363391e-20, -1.14213946e-31]), 'test_kendall_r': array([0.87108175, 0.85631879, 0.78814449, 0.86215604]), 'test_kendall_p': array([-1.67047974e-24, -8.57676063e-24, -2.07917527e-20, -1.41892586e-23]), 'test_rmse': array([-25.63477133, -36.03896534, -99.31247531, -16.37939994]), 'test_mae': array([-12.41942971, -12.4426504 , -21.06923662,  -9.23978511]), 'test_r2': array([ 0.97163902,  0.94186306, -0.86838099,  0.94948733]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0362850535778949, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 24, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 163, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.78712106, 1.63814902, 1.75531197, 1.59967375]), 'score_time': array([0.19049406, 0.20088792, 0.20032954, 0.19491029]), 'test_pearson_r': array([0.9673032 , 0.70136009, 0.96469414, 0.97135222]), 'test_pearson_p': array([-3.00874235e-39, -7.67696495e-11, -3.24806488e-38, -2.10727251e-40]), 'test_spearman_r': array([0.9354548 , 0.87130509, 0.94124592, 0.91647587]), 'test_spearman_p': array([-3.74071107e-30, -3.81961139e-21, -2.11457339e-31, -2.36789697e-26]), 'test_kendall_r': array([0.83806909, 0.79691661, 0.8535627 , 0.81043541]), 'test_kendall_p': array([-1.03816101e-22, -7.58484580e-21, -1.27133886e-23, -3.36850853e-21]), 'test_rmse': array([ -18.57299504, -140.64759995,  -17.99399251,  -37.37540567]), 'test_mae': array([ -9.73686289, -33.91700117,  -7.82441294, -15.60003489]), 'test_r2': array([0.93295341, 0.1590231 , 0.92269692, 0.93997224]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08122368239609294, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 512, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.99082017, 2.9184103 , 2.97462249, 2.78377199]), 'score_time': array([0.19431186, 0.18664122, 0.19027686, 0.1774869 ]), 'test_pearson_r': array([0.99345653, 0.59100737, 0.96561671, 0.98251451]), 'test_pearson_p': array([-4.35398772e-61, -2.18263675e-07, -1.43026071e-38, -5.59929521e-47]), 'test_spearman_r': array([0.92663683, 0.91394853, 0.82318995, 0.94525598]), 'test_spearman_p': array([-1.84628295e-28, -2.31209479e-26, -3.93184303e-17, -7.48782634e-32]), 'test_kendall_r': array([0.83458805, 0.83128763, 0.74819181, 0.84819941]), 'test_kendall_p': array([-1.28034313e-22, -1.39955123e-22, -1.82113022e-18, -4.55522042e-23]), 'test_rmse': array([-14.38812035, -99.00504779, -39.43022666, -20.94918234]), 'test_mae': array([ -7.40168052, -19.67726725, -15.7198965 , -10.77815649]), 'test_r2': array([ 0.98545231, -0.32498537,  0.9323113 ,  0.96395429]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05913781436124809, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2125, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.56223226, 0.58110571, 0.61982155, 0.56811976]), 'score_time': array([0.20369458, 0.19769168, 0.20682788, 0.19523239]), 'test_pearson_r': array([0.94527728, 0.94924987, 0.99642518, 0.79175726]), 'test_pearson_p': array([-2.39549283e-32, -2.36882122e-33, -2.44074021e-69, -6.74169321e-15]), 'test_spearman_r': array([0.93433784, 0.90342183, 0.9649263 , 0.85724439]), 'test_spearman_p': array([-6.31351282e-30, -7.45082864e-25, -2.64779798e-38, -1.56964767e-19]), 'test_kendall_r': array([0.81192996, 0.74584002, 0.86018294, 0.72297423]), 'test_kendall_p': array([-2.08093134e-21, -2.14472904e-18, -6.31591589e-24, -4.91263125e-17]), 'test_rmse': array([ -24.61338461,  -40.00680379,   -9.96439381, -102.31921493]), 'test_mae': array([-14.40726541, -15.160273  ,  -6.77216434, -32.88997675]), 'test_r2': array([0.88537655, 0.89639923, 0.99146882, 0.56753779]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0667858300486432, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([3.17259097, 3.13889122, 3.51220846, 3.31590414]), 'score_time': array([0.18626571, 0.1888783 , 0.19360614, 0.19387197]), 'test_pearson_r': array([0.98778921, 0.47747055, 0.98169854, 0.98955231]), 'test_pearson_p': array([-1.37027456e-52, -5.77602972e-05, -4.29835442e-47, -7.23522131e-54]), 'test_spearman_r': array([0.79996521, 0.87149898, 0.94923223, 0.97519375]), 'test_spearman_p': array([-1.31654502e-15, -3.65356962e-21, -2.39425147e-33, -2.56951513e-42]), 'test_kendall_r': array([0.72962101, 0.7954721 , 0.86432492, 0.87912636]), 'test_kendall_p': array([-1.35326628e-17, -8.89040677e-21, -3.76373362e-24, -1.05584005e-24]), 'test_rmse': array([ -33.74093544, -105.89145044,  -15.639078  ,  -20.97729628]), 'test_mae': array([-14.38784097, -25.63423096,  -8.80343054, -11.02600446]), 'test_r2': array([ 0.96058618, -1.43208035,  0.96356804,  0.97320174]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03850823381506591, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1113, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'overall data shape': {'targets_shape': (259, 1), 'training_features_shape': (259, 522)}}
Trimer_scaler
Filename: (ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM4 polymer_solvent HSP cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM4 polymer_solvent HSP cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_predictions.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM4 polymer_solvent HSP cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_ClusterTruth.json
Done Saving scores!
------------------------------ 
Plotted Comparitive Cluster Scores!
______________________________ 
Plotted Parity Plots!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c205n07>
Subject: Job 294630: <XGBR_Rg1 (nm)_ECFP_Trimer_KM4 polymer_solvent HSP cluster_20250311> in cluster <Hazel> Done

Job <XGBR_Rg1 (nm)_ECFP_Trimer_KM4 polymer_solvent HSP cluster_20250311> was submitted from host <c040n04> by user <sdehgha2> in cluster <Hazel> at Tue Mar 11 18:16:47 2025
Job was executed on host(s) <6*c205n07>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Wed Mar 12 00:07:00 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Wed Mar 12 00:07:00 2025
Terminated at Wed Mar 12 16:50:34 2025
Results reported at Wed Mar 12 16:50:34 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input



#BSUB -n 6
#BSUB -W 72:05
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "XGBR_Rg1 (nm)_ECFP_Trimer_KM4 polymer_solvent HSP cluster_20250311"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_ECFP_Trimer_3_count_KM4 polymer_solvent HSP cluster_20250311.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_ECFP_Trimer_3_count_KM4 polymer_solvent HSP cluster_20250311.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../make_ood_prediction.py --target_features "Rg1 (nm)"                                       --representation "ECFP"                                       --regressor_type "XGBR"                                       --radius "3"                                       --vector "count"                                       --oligomer_representation "Trimer"                                       --numerical_feats 'Mw (g/mol)' 'PDI' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" 'solvent dP' 'solvent dD' 'solvent dH'                                       --clustering_method "KM4 polymer_solvent HSP cluster" 



------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   226804.28 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.98 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              30
    Max Threads :                                33
    Run time :                                   60215 sec.
    Turnaround time :                            81227 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_ECFP_Trimer_3_count_KM4 polymer_solvent HSP cluster_20250311.err> for stderr output of this job.

