


-------------------------------------------------- 
OOD TEST ON 0



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005801989156479493), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1042), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004583701543567493), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1256), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09186286651209248), ('regressor__regressor__max_depth', 1809), ('regressor__regressor__n_estimators', 812), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08576607828813436), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 938), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002737308926840842), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1487), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07694327959159859), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 243), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08786373832419771), ('regressor__regressor__max_depth', 174), ('regressor__regressor__n_estimators', 350), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09234903506256291), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 640), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09435953021742402), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05287544412212236), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 61), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07352481813242628), ('regressor__regressor__max_depth', 1264), ('regressor__regressor__n_estimators', 1246), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.028101708214647265), ('regressor__regressor__max_depth', 492), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.051113274124609955), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 954), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 129), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030980461200897907), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02564175754691925), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 149), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06826212184643114), ('regressor__regressor__max_depth', 36), ('regressor__regressor__n_estimators', 117), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035564397785016806), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 517), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.023316846793756167), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 106), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06759280797836631), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1785), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08716049340897813), ('regressor__regressor__max_depth', 762), ('regressor__regressor__n_estimators', 177), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.016376637529849927), ('regressor__regressor__max_depth', 179), ('regressor__regressor__n_estimators', 514), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04050540704335948), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 439), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0727880237480246), ('regressor__regressor__max_depth', 502), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020153992389201182), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0026771005124790956), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08883851288243451), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0810684494950683), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 1



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08885985550152493), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1635), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014566494657521464), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 592), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006887672892385282), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1065), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0592404376722229), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 629), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003322753560823906), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004544264505427259), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1194), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07693173041362837), ('regressor__regressor__max_depth', 269), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003818310327303876), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1305), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006118140964111096), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1002), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02227413264190121), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1675), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06183044375245729), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 4642), ('regressor__regressor__n_estimators', 155), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09729625043201726), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002123753163330099), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.027364528220782454), ('regressor__regressor__max_depth', 33), ('regressor__regressor__n_estimators', 454), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07896221162163979), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 342), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 51), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08843390661369183), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0038979249168071307), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03358882117017374), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 127), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05179840222474546), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 51), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06778234695407154), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 422), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1694), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07831243889949624), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08393381457057432), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07148534359350282), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 73), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 129), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07217983236425222), ('regressor__regressor__max_depth', 940), ('regressor__regressor__n_estimators', 182), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 12), ('regressor__regressor__n_estimators', 258), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07940688657530164), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 328), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06865035827827354), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06531364046987571), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07084108917808431), ('regressor__regressor__max_depth', 455), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003217798545709284), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 2



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 72), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003954112179684783), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1882), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.062148758582417765), ('regressor__regressor__max_depth', 4580), ('regressor__regressor__n_estimators', 848), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08637869246666616), ('regressor__regressor__max_depth', 555), ('regressor__regressor__n_estimators', 683), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 81), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08307641846487798), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0037738374451801145), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1326), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00369882003809945), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1457), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08961389841356894), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1520), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008808958422215145), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05752191215776255), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1778), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03482709903373948), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 158), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0977779696679567), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03594841391063365), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 181), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07161011132837099), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 650), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004620642903251025), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03472702122157944), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 126), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029729794621342023), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09457504715379196), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 422), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.016110041487957995), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 483), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01329285946560504), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1445), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025228751477570723), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 135), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0767621489197617), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 726), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08904717624130255), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.057806652011402254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 83), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0793340681581129), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 91), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.095102066922768), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 92), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06764593020769127), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 55), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.016671454770569687), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.030738038020056865), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05090945865671016), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 348), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08175734278862115), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 59), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003999915303363261), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])


{'CO_0': {'cluster size (%)': 64, 6: {'test_mad': 69.48759226157642, 'test_ystd': 136.34831400977086, 'test_mae': 83.27243855437865, 'test_rmse': 164.9386073717828, 'test_r2': -0.4633395228616026, 'test_pearson_r': array([-0.13147153]), 'test_pearson_p_value': array([0.09132882]), 'test_spearman_r': 0.030417371479540614, 'test_spearman_p_value': 0.6972545993002071, 'test_kendall_r': 0.025936882041315803, 'test_kendall_p_value': 0.6254418471055949, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.004583701543567493, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1256, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 69.48759226157642, 'test_ystd': 136.34831400977086, 'test_mae': 83.03541240871935, 'test_rmse': 165.15020411758772, 'test_r2': -0.4670965146343742, 'test_pearson_r': array([-0.12518963]), 'test_pearson_p_value': array([0.1080332]), 'test_spearman_r': 0.012824990136518203, 'test_spearman_p_value': 0.8697338328971989, 'test_kendall_r': 0.028827270200092767, 'test_kendall_p_value': 0.584828178871375, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08786373832419771, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 174, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 350, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 69.48759226157642, 'test_ystd': 136.34831400977086, 'test_mae': 82.38924835338915, 'test_rmse': 164.89979036867953, 'test_r2': -0.4626508330308863, 'test_pearson_r': array([-0.12918794]), 'test_pearson_p_value': array([0.09714567]), 'test_spearman_r': 0.029133154435939824, 'test_spearman_p_value': 0.7094482261704584, 'test_kendall_r': 0.04956902057516036, 'test_kendall_p_value': 0.34966786496764257, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 61, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 69.48759226157642, 'test_ystd': 136.34831400977086, 'test_mae': 82.30394997604186, 'test_rmse': 163.34811193480988, 'test_r2': -0.43525376177744945, 'test_pearson_r': array([-0.13203464]), 'test_pearson_p_value': array([0.08993797]), 'test_spearman_r': 0.015073276325110171, 'test_spearman_p_value': 0.8471555102340248, 'test_kendall_r': 0.01849246901805279, 'test_kendall_p_value': 0.731446064212262, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.028101708214647265, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 492, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 139, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 69.48759226157642, 'test_ystd': 136.34831400977086, 'test_mae': 82.15319700076184, 'test_rmse': 164.54635757043027, 'test_r2': -0.4563876985218056, 'test_pearson_r': array([-0.13055957]), 'test_pearson_p_value': array([0.09361763]), 'test_spearman_r': 0.021283490141019493, 'test_spearman_p_value': 0.7854856683345847, 'test_kendall_r': 0.03843658592598796, 'test_kendall_p_value': 0.4703365629928191, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 69.48759226157642, 'test_ystd': 136.34831400977086, 'test_mae': 82.15319700076184, 'test_rmse': 164.54635757043027, 'test_r2': -0.4563876985218056, 'test_pearson_r': array([-0.13055957]), 'test_pearson_p_value': array([0.09361763]), 'test_spearman_r': 0.021283490141019493, 'test_spearman_p_value': 0.7854856683345847, 'test_kendall_r': 0.03843658592598796, 'test_kendall_p_value': 0.4703365629928191, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 69.48759226157642, 'test_ystd': 136.34831400977086, 'test_mae': 82.97873617375016, 'test_rmse': 164.77252201868185, 'test_r2': -0.46039397965945583, 'test_pearson_r': array([-0.12901344]), 'test_pearson_p_value': array([0.09760197]), 'test_spearman_r': 0.020590810847522973, 'test_spearman_p_value': 0.7923060198341189, 'test_kendall_r': 0.03191902839557, 'test_kendall_p_value': 0.5468565290703473, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08883851288243451, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 79, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_0': {'cluster size (%)': 50, 6: {'fit_time': array([12.62638307, 12.59847593]), 'score_time': array([0.16396594, 0.17058992]), 'test_pearson_r': array([0.83635475, 0.97527762]), 'test_pearson_p': array([-3.21152790e-35, -3.92196488e-85]), 'test_spearman_r': array([0.82258036, 0.89585361]), 'test_spearman_p': array([-3.55452665e-33, -1.43593247e-46]), 'test_kendall_r': array([0.68902703, 0.79235487]), 'test_kendall_p': array([-5.18046939e-31, -5.25464327e-40]), 'test_rmse': array([-76.46414016, -21.96789921]), 'test_mae': array([-26.58359407, -10.49451643]), 'test_r2': array([0.68600122, 0.95034491]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([9.84823561, 7.52143216]), 'score_time': array([0.15549922, 0.15821528]), 'test_pearson_r': array([0.86405762, 0.95879145]), 'test_pearson_p': array([-5.67448386e-40, -2.88475365e-71]), 'test_spearman_r': array([0.77923735, 0.84796732]), 'test_spearman_p': array([-9.54748135e-28, -8.08316571e-37]), 'test_kendall_r': array([0.6826883, 0.7371687]), 'test_kendall_p': array([-3.90220068e-30, -1.31932505e-34]), 'test_rmse': array([-71.08191925, -29.29414833]), 'test_mae': array([-21.4246292 , -16.45411602]), 'test_r2': array([0.72747332, 0.91319051]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.57464385, 1.8230269 ]), 'score_time': array([0.15666413, 0.15371776]), 'test_pearson_r': array([0.28704158, 0.66915007]), 'test_pearson_p': array([-9.29191402e-04, -4.41193691e-18]), 'test_spearman_r': array([0.81363449, 0.85360946]), 'test_spearman_p': array([-6.10869341e-32, -8.82905377e-38]), 'test_kendall_r': array([0.7056164 , 0.75230318]), 'test_kendall_p': array([-1.58503377e-32, -2.42105583e-36]), 'test_rmse': array([-148.10983204,  -71.98528254]), 'test_mae': array([-40.05175132, -17.49003548]), 'test_r2': array([0.03808738, 0.0257032 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.41326451, 1.51439619]), 'score_time': array([0.15242648, 0.15866852]), 'test_pearson_r': array([0.74454761, 0.96420793]), 'test_pearson_p': array([-3.22468544e-24, -4.44245884e-75]), 'test_spearman_r': array([0.88739708, 0.87124445]), 'test_spearman_p': array([-7.12687801e-45, -4.55414726e-41]), 'test_kendall_r': array([0.7811597 , 0.75592519]), 'test_kendall_p': array([-2.07118330e-39, -8.75463799e-37]), 'test_rmse': array([-100.37369441,  -32.45115027]), 'test_mae': array([-23.57797138, -15.97189715]), 'test_r2': array([0.30299872, 0.92486989]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([1.28624964, 1.47275352]), 'score_time': array([0.15730238, 0.15627456]), 'test_pearson_r': array([0.80824607, 0.96435349]), 'test_pearson_p': array([-3.14994013e-31, -3.44528632e-75]), 'test_spearman_r': array([0.87938165, 0.81967161]), 'test_spearman_p': array([-4.46427450e-43, -1.59787064e-32]), 'test_kendall_r': array([0.77081481, 0.73316531]), 'test_kendall_p': array([-1.79026345e-38, -1.14817771e-34]), 'test_rmse': array([-72.04809824, -37.22257206]), 'test_mae': array([-17.01992577, -17.06797209]), 'test_r2': array([0.52025133, 0.9214781 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.61345673, 0.64682317]), 'score_time': array([0.20831156, 0.22819924]), 'test_pearson_r': array([0.92773526, 0.8344678 ]), 'test_pearson_p': array([-1.24121617e-56, -1.14352821e-34]), 'test_spearman_r': array([0.85970471, 0.8501441 ]), 'test_spearman_p': array([-3.69096379e-39, -3.47737139e-37]), 'test_kendall_r': array([0.70956393, 0.7340113 ]), 'test_kendall_p': array([-1.29270573e-32, -1.43600153e-34]), 'test_rmse': array([-38.87073551, -76.94253003]), 'test_mae': array([-19.30974921, -25.8249508 ]), 'test_r2': array([0.85426351, 0.67268717]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([7.64466476, 8.71607518]), 'score_time': array([0.1574254 , 0.16202211]), 'test_pearson_r': array([0.941066  , 0.97006952]), 'test_pearson_p': array([-4.08727818e-62, -6.23684045e-80]), 'test_spearman_r': array([0.83916161, 0.94257073]), 'test_spearman_p': array([-1.16644487e-35, -2.46229069e-62]), 'test_kendall_r': array([0.77159315, 0.84307258]), 'test_kendall_p': array([-1.83662126e-38, -2.37836931e-45]), 'test_rmse': array([-51.37807281, -28.08620485]), 'test_mae': array([-17.61692014, -14.61736275]), 'test_r2': array([0.84293497, 0.93169213]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_1': {'cluster size (%)': 7, 6: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 121.22095996655916, 'test_rmse': 264.2505665202505, 'test_r2': -132.220661818647, 'test_pearson_r': array([-0.23588864]), 'test_pearson_p_value': array([0.33093936]), 'test_spearman_r': 0.23866196109235743, 'test_spearman_p_value': 0.3251178141466685, 'test_kendall_r': 0.22756122983182978, 'test_kendall_p_value': 0.18138535910446807, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.014566494657521464, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 592, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 120.1290850709614, 'test_rmse': 262.19401533908126, 'test_r2': -130.15512987746106, 'test_pearson_r': array([-0.2374439]), 'test_pearson_p_value': array([0.32766716]), 'test_spearman_r': 0.22695927344783315, 'test_spearman_p_value': 0.35009532871532956, 'test_kendall_r': 0.1952126980229278, 'test_kendall_p_value': 0.25684798977363055, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.004544264505427259, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1194, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 120.87142375343724, 'test_rmse': 264.21943864249664, 'test_r2': -132.18927772524248, 'test_pearson_r': array([-0.23690679]), 'test_pearson_p_value': array([0.32879505]), 'test_spearman_r': 0.23866196109235743, 'test_spearman_p_value': 0.3251178141466685, 'test_kendall_r': 0.22756122983182978, 'test_kendall_p_value': 0.18138535910446807, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.027364528220782454, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 33, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 454, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 119.81985338311446, 'test_rmse': 264.06007826630224, 'test_r2': -132.02866355772662, 'test_pearson_r': array([-0.23996387]), 'test_pearson_p_value': array([0.32240597]), 'test_spearman_r': 0.23866196109235743, 'test_spearman_p_value': 0.3251178141466685, 'test_kendall_r': 0.22756122983182978, 'test_kendall_p_value': 0.18138535910446807, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07896221162163979, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 342, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 118.86421437715228, 'test_rmse': 262.361798105682, 'test_r2': -130.32304073843665, 'test_pearson_r': array([-0.23685974]), 'test_pearson_p_value': array([0.32889396]), 'test_spearman_r': 0.23582487006688915, 'test_spearman_p_value': 0.3310739230625631, 'test_kendall_r': 0.20741349164936076, 'test_kendall_p_value': 0.22830382685439277, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07831243889949624, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 71, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 119.20103439732601, 'test_rmse': 263.88092784546757, 'test_r2': -131.8482193435976, 'test_pearson_r': array([-0.24280746]), 'test_pearson_p_value': array([0.31652964]), 'test_spearman_r': 0.23866196109235743, 'test_spearman_p_value': 0.3251178141466685, 'test_kendall_r': 0.22756122983182978, 'test_kendall_p_value': 0.18138535910446807, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 129, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 120.49881737558465, 'test_rmse': 263.351724498406, 'test_r2': -131.31590935699646, 'test_pearson_r': array([-0.23832841]), 'test_pearson_p_value': array([0.32581475]), 'test_spearman_r': 0.22695927344783315, 'test_spearman_p_value': 0.35009532871532956, 'test_kendall_r': 0.1952126980229278, 'test_kendall_p_value': 0.25684798977363055, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003217798545709284, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_1': {'cluster size (%)': 7, 6: {'fit_time': array([21.60830426, 21.21557188, 21.62426877, 20.58804846, 21.20614839,
       21.4179976 , 21.42488313, 21.47107768, 22.85008955, 20.93456745,
       21.59601665, 22.4162178 , 19.90733099, 21.82081056]), 'score_time': array([0.15404391, 0.16804385, 0.15674162, 0.16029406, 0.22727323,
       0.15857935, 0.16647625, 0.1620307 , 0.16650891, 0.26814818,
       0.16757917, 0.15884733, 0.17443871, 0.15888023]), 'test_pearson_r': array([0.95265244, 0.99916399, 0.99238802, 0.95299858, 0.09946255,
       0.98194615, 0.9924181 , 0.99700094, 0.98644372, 0.99625177,
       0.9958847 , 0.95620027, 0.99164437, 0.90229355]), 'test_pearson_p': array([-3.23175254e-10, -4.74969195e-25, -6.61773525e-17, -3.03995096e-10,
       -6.85388390e-01, -9.85199667e-14, -6.39936129e-17, -3.25964914e-19,
       -5.49659753e-14, -1.93589757e-18, -4.08302323e-18, -5.93460990e-10,
       -1.16376261e-15, -3.06192863e-07]), 'test_spearman_r': array([0.65614035, 0.99034241, 0.98245614, 0.87017544, 0.68889871,
       0.98245614, 0.86315789, 0.95090554, 0.93340229, 0.9628483 ,
       0.98502853, 0.89979387, 0.97210796, 0.94829572]), 'test_spearman_p': array([-2.28228868e-03, -4.97018651e-16, -7.73558991e-14, -1.28288236e-06,
       -1.10623477e-03, -7.73558991e-14, -1.95749994e-06, -1.45407914e-09,
       -1.57680662e-08, -1.62399435e-10, -1.21105572e-13, -3.71743858e-07,
       -1.68763179e-11, -2.18242419e-09]), 'test_kendall_r': array([0.56725146, 0.94705882, 0.92982456, 0.75438596, 0.63343381,
       0.91812865, 0.77777778, 0.87132984, 0.82623395, 0.89542484,
       0.93115255, 0.7697535 , 0.9013353 , 0.83172394]), 'test_kendall_p': array([-4.29034340e-04, -1.70481486e-08, -2.06767062e-12, -5.24238695e-07,
       -1.56352712e-04, -7.20796807e-12, -1.64978258e-07, -5.42460793e-07,
       -1.78800684e-06, -2.96242626e-10, -7.34599652e-08, -9.07720685e-06,
       -2.02850566e-07, -1.70822672e-06]), 'test_rmse': array([ -22.28737117,   -7.07207081,  -32.11808585,  -58.93550925,
       -179.50057817,  -14.69157821,   -9.56469884,   -6.44395283,
        -31.48744641,   -6.4589207 ,  -12.2294939 ,  -22.25555183,
         -9.76948414,  -25.43288286]), 'test_mae': array([-11.59625496,  -4.92756406, -13.69238169, -21.98989755,
       -53.37180515,  -9.33877795,  -6.75927282,  -4.05223477,
       -14.91252395,  -4.38653613,  -7.14488339, -12.7177323 ,
        -5.84043582, -12.66261853]), 'test_r2': array([  0.88815104,   0.9983128 ,   0.97436528,   0.90488842,
       -10.01055427,   0.96099472,   0.97661743,   0.99279971,
         0.97043626,   0.99183349,   0.98519309,   0.90819725,
         0.98063919,   0.79502313]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([19.2637701 , 19.65376449, 14.01679659, 20.2113452 , 22.26367211,
       18.88931584, 21.53199029, 18.23288226, 19.65351844, 13.63890839,
       18.49584913, 18.06826091, 16.16708207, 18.62588787]), 'score_time': array([0.15680861, 0.15884471, 0.16382504, 0.15560722, 0.15018439,
       0.16115999, 0.15512633, 0.18606663, 0.15762448, 0.16034722,
       0.16324854, 0.31762958, 0.16832376, 0.16581988]), 'test_pearson_r': array([0.98702364, 0.9853404 , 0.95399078, 0.99867458, 0.64513417,
       0.98451964, 0.98667933, 0.87760774, 0.95784235, 0.98889137,
       0.99184788, 0.98650911, 0.95987518, 0.98077891]), 'test_pearson_p': array([-6.05240435e-15, -1.69706297e-14, -2.54436238e-10, -2.38321134e-23,
       -2.85755178e-03, -2.68902694e-14, -7.55258938e-15, -1.71283893e-06,
       -4.39430652e-10, -1.12610819e-14, -9.56027559e-16, -5.28914889e-14,
       -2.97836289e-10, -8.82043587e-13]), 'test_spearman_r': array([0.84101897, 0.841089  , 0.93807651, 0.8205354 , 0.72375996,
       0.87055735, 0.97017544, 0.91219057, 0.9705154 , 0.95818288,
       0.98657077, 0.96078431, 0.87822497, 0.92720714]), 'test_spearman_p': array([-6.47022373e-06, -6.44765773e-06, -3.00918779e-09, -1.68355149e-05,
       -4.60058454e-04, -1.25285079e-06, -6.74895947e-12, -1.34535861e-07,
       -2.61829819e-11, -4.12268255e-10, -5.09977899e-14, -2.48656703e-10,
       -1.64827026e-06, -3.14918237e-08]), 'test_kendall_r': array([0.69616822, 0.70001211, 0.84956122, 0.7155456 , 0.68439258,
       0.73900611, 0.90643275, 0.79606986, 0.90736436, 0.87869325,
       0.92765165, 0.85620915, 0.77777778, 0.8000043 ]), 'test_kendall_p': array([-3.53615201e-05, -3.06761171e-05, -4.48423156e-07, -1.94725637e-05,
       -4.78684059e-05, -1.02950287e-05, -2.27996852e-11, -4.43688739e-06,
       -1.92223638e-07, -3.78914056e-07, -8.87180979e-08, -5.28843419e-09,
       -4.36097754e-07, -3.75687779e-06]), 'test_rmse': array([  -6.62922141,  -20.9877731 ,  -57.70540263,   -7.44913976,
       -178.06502418,  -14.7468112 ,  -31.9889781 ,  -20.72908793,
        -13.83485388,  -42.93654746,   -9.18355731,  -16.39972139,
        -25.31712805,  -15.51184879]), 'test_mae': array([ -5.49050953, -13.75544648, -20.54058869,  -5.30771876,
       -57.91437261, -10.43000731, -16.58764573, -10.79757318,
        -9.90031526, -20.38615147,  -6.55039863, -10.27947738,
       -16.82931133, -11.56076365]), 'test_r2': array([0.96654268, 0.94131175, 0.90573687, 0.99265187, 0.03575383,
       0.96074818, 0.96736992, 0.54947613, 0.9132435 , 0.95339482,
       0.9829585 , 0.94444435, 0.91886745, 0.95653684]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([4.46043396, 4.03353357, 3.73324943, 4.89946651, 4.03701377,
       3.59521914, 4.64642358, 5.08766246, 4.93117738, 4.66274405,
       3.80672932, 3.01786089, 4.1182034 , 4.8099699 ]), 'score_time': array([0.16047335, 0.16495156, 0.22484589, 0.16813183, 0.27433443,
       0.21878505, 0.17027378, 0.17546511, 0.16279006, 0.16883254,
       0.1585896 , 0.16464448, 0.23330569, 0.23452187]), 'test_pearson_r': array([0.99477329, 0.98525016, 0.99634232, 0.99819299, 0.91737087,
       0.94951256, 0.98641658, 0.05694934, 0.99265328, 0.99402837,
       0.98663998, 0.98266611, 0.97184557, 0.99387031]), 'test_pearson_p': array([-2.73153638e-18, -1.78739234e-14, -1.32130079e-19, -3.31601505e-22,
       -3.25244276e-08, -5.51820185e-10, -8.90870845e-15, -8.22406323e-01,
       -4.17007513e-16, -7.98002032e-17, -4.89433321e-14, -3.88152472e-13,
       -1.81740048e-11, -9.83000621e-17]), 'test_spearman_r': array([0.97323397, 0.92233445, 0.96972366, 0.98552006, 0.91794656,
       0.94736842, 0.98727522, 0.63880289, 0.8295459 , 0.95872033,
       0.98915862, 0.85611179, 0.82249742, 0.98553772]), 'test_spearman_p': array([-2.71850932e-12, -1.95433775e-08, -7.65719604e-12, -1.52912058e-14,
       -3.07092205e-08, -7.80082922e-10, -5.12890798e-15, -4.32212480e-03,
       -2.06767678e-05, -3.72370945e-10, -9.27540331e-15, -5.82336862e-06,
       -2.79261707e-05, -9.19675963e-14]), 'test_kendall_r': array([0.9266902 , 0.83284816, 0.89149943, 0.93842046, 0.76246662,
       0.84795322, 0.9266902 , 0.59477124, 0.79606986, 0.86928105,
       0.94426737, 0.75757961, 0.76470588, 0.92765165]), 'test_kendall_p': array([-3.18217344e-08, -6.66104086e-07, -1.03161918e-07, -2.12970819e-08,
       -5.34143245e-06, -2.53233265e-09, -3.18217344e-08, -3.24628494e-04,
       -4.43688739e-06, -2.15825858e-09, -4.80698932e-08, -1.45284610e-05,
       -8.04176944e-07, -8.87180979e-08]), 'test_rmse': array([  -8.30255002,  -31.30871245,  -32.02568594,  -11.80184533,
        -16.52976024,  -59.03116823,  -12.39808134, -186.00506232,
        -16.90450566,   -7.86856227,  -16.36393258,  -14.87609836,
        -12.29218939,   -8.76292811]), 'test_mae': array([ -5.9466156 , -14.42413046, -17.11024987,  -7.65778986,
       -10.15566084, -20.16525508,  -5.61369291, -53.06325123,
       -10.58575133,  -5.64603669, -10.18473194,  -9.01183149,
        -6.40027581,  -5.06333863]), 'test_r2': array([  0.98561286,   0.96737115,   0.97487375,   0.99616376,
         0.83920039,   0.89765822,   0.96493334, -25.53914302,
         0.97378393,   0.98655854,   0.95975034,   0.9537098 ,
         0.94074791,   0.98596649]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([3.7950356 , 3.88844013, 3.77873373, 4.02467752, 2.37256217,
       3.11298585, 3.93923068, 3.71751928, 3.66479063, 2.79079103,
       3.94174862, 3.90731525, 3.53724957, 3.65392947]), 'score_time': array([0.21403122, 0.15297532, 0.15248966, 0.15360689, 0.16208601,
       0.35507774, 0.24642491, 0.21762085, 0.16502237, 0.16082716,
       0.16165495, 0.15899777, 0.1985414 , 0.18362594]), 'test_pearson_r': array([ 0.98845213,  0.99279207,  0.98363887, -0.02402435,  0.99225501,
        0.99862391,  0.99741864,  0.9962967 ,  0.87580253,  0.9922048 ,
        0.97660902,  0.94940415,  0.97936591,  0.99708003]), 'test_pearson_p': array([-2.25676537e-15, -4.16829687e-17, -4.29119386e-14, -9.22230961e-01,
       -7.66408199e-17, -3.27781261e-23, -6.85540576e-21, -1.75809166e-18,
       -1.91433776e-06, -6.68972377e-16, -4.18762658e-12, -1.84151818e-09,
       -1.54889931e-12, -2.63282990e-19]), 'test_spearman_r': array([0.87752414, 0.9877193 , 0.97323397, 0.67908555, 0.97192982,
       0.97719298, 0.97323397, 0.96797572, 0.73102746, 0.95252838,
       0.98555212, 0.83900929, 0.94427245, 0.99174407]), 'test_spearman_p': array([-8.02375581e-07, -3.79790244e-15, -2.71850932e-12, -1.38702810e-03,
       -4.05534963e-12, -7.06769745e-13, -2.71850932e-12, -5.03056755e-11,
       -5.67719966e-04, -1.11695903e-09, -9.12417033e-14, -1.35126625e-05,
       -3.92399721e-09, -1.05753411e-15]), 'test_kendall_r': array([0.82941176, 0.92982456, 0.90322969, 0.61654215, 0.88304094,
       0.90643275, 0.87976918, 0.9013353 , 0.68197088, 0.85620915,
       0.92156863, 0.73856209, 0.84313725, 0.96078431]), 'test_kendall_p': array([-7.85254763e-07, -2.06767062e-12, -7.00361385e-08, -3.09023200e-04,
       -1.79983887e-10, -2.27996852e-11, -1.51234358e-07, -2.02850566e-07,
       -8.07679747e-05, -5.28843419e-09, -2.92550870e-11, -2.52158005e-06,
       -1.22726897e-08, -3.50182620e-13]), 'test_rmse': array([ -12.29382994,   -9.89236785,  -15.8083123 , -254.97825278,
         -8.97302925,  -25.77806204,  -14.63877466,   -6.59961004,
        -34.10847461,   -6.50412886,  -17.78474645,  -61.9867333 ,
        -14.99748215,  -17.48505228]), 'test_mae': array([ -6.48753469,  -5.08198955,  -7.42259402, -88.06151511,
        -4.97264039, -12.86355193,  -8.58223992,  -4.48391082,
       -16.08225978,  -4.2523475 ,  -8.83930612, -23.76716322,
        -9.95733112, -11.58513707]), 'test_r2': array([  0.96805105,   0.98021734,   0.96373305, -28.34583342,
         0.98430879,   0.98333097,   0.99330644,   0.98995155,
         0.67323434,   0.98315944,   0.93188093,   0.89146424,
         0.95519168,   0.99211192]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.88782716, 2.61595225, 2.83301973, 2.12052226, 2.32843733,
       2.337677  , 2.14649868, 2.27556372, 2.3990159 , 2.21984482,
       2.66688299, 2.54135442, 2.52688026, 2.50617814]), 'score_time': array([0.15134501, 0.15566206, 0.15302682, 0.42632604, 0.17391443,
       0.23883724, 0.32926202, 0.1588006 , 0.15535069, 0.15877628,
       0.1573112 , 0.17727304, 0.14910913, 0.16499758]), 'test_pearson_r': array([0.99787831, 0.98389753, 0.97980434, 0.99252449, 0.99539206,
       0.99295793, 0.27749274, 0.54748654, 0.99598579, 0.99434449,
       0.86185851, 0.97705567, 0.94620119, 0.99540739]), 'test_pearson_p': array([-1.29655298e-21, -3.75086256e-14, -2.53645831e-13, -5.67706303e-17,
       -9.37940214e-19, -3.42186314e-17, -2.50055737e-01, -1.86837749e-02,
       -3.34742168e-18, -5.16969848e-17, -4.28355072e-06, -3.59413274e-12,
       -2.97862481e-09, -9.80861421e-18]), 'test_spearman_r': array([0.94035088, 0.90158311, 0.76679849, 0.95568241, 0.91052632,
       0.98245614, 0.75087719, 0.83884298, 0.98604664, 0.95611784,
       0.85493042, 0.98348813, 0.82662539, 0.98142415]), 'test_spearman_p': array([-2.20654144e-09, -1.36072655e-07, -1.28111108e-04, -1.86125755e-10,
       -6.24664266e-08, -7.73558991e-14, -2.11664863e-04, -1.36171995e-05,
       -6.91609552e-14, -6.02298234e-10, -6.19280424e-06, -2.63828912e-13,
       -2.34565531e-05, -6.72563970e-13]), 'test_kendall_r': array([0.87134503, 0.79059143, 0.73746634, 0.86803892, 0.8128655 ,
       0.91812865, 0.69590643, 0.67763158, 0.93729883, 0.82623395,
       0.81311912, 0.90849673, 0.77777778, 0.93464052]), 'test_kendall_p': array([-4.58322529e-10, -2.61922646e-06, -1.18018662e-05, -2.20656528e-07,
       -2.37852170e-08, -7.20796807e-12, -6.49122200e-06, -9.34513479e-05,
       -7.03810661e-08, -1.78800684e-06, -2.59896801e-06, -9.76656516e-11,
       -4.36097754e-07, -7.81116540e-12]), 'test_rmse': array([  -5.63481511,  -14.07360567,   -9.24606981,  -25.87366009,
         -9.85222586,  -11.55574368, -182.88552783,  -59.90820688,
        -24.96348731,  -10.40404424,  -29.02197493,  -16.6060788 ,
        -13.73383276,  -18.74667039]), 'test_mae': array([ -3.51656312,  -8.82794265,  -5.17480215, -15.54235925,
        -6.02204193,  -5.18005477, -47.49600185, -22.97092826,
       -12.4095374 ,  -5.93419639, -10.68946466, -11.57944037,
        -6.46595834, -10.2732924 ]), 'test_r2': array([ 0.99385116,  0.96709744,  0.95753549,  0.98109501,  0.98270548,
        0.98479052, -3.98483921, -1.74018838,  0.99004292,  0.98750763,
        0.71631103,  0.95301085,  0.89337638,  0.98930268]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.88789272, 0.96402812, 0.88836455, 0.86333013, 1.11279035,
       0.8459177 , 0.81818438, 0.89555526, 0.88959098, 0.89348769,
       1.01318264, 0.85203671, 1.09237194, 1.14159179]), 'score_time': array([0.31650233, 0.15540624, 0.2478981 , 0.23070431, 0.15653086,
       0.15467453, 0.15374684, 0.17630553, 0.15548277, 0.19014382,
       0.21821189, 0.1568346 , 0.14973783, 0.15570545]), 'test_pearson_r': array([0.97400367, 0.91821522, 0.99164011, 0.99372849, 0.98131794,
       0.99695107, 0.75769006, 0.98701585, 0.98953821, 0.99706902,
       0.99722322, 0.97487771, 0.97610062, 0.77410006]), 'test_pearson_p': array([-2.12692729e-12, -2.98928465e-08, -1.46415971e-16, -1.28115365e-17,
       -1.31482950e-13, -2.81771659e-20, -1.71523923e-04, -3.89992114e-14,
       -6.98263864e-15, -2.71316955e-19, -1.76162545e-19, -7.37381042e-12,
       -4.96569863e-12, -1.63107992e-04]), 'test_spearman_r': array([0.83084507, 0.93508772, 0.98683093, 0.98594177, 0.93146014,
       0.96270303, 0.87845555, 0.79606796, 0.97729618, 0.92927219,
       0.99122367, 0.78265369, 0.89959026, 0.72999493]), 'test_spearman_p': array([-1.05683507e-05, -4.44614837e-09, -6.85587369e-15, -1.19111358e-14,
       -6.97087151e-09, -4.40088650e-11, -7.54442824e-07, -7.75438253e-05,
       -3.30605345e-12, -2.51816334e-08, -1.72171485e-15, -1.23328329e-04,
       -3.77580298e-07, -5.83284366e-04]), 'test_kendall_r': array([0.72035296, 0.77777778, 0.9353103 , 0.9321899 , 0.83779092,
       0.86803892, 0.79765739, 0.6046812 , 0.90849673, 0.8524636 ,
       0.9573822 , 0.6950857 , 0.78416135, 0.66885605]), 'test_kendall_p': array([-2.08221512e-05, -1.64978258e-07, -2.55431689e-08, -3.02184546e-08,
       -6.38684879e-07, -2.20656528e-07, -1.92681603e-06, -5.38366683e-04,
       -9.76656516e-11, -8.32299419e-07, -3.12802418e-08, -5.87142144e-05,
       -7.19458129e-06, -1.10498991e-04]), 'test_rmse': array([ -15.94352107,  -25.73184265,  -18.24062525,   -8.02737409,
        -15.07408154,  -36.20161565,  -58.24912889,   -9.48191619,
         -9.61879889,  -14.00180952,  -10.07597568,  -16.90664629,
        -20.04042912, -178.76850737]), 'test_mae': array([ -9.73212766, -14.49964609, -10.74370446,  -5.42633009,
        -6.76010419, -17.44197865, -18.37630093,  -6.8442639 ,
        -7.25249675,  -7.443134  ,  -7.64126822, -10.49147843,
       -12.30912671, -65.75364176]), 'test_r2': array([0.94459297, 0.79187841, 0.96068464, 0.9867431 , 0.87053127,
       0.96743673, 0.36738708, 0.96040885, 0.96289184, 0.99386463,
       0.98282107, 0.94535836, 0.9390194 , 0.50922252]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([17.81684399, 17.18244886, 18.05266714, 16.61099553, 14.84409094,
       15.14744711, 16.2368834 , 14.07599831, 16.76420355, 17.70590472,
       14.23987794, 14.65120316, 16.92546439, 17.67172265]), 'score_time': array([0.15684319, 0.2008245 , 0.16100287, 0.19101763, 0.16493964,
       0.16504169, 0.15437269, 0.15259147, 0.20685005, 0.1585474 ,
       0.15881133, 0.16400266, 0.16396332, 0.15039158]), 'test_pearson_r': array([0.99462642, 0.99706342, 0.99934179, 0.95998374, 0.11129   ,
       0.99508345, 0.63655493, 0.98248772, 0.97362962, 0.98862397,
       0.9937438 , 0.99645579, 0.9376297 , 0.99912493]), 'test_pearson_p': array([-3.45534780e-18, -2.04863101e-20, -6.22584934e-26, -7.93046481e-11,
       -6.50129483e-01, -1.62565342e-18, -3.38493666e-03, -4.21049998e-13,
       -1.08254436e-11, -1.36099978e-14, -1.15706387e-16, -1.23795662e-18,
       -9.45788096e-09, -1.72389913e-23]), 'test_spearman_r': array([0.72751214, 0.82952676, 0.99692664, 0.8924968 , 0.58245614,
       0.99298246, 0.90478289, 0.85124012, 0.96644308, 0.99327803,
       0.97263823, 0.99174407, 0.96078431, 0.9876161 ]), 'test_spearman_p': array([-4.15416290e-04, -1.12357035e-05, -3.01519019e-20, -2.79211735e-07,
       -8.87579399e-03, -3.32215984e-17, -1.03899466e-07, -7.47927098e-06,
       -7.27678973e-11, -2.05219493e-16, -1.44981731e-11, -1.05753411e-15,
       -2.48656703e-10, -2.67561271e-14]), 'test_kendall_r': array([0.69208509, 0.76699169, 0.97938938, 0.72727585, 0.64912281,
       0.95321637, 0.78592713, 0.79606986, 0.87869325, 0.96034914,
       0.89180807, 0.96078431, 0.89542484, 0.96078431]), 'test_kendall_p': array([-3.61461714e-05, -5.15534651e-06, -5.94502052e-09, -1.41920797e-05,
       -3.57225177e-05, -1.16815227e-13, -2.71955004e-06, -4.43688739e-06,
       -3.78914056e-07, -3.57316367e-08, -2.53540670e-07, -3.50182620e-13,
       -2.96242626e-10, -3.50182620e-13]), 'test_rmse': array([ -18.88218497,  -18.40329208,   -9.03350813,  -14.1112067 ,
       -185.05579228,   -9.56441094,  -55.2256917 ,  -15.49302754,
        -15.27752443,  -13.22369031,  -15.07913423,   -7.7559831 ,
        -25.8662518 ,  -24.7799861 ]), 'test_mae': array([ -9.45722836, -10.16762702,  -5.32053379,  -7.54494132,
       -53.19233903,  -5.77119293, -17.60316386,  -8.5469898 ,
        -8.64016711,  -8.68275285,  -9.12082716,  -4.74602494,
       -15.21555902, -10.71480529]), 'test_r2': array([  0.98780013,   0.99062085,   0.99736379,   0.9146252 ,
       -10.8405094 ,   0.98979532,  -0.2886681 ,   0.96493537,
         0.93881781,   0.97376835,   0.9768297 ,   0.9925689 ,
         0.78883094,   0.98544367]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_2': {'cluster size (%)': 29, 6: {'test_mad': 73.12898100803508, 'test_ystd': 83.09248394512653, 'test_mae': 190.2877582810376, 'test_rmse': 315.92870548864687, 'test_r2': -13.456218116108792, 'test_pearson_r': array([-0.31939874]), 'test_pearson_p_value': array([0.0055397]), 'test_spearman_r': -0.5955096498937585, 'test_spearman_p_value': 2.1869727882169653e-08, 'test_kendall_r': -0.48202679319659203, 'test_kendall_p_value': 2.6644422451425418e-09, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003954112179684783, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1882, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 73.12898100803508, 'test_ystd': 83.09248394512653, 'test_mae': 190.34903346680304, 'test_rmse': 316.3744021873349, 'test_r2': -13.497035131937755, 'test_pearson_r': array([-0.31891739]), 'test_pearson_p_value': array([0.00561531]), 'test_spearman_r': -0.5830216291792135, 'test_spearman_p_value': 5.022804196200904e-08, 'test_kendall_r': -0.4622125295987249, 'test_kendall_p_value': 7.418079345372441e-09, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08961389841356894, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1520, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 73.12898100803508, 'test_ystd': 83.09248394512653, 'test_mae': 189.1922538167077, 'test_rmse': 313.36706753414927, 'test_r2': -13.222738441032432, 'test_pearson_r': array([-0.31975994]), 'test_pearson_p_value': array([0.00548355]), 'test_spearman_r': -0.5511939995282529, 'test_spearman_p_value': 3.59742297701113e-07, 'test_kendall_r': -0.4215330550834488, 'test_kendall_p_value': 2.1846691581445056e-07, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0977779696679567, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 73.12898100803508, 'test_ystd': 83.09248394512653, 'test_mae': 190.06513660817532, 'test_rmse': 316.26539916297855, 'test_r2': -13.487047291963522, 'test_pearson_r': array([-0.31819182]), 'test_pearson_p_value': array([0.005731]), 'test_spearman_r': -0.5815736089482852, 'test_spearman_p_value': 5.5187549631986253e-08, 'test_kendall_r': -0.4594363532199052, 'test_kendall_p_value': 1.219500210867731e-08, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07161011132837099, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 650, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 73.12898100803508, 'test_ystd': 83.09248394512653, 'test_mae': 189.83517266118847, 'test_rmse': 316.1527978014143, 'test_r2': -13.476733353974245, 'test_pearson_r': array([-0.31773885]), 'test_pearson_p_value': array([0.00580429]), 'test_spearman_r': -0.57991433476754, 'test_spearman_p_value': 6.144104903486658e-08, 'test_kendall_r': -0.4464573195953956, 'test_kendall_p_value': 2.444711753989279e-08, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0767621489197617, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 726, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 73.12898100803508, 'test_ystd': 83.09248394512653, 'test_mae': 190.02692477277805, 'test_rmse': 315.84836925302824, 'test_r2': -13.448867024131275, 'test_pearson_r': array([-0.31857797]), 'test_pearson_p_value': array([0.00566917]), 'test_spearman_r': -0.5902555306061932, 'test_spearman_p_value': 3.1162601510359533e-08, 'test_kendall_r': -0.46755535691391664, 'test_kendall_p_value': 6.679937906050269e-09, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0793340681581129, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 91, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 73.12898100803508, 'test_ystd': 83.09248394512653, 'test_mae': 190.54189756264557, 'test_rmse': 316.1432118074711, 'test_r2': -13.475855476091473, 'test_pearson_r': array([-0.3195455]), 'test_pearson_p_value': array([0.00551683]), 'test_spearman_r': -0.5902164396577269, 'test_spearman_p_value': 3.124407446467297e-08, 'test_kendall_r': -0.4696375421620465, 'test_kendall_p_value': 5.638688069903192e-09, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003999915303363261, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_2': {'cluster size (%)': 25, 6: {'fit_time': array([16.91902876, 16.36068773, 16.31865644, 15.90402794]), 'score_time': array([0.15440559, 0.15706587, 0.15795207, 0.16435099]), 'test_pearson_r': array([0.97196464, 0.73994775, 0.98951478, 0.96431548]), 'test_pearson_p': array([-2.53845528e-41, -1.89358047e-12, -1.15800281e-54, -1.72063223e-37]), 'test_spearman_r': array([0.86372634, 0.90478741, 0.93816612, 0.94167489]), 'test_spearman_p': array([-2.05558943e-20, -4.85926045e-25, -1.00881804e-30, -5.06085150e-31]), 'test_kendall_r': array([0.77314013, 0.82851792, 0.82032305, 0.81743891]), 'test_kendall_p': array([-1.27353917e-19, -2.05698321e-22, -7.51479357e-22, -1.89606592e-21]), 'test_rmse': array([-36.4624077 , -97.0872734 , -17.6886833 , -20.45896042]), 'test_mae': array([-13.87345752, -21.16511402,  -8.34469784, -11.00967451]), 'test_r2': array([0.94260248, 0.33026777, 0.97693276, 0.92757728]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([12.39022899, 12.26840568, 10.70524049, 11.1017797 ]), 'score_time': array([0.14774394, 0.15401816, 0.16370201, 0.15578032]), 'test_pearson_r': array([0.9180649 , 0.81120596, 0.97723631, 0.96194678]), 'test_pearson_p': array([-5.25938151e-27, -2.55638279e-16, -3.88347550e-44, -1.21824233e-36]), 'test_spearman_r': array([0.80874386, 0.83634123, 0.94394412, 0.92089447]), 'test_spearman_p': array([-3.69428921e-16, -4.25554761e-18, -5.01062965e-32, -4.69457974e-27]), 'test_kendall_r': array([0.64950682, 0.76399366, 0.81916273, 0.79422654]), 'test_kendall_p': array([-3.64747558e-14, -3.94197471e-19, -8.33340966e-22, -2.50833601e-20]), 'test_rmse': array([-49.27715338, -99.14878847, -28.65543164, -21.90433558]), 'test_mae': array([-21.47733772, -23.67946075, -14.11442406, -13.24224718]), 'test_r2': array([0.83064847, 0.55861469, 0.94125149, 0.91621316]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([2.34766293, 2.12944579, 2.34351754, 2.27992797]), 'score_time': array([0.16413808, 0.15637684, 0.15448737, 0.15155888]), 'test_pearson_r': array([0.98771795, 0.97596936, 0.52885409, 0.97429207]), 'test_pearson_p': array([-1.64420486e-52, -2.09875392e-43, -5.93377601e-06, -7.66967474e-42]), 'test_spearman_r': array([0.96073097, 0.95435323, 0.85306785, 0.94128713]), 'test_spearman_p': array([-8.73243841e-37, -9.08237733e-35, -1.86145961e-19, -6.17898086e-31]), 'test_kendall_r': array([0.87108175, 0.85053285, 0.78282437, 0.85359411]), 'test_kendall_p': array([-1.67047974e-24, -1.70789095e-23, -4.08816181e-20, -4.03355189e-23]), 'test_rmse': array([-25.64314811, -32.67176932, -98.74863685, -16.45727487]), 'test_mae': array([-12.66037519, -12.37974975, -21.33419137,  -9.35728409]), 'test_r2': array([ 0.97162048,  0.95221926, -0.84722605,  0.94900587]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.85753965, 1.79669428, 1.91508818, 1.76598001]), 'score_time': array([0.14902401, 0.15042782, 0.15355921, 0.15349007]), 'test_pearson_r': array([0.96661862, 0.70472758, 0.94466947, 0.97126019]), 'test_pearson_p': array([-5.71994593e-39, -5.69041753e-11, -3.36124166e-32, -2.32440751e-40]), 'test_spearman_r': array([0.93506117, 0.86673442, 0.90286341, 0.9153206 ]), 'test_spearman_p': array([-4.50324265e-30, -1.06706526e-20, -8.85772737e-25, -3.56215567e-26]), 'test_kendall_r': array([0.83710078, 0.78795217, 0.82364699, 0.8047694 ]), 'test_kendall_p': array([-1.16145103e-22, -2.08402606e-20, -4.17122067e-22, -6.18990530e-21]), 'test_rmse': array([ -18.77079275, -139.44296887,  -22.71743527,  -37.4052884 ]), 'test_mae': array([ -9.8118669 , -33.61795854,  -9.41870454, -15.67456339]), 'test_r2': array([0.93151775, 0.17336716, 0.87678592, 0.93987622]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([1.84127784, 1.7211194 , 1.79525447, 1.86788344]), 'score_time': array([0.15249634, 0.16130996, 0.15517569, 0.15505338]), 'test_pearson_r': array([0.99364056, 0.59423262, 0.96591062, 0.97761697]), 'test_pearson_p': array([-1.77750508e-61, -1.80383665e-07, -1.09619997e-38, -1.10003269e-43]), 'test_spearman_r': array([0.92318123, 0.92136722, 0.83495106, 0.90978409]), 'test_spearman_p': array([-7.46391181e-28, -1.51416486e-27, -5.43251310e-18, -2.33315356e-25]), 'test_kendall_r': array([0.83334121, 0.84737602, 0.75882503, 0.81949441]), 'test_kendall_p': array([-1.51044410e-22, -2.16883843e-23, -5.97728646e-19, -1.29797697e-21]), 'test_rmse': array([-14.1999113 , -98.40112538, -39.26575346, -23.83343205]), 'test_mae': array([ -7.45128871, -19.29239612, -15.45449995, -12.26840857]), 'test_r2': array([ 0.98583041, -0.30887008,  0.93287482,  0.95334561]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.71839118, 0.77562761, 0.76151252, 0.74785709]), 'score_time': array([0.1505363 , 0.1615448 , 0.14771056, 0.1488905 ]), 'test_pearson_r': array([0.94356845, 0.94923344, 0.99630546, 0.78520474]), 'test_pearson_p': array([-6.14881179e-32, -2.39250128e-33, -6.87736336e-69, -1.58481637e-14]), 'test_spearman_r': array([0.9330842 , 0.90355298, 0.95574335, 0.79749437]), 'test_spearman_p': array([-1.12380351e-29, -7.15314406e-25, -3.50124204e-35, -3.10960855e-15]), 'test_kendall_r': array([0.81113937, 0.747771  , 0.84969219, 0.70363418]), 'test_kendall_p': array([-2.09519829e-21, -1.75424942e-18, -2.34624038e-23, -3.13514724e-16]), 'test_rmse': array([ -24.95563124,  -40.02098291,  -10.15309996, -103.91604192]), 'test_mae': array([-14.5794426 , -15.19045616,  -6.90205636, -34.51199383]), 'test_r2': array([0.88216673, 0.89632578, 0.99114264, 0.55393417]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([10.73364234,  9.93040609, 11.03415155, 11.03224015]), 'score_time': array([0.1510489 , 0.15351677, 0.15332031, 0.15187454]), 'test_pearson_r': array([0.9773031 , 0.48479035, 0.9817462 , 0.99135019]), 'test_pearson_p': array([-3.54369681e-44, -4.26926380e-05, -3.96220664e-47, -2.13022106e-56]), 'test_spearman_r': array([0.79740654, 0.86975052, 0.95054378, 0.97904003]), 'test_spearman_p': array([-1.88442196e-15, -5.44070451e-21, -1.07084623e-33, -1.46588873e-44]), 'test_kendall_r': array([0.73833579, 0.78969035, 0.8672221 , 0.88806158]), 'test_kendall_p': array([-5.57009831e-18, -1.68611186e-20, -2.65665733e-24, -3.56593530e-25]), 'test_rmse': array([ -43.93065866, -104.21765927,  -15.62517065,  -19.52004052]), 'test_mae': array([-17.34701766, -24.82457318,  -8.81699799, -10.39372137]), 'test_r2': array([ 0.93318565, -1.35580183,  0.9636328 ,  0.97679567]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'overall data shape': {'targets_shape': (259, 1), 'training_features_shape': (259, 532)}}
Trimer_scaler
Filename: (Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM3 Mordred cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM3 Mordred cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_predictions.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM3 Mordred cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_ClusterTruth.json
Done Saving scores!
------------------------------ 
Plotted Comparitive Cluster Scores!
______________________________ 
Plotted Parity Plots!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c207n02>
Subject: Job 294640: <XGBR_Rg1 (nm)_Mordred_Trimer_KM3 Mordred cluster_20250311> in cluster <Hazel> Done

Job <XGBR_Rg1 (nm)_Mordred_Trimer_KM3 Mordred cluster_20250311> was submitted from host <c040n04> by user <sdehgha2> in cluster <Hazel> at Tue Mar 11 18:17:46 2025
Job was executed on host(s) <6*c207n02>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Wed Mar 12 05:10:32 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Wed Mar 12 05:10:32 2025
Terminated at Wed Mar 12 23:36:57 2025
Results reported at Wed Mar 12 23:36:57 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input



#BSUB -n 6
#BSUB -W 72:05
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "XGBR_Rg1 (nm)_Mordred_Trimer_KM3 Mordred cluster_20250311"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_Mordred_Trimer_KM3 Mordred cluster_20250311.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_Mordred_Trimer_KM3 Mordred cluster_20250311.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../make_ood_prediction.py --target_features "Rg1 (nm)"                                       --representation "Mordred"                                       --regressor_type "XGBR"                                       --oligomer_representation "Trimer"                                       --numerical_feats 'Mw (g/mol)' 'PDI' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" 'solvent dP' 'solvent dD' 'solvent dH'                                       --clustering_method "KM3 Mordred cluster" 



------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   270316.31 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.97 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   66403 sec.
    Turnaround time :                            105551 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_Mordred_Trimer_KM3 Mordred cluster_20250311.err> for stderr output of this job.

