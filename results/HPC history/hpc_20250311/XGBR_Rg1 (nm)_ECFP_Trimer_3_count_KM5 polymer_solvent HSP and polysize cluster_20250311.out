


-------------------------------------------------- 
OOD TEST ON 0



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 138), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0842893436242547), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 941), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011369995201038634), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1359), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08580208171564527), ('regressor__regressor__max_depth', 3128), ('regressor__regressor__n_estimators', 1000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006158613366130433), ('regressor__regressor__max_depth', 34), ('regressor__regressor__n_estimators', 379), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0585024815243816), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 377), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09833949263552134), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 772), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0033128862830936676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1717), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0140521706556793), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 301), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07785392658428184), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08495114895548035), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 72), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 114), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03302971062211962), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 703), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 144), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.027234308114729405), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 827), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012884190399073006), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 941), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030175755341803503), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1044), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09179206628090139), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1777), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08789612372390584), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 851), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003986006602672576), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1149), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07352481813242628), ('regressor__regressor__max_depth', 1264), ('regressor__regressor__n_estimators', 1246), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.043052623477848245), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1436), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0027013166219251854), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07961006733075694), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 64), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 143), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06963380840333412), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 729), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03191616669721422), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 186), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014538077718185273), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04154921732449718), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 130), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0753675980141811), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 110), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 7201), ('regressor__regressor__n_estimators', 258), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 155), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 77), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03091554039652946), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 130), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09125129433504907), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 963), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004664017447798385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 261), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03978763772444338), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 583), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013953757051049982), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1011), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07995520441132281), ('regressor__regressor__max_depth', 592), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006104347533530344), ('regressor__regressor__max_depth', 15), ('regressor__regressor__n_estimators', 1497), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03181274307925841), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1226), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 136), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06612451013508984), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 193), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07937370579692231), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014024489861608166), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1252), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09967814426688407), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 76), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 259), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09089562202753666), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 99), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06449854041502759), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08322004736048987), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0230006481273428), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 291), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06678639058063013), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052629883546321456), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0027506333059973014), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1055), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 313), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01711878417467971), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 537), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 162), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020326693453386288), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1983), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020940186074374827), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 612), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029299815296515142), ('regressor__regressor__max_depth', 43), ('regressor__regressor__n_estimators', 574), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05225400716467375), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 345), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08064687686284065), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002922641992768343), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 1



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0026636470975332574), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1659), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09004777147500702), ('regressor__regressor__max_depth', 3903), ('regressor__regressor__n_estimators', 793), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007509630243087072), ('regressor__regressor__max_depth', 14), ('regressor__regressor__n_estimators', 165), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02735176067101797), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 261), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 14), ('regressor__regressor__n_estimators', 618), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0585024815243816), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 377), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09833949263552134), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 772), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0033128862830936676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1717), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0140521706556793), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 301), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07785392658428184), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026005159356249197), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1170), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.040853922245614994), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 837), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0028934301856917313), ('regressor__regressor__max_depth', 1670), ('regressor__regressor__n_estimators', 1105), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015426156874879384), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1064), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005468654244082929), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 749), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012884190399073006), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 941), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030175755341803503), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1044), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09179206628090139), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1777), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08789612372390584), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 851), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003986006602672576), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1149), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06506484076080443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08737227639493625), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1590), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 165), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025478211050553628), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 148), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.060873063310114356), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 146), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06963380840333412), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 729), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03191616669721422), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 186), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014538077718185273), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.053371623972623045), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1017), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025298305946999524), ('regressor__regressor__max_depth', 527), ('regressor__regressor__n_estimators', 140), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.030844164346976895), ('regressor__regressor__max_depth', 24), ('regressor__regressor__n_estimators', 448), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07864558527903563), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 523), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05598033874987613), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03091554039652946), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 130), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09125129433504907), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 963), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004664017447798385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 261), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03978763772444338), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 583), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013953757051049982), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1011), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00822827988761364), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 261), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.023554619394452046), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 102), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07417512817426715), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011533369136341778), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 182), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 93), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06612451013508984), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 193), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07937370579692231), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07033109237237431), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 74), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 176), ('regressor__regressor__n_estimators', 126), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09177391523861991), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09642632728578485), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 100), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020923884801611445), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1576), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08322004736048987), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0230006481273428), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 291), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06678639058063013), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052629883546321456), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0027506333059973014), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1055), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02271895374312044), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1041), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08425860265685473), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1360), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08572358858595686), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 307), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0548228499975384), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1226), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09397875947837386), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020940186074374827), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 612), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029299815296515142), ('regressor__regressor__max_depth', 43), ('regressor__regressor__n_estimators', 574), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05225400716467375), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 345), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08064687686284065), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002922641992768343), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 2



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0173529485621314), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 270), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 206), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08658989173881054), ('regressor__regressor__max_depth', 1693), ('regressor__regressor__n_estimators', 794), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029866320354858633), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 995), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 151), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0585024815243816), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 377), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09833949263552134), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 772), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0033128862830936676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1717), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0140521706556793), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 301), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07785392658428184), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04489938632203822), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1187), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07432598885490127), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1387), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0024229703829121104), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1883), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0028636056939515264), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1346), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0055839335564604195), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1200), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012884190399073006), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 941), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030175755341803503), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1044), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09179206628090139), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1777), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08789612372390584), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 851), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003986006602672576), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1149), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003059816475303909), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1723), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07352481813242628), ('regressor__regressor__max_depth', 1264), ('regressor__regressor__n_estimators', 1246), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014499109760064513), ('regressor__regressor__max_depth', 7986), ('regressor__regressor__n_estimators', 85), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.056411068698669506), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05179608642983718), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 120), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06963380840333412), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 729), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03191616669721422), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 186), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014538077718185273), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03545099359294537), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 141), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002108005128179168), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.039757776331372376), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 187), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0014184104150101753), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1462), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03091554039652946), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 130), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09125129433504907), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 963), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004664017447798385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 261), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03978763772444338), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 583), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013953757051049982), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1011), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03254823779995364), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03290037246396766), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08625666912307171), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02869974540777048), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 113), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06612451013508984), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 193), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07937370579692231), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06329266014018887), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 80), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 19), ('regressor__regressor__n_estimators', 245), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08534192713061382), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 804), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07780402840551427), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 76), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0651958229501864), ('regressor__regressor__max_depth', 1542), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08322004736048987), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0230006481273428), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 291), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06678639058063013), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052629883546321456), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0027506333059973014), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1055), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08220032000879969), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.024582567906289376), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08821397482107059), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 63), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023385652308202803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01942810752217259), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020940186074374827), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 612), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029299815296515142), ('regressor__regressor__max_depth', 43), ('regressor__regressor__n_estimators', 574), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05225400716467375), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 345), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08064687686284065), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002922641992768343), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 3



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0056400322556413186), ('regressor__regressor__max_depth', 7306), ('regressor__regressor__n_estimators', 833), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003449322892723232), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1023), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07892265220123706), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 255), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0026835408683630454), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1461), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0585024815243816), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 377), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09833949263552134), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 772), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0033128862830936676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1717), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0140521706556793), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 301), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07785392658428184), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003216657784558171), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1165), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00324389617700131), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1107), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0047386061133938544), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1270), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05592004837917565), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 384), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012884190399073006), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 941), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030175755341803503), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1044), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09179206628090139), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1777), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08789612372390584), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 851), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003986006602672576), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1149), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06914786814335445), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 597), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008641045630362058), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1786), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001355337064811287), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1467), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0017777272421432065), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1814), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015731278119469206), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06963380840333412), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 729), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03191616669721422), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 186), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014538077718185273), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.027662874802648587), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 101), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 7361), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09740629224986362), ('regressor__regressor__max_depth', 3861), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03574492439162229), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 100), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06373009107639704), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 72), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03091554039652946), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 130), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09125129433504907), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 963), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004664017447798385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 261), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03978763772444338), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 583), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013953757051049982), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1011), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03824377409567754), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 611), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03597440141753971), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1422), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026059022817573173), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 135), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012572100366291515), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 543), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06612451013508984), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 193), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07937370579692231), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.013251207705069636), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 339), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0829121180578092), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.020808604253443795), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 377), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07645009518730857), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07306363164780742), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 85), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08322004736048987), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0230006481273428), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 291), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06678639058063013), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052629883546321456), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0027506333059973014), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1055), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08117472479998215), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 55), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06245371112877017), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 76), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03038157648453884), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0017006617949612334), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 894), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020940186074374827), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 612), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029299815296515142), ('regressor__regressor__max_depth', 43), ('regressor__regressor__n_estimators', 574), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05225400716467375), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 345), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08064687686284065), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002922641992768343), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 4



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010112601213137689), ('regressor__regressor__max_depth', 54), ('regressor__regressor__n_estimators', 304), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 167), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021444921887684336), ('regressor__regressor__max_depth', 97), ('regressor__regressor__n_estimators', 1633), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017845842386493276), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1648), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0585024815243816), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 377), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09833949263552134), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 772), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0033128862830936676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1717), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0140521706556793), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 301), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07785392658428184), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.023496057166175387), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04871980629972198), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 84), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06090488790309857), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.030389772583013275), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 83), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0031741087590934735), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1162), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012884190399073006), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 941), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030175755341803503), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1044), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09179206628090139), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1777), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08789612372390584), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 851), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003986006602672576), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1149), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004827262774319652), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1299), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.047725994176545), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 144), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021120671208979236), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1899), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06963380840333412), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 729), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03191616669721422), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 186), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014538077718185273), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002170203455506314), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06504741920896588), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 76), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 53), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032623478800898956), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04308855116844358), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 106), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03091554039652946), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 130), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09125129433504907), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 963), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004664017447798385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 261), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03978763772444338), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 583), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013953757051049982), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1011), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.020478998531027245), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007326200172820322), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 113), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07212055071720427), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 218), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010029233465114999), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 135), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06612451013508984), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 193), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07937370579692231), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01018020122578915), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09945505135619215), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 369), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0014152576847473344), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1210), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07515645539356312), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0019989479716456017), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1659), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08322004736048987), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0230006481273428), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 291), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06678639058063013), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052629883546321456), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0027506333059973014), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1055), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016581724087287074), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1721), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003620859318425835), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.023671919716630054), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 203), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011137634238998911), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021950852378018783), ('regressor__regressor__max_depth', 2511), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020940186074374827), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 612), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029299815296515142), ('regressor__regressor__max_depth', 43), ('regressor__regressor__n_estimators', 574), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05225400716467375), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 345), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08064687686284065), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002922641992768343), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])


{'CO_0': {'cluster size (%)': 34, 6: {'test_mad': 71.78549118040651, 'test_ystd': 170.29127014494833, 'test_mae': 59.00140383577839, 'test_rmse': 177.86044199565808, 'test_r2': -0.09087242786397476, 'test_pearson_r': array([-0.14313438]), 'test_pearson_p_value': array([0.18085094]), 'test_spearman_r': 0.029256800098675078, 'test_spearman_p_value': 0.7854954953393906, 'test_kendall_r': 0.02363304896296198, 'test_kendall_p_value': 0.748819755383213, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08580208171564527, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 3128, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 71.78549118040651, 'test_ystd': 170.29127014494833, 'test_mae': 59.61348244460202, 'test_rmse': 177.90642873385457, 'test_r2': -0.09143660221864525, 'test_pearson_r': array([-0.15911122]), 'test_pearson_p_value': array([0.13639835]), 'test_spearman_r': -0.0067909944754588865, 'test_spearman_p_value': 0.949638175972715, 'test_kendall_r': -0.009453219585184792, 'test_kendall_p_value': 0.8980869296102305, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.027234308114729405, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 827, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 71.78549118040651, 'test_ystd': 170.29127014494833, 'test_mae': 59.388797718615585, 'test_rmse': 177.91798061888812, 'test_r2': -0.09157834593840253, 'test_pearson_r': array([-0.15032386]), 'test_pearson_p_value': array([0.15969187]), 'test_spearman_r': 0.01630623002709849, 'test_spearman_p_value': 0.8794487462772628, 'test_kendall_r': 0.015480267233489537, 'test_kendall_p_value': 0.8337498037612343, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07352481813242628, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 1264, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1246, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 71.78549118040651, 'test_ystd': 170.29127014494833, 'test_mae': 59.2209255361767, 'test_rmse': 177.92862090457587, 'test_r2': -0.0917089123119239, 'test_pearson_r': array([-0.15040757]), 'test_pearson_p_value': array([0.15945683]), 'test_spearman_r': 0.020722322705993158, 'test_spearman_p_value': 0.8471539278479351, 'test_kendall_r': 0.01967830580528331, 'test_kendall_p_value': 0.789611306970559, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 155, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 71.78549118040651, 'test_ystd': 170.29127014494833, 'test_mae': 59.07035110277497, 'test_rmse': 177.93727729844912, 'test_r2': -0.09181514021583204, 'test_pearson_r': array([-0.1491819]), 'test_pearson_p_value': array([0.16292383]), 'test_spearman_r': 0.039753375875388366, 'test_spearman_p_value': 0.7114739931269665, 'test_kendall_r': 0.039094234199829506, 'test_kendall_p_value': 0.5960611558485096, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 136, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 71.78549118040651, 'test_ystd': 170.29127014494833, 'test_mae': 58.642081658620086, 'test_rmse': 177.61761979723016, 'test_r2': -0.08789585566740121, 'test_pearson_r': array([-0.13974932]), 'test_pearson_p_value': array([0.19149309]), 'test_spearman_r': -0.24383469478435552, 'test_spearman_p_value': 0.021296509053166896, 'test_kendall_r': -0.16470123207207726, 'test_kendall_p_value': 0.026270375744814528, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06449854041502759, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 82, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 71.78549118040651, 'test_ystd': 170.29127014494833, 'test_mae': 59.22181684662208, 'test_rmse': 177.92887081760972, 'test_r2': -0.09171197907517525, 'test_pearson_r': array([-0.15040693]), 'test_pearson_p_value': array([0.15945864]), 'test_spearman_r': 0.020722322705993158, 'test_spearman_p_value': 0.8471539278479351, 'test_kendall_r': 0.01967830580528331, 'test_kendall_p_value': 0.789611306970559, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 162, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_0': {'cluster size (%)': 33, 6: {'fit_time': array([1.30165434, 1.29402304, 1.22629809]), 'score_time': array([0.12766719, 0.1292305 , 0.12673473]), 'test_pearson_r': array([0.84477121, 0.97890699, 0.94545146]), 'test_pearson_p': array([-8.43551578e-25, -1.02620030e-59, -1.11178307e-42]), 'test_spearman_r': array([0.83588852, 0.93033165, 0.84084102]), 'test_spearman_p': array([-7.38841526e-24, -2.36113661e-38, -4.16215113e-24]), 'test_kendall_r': array([0.74819248, 0.79181905, 0.72982926]), 'test_kendall_p': array([-1.60893122e-24, -5.55352580e-27, -4.07209006e-23]), 'test_rmse': array([-87.33411549, -21.67770658, -25.51699955]), 'test_mae': array([-26.05909368, -12.06836375, -12.62893411]), 'test_r2': array([0.6965912 , 0.95763757, 0.8921549 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0140521706556793, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 301, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([4.0511837 , 3.90691352, 3.76648545]), 'score_time': array([0.12523723, 0.13717508, 0.12955928]), 'test_pearson_r': array([0.70888531, 0.98466084, 0.98536899]), 'test_pearson_p': array([-1.56167031e-14, -1.78464497e-65, -2.48666196e-66]), 'test_spearman_r': array([0.78332995, 0.93612149, 0.95328628]), 'test_spearman_p': array([-3.07410329e-19, -6.95883273e-40, -1.93916219e-45]), 'test_kendall_r': array([0.64606576, 0.82202663, 0.83739693]), 'test_kendall_p': array([-1.72636727e-18, -9.51456224e-29, -6.22866404e-30]), 'test_rmse': array([-94.53837365, -22.5789635 , -25.54824143]), 'test_mae': array([-29.17564869, -12.11378546, -14.10384731]), 'test_r2': array([0.28882683, 0.9691736 , 0.95154806]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0030175755341803503, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1044, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.0673418 , 0.92721009, 0.96253824]), 'score_time': array([0.13565135, 0.20090842, 0.13322353]), 'test_pearson_r': array([0.98561743, 0.61547455, 0.97381024]), 'test_pearson_p': array([-2.04506678e-67, -2.86305071e-10, -8.20561955e-56]), 'test_spearman_r': array([0.93509418, 0.84356763, 0.94566121]), 'test_spearman_p': array([-4.69114461e-40, -2.13680130e-24, -9.49773888e-43]), 'test_kendall_r': array([0.81067546, 0.75566857, 0.85601212]), 'test_kendall_p': array([-1.48902948e-28, -1.03066017e-24, -3.55698455e-31]), 'test_rmse': array([ -30.01988008, -121.22027493,  -16.31055813]), 'test_mae': array([-15.26208218, -30.84990366,  -9.1686884 ]), 'test_r2': array([ 0.96420994, -0.23040709,  0.94726981]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03191616669721422, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 186, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.61218429, 1.60582042, 1.52280188]), 'score_time': array([0.13542891, 0.13110662, 0.12878752]), 'test_pearson_r': array([0.39096812, 0.89498462, 0.97342344]), 'test_pearson_p': array([-1.81006748e-04, -3.44752526e-31, -1.50705305e-55]), 'test_spearman_r': array([0.86489359, 0.87050843, 0.92375116]), 'test_spearman_p': array([-3.57972448e-27, -1.36014282e-27, -9.12300766e-37]), 'test_kendall_r': array([0.77224369, 0.74876724, 0.80652309]), 'test_kendall_p': array([-6.34381681e-26, -2.59857700e-24, -4.88114480e-28]), 'test_rmse': array([-120.33127168,  -67.18724776,  -32.28840212]), 'test_mae': array([-27.68972846, -27.69445278, -12.73107035]), 'test_r2': array([-2.25612242,  0.7640114 ,  0.94452388]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09125129433504907, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 963, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.01261497, 1.96043205, 1.95865393]), 'score_time': array([0.13428521, 0.12958312, 0.13005209]), 'test_pearson_r': array([0.98486107, 0.8126474 , 0.98382152]), 'test_pearson_p': array([-1.77826478e-66, -2.12282579e-21, -1.64406445e-64]), 'test_spearman_r': array([0.92203645, 0.82948922, 0.95556877]), 'test_spearman_p': array([-8.62167790e-37, -5.87310418e-23, -2.47826425e-46]), 'test_kendall_r': array([0.81620962, 0.74280233, 0.87947447]), 'test_kendall_p': array([-6.74377472e-29, -5.22223969e-24, -5.53135207e-33]), 'test_rmse': array([-19.72613439, -90.90899915, -19.32184621]), 'test_mae': array([-10.20079653, -22.7095993 ,  -9.59446161]), 'test_r2': array([0.96897217, 0.56265886, 0.96691708]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05913781436124809, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2125, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.3770678 , 0.32640028, 0.33111167]), 'score_time': array([0.13025641, 0.13103724, 0.17970896]), 'test_pearson_r': array([0.95320893, 0.93721314, 0.83939526]), 'test_pearson_p': array([-6.23748377e-46, -3.45074752e-40, -5.89728111e-24]), 'test_spearman_r': array([0.90229923, 0.90833087, 0.87121555]), 'test_spearman_p': array([-8.30777869e-33, -1.51364732e-33, -1.09712717e-27]), 'test_kendall_r': array([0.77460842, 0.75993303, 0.73819701]), 'test_kendall_p': array([-4.74917440e-26, -5.97382025e-25, -1.66605271e-23]), 'test_rmse': array([-22.85504186, -41.42027685, -89.1989241 ]), 'test_mae': array([-13.98447855, -20.19398033, -28.8689157 ]), 'test_r2': array([0.89855564, 0.86404116, 0.67662689]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06678639058063013, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.27912259, 1.17861629, 1.24950361]), 'score_time': array([0.12688518, 0.12965631, 0.12713838]), 'test_pearson_r': array([0.98666355, 0.43947235, 0.98577832]), 'test_pearson_p': array([-8.43618329e-69, -2.30224466e-05, -7.61390639e-67]), 'test_spearman_r': array([0.83583043, 0.82886624, 0.9812761 ]), 'test_spearman_p': array([-7.49081666e-24, -6.75293825e-23, -7.22539581e-62]), 'test_kendall_r': array([0.76340385, 0.74856026, 0.89571158]), 'test_kendall_p': array([-2.36195029e-25, -2.60615911e-24, -3.49903519e-34]), 'test_rmse': array([ -30.38168214, -122.32570608,  -22.05903283]), 'test_mae': array([-13.20914139, -28.47005631, -11.3479943 ]), 'test_r2': array([ 0.95839826, -1.71327343,  0.96673772]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05225400716467375, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 345, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_1': {'cluster size (%)': 6, 6: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 143.1969085216522, 'test_rmse': 179.84088145410664, 'test_r2': -0.8652193871455232, 'test_pearson_r': array([-0.84790167]), 'test_pearson_p_value': array([3.34432313e-05]), 'test_spearman_r': -0.6653878335906511, 'test_spearman_p_value': 0.004907203046131562, 'test_kendall_r': -0.44944841581038725, 'test_kendall_p_value': 0.020159684267826914, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 14, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 618, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 145.31197576522825, 'test_rmse': 180.96267111088565, 'test_r2': -0.8885612392122704, 'test_pearson_r': array([-0.84555151]), 'test_pearson_p_value': array([3.69886806e-05]), 'test_spearman_r': -0.6744613040487055, 'test_spearman_p_value': 0.004160546791390076, 'test_kendall_r': -0.46742635244280273, 'test_kendall_p_value': 0.015679264187725396, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.040853922245614994, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 837, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.46858887672423, 'test_rmse': 180.47821573652337, 'test_r2': -0.8784630353675338, 'test_pearson_r': array([-0.84501798]), 'test_pearson_p_value': array([3.78359171e-05]), 'test_spearman_r': -0.6714368138960207, 'test_spearman_p_value': 0.004398517053045006, 'test_kendall_r': -0.44944841581038725, 'test_kendall_p_value': 0.020159684267826914, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06506484076080443, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 139, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 143.69098834991453, 'test_rmse': 179.2454622830298, 'test_r2': -0.8528890549102861, 'test_pearson_r': array([-0.84456166]), 'test_pearson_p_value': array([3.85733559e-05]), 'test_spearman_r': -0.6704978586824799, 'test_spearman_p_value': 0.0044745750001737306, 'test_kendall_r': -0.4651960393438625, 'test_kendall_p_value': 0.017350154937630362, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.025298305946999524, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 527, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 140, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 143.2056463241577, 'test_rmse': 179.96605466384418, 'test_r2': -0.8678167581960483, 'test_pearson_r': array([-0.84798003]), 'test_pearson_p_value': array([3.33301102e-05]), 'test_spearman_r': -0.6653878335906511, 'test_spearman_p_value': 0.004907203046131562, 'test_kendall_r': -0.44944841581038725, 'test_kendall_p_value': 0.020159684267826914, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 93, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.43825321197508, 'test_rmse': 180.4195114172161, 'test_r2': -0.8772412152277629, 'test_pearson_r': array([-0.84579068]), 'test_pearson_p_value': array([3.66140852e-05]), 'test_spearman_r': -0.6744613040487055, 'test_spearman_p_value': 0.004160546791390076, 'test_kendall_r': -0.46742635244280273, 'test_kendall_p_value': 0.015679264187725396, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09642632728578485, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 25, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 100, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.15804200172423, 'test_rmse': 180.48870854154947, 'test_r2': -0.8786814652679775, 'test_pearson_r': array([-0.8462236]), 'test_pearson_p_value': array([3.59440927e-05]), 'test_spearman_r': -0.669405046004959, 'test_spearman_p_value': 0.004564420119989911, 'test_kendall_r': -0.4383570037596047, 'test_kendall_p_value': 0.022938250548632792, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08572358858595686, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 307, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_1': {'cluster size (%)': 6, 6: {'fit_time': array([1.45358276, 1.9251709 , 1.81164432, 1.81827617, 2.07866859,
       2.45010519, 1.47879505, 2.24122763, 2.12147546, 2.01977062,
       2.45692539, 1.84457207, 1.97408009, 1.73185778, 2.4382143 ,
       2.35394835]), 'score_time': array([0.13949537, 0.22123599, 0.13162184, 0.16672993, 0.13415337,
       0.13209915, 0.13424444, 0.14917731, 0.14041424, 0.13264608,
       0.12686872, 0.12902355, 0.14864612, 0.13329792, 0.1310575 ,
       0.12551427]), 'test_pearson_r': array([0.95829217, 0.99766967, 0.99452135, 0.74861182, 0.9967288 ,
       0.16846722, 0.97498748, 0.99625652, 0.99592421, 0.98607539,
       0.99589628, 0.99770192, 0.99402527, 0.78166182, 0.99749038,
       0.90191267]), 'test_pearson_p': array([-1.45757284e-09, -6.56319855e-19, -3.95919683e-16, -8.48722224e-04,
       -1.06551140e-16, -5.32831469e-01, -1.53737763e-10, -2.73521701e-16,
       -4.95643318e-16, -2.62361415e-12, -5.19875800e-16, -9.02139850e-18,
       -7.17376512e-15, -3.48185753e-04, -1.67006137e-17, -1.80113247e-06]), 'test_spearman_r': array([0.68137255, 0.97240975, 0.99141179, 0.87941176, 0.89117647,
       0.70294118, 0.98529412, 0.90588235, 0.97866104, 0.87058824,
       0.9757177 , 0.98454773, 0.9757177 , 0.86598032, 0.97201873,
       0.93529412]), 'test_spearman_p': array([-2.59660314e-03, -6.84697631e-11, -1.14272617e-14, -7.18727304e-06,
       -3.61864891e-06, -2.38695267e-03, -3.83671954e-12, -1.36351336e-06,
       -5.10643005e-11, -1.14989348e-05, -1.25183504e-10, -5.41517846e-12,
       -1.25183504e-10, -1.45036150e-05, -3.34448567e-10, -1.07201672e-07]), 'test_kendall_r': array([0.63235294, 0.92251551, 0.96298938, 0.75      , 0.76666667,
       0.68333333, 0.95      , 0.83333333, 0.91214188, 0.73333333,
       0.91214188, 0.92887842, 0.91214188, 0.72271459, 0.90759507,
       0.8       ]), 'test_kendall_p': array([-1.94890902e-04, -2.55733743e-07, -8.13306630e-08, -8.91848950e-06,
       -4.72451181e-06, -8.26619198e-05, -7.63760478e-11, -2.44193725e-07,
       -8.99518934e-07, -1.62687222e-05, -8.99518934e-07, -5.65704076e-07,
       -8.99518934e-07, -1.04538557e-04, -1.10296350e-06, -1.17934846e-06]), 'test_rmse': array([ -21.98042841,   -6.95825018,  -31.60401976,  -64.62069353,
        -18.66944157, -195.38766876,  -11.88095766,   -8.02400531,
         -7.77966948,  -33.41124256,   -5.84933457,   -6.1974835 ,
        -16.51264938,  -30.11646554,   -6.16040494,  -26.61792829]), 'test_mae': array([-11.9707832 ,  -4.78566173, -12.92690479, -22.44975229,
       -13.23447255, -59.72022949,  -8.03431744,  -5.57175558,
        -5.1700617 , -16.66626744,  -3.82927368,  -4.12486041,
       -11.23206087, -15.24776369,  -4.42743986, -13.53434748]), 'test_r2': array([ 0.89765769,  0.98839955,  0.98530439,  0.32776626,  0.99109911,
       -4.93452061,  0.94991765,  0.98575463,  0.99022221,  0.96945771,
        0.99054611,  0.99520742,  0.97517805,  0.07802955,  0.99280907,
        0.79727684]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0140521706556793, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 301, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([6.27378416, 4.98699617, 6.81752348, 6.26698351, 5.00066423,
       4.88153481, 4.79256773, 5.41965294, 6.32165051, 6.44735599,
       4.68006778, 6.38243985, 5.90710187, 6.32465649, 7.2436595 ,
       6.89483595]), 'score_time': array([0.13465261, 0.13888502, 0.19548368, 0.13548422, 0.14911532,
       0.13519168, 0.14889622, 0.13551736, 0.12978077, 0.13688397,
       0.19614244, 0.13268375, 0.14101005, 0.14255595, 0.12350225,
       0.13358736]), 'test_pearson_r': array([0.98643717, 0.98461857, 0.64475913, 0.99961004, 0.24661225,
       0.98498939, 0.98984013, 0.98878393, 0.83797269, 0.95933348,
       0.88429126, 0.99489276, 0.99538659, 0.96090799, 0.97666815,
       0.98238549]), 'test_pearson_p': array([-3.46797661e-13, -8.86434100e-13, -5.20048042e-03, -3.67341553e-23,
       -3.57173182e-01, -4.42549049e-12, -2.91707518e-13, -5.81309538e-13,
       -5.06382242e-05, -4.42845637e-09, -5.45546102e-06, -2.39780283e-15,
       -1.17821751e-15, -3.37313163e-09, -9.48980245e-11, -1.34672368e-11]), 'test_spearman_r': array([0.82771322, 0.77225306, 0.8887565 , 0.85935199, 0.66666685,
       0.91979422, 0.91470588, 0.98160439, 0.87858743, 0.98527353,
       0.90427197, 0.98823529, 0.98823529, 0.94411765, 0.87481685,
       0.96688768]), 'test_spearman_p': array([-4.11025792e-05, -2.80387118e-04, -1.86072399e-06, -1.99634802e-05,
       -4.79590355e-03, -4.62206235e-07, -7.01180219e-07, -1.82090718e-11,
       -7.52120583e-06, -3.87426958e-12, -1.52871825e-06, -8.10888105e-13,
       -8.10888105e-13, -3.93392920e-08, -9.22022553e-06, -1.07216639e-09]), 'test_kendall_r': array([0.68635154, 0.60223464, 0.80605994, 0.77310924, 0.6778302 ,
       0.84519568, 0.76666667, 0.92887842, 0.74477639, 0.9412097 ,
       0.72271459, 0.95      , 0.95      , 0.81666667, 0.77313654,
       0.87866878]), 'test_kendall_p': array([-1.25989639e-04, -8.22570773e-04, -7.95010666e-06, -3.31810562e-05,
       -2.61704221e-04, -5.31661458e-06, -4.72451181e-06, -5.65704076e-07,
       -6.04438410e-05, -4.35438108e-07, -1.04538557e-04, -7.63760478e-11,
       -7.63760478e-11, -5.50848432e-07, -3.31759538e-05, -2.22140114e-06]), 'test_rmse': array([  -6.90783225,  -20.61928792,  -61.08492627,  -25.22468834,
       -189.5060911 ,  -33.95454511,  -12.01002722,  -32.91239423,
        -18.38189662,  -15.51909308,  -25.65584317,  -41.14005985,
        -10.60253807,  -23.87599546,  -19.22775855,  -14.2233536 ]), 'test_mae': array([ -5.65642893, -14.19912343, -19.39540203, -10.12105102,
       -55.16012625, -18.09525838,  -8.96596261, -17.52849266,
        -9.44151246, -10.16535546, -13.7623154 , -18.83309741,
        -6.12689309, -15.66453745, -12.41799634, -10.1996631 ]), 'test_r2': array([ 0.96662945,  0.93776645, -0.0680587 ,  0.98557914, -3.13943853,
        0.96900043,  0.97636255,  0.97049305,  0.48444455,  0.87663281,
        0.68136933,  0.96241386,  0.97403764,  0.92036559,  0.93560521,
        0.96248872]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0030175755341803503, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1044, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.89618063, 1.47897792, 1.26317191, 1.40641332, 1.18000722,
       1.81233382, 1.28637338, 1.28821349, 1.46444559, 1.16862321,
       1.79724479, 1.81831312, 1.51190209, 1.28162909, 1.80673504,
       2.00199747]), 'score_time': array([0.12620926, 0.13844204, 0.12884545, 0.13708067, 0.20047188,
       0.12673044, 0.2346108 , 0.2627809 , 0.14663243, 0.12863922,
       0.12881827, 0.13014698, 0.13300323, 0.13122416, 0.1273315 ,
       0.13082838]), 'test_pearson_r': array([0.99492624, 0.995539  , 0.8863687 , 0.99781172, 0.99788024,
       0.99696131, 0.75295034, 0.98296853, 0.06681795, 0.98358274,
       0.99548228, 0.9764003 , 0.97871255, 0.99192547, 0.989543  ,
       0.9940809 ]), 'test_pearson_p': array([-2.22861518e-16, -8.50295573e-17, -2.16641475e-06, -6.40564768e-18,
       -5.12768478e-18, -6.36320187e-17, -7.60903807e-04, -1.06565984e-11,
       -8.05786580e-01, -8.25400559e-12, -1.01769649e-15, -1.02718840e-10,
       -5.02146360e-11, -5.87404070e-14, -3.56649343e-13, -6.72000945e-15]), 'test_spearman_r': array([0.99938707, 0.97486223, 0.93317001, 0.97941176, 0.94705882,
       0.95588235, 0.90588235, 0.98454773, 0.63823529, 0.75791043,
       0.96983102, 0.97058824, 0.94922763, 0.89447103, 0.89117647,
       0.98232802]), 'test_spearman_p': array([-2.94591538e-23, -3.43059266e-11, -4.64827006e-08, -3.98200979e-11,
       -2.71573117e-08, -7.76027446e-09, -1.36351336e-06, -5.41517846e-12,
       -7.80113863e-03, -6.69783553e-04, -5.63193822e-10, -4.72340113e-10,
       -2.03820935e-08, -2.94450849e-06, -3.61864891e-06, -1.37757701e-11]), 'test_kendall_r': array([0.99631675, 0.90775526, 0.80443352, 0.91666667, 0.81666667,
       0.85      , 0.81666667, 0.92887842, 0.6       , 0.69456675,
       0.89540533, 0.9       , 0.87866878, 0.76282144, 0.85      ,
       0.92440239]), 'test_kendall_p': array([-2.61058988e-08, -3.95736275e-07, -6.99598360e-06, -1.38948965e-09,
       -5.50848432e-07, -1.02027025e-07, -5.50848432e-07, -5.65704076e-07,
       -7.73831095e-04, -1.83536177e-04, -1.41912826e-06, -4.72556483e-09,
       -2.22140114e-06, -4.67457603e-05, -1.02027025e-07, -6.95749778e-07]), 'test_rmse': array([  -8.23932355,  -18.26579964,  -31.79318578,  -28.75411284,
        -13.54329429,  -16.46686254,  -64.92155556,  -13.51121094,
       -198.47894376,  -17.47343805,  -10.56062678,  -10.40931723,
        -18.89213785,   -9.74816702,   -7.69716911,   -9.34616771]), 'test_mae': array([ -5.769375  ,  -9.28970913, -13.87282759, -14.71154973,
        -7.74851723,  -9.88902691, -21.919043  ,  -5.65256881,
       -57.72081614, -10.65482498,  -6.79234542,  -5.75170816,
       -11.48538097,  -5.78505171,  -4.91378396,  -5.32134748]), 'test_r2': array([  0.9866567 ,   0.98988806,   0.78349352,   0.98181989,
         0.99561218,   0.99249096,   0.41453079,   0.95804702,
       -18.36231509,   0.96097   ,   0.98760749,   0.94267919,
         0.95300003,   0.9761624 ,   0.97408496,   0.98516525]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03191616669721422, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 186, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.77237511, 1.72437191, 1.67318058, 2.48791718, 1.86698198,
       2.28330016, 1.70040989, 1.89055467, 1.72994781, 1.73320484,
       2.48579788, 2.28821445, 2.15718102, 2.34831309, 1.95754957,
       1.94171643]), 'score_time': array([0.13116336, 0.13280129, 0.1470654 , 0.13758755, 0.14089131,
       0.13773823, 0.1267972 , 0.13451886, 0.13300586, 0.12824154,
       0.1255362 , 0.19181585, 0.12618566, 0.12929988, 0.13949537,
       0.12754774]), 'test_pearson_r': array([ 0.98897487,  0.99560854,  0.97854999,  0.99802451, -0.08753051,
        0.99390567,  0.99566625,  0.98794613,  0.9956862 ,  0.80195263,
        0.99586086,  0.99600619,  0.6576409 ,  0.99802994,  0.98566236,
        0.99761166]), 'test_pearson_p': array([-7.38759366e-14, -7.55928961e-17, -1.05502239e-11, -3.13191413e-18,
       -7.47195002e-01, -8.23878886e-15, -7.61100802e-16, -9.60389233e-13,
       -7.36946032e-16, -1.86426179e-04, -5.52059217e-16, -4.30027140e-16,
       -5.62633506e-03, -3.07214922e-18, -3.21580278e-12, -1.18110121e-17]), 'test_spearman_r': array([0.85828221, 0.98039216, 0.96995726, 0.98669374, 0.5802651 ,
       0.97058824, 0.9757177 , 0.96460597, 0.97126251, 0.81089058,
       0.98749107, 0.99117647, 0.69117647, 0.96764706, 0.92058824,
       0.98160439]), 'test_spearman_p': array([-1.04305506e-05, -5.40869607e-12, -1.28761744e-10, -1.91214071e-12,
       -1.84484633e-02, -4.72340113e-10, -1.25183504e-10, -1.69905595e-09,
       -4.02278911e-10, -1.38406226e-04, -1.24331763e-12, -1.09082915e-13,
       -3.02471880e-03, -9.13289481e-10, -4.32041043e-07, -1.82090718e-11]), 'test_kendall_r': array([0.81481481, 0.92647059, 0.87823476, 0.94048016, 0.5210084 ,
       0.9       , 0.91214188, 0.86926796, 0.90302594, 0.74477639,
       0.94561497, 0.95      , 0.6       , 0.88333333, 0.8       ,
       0.92887842]), 'test_kendall_p': array([-5.65567745e-06, -1.08016188e-10, -9.29113866e-07, -5.83620144e-07,
       -5.15718988e-03, -4.72556483e-09, -8.99518934e-07, -3.24532792e-06,
       -1.35084085e-06, -6.04438410e-05, -3.52984089e-07, -7.63760478e-11,
       -7.73831095e-04, -1.43717927e-08, -1.17934846e-06, -5.65704076e-07]), 'test_rmse': array([ -11.44852473,   -6.6129593 ,  -19.37523599,   -3.86410851,
       -277.81188206,   -8.71369969,  -28.78563596,  -14.25924175,
         -6.49003369,  -32.83053609,   -8.54452215,   -6.93722846,
        -67.97663933,  -13.4310592 ,  -17.23327984,  -17.00981929]), 'test_mae': array([  -5.90972764,   -4.60494515,  -10.80817448,   -2.21141862,
       -106.00561275,   -4.32553318,  -16.45836394,   -7.34926206,
         -4.50405553,  -14.08537311,   -6.63276248,   -4.24521153,
        -28.78963688,   -7.36802448,  -12.35311133,  -10.86505069]), 'test_r2': array([  0.97285207,   0.9873931 ,   0.95725366,   0.99141727,
       -58.62058468,   0.9877482 ,   0.9883352 ,   0.96996087,
         0.99122517,   0.17989178,   0.98200757,   0.99177473,
        -0.08461579,   0.99528922,   0.95474927,   0.99317126]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09125129433504907, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 963, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.31361794, 2.44045281, 2.24238777, 2.64492154, 3.04672122,
       2.99118781, 2.99422312, 2.38961101, 3.29379773, 3.74853897,
       3.72565126, 3.34311509, 3.50411773, 3.69035935, 2.36275792,
       3.15189672]), 'score_time': array([0.12725472, 0.1320405 , 0.127321  , 0.15375662, 0.13043809,
       0.1378901 , 0.13768029, 0.22491741, 0.12986112, 0.12862515,
       0.12730742, 0.12660551, 0.12617254, 0.13284636, 0.13139749,
       0.1390419 ]), 'test_pearson_r': array([0.99806258, 0.97383992, 0.98624875, 0.99593086, 0.98818437,
       0.9868399 , 0.98963461, 0.26013714, 0.48486672, 0.99631474,
       0.98888284, 0.98774409, 0.89560662, 0.98715292, 0.98902246,
       0.99484667]), 'test_pearson_p': array([-1.64491219e-19, -4.61238026e-11, -3.84396206e-13, -4.90023058e-16,
       -8.35668188e-13, -1.77054983e-12, -3.35425418e-13, -3.30536650e-01,
       -5.69683416e-02, -2.45138561e-16, -5.46503678e-13, -1.07832723e-12,
       -2.73824957e-06, -1.49721884e-12, -5.00413583e-13, -2.55312694e-15]), 'test_spearman_r': array([0.99264706, 0.83602082, 0.82331288, 0.96688768, 0.97718937,
       0.96470588, 0.96176471, 0.74411765, 0.84411765, 0.94698085,
       0.961001  , 0.98235294, 0.84071162, 0.98160439, 0.84705882,
       0.96470588]), 'test_spearman_p': array([-3.57827382e-15, -2.91067062e-05, -4.89915735e-05, -1.07216639e-09,
       -8.11284121e-11, -1.66620775e-09, -2.89508013e-09, -9.48282786e-04,
       -3.93024274e-05, -2.74327867e-08, -3.31817876e-09, -1.36412383e-11,
       -4.52882807e-05, -1.82090718e-11, -3.46804648e-05, -1.66620775e-09]), 'test_kendall_r': array([0.95588235, 0.73702963, 0.77777778, 0.87866878, 0.91214188,
       0.88333333, 0.85      , 0.71666667, 0.71666667, 0.87394958,
       0.87866878, 0.91666667, 0.75111503, 0.91214188, 0.76666667,
       0.91666667]), 'test_kendall_p': array([-5.34739170e-12, -4.76443323e-05, -1.47387682e-05, -2.22140114e-06,
       -8.99518934e-07, -1.43717927e-08, -1.02027025e-07, -2.87624658e-05,
       -2.87624658e-05, -2.70782464e-06, -2.22140114e-06, -1.38948965e-09,
       -5.77113463e-05, -8.99518934e-07, -4.72451181e-06, -1.38948965e-09]), 'test_rmse': array([  -5.52810376,  -14.28037143,  -12.73639363,  -21.87397299,
        -16.64435748,   -7.42880766,  -14.85577244, -199.27005062,
        -66.50353436,  -26.003029  ,  -11.91778189,  -17.46209124,
        -31.40610731,  -13.96437418,   -6.00515071,  -20.51426587]), 'test_mae': array([ -3.39140667,  -7.97482342,  -6.51720485, -12.48400163,
       -10.53071204,  -5.1094433 ,  -8.48491099, -55.0213869 ,
       -26.46260389, -12.3396272 ,  -6.70259861,  -8.41130054,
       -13.78963364,  -9.12323221,  -3.86351283, -11.39041391]), 'test_r2': array([ 0.99447452,  0.94006388,  0.97057702,  0.9881752 ,  0.9698774 ,
        0.97380416,  0.97833707, -4.10592799, -2.31721736,  0.99063932,
        0.9762628 ,  0.96316551,  0.71880236,  0.9566013 ,  0.97604072,
        0.98829551]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05913781436124809, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2125, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.38232613, 0.54518104, 0.4141643 , 0.35260081, 0.36733484,
       0.55742812, 0.40393472, 0.59809995, 0.68978596, 0.67082286,
       0.41812205, 0.65105629, 0.61667824, 0.63838577, 0.45419383,
       0.64406967]), 'score_time': array([0.13383961, 0.13209105, 0.13539696, 0.17410159, 0.12614655,
       0.17044783, 0.19769192, 0.12426543, 0.1253953 , 0.12653303,
       0.12221026, 0.12465596, 0.13908291, 0.12276626, 0.13441491,
       0.14328361]), 'test_pearson_r': array([0.97450847, 0.92015608, 0.99480845, 0.98836118, 0.9970048 ,
       0.97182262, 0.99664771, 0.69341808, 0.9959466 , 0.9962768 ,
       0.97301153, 0.99956345, 0.99517395, 0.87047501, 0.98215778,
       0.76925858]), 'test_pearson_p': array([-3.80576961e-11, -1.69869565e-07, -2.64629908e-16, -7.52315046e-13,
       -5.75310331e-17, -3.51022327e-10, -1.26445885e-16, -2.89365588e-03,
       -4.76927433e-16, -2.63330905e-16, -2.60404876e-10, -8.09299216e-23,
       -1.61426791e-15, -1.15659219e-05, -1.47253672e-11, -4.94603839e-04]), 'test_spearman_r': array([0.83232161, 0.95833333, 0.96932588, 0.99043441, 0.94256259,
       0.90294118, 0.97201767, 0.87564409, 0.87352941, 0.95581738,
       0.93823529, 0.99410462, 0.98305325, 0.8550407 , 0.83100197,
       0.67844021]), 'test_spearman_p': array([-3.40187898e-05, -1.44699119e-09, -1.50222538e-10, -1.91599035e-13,
       -4.74737472e-08, -1.67772437e-06, -3.34535840e-10, -8.82222352e-06,
       -9.86965167e-06, -7.83927032e-09, -7.80221977e-08, -6.53417850e-15,
       -1.02933426e-11, -2.43675207e-05, -6.66843678e-05, -3.86334348e-03]), 'test_kendall_r': array([0.75207105, 0.85294118, 0.9037285 , 0.96235152, 0.85714286,
       0.81666667, 0.90756303, 0.76151294, 0.75      , 0.88235294,
       0.81666667, 0.97054189, 0.91990493, 0.6778302 , 0.71196668,
       0.62762056]), 'test_kendall_p': array([-3.32635548e-05, -2.39403120e-08, -4.80224875e-07, -2.18526649e-07,
       -4.19268233e-06, -5.50848432e-07, -1.10319426e-06, -4.10999309e-05,
       -8.91848950e-06, -2.16973828e-06, -5.50848432e-07, -2.02597451e-07,
       -8.54700027e-07, -2.61704221e-04, -1.44750601e-04, -7.24551643e-04]), 'test_rmse': array([ -16.51605003,  -26.99938001,  -12.6281127 ,  -14.33366894,
         -6.68969968,  -15.29614853,  -39.23281508,  -63.38433204,
         -8.54653016,   -9.90176155,  -15.31561716,   -5.88887516,
        -11.27893783,  -32.60040844,  -18.71853301, -189.69476372]), 'test_mae': array([ -9.82379779, -14.79566531,  -8.7966608 ,  -6.83170295,
        -5.31671333,  -7.51179843, -19.32447146, -20.3760756 ,
        -6.08501456,  -7.84747153,  -8.82460139,  -4.32613537,
        -8.33386591, -21.06322125, -10.13783516, -72.95292586]), 'test_r2': array([0.94528615, 0.77878619, 0.9784966 , 0.95962657, 0.99108408,
       0.90380737, 0.96613957, 0.00246914, 0.98504534, 0.95711878,
       0.94070678, 0.99898252, 0.98605885, 0.72819465, 0.93792904,
       0.4990887 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06678639058063013, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.4839294 , 1.47532821, 1.41827679, 1.65490246, 1.43759823,
       1.59979749, 1.64133906, 1.47878122, 1.63920164, 1.7087338 ,
       1.67045307, 2.24358225, 1.97036147, 1.53460455, 1.65307426,
       2.18826294]), 'score_time': array([0.14029264, 0.13999438, 0.12726045, 0.13013744, 0.18280554,
       0.14087534, 0.13363981, 0.13937092, 0.12781715, 0.19589376,
       0.13136077, 0.14848185, 0.13229823, 0.12651849, 0.1327064 ,
       0.1309123 ]), 'test_pearson_r': array([0.99580032, 0.99821435, 0.99927238, 0.98514571, 0.81899586,
       0.23970947, 0.99457647, 0.56789133, 0.96631873, 0.98298209,
       0.99440884, 0.99039893, 0.98719454, 0.99746185, 0.94068352,
       0.99772402]), 'test_pearson_p': array([-5.41093503e-17, -8.92568100e-20, -1.06600186e-22, -4.11448856e-12,
       -1.04221802e-04, -3.71216201e-01, -3.64854193e-15, -2.17452314e-02,
       -1.20613721e-09, -1.05977481e-11, -4.51306313e-15, -1.96610448e-13,
       -1.46375386e-12, -1.80746014e-17, -5.91730346e-08, -8.43187418e-18]), 'test_spearman_r': array([0.67075426, 0.89926561, 0.98404982, 0.97277436, 0.91096419,
       0.63723343, 0.99117647, 0.85882353, 0.80559734, 0.96470588,
       0.99705449, 0.98598457, 0.98235294, 0.98160439, 0.94411765,
       0.96764706]), 'test_spearman_p': array([-3.20626415e-03, -9.12283574e-07, -1.16198135e-12, -2.76678019e-10,
       -9.37408818e-07, -7.92927989e-03, -1.09082915e-13, -2.04643957e-05,
       -1.65403905e-04, -1.66620775e-09, -5.11806168e-17, -2.74510261e-12,
       -1.36412383e-11, -1.82090718e-11, -3.93392920e-08, -9.13289481e-10]), 'test_kendall_r': array([0.67159129, 0.82533014, 0.91854372, 0.89540533, 0.84519568,
       0.7113033 , 0.95      , 0.73333333, 0.72271459, 0.85      ,
       0.98742088, 0.94928891, 0.91666667, 0.91214188, 0.86666667,
       0.91666667]), 'test_kendall_p': array([-1.75630107e-04, -4.50366449e-06, -3.11133291e-07, -1.41912826e-06,
       -5.31661458e-06, -1.27728091e-04, -7.63760478e-11, -1.62687222e-05,
       -1.04538557e-04, -1.02027025e-07, -1.24121435e-07, -4.05106961e-07,
       -1.38948965e-09, -8.99518934e-07, -3.98309214e-08, -1.38948965e-09]), 'test_rmse': array([ -17.62820034,  -16.10441106,   -9.81836077,  -10.24201108,
        -29.90157257, -199.45508384,   -9.23878381,  -65.41122836,
        -16.20345331,  -16.01862873,  -10.12413104,  -14.55979455,
        -13.7369419 ,   -6.52903863,  -26.51671128,  -26.26071492]), 'test_mae': array([ -9.53257032,  -8.71668459,  -6.13737281,  -5.90376479,
       -10.08990356, -54.00978667,  -5.86655928, -23.44151636,
        -9.52448671,  -9.7279412 ,  -5.80204138,  -8.96336116,
        -7.44033863,  -4.65284931, -16.41232523, -12.04691087]), 'test_r2': array([ 0.99041737,  0.99344774,  0.99717177,  0.96849619,  0.5325204 ,
       -5.76310372,  0.98879627, -0.64191699,  0.92838526,  0.96481131,
        0.98375154,  0.97711889,  0.96342642,  0.99466078,  0.7945935 ,
        0.98525685]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05225400716467375, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 345, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_2': {'cluster size (%)': 22, 6: {'test_mad': 77.45631985731274, 'test_ystd': 87.04923771082645, 'test_mae': 95.1626616209951, 'test_rmse': 125.6961217939082, 'test_r2': -1.0850372190757689, 'test_pearson_r': array([-0.34064488]), 'test_pearson_p_value': array([0.00888197]), 'test_spearman_r': -0.0458975748067481, 'test_spearman_p_value': 0.7322630520682243, 'test_kendall_r': -0.11697056308449487, 'test_kendall_p_value': 0.1995136630776777, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08658989173881054, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 1693, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 794, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 77.45631985731274, 'test_ystd': 87.04923771082645, 'test_mae': 95.28973989437367, 'test_rmse': 125.75584053165268, 'test_r2': -1.0870189090129738, 'test_pearson_r': array([-0.34492927]), 'test_pearson_p_value': array([0.00801028]), 'test_spearman_r': -0.04462197991670389, 'test_spearman_p_value': 0.7394370637754404, 'test_kendall_r': -0.11481366168322789, 'test_kendall_p_value': 0.20682588719179917, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07432598885490127, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1387, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 77.45631985731274, 'test_ystd': 87.04923771082645, 'test_mae': 95.48441229721595, 'test_rmse': 125.76590120523842, 'test_r2': -1.0873528522447464, 'test_pearson_r': array([-0.35527013]), 'test_pearson_p_value': array([0.0062067]), 'test_spearman_r': -0.0693184199907136, 'test_spearman_p_value': 0.6051254543053842, 'test_kendall_r': -0.13156280596526881, 'test_kendall_p_value': 0.15513255235898843, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05179608642983718, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 120, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 77.45631985731274, 'test_ystd': 87.04923771082645, 'test_mae': 95.38456226332434, 'test_rmse': 125.76876194963474, 'test_r2': -1.0874478136107801, 'test_pearson_r': array([-0.34953885]), 'test_pearson_p_value': array([0.00715656]), 'test_spearman_r': -0.04781124579147536, 'test_spearman_p_value': 0.7215432007526751, 'test_kendall_r': -0.12404073422204477, 'test_kendall_p_value': 0.18000748032596103, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.039757776331372376, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 187, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 77.45631985731274, 'test_ystd': 87.04923771082645, 'test_mae': 95.28768770152125, 'test_rmse': 125.63524010485177, 'test_r2': -1.0830179070460138, 'test_pearson_r': array([-0.35323062]), 'test_pearson_p_value': array([0.00653123]), 'test_spearman_r': -0.04708493385076643, 'test_spearman_p_value': 0.72560566402942, 'test_kendall_r': -0.11835491020906838, 'test_kendall_p_value': 0.20052502634930902, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08625666912307171, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 71, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 77.45631985731274, 'test_ystd': 87.04923771082645, 'test_mae': 95.2281748898276, 'test_rmse': 125.6841112957516, 'test_r2': -1.0846387797460921, 'test_pearson_r': array([-0.33934538]), 'test_pearson_p_value': array([0.00916216]), 'test_spearman_r': -0.042799108553053786, 'test_spearman_p_value': 0.7497272512651076, 'test_kendall_r': -0.11108097519758935, 'test_kendall_p_value': 0.22176353175078134, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 19, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 245, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 77.45631985731274, 'test_ystd': 87.04923771082645, 'test_mae': 95.16238321633173, 'test_rmse': 125.52604310414024, 'test_r2': -1.0793985330784102, 'test_pearson_r': array([-0.35127547]), 'test_pearson_p_value': array([0.00685617]), 'test_spearman_r': -0.047526026648166596, 'test_spearman_p_value': 0.7231376062399898, 'test_kendall_r': -0.12115765248405874, 'test_kendall_p_value': 0.19110333538923274, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08220032000879969, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 77, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_2': {'cluster size (%)': 25, 6: {'fit_time': array([1.32266593, 1.33675528, 1.26218009, 1.25054002]), 'score_time': array([0.1239357 , 0.12372494, 0.19266963, 0.16966319]), 'test_pearson_r': array([0.96549251, 0.74062833, 0.98950376, 0.96218861]), 'test_pearson_p': array([-1.59930438e-38, -1.76362520e-12, -1.19677227e-54, -1.00335798e-36]), 'test_spearman_r': array([0.85806102, 0.91495198, 0.9355428 , 0.93993453]), 'test_spearman_p': array([-6.78043598e-20, -1.62275914e-26, -3.58817906e-30, -1.22680643e-30]), 'test_kendall_r': array([0.77035038, 0.84063641, 0.81935569, 0.81544637]), 'test_kendall_p': array([-1.65932785e-19, -4.79568100e-23, -8.38788710e-22, -2.36879083e-21]), 'test_rmse': array([-40.15048263, -97.05161993, -17.69393431, -21.07925478]), 'test_mae': array([-14.35530885, -20.91247351,  -8.27831365, -11.40111953]), 'test_r2': array([0.93040405, 0.33075957, 0.97691906, 0.92311914]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0140521706556793, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 301, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([4.20110035, 4.12932563, 3.71844912, 4.00140429]), 'score_time': array([0.12603426, 0.12636018, 0.12693882, 0.12485337]), 'test_pearson_r': array([0.89110996, 0.80990504, 0.97720078, 0.96153906]), 'test_pearson_p': array([-2.69528079e-23, -3.10745487e-16, -4.07685974e-44, -1.68498854e-36]), 'test_spearman_r': array([0.79357715, 0.84956173, 0.94335383, 0.93820985]), 'test_spearman_p': array([-3.19273609e-15, -3.70055968e-19, -6.90726342e-32, -2.87538609e-30]), 'test_kendall_r': array([0.63601315, 0.75587911, 0.81432706, 0.81832122]), 'test_kendall_p': array([-1.32301199e-13, -8.94444739e-19, -1.44113901e-21, -1.61635634e-21]), 'test_rmse': array([-56.6251066 , -98.91139071, -28.80357761, -22.05534062]), 'test_mae': array([-23.86602552, -24.90883467, -14.20133811, -13.15937583]), 'test_r2': array([0.77637726, 0.56072583, 0.94064247, 0.91505395]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0030175755341803503, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1044, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.02355671, 0.92890882, 0.97937703, 1.13583708]), 'score_time': array([0.12213898, 0.12447453, 0.12340713, 0.14322615]), 'test_pearson_r': array([0.98729075, 0.97105043, 0.52855785, 0.97460815]), 'test_pearson_p': array([-4.79670006e-52, -6.88025703e-41, -6.01865949e-06, -5.25093724e-42]), 'test_spearman_r': array([0.95990035, 0.95191573, 0.85897886, 0.94368293]), 'test_spearman_p': array([-1.66745001e-36, -4.50689608e-34, -5.60814416e-20, -1.76021723e-31]), 'test_kendall_r': array([0.87108175, 0.84956852, 0.79141937, 0.85815995]), 'test_kendall_p': array([-1.67047974e-24, -1.91239462e-23, -1.50611096e-20, -2.26491319e-23]), 'test_rmse': array([-25.60437006, -36.1233766 , -99.33472407, -16.44105693]), 'test_mae': array([-12.35162226, -12.54026904, -21.06278321,  -9.31646507]), 'test_r2': array([ 0.97170624,  0.9415904 , -0.86921822,  0.94910633]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03191616669721422, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 186, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.53880763, 1.58813429, 1.55474615, 1.52116418]), 'score_time': array([0.12190056, 0.12620234, 0.11908484, 0.12136626]), 'test_pearson_r': array([0.96728222, 0.70157205, 0.96431227, 0.97134517]), 'test_pearson_p': array([-3.06921359e-39, -7.53454939e-11, -4.53215186e-38, -2.12318665e-40]), 'test_spearman_r': array([0.94244123, 0.86806102, 0.94310384, 0.91600747]), 'test_spearman_p': array([-1.12700804e-31, -7.95075629e-21, -7.90490969e-32, -2.79625162e-26]), 'test_kendall_r': array([0.84553734, 0.79527948, 0.85838782, 0.80874357]), 'test_kendall_p': array([-4.44932691e-23, -8.91988411e-21, -7.15779007e-24, -3.98250625e-21]), 'test_rmse': array([ -18.54827334, -140.60945394,  -17.97157136,  -37.36558753]), 'test_mae': array([ -9.70259918, -33.76622778,  -7.82566064, -15.63785696]), 'test_r2': array([0.93313178, 0.15947921, 0.92288944, 0.94000378]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09125129433504907, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 963, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.03094554, 2.0381012 , 2.00452352, 2.08425212]), 'score_time': array([0.14062214, 0.12342882, 0.12210417, 0.13877463]), 'test_pearson_r': array([0.99345653, 0.59100737, 0.96561671, 0.98251451]), 'test_pearson_p': array([-4.35398772e-61, -2.18263675e-07, -1.43026071e-38, -5.59929521e-47]), 'test_spearman_r': array([0.92663683, 0.91394853, 0.82318995, 0.94525598]), 'test_spearman_p': array([-1.84628295e-28, -2.31209479e-26, -3.93184303e-17, -7.48782634e-32]), 'test_kendall_r': array([0.83458805, 0.83128763, 0.74819181, 0.84819941]), 'test_kendall_p': array([-1.28034313e-22, -1.39955123e-22, -1.82113022e-18, -4.55522042e-23]), 'test_rmse': array([-14.38812035, -99.00504779, -39.43022666, -20.94918234]), 'test_mae': array([ -7.40168052, -19.67726725, -15.7198965 , -10.77815649]), 'test_r2': array([ 0.98545231, -0.32498537,  0.9323113 ,  0.96395429]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05913781436124809, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2125, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.34872508, 0.32893944, 0.38832879, 0.34873366]), 'score_time': array([0.12545729, 0.11956382, 0.12197685, 0.20642924]), 'test_pearson_r': array([0.94527728, 0.9492499 , 0.99642518, 0.79175724]), 'test_pearson_p': array([-2.39549219e-32, -2.36877770e-33, -2.44071073e-69, -6.74171679e-15]), 'test_spearman_r': array([0.93433784, 0.90342183, 0.9649263 , 0.85724439]), 'test_spearman_p': array([-6.31351282e-30, -7.45082864e-25, -2.64779798e-38, -1.56964767e-19]), 'test_kendall_r': array([0.81192996, 0.74584002, 0.86018294, 0.72297423]), 'test_kendall_p': array([-2.08093134e-21, -2.14472904e-18, -6.31591589e-24, -4.91263125e-17]), 'test_rmse': array([ -24.6133791 ,  -40.00676727,   -9.96435825, -102.3193497 ]), 'test_mae': array([-14.4072366 , -15.16022441,  -6.77209773, -32.8899206 ]), 'test_r2': array([0.8853766 , 0.89639942, 0.99146888, 0.56753665]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06678639058063013, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.2992754 , 1.22406554, 1.26052952, 1.30600262]), 'score_time': array([0.12281394, 0.12347794, 0.1227355 , 0.12531805]), 'test_pearson_r': array([0.98770639, 0.47594917, 0.9817497 , 0.9895182 ]), 'test_pearson_p': array([-1.69333708e-52, -6.14528861e-05, -3.93858983e-47, -8.00066813e-54]), 'test_spearman_r': array([0.79804955, 0.87163012, 0.94490413, 0.97455212]), 'test_spearman_p': array([-1.72285541e-15, -3.54523790e-21, -2.95055654e-32, -5.61770058e-42]), 'test_kendall_r': array([0.72957204, 0.79450848, 0.85563338, 0.8775766 ]), 'test_kendall_p': array([-1.29411500e-17, -9.89434005e-21, -1.06288889e-23, -1.33715486e-24]), 'test_rmse': array([ -33.82813218, -106.03341497,  -15.62465368,  -21.03374348]), 'test_mae': array([-14.45054614, -25.77885036,  -8.84315283, -11.12840059]), 'test_r2': array([ 0.9603822 , -1.43860591,  0.96363521,  0.97305733]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05225400716467375, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 345, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_3': {'cluster size (%)': 7, 6: {'test_mad': 32.5180055401662, 'test_ystd': 36.91696679946946, 'test_mae': 38.46589708830181, 'test_rmse': 47.505881564190965, 'test_r2': -0.6559329252951451, 'test_pearson_r': array([0.263952]), 'test_pearson_p_value': array([0.27485863]), 'test_spearman_r': 0.20574290317062055, 'test_spearman_p_value': 0.39809738690722607, 'test_kendall_r': 0.10275702511838362, 'test_kendall_p_value': 0.5486590860409557, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07892265220123706, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 255, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 32.5180055401662, 'test_ystd': 36.91696679946946, 'test_mae': 38.55406349583676, 'test_rmse': 47.64631549151663, 'test_r2': -0.6657377275677887, 'test_pearson_r': array([0.25815534]), 'test_pearson_p_value': array([0.28592633]), 'test_spearman_r': 0.23690116941569214, 'test_spearman_p_value': 0.3288068699554536, 'test_kendall_r': 0.15571374980869063, 'test_kendall_p_value': 0.36047253936961954, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05592004837917565, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 384, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 32.5180055401662, 'test_ystd': 36.91696679946946, 'test_mae': 38.830176584344166, 'test_rmse': 48.02185205246303, 'test_r2': -0.6920990782356151, 'test_pearson_r': array([0.25602874]), 'test_pearson_p_value': array([0.29005427]), 'test_spearman_r': 0.1996504603340031, 'test_spearman_p_value': 0.4125157496541151, 'test_kendall_r': 0.09701425001453318, 'test_kendall_p_value': 0.5721828526299363, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.008641045630362058, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1786, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 32.5180055401662, 'test_ystd': 36.91696679946946, 'test_mae': 38.980777539704974, 'test_rmse': 47.6728792861689, 'test_r2': -0.6675956109803047, 'test_pearson_r': array([0.23324292]), 'test_pearson_p_value': array([0.3365497]), 'test_spearman_r': 0.22706249736449716, 'test_spearman_p_value': 0.3498703065537374, 'test_kendall_r': 0.12694894822438663, 'test_kendall_p_value': 0.4723488538653945, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06373009107639704, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 72, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 32.5180055401662, 'test_ystd': 36.91696679946946, 'test_mae': 39.55158334029348, 'test_rmse': 47.798387790286625, 'test_r2': -0.6763877352518111, 'test_pearson_r': array([0.21338379]), 'test_pearson_p_value': array([0.38041112]), 'test_spearman_r': 0.12474975151646284, 'test_spearman_p_value': 0.6108568147826474, 'test_kendall_r': 0.05077957928975465, 'test_kendall_p_value': 0.7737562774465028, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.026059022817573173, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 135, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 32.5180055401662, 'test_ystd': 36.91696679946946, 'test_mae': 38.88234610306589, 'test_rmse': 47.86809281912579, 'test_r2': -0.6812806977442001, 'test_pearson_r': array([0.24915096]), 'test_pearson_p_value': array([0.30365265]), 'test_spearman_r': 0.2162927346436514, 'test_spearman_p_value': 0.3737950784592097, 'test_kendall_r': 0.11425405340194797, 'test_kendall_p_value': 0.517763781690975, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07306363164780742, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 85, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 32.5180055401662, 'test_ystd': 36.91696679946946, 'test_mae': 35.46522020038805, 'test_rmse': 43.40875563477753, 'test_r2': -0.3826194146028452, 'test_pearson_r': array([0.32399618]), 'test_pearson_p_value': array([0.17598203]), 'test_spearman_r': 0.3239903618521085, 'test_spearman_p_value': 0.1759902467170407, 'test_kendall_r': 0.22850810680389594, 'test_kendall_p_value': 0.1958061738501874, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 71, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_3': {'cluster size (%)': 7, 6: {'fit_time': array([1.4650321 , 1.69500566, 1.66140914, 1.43740296, 1.45943594,
       1.43239856, 1.39176726, 1.54271293, 1.47823381, 1.52327228,
       2.2461853 , 2.18143821, 2.14624619, 2.06758881]), 'score_time': array([0.22146606, 0.12990928, 0.13550091, 0.21316457, 0.12812662,
       0.12826443, 0.12632155, 0.12897778, 0.13400745, 0.13641334,
       0.14132786, 0.12681079, 0.12780666, 0.12133265]), 'test_pearson_r': array([0.9513341 , 0.99912049, 0.99243704, 0.95138398, 0.09951213,
       0.98182602, 0.99473599, 0.9965471 , 0.98641197, 0.99611481,
       0.99552779, 0.95205535, 0.99185893, 0.90365033]), 'test_pearson_p': array([-4.06311570e-10, -7.30909429e-25, -6.26516217e-17, -4.02854096e-10,
       -6.85239218e-01, -1.04191067e-13, -2.90134066e-18, -1.00494319e-18,
       -5.59990247e-14, -2.57860641e-18, -7.93353127e-18, -1.20735197e-09,
       -9.45737764e-16, -2.74991893e-07]), 'test_spearman_r': array([0.6754386 , 0.99209833, 0.98245614, 0.86666667, 0.69298246,
       0.98070175, 0.9245614 , 0.96744302, 0.94166249, 0.97316821,
       0.98502853, 0.88533105, 0.97210796, 0.94829572]), 'test_spearman_p': array([-1.50551238e-03, -9.08163885e-17, -7.73558991e-14, -1.58937749e-06,
       -1.00432582e-03, -1.72884140e-13, -1.53799335e-08, -5.73067097e-11,
       -5.61230323e-09, -1.24188235e-11, -1.21105572e-13, -1.04283965e-06,
       -1.68763179e-11, -2.18242419e-09]), 'test_kendall_r': array([0.60233918, 0.95882353, 0.92982456, 0.73099415, 0.6374269 ,
       0.90643275, 0.83625731, 0.89773377, 0.8524636 , 0.90849673,
       0.93115255, 0.73027896, 0.9013353 , 0.83172394]), 'test_kendall_p': array([-1.58318567e-04, -1.13228376e-08, -2.06767062e-12, -1.52091530e-06,
       -5.28075820e-05, -2.27996852e-11, -5.55516932e-09, -2.43687175e-07,
       -8.32299419e-07, -9.76656516e-11, -7.34599652e-08, -2.54839973e-05,
       -2.02850566e-07, -1.70822672e-06]), 'test_rmse': array([ -22.36326326,   -7.24108995,  -32.15146239,  -59.99152177,
       -179.48373459,  -14.76202531,   -8.13603949,   -6.89068419,
        -31.49897076,   -6.65525863,  -13.13990738,  -23.16832992,
         -9.66313928,  -25.09936505]), 'test_mae': array([-11.67169336,  -5.0850347 , -13.93411223, -22.41561995,
       -53.36415488,  -9.38918596,  -5.91144055,  -4.211648  ,
       -14.86780033,  -4.61277621,  -7.54616612, -13.33510736,
        -5.83516423, -12.52799024]), 'test_r2': array([  0.88738802,   0.99823119,   0.97431198,   0.90144944,
       -10.008488  ,   0.96061976,   0.98308096,   0.99176678,
         0.97041462,   0.99132945,   0.98290646,   0.90051252,
         0.9810584 ,   0.80036387]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0140521706556793, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 301, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([5.38241148, 5.0600481 , 4.65686011, 5.34287381, 6.42110968,
       4.64474201, 4.84521675, 5.00377822, 6.8769815 , 6.97521567,
       5.0463028 , 6.21019745, 6.26736879, 5.44283915]), 'score_time': array([0.12851   , 0.14971066, 0.12941718, 0.12564945, 0.12556577,
       0.13044858, 0.13577652, 0.20275164, 0.12187314, 0.12015986,
       0.15346336, 0.12609124, 0.12477326, 0.17921257]), 'test_pearson_r': array([0.98571658, 0.98513819, 0.94631005, 0.99860602, 0.64461952,
       0.98768522, 0.9883358 , 0.8793699 , 0.9576937 , 0.98893567,
       0.9927347 , 0.9861561 , 0.95988474, 0.98151926]), 'test_pearson_p': array([-1.36234525e-14, -1.90535057e-14, -9.20577392e-10, -3.65785921e-23,
       -2.88714159e-03, -3.88797325e-15, -2.45649929e-15, -1.53403643e-06,
       -4.51767435e-10, -1.09082410e-14, -3.81536507e-16, -6.49603288e-14,
       -2.97278345e-10, -6.45697131e-13]), 'test_spearman_r': array([0.84628906, 0.841089  , 0.93807651, 0.81351478, 0.72495718,
       0.91092593, 0.9679685 , 0.9163228 , 0.9705154 , 0.95198774,
       0.98657077, 0.94785764, 0.88028896, 0.97624019]), 'test_spearman_p': array([-4.95087034e-06, -6.44765773e-06, -3.00918779e-09, -2.27417385e-05,
       -4.45394275e-04, -6.02180863e-08, -1.22887146e-11, -9.27154202e-08,
       -2.61829819e-11, -1.22077937e-09, -5.09977899e-14, -2.33156775e-09,
       -1.44733680e-06, -4.74047396e-12]), 'test_kendall_r': array([0.70796768, 0.70001211, 0.84956122, 0.69208509, 0.69235618,
       0.77419688, 0.89149943, 0.80922804, 0.90736436, 0.8524636 ,
       0.92765165, 0.83934877, 0.77777778, 0.9013353 ]), 'test_kendall_p': array([-2.59967470e-05, -3.06761171e-05, -4.48423156e-07, -3.61461714e-05,
       -4.07176784e-05, -3.82034206e-06, -1.03161918e-07, -3.07634090e-06,
       -1.92223638e-07, -8.32299419e-07, -8.87180979e-08, -1.22329014e-06,
       -4.36097754e-07, -2.02850566e-07]), 'test_rmse': array([  -7.05745256,  -21.18648841,  -61.88997293,   -8.13114345,
       -177.86996271,  -13.02988631,  -30.45253183,  -20.53627889,
        -13.85124068,  -43.32666735,   -8.79269778,  -16.66068228,
        -25.34664118,  -15.39651566]), 'test_mae': array([ -5.87992419, -13.87916634, -21.75608846,  -5.62387447,
       -58.27777994,  -9.77323023, -16.24232468, -10.82127305,
        -9.89572724, -20.5345269 ,  -6.5082121 , -10.70534044,
       -16.91630275, -11.03714305]), 'test_r2': array([0.96208055, 0.94019515, 0.89157   , 0.99124477, 0.03786524,
       0.96935605, 0.97042912, 0.55781814, 0.91303786, 0.95254407,
       0.98437823, 0.94266223, 0.91867818, 0.95718075]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0030175755341803503, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1044, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.78118205, 1.12505794, 1.84083676, 1.23711634, 1.14608169,
       1.33249736, 1.7710247 , 1.16542244, 1.18808794, 1.22853351,
       1.37617803, 1.70036697, 1.745543  , 1.73079109]), 'score_time': array([0.12314224, 0.12666297, 0.12245274, 0.13107657, 0.1261549 ,
       0.12371516, 0.12909079, 0.1945622 , 0.12447715, 0.13351893,
       0.13895845, 0.12419772, 0.16839695, 0.11949754]), 'test_pearson_r': array([0.9947651 , 0.98494844, 0.99670044, 0.99833827, 0.91730279,
       0.94821167, 0.98505577, 0.0568274 , 0.99231505, 0.99382608,
       0.98712814, 0.98228879, 0.9915461 , 0.99434854]), 'test_pearson_p': array([-2.76802487e-18, -2.12094317e-14, -5.50995513e-20, -1.62711697e-22,
       -3.27451716e-08, -6.81982410e-10, -1.99650225e-14, -8.22780872e-01,
       -5.97126391e-16, -1.04105867e-16, -3.63942236e-14, -4.60582447e-13,
       -1.27747159e-15, -5.14021131e-17]), 'test_spearman_r': array([0.98200975, 0.92233445, 0.96972366, 0.97894737, 0.91970171,
       0.94561404, 0.98903037, 0.63880289, 0.8171492 , 0.96078431,
       0.98915862, 0.88509744, 0.89060888, 0.98760383]), 'test_spearman_p': array([-9.56293130e-14, -1.95433775e-08, -7.65719604e-12, -3.60064188e-13,
       -2.57096149e-08, -1.02463740e-09, -1.46115981e-15, -4.32212480e-03,
       -3.47817513e-05, -2.48656703e-10, -9.27540331e-15, -1.05914999e-06,
       -7.27747371e-07, -2.69678454e-14]), 'test_kendall_r': array([0.95015071, 0.83284816, 0.89149943, 0.90643275, 0.77419688,
       0.83625731, 0.93842046, 0.59477124, 0.75659532, 0.88235294,
       0.94426737, 0.79745222, 0.80392157, 0.94080983]), 'test_kendall_p': array([-1.41855104e-08, -6.66104086e-07, -1.03161918e-07, -2.27996852e-11,
       -3.82034206e-06, -5.55516932e-09, -2.12970819e-08, -3.24628494e-04,
       -1.28761880e-05, -8.28241250e-10, -4.80698932e-08, -5.02085393e-06,
       -1.16879681e-07, -5.81823612e-08]), 'test_rmse': array([  -8.09258628,  -31.92990188,  -30.2775453 ,  -11.37162389,
        -16.54333895,  -59.94644602,  -12.88161069, -187.17335833,
        -16.77662577,   -7.90346236,  -15.74958576,  -15.13431259,
         -7.06399188,   -8.80981665]), 'test_mae': array([ -5.73460541, -14.49571661, -16.21326761,  -7.24279485,
       -10.27225878, -20.0812942 ,  -5.70988607, -52.87252033,
       -10.6033445 ,  -5.42893568,  -9.64429678,  -9.00413184,
        -4.50682684,  -4.77078589]), 'test_r2': array([  0.98633133,   0.96606354,   0.97754194,   0.99643835,
         0.83893609,   0.89446   ,   0.96214477, -25.87357421,
         0.97417907,   0.98643903,   0.96271578,   0.95208887,
         0.98043204,   0.98581591]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03191616669721422, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 186, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.78642368, 1.63525319, 1.64466071, 1.6970973 , 1.70860171,
       1.7922709 , 1.65547228, 1.68536806, 1.98741531, 1.70003939,
       1.75317454, 2.26608014, 1.7960515 , 1.68725181]), 'score_time': array([0.12160921, 0.17884159, 0.12990212, 0.12081718, 0.12677407,
       0.13301802, 0.12381911, 0.12489724, 0.12144828, 0.19714499,
       0.12500215, 0.18325353, 0.12668705, 0.13046861]), 'test_pearson_r': array([ 0.99009664,  0.99256684,  0.98323824, -0.02869392,  0.99310861,
        0.9985326 ,  0.9972833 ,  0.99621545,  0.89217318,  0.9923814 ,
        0.97598353,  0.94950282,  0.97898433,  0.99697334]), 'test_pearson_p': array([-6.14863857e-16, -5.41023247e-17, -5.26372642e-14, -9.07172229e-01,
       -2.84866678e-17, -5.65742216e-23, -1.05798880e-20, -2.09088878e-18,
       -6.51853721e-07, -5.57223843e-16, -5.16180723e-12, -1.81355280e-09,
       -1.79129294e-12, -3.50718462e-19]), 'test_spearman_r': array([0.87752414, 0.98947368, 0.97323397, 0.67908555, 0.97368421,
       0.97894737, 0.97715441, 0.96590961, 0.80949933, 0.91537668,
       0.9876161 , 0.84520124, 0.94427245, 0.98915862]), 'test_spearman_p': array([-8.02375581e-07, -1.03053958e-15, -2.71850932e-12, -1.38702810e-03,
       -2.35705500e-12, -3.60064188e-13, -7.16901319e-13, -8.24154170e-11,
       -4.70504360e-05, -1.01132711e-07, -2.67561271e-14, -1.00789527e-05,
       -3.92399721e-09, -9.27540331e-15]), 'test_kendall_r': array([0.82941176, 0.94152047, 0.90322969, 0.61654215, 0.89473684,
       0.91812865, 0.89679028, 0.88817712, 0.72131535, 0.81699346,
       0.93464052, 0.76470588, 0.84313725, 0.94426737]), 'test_kendall_p': array([-7.85254763e-07, -5.27929196e-13, -7.00361385e-08, -3.09023200e-04,
       -6.63913300e-11, -7.20796807e-12, -9.83316810e-08, -3.04174616e-07,
       -3.05216065e-05, -5.74338967e-08, -7.81116540e-12, -8.04176944e-07,
       -1.22726897e-08, -4.80698932e-08]), 'test_rmse': array([ -11.36436504,  -10.46310688,  -15.97118618, -254.91895333,
         -8.47905375,  -25.84309638,  -14.93805773,   -6.64044992,
        -31.4620227 ,   -6.40909608,  -17.9836789 ,  -62.05112216,
        -15.14016578,  -17.74225756]), 'test_mae': array([ -6.13167202,  -5.85251011,  -7.44974121, -88.09855645,
        -4.76918686, -12.94085041,  -8.64030604,  -4.59876373,
       -14.03307389,  -4.11137243,  -8.54629786, -23.6725191 ,
        -9.95181023, -11.70050732]), 'test_r2': array([  0.97269938,   0.97786878,   0.96298188, -28.33218528,
         0.98598887,   0.98324675,   0.99302995,   0.9898268 ,
         0.7219742 ,   0.98364796,   0.9303485 ,   0.89123864,
         0.95433502,   0.99187815]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09125129433504907, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 963, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.13789964, 3.33090234, 3.36046934, 2.15084314, 2.11062765,
       2.14931202, 2.35447621, 2.77879286, 2.18968797, 3.46018291,
       2.28060341, 2.13024402, 3.25458717, 3.28408146]), 'score_time': array([0.1256218 , 0.12277746, 0.13702869, 0.12300801, 0.12633443,
       0.12190366, 0.19363618, 0.12223554, 0.13046241, 0.12669802,
       0.12267494, 0.18325543, 0.1230278 , 0.12014961]), 'test_pearson_r': array([0.99800698, 0.9841399 , 0.98089981, 0.99260888, 0.99391607,
       0.99352861, 0.27711781, 0.52653802, 0.99598009, 0.99303846,
       0.85260466, 0.97869154, 0.98768492, 0.99526613]), 'test_pearson_p': array([-7.62127021e-22, -3.29990488e-14, -1.58476815e-13, -5.15628972e-17,
       -9.90319524e-18, -1.67156386e-17, -2.50722718e-01, -2.47749724e-02,
       -3.38558542e-18, -2.71369167e-16, -6.97918691e-06, -1.99911762e-12,
       -2.55949365e-14, -1.24930800e-17]), 'test_spearman_r': array([0.98596491, 0.90158311, 0.76679849, 0.97323397, 0.92631579,
       0.98421053, 0.75087719, 0.84090909, 0.98397946, 0.94785764,
       0.84873527, 0.98555212, 0.89680083, 0.9752322 ]), 'test_spearman_p': array([-1.17464029e-14, -1.36072655e-07, -1.28111108e-04, -2.71850932e-12,
       -1.26686179e-08, -3.17781778e-14, -2.11664863e-04, -1.23663953e-05,
       -2.07509679e-13, -2.33156775e-09, -8.47753187e-06, -9.12417033e-14,
       -4.65886148e-07, -6.58873719e-12]), 'test_kendall_r': array([0.92982456, 0.79059143, 0.73746634, 0.89149943, 0.80116959,
       0.92982456, 0.69590643, 0.69078947, 0.92409744, 0.81311912,
       0.78688948, 0.92156863, 0.83006536, 0.93464052]), 'test_kendall_p': array([-2.06767062e-12, -2.61922646e-06, -1.18018662e-05, -1.03161918e-07,
       -4.67377304e-08, -2.06767062e-12, -6.49122200e-06, -6.80913598e-05,
       -1.07081462e-07, -2.59896801e-06, -5.40069919e-06, -2.92550870e-11,
       -2.71335027e-08, -7.81116540e-12]), 'test_rmse': array([  -5.27352418,  -13.96488551,   -8.94305127,  -25.78450958,
        -10.59134563,  -11.08550202, -182.97741761,  -62.73259838,
        -24.99368044,  -11.33566953,  -29.62668526,  -16.05636436,
         -7.06232844,  -18.80732616]), 'test_mae': array([ -3.05776767,  -8.75427718,  -4.89442732, -15.40447952,
        -6.56481273,  -5.41784154, -48.02860174, -23.76816769,
       -12.57734703,  -6.50260726, -11.4799866 , -10.96023183,
        -4.31092668, -10.00079734]), 'test_r2': array([ 0.99461438,  0.96760383,  0.96027323,  0.98122506,  0.98001326,
        0.98600318, -3.98984968, -2.00465305,  0.99001882,  0.98517021,
        0.70436581,  0.95607034,  0.97180541,  0.98923334]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05913781436124809, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2125, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.38858271, 0.3384831 , 0.42974138, 0.35899448, 0.42894387,
       0.3589015 , 0.61272764, 0.6526649 , 0.35221386, 0.65850496,
       0.3786912 , 0.40497136, 0.5959475 , 0.60716748]), 'score_time': array([0.12395191, 0.12365341, 0.12579799, 0.1240437 , 0.12754154,
       0.12268138, 0.12194991, 0.12024593, 0.17179418, 0.12078691,
       0.12791944, 0.20509195, 0.16801667, 0.12087917]), 'test_pearson_r': array([0.97348078, 0.91606857, 0.99230405, 0.99359816, 0.98119501,
       0.99691583, 0.75758577, 0.98683896, 0.98935835, 0.99707493,
       0.99707403, 0.98700524, 0.9764207 , 0.7737871 ]), 'test_pearson_p': array([-2.51476048e-12, -3.69803953e-08, -7.26248219e-17, -1.52523357e-17,
       -1.38962991e-13, -3.10643616e-20, -1.72085546e-04, -4.34339063e-14,
       -7.99836270e-15, -2.66974395e-19, -2.67632599e-19, -3.92537552e-14,
       -4.46243162e-12, -1.64747833e-04]), 'test_spearman_r': array([0.85375278, 0.93859649, 0.98507501, 0.98594177, 0.9525498 ,
       0.96094788, 0.86616946, 0.77703146, 0.96904025, 0.9251421 ,
       0.99328872, 0.88590616, 0.89959026, 0.73412503]), 'test_spearman_p': array([-3.33063034e-06, -2.80606429e-09, -1.97488574e-14, -1.19111358e-14,
       -3.29063281e-10, -6.46690017e-11, -1.63757308e-06, -1.48406281e-04,
       -3.85140601e-11, -3.91301914e-08, -2.02628027e-16, -1.00360690e-06,
       -3.77580298e-07, -5.23097424e-04]), 'test_kendall_r': array([0.7679796 , 0.78947368, 0.92354539, 0.9321899 , 0.86139066,
       0.85630867, 0.77419688, 0.56954891, 0.88235294, 0.82623395,
       0.97049702, 0.76065983, 0.78416135, 0.68197088]), 'test_kendall_p': array([-5.69875718e-06, -8.90628326e-08, -3.80934215e-08, -3.02184546e-08,
       -3.06518708e-07, -3.20420144e-07, -3.82034206e-06, -1.08158890e-03,
       -8.28241250e-10, -1.78800684e-06, -2.02413707e-08, -1.09773191e-05,
       -7.19458129e-06, -8.07679747e-05]), 'test_rmse': array([ -16.07916019,  -26.11316288,  -17.83462197,   -8.16654691,
        -15.05096903,  -36.17891372,  -58.26139263,   -9.5519375 ,
         -9.64719379,  -13.98091777,  -10.4238994 ,  -11.93699017,
        -19.91827264, -178.88585939]), 'test_mae': array([ -9.72764619, -14.51325742, -10.53286072,  -5.57729633,
        -6.70217176, -17.42771349, -18.42071746,  -6.90346419,
        -7.34573336,  -7.42302927,  -7.79503867,  -8.82829034,
       -12.24998767, -65.90006574]), 'test_r2': array([0.94364621, 0.7856644 , 0.96241534, 0.98627944, 0.87092798,
       0.96747755, 0.36712067, 0.95982195, 0.96267243, 0.99388292,
       0.98161421, 0.97276054, 0.93976055, 0.50857797]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06678639058063013, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.56045198, 2.02840805, 1.62560034, 1.44133735, 1.46726298,
       1.41482472, 1.36191821, 1.64199138, 1.93400192, 1.57145166,
       2.3038063 , 1.50953484, 1.92270064, 2.29350519]), 'score_time': array([0.13213682, 0.12348986, 0.13537931, 0.12543917, 0.12427902,
       0.12568736, 0.12763834, 0.12811494, 0.20894289, 0.12602997,
       0.12553215, 0.13467383, 0.17855906, 0.13082194]), 'test_pearson_r': array([0.99476034, 0.99814535, 0.99941566, 0.96189643, 0.11202736,
       0.9948656 , 0.59805243, 0.98255912, 0.97363484, 0.98927235,
       0.99439655, 0.99665029, 0.93960852, 0.99772694]), 'test_pearson_p': array([-2.78947646e-18, -4.13621520e-22, -2.26417869e-26, -5.26416119e-11,
       -6.47953795e-01, -2.34834508e-18, -6.83751837e-03, -4.07602223e-13,
       -1.08084787e-11, -8.52803658e-15, -4.80181058e-17, -7.88622866e-19,
       -7.35392553e-09, -3.55757922e-20]), 'test_spearman_r': array([0.72751214, 0.86819115, 0.99341325, 0.91531382, 0.57894737,
       0.99298246, 0.88723133, 0.84710789, 0.96437803, 0.99327803,
       0.98296348, 0.99174407, 0.96078431, 0.9752322 ]), 'test_spearman_p': array([-4.15416290e-04, -1.44919349e-06, -1.94170448e-17, -3.97996537e-08,
       -9.39610415e-03, -3.32215984e-17, -4.11543795e-07, -9.18553718e-06,
       -1.16572513e-10, -2.05219493e-16, -3.38288146e-13, -1.05753411e-15,
       -2.48656703e-10, -6.58873719e-12]), 'test_kendall_r': array([0.69208509, 0.77879156, 0.96758951, 0.76246662, 0.6374269 ,
       0.95321637, 0.75073637, 0.78291168, 0.86557842, 0.96034914,
       0.93115255, 0.96078431, 0.89542484, 0.92156863]), 'test_kendall_p': array([-3.61461714e-05, -3.68335665e-06, -9.02000966e-09, -5.34143245e-06,
       -5.28075820e-05, -1.16815227e-13, -7.43302335e-06, -6.36380428e-06,
       -5.63141283e-07, -3.57316367e-08, -7.34599652e-08, -3.50182620e-13,
       -2.96242626e-10, -2.92550870e-11]), 'test_rmse': array([ -18.66551796,  -15.60919836,   -8.7814604 ,  -13.73071962,
       -185.063092  ,   -9.77756989,  -60.00314832,  -15.46785286,
        -15.20444512,  -12.77937182,  -14.58812111,   -7.50560788,
        -25.89316524,  -24.75688052]), 'test_mae': array([ -9.51557135,  -8.46289846,  -5.2811774 ,  -7.30228063,
       -52.99882024,  -5.79380332, -20.33781864,  -8.68960247,
        -8.83947759,  -8.48691276,  -8.52806224,  -4.50829317,
       -15.66154852, -10.78385909]), 'test_r2': array([  0.9880785 ,   0.99325264,   0.99750884,   0.91916713,
       -10.84144354,   0.9893354 ,  -0.52127184,   0.96504923,
         0.93940174,   0.97550151,   0.9783141 ,   0.99304093,
         0.78839127,   0.9854708 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05225400716467375, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 345, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_4': {'cluster size (%)': 30, 6: {'test_mad': 34.698835891381336, 'test_ystd': 43.62393148250803, 'test_mae': 37.9786027427277, 'test_rmse': 62.89581630976334, 'test_r2': -1.0787100276370127, 'test_pearson_r': array([-0.14353692]), 'test_pearson_p_value': array([0.21298824]), 'test_spearman_r': -0.32199047321378504, 'test_spearman_p_value': 0.004293998734102663, 'test_kendall_r': -0.18905012561287177, 'test_kendall_p_value': 0.016040622385010642, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017845842386493276, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1648, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 34.698835891381336, 'test_ystd': 43.62393148250803, 'test_mae': 36.96120537081632, 'test_rmse': 61.864176503464634, 'test_r2': -1.011077778983842, 'test_pearson_r': array([-0.1290104]), 'test_pearson_p_value': array([0.26347056]), 'test_spearman_r': -0.26315339139228744, 'test_spearman_p_value': 0.020760675369255913, 'test_kendall_r': -0.14997786185164327, 'test_kendall_p_value': 0.05805962536916069, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0031741087590934735, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1162, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 34.698835891381336, 'test_ystd': 43.62393148250803, 'test_mae': 38.5068559369917, 'test_rmse': 63.062323408492794, 'test_r2': -1.089730732863793, 'test_pearson_r': array([-0.15572503]), 'test_pearson_p_value': array([0.17624819]), 'test_spearman_r': -0.36783231865744614, 'test_spearman_p_value': 0.0009979101288677995, 'test_kendall_r': -0.21347711912612102, 'test_kendall_p_value': 0.006519698408332537, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 144, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 34.698835891381336, 'test_ystd': 43.62393148250803, 'test_mae': 37.18949312462745, 'test_rmse': 61.95774652458331, 'test_r2': -1.0171659194920197, 'test_pearson_r': array([-0.13663492]), 'test_pearson_p_value': array([0.23604811]), 'test_spearman_r': -0.22879840637177265, 'test_spearman_p_value': 0.045339199001771205, 'test_kendall_r': -0.12137743238226015, 'test_kendall_p_value': 0.12507192936838102, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.002170203455506314, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 34.698835891381336, 'test_ystd': 43.62393148250803, 'test_mae': 38.058386562595125, 'test_rmse': 62.3021100549808, 'test_r2': -1.0396512043796209, 'test_pearson_r': array([-0.15093645]), 'test_pearson_p_value': array([0.19008772]), 'test_spearman_r': -0.35509914378751495, 'test_spearman_p_value': 0.0015297812632152573, 'test_kendall_r': -0.21388682870837739, 'test_kendall_p_value': 0.006509154242300356, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07212055071720427, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 218, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 34.698835891381336, 'test_ystd': 43.62393148250803, 'test_mae': 38.01605273799153, 'test_rmse': 62.470505609528075, 'test_r2': -1.0506919981240777, 'test_pearson_r': array([-0.15206224]), 'test_pearson_p_value': array([0.18676563]), 'test_spearman_r': -0.3829256160132292, 'test_spearman_p_value': 0.000587755112567189, 'test_kendall_r': -0.2274131309931803, 'test_kendall_p_value': 0.0037701268169677044, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.01018020122578915, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 34.698835891381336, 'test_ystd': 43.62393148250803, 'test_mae': 37.21953910282679, 'test_rmse': 62.129286991338816, 'test_r2': -1.0283511099765574, 'test_pearson_r': array([-0.13597735]), 'test_pearson_p_value': array([0.23833201]), 'test_spearman_r': -0.21187629017161153, 'test_spearman_p_value': 0.06433382580604151, 'test_kendall_r': -0.10674736715390536, 'test_kendall_p_value': 0.1774312341660076, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.023671919716630054, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 16, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 203, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_4': {'cluster size (%)': 33, 6: {'fit_time': array([1.24996305, 1.26803517, 1.19396448]), 'score_time': array([0.13349819, 0.12381387, 0.16985774]), 'test_pearson_r': array([0.84477121, 0.97890699, 0.94545146]), 'test_pearson_p': array([-8.43551578e-25, -1.02620030e-59, -1.11178307e-42]), 'test_spearman_r': array([0.83588852, 0.93033165, 0.84084102]), 'test_spearman_p': array([-7.38841526e-24, -2.36113661e-38, -4.16215113e-24]), 'test_kendall_r': array([0.74819248, 0.79181905, 0.72982926]), 'test_kendall_p': array([-1.60893122e-24, -5.55352580e-27, -4.07209006e-23]), 'test_rmse': array([-87.33411549, -21.67770658, -25.51699955]), 'test_mae': array([-26.05909368, -12.06836375, -12.62893411]), 'test_r2': array([0.6965912 , 0.95763757, 0.8921549 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0140521706556793, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 301, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([4.12944126, 3.81748533, 3.79288864]), 'score_time': array([0.21541142, 0.12640691, 0.12485909]), 'test_pearson_r': array([0.70888531, 0.98466084, 0.98536899]), 'test_pearson_p': array([-1.56167031e-14, -1.78464497e-65, -2.48666196e-66]), 'test_spearman_r': array([0.78332995, 0.93612149, 0.95328628]), 'test_spearman_p': array([-3.07410329e-19, -6.95883273e-40, -1.93916219e-45]), 'test_kendall_r': array([0.64606576, 0.82202663, 0.83739693]), 'test_kendall_p': array([-1.72636727e-18, -9.51456224e-29, -6.22866404e-30]), 'test_rmse': array([-94.53837365, -22.5789635 , -25.54824143]), 'test_mae': array([-29.17564869, -12.11378546, -14.10384731]), 'test_r2': array([0.28882683, 0.9691736 , 0.95154806]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0030175755341803503, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1044, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([0.988379  , 1.00128126, 0.95222116]), 'score_time': array([0.12437487, 0.12503123, 0.12266016]), 'test_pearson_r': array([0.98561743, 0.61547455, 0.97381024]), 'test_pearson_p': array([-2.04506678e-67, -2.86305071e-10, -8.20561955e-56]), 'test_spearman_r': array([0.93509418, 0.84356763, 0.94566121]), 'test_spearman_p': array([-4.69114461e-40, -2.13680130e-24, -9.49773888e-43]), 'test_kendall_r': array([0.81067546, 0.75566857, 0.85601212]), 'test_kendall_p': array([-1.48902948e-28, -1.03066017e-24, -3.55698455e-31]), 'test_rmse': array([ -30.01988008, -121.22027493,  -16.31055813]), 'test_mae': array([-15.26208218, -30.84990366,  -9.1686884 ]), 'test_r2': array([ 0.96420994, -0.23040709,  0.94726981]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03191616669721422, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 186, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.50718379, 1.64742565, 1.49039745]), 'score_time': array([0.12207699, 0.12606859, 0.20142627]), 'test_pearson_r': array([0.39096812, 0.89498462, 0.97342344]), 'test_pearson_p': array([-1.81006748e-04, -3.44752526e-31, -1.50705305e-55]), 'test_spearman_r': array([0.86489359, 0.87050843, 0.92375116]), 'test_spearman_p': array([-3.57972448e-27, -1.36014282e-27, -9.12300766e-37]), 'test_kendall_r': array([0.77224369, 0.74876724, 0.80652309]), 'test_kendall_p': array([-6.34381681e-26, -2.59857700e-24, -4.88114480e-28]), 'test_rmse': array([-120.33127168,  -67.18724776,  -32.28840212]), 'test_mae': array([-27.68972846, -27.69445278, -12.73107035]), 'test_r2': array([-2.25612242,  0.7640114 ,  0.94452388]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09125129433504907, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 963, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.01540327, 1.96170282, 1.91530514]), 'score_time': array([0.12956071, 0.12592411, 0.12475562]), 'test_pearson_r': array([0.98486107, 0.8126474 , 0.98382152]), 'test_pearson_p': array([-1.77826478e-66, -2.12282579e-21, -1.64406445e-64]), 'test_spearman_r': array([0.92203645, 0.82948922, 0.95556877]), 'test_spearman_p': array([-8.62167790e-37, -5.87310418e-23, -2.47826425e-46]), 'test_kendall_r': array([0.81620962, 0.74280233, 0.87947447]), 'test_kendall_p': array([-6.74377472e-29, -5.22223969e-24, -5.53135207e-33]), 'test_rmse': array([-19.72613439, -90.90899915, -19.32184621]), 'test_mae': array([-10.20079653, -22.7095993 ,  -9.59446161]), 'test_r2': array([0.96897217, 0.56265886, 0.96691708]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05913781436124809, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2125, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.33295727, 0.34928918, 0.33224964]), 'score_time': array([0.12591696, 0.12727666, 0.17532182]), 'test_pearson_r': array([0.95320893, 0.93721314, 0.83939526]), 'test_pearson_p': array([-6.23748377e-46, -3.45074752e-40, -5.89728111e-24]), 'test_spearman_r': array([0.90229923, 0.90833087, 0.87121555]), 'test_spearman_p': array([-8.30777869e-33, -1.51364732e-33, -1.09712717e-27]), 'test_kendall_r': array([0.77460842, 0.75993303, 0.73819701]), 'test_kendall_p': array([-4.74917440e-26, -5.97382025e-25, -1.66605271e-23]), 'test_rmse': array([-22.85504186, -41.42027685, -89.1989241 ]), 'test_mae': array([-13.98447855, -20.19398033, -28.8689157 ]), 'test_r2': array([0.89855564, 0.86404116, 0.67662689]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06678639058063013, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.29503942, 1.18045092, 1.20062804]), 'score_time': array([0.14135313, 0.12810016, 0.17163682]), 'test_pearson_r': array([0.98666355, 0.43947235, 0.98577832]), 'test_pearson_p': array([-8.43618329e-69, -2.30224466e-05, -7.61390639e-67]), 'test_spearman_r': array([0.83583043, 0.82886624, 0.9812761 ]), 'test_spearman_p': array([-7.49081666e-24, -6.75293825e-23, -7.22539581e-62]), 'test_kendall_r': array([0.76340385, 0.74856026, 0.89571158]), 'test_kendall_p': array([-2.36195029e-25, -2.60615911e-24, -3.49903519e-34]), 'test_rmse': array([ -30.38168214, -122.32570608,  -22.05903283]), 'test_mae': array([-13.20914139, -28.47005631, -11.3479943 ]), 'test_r2': array([ 0.95839826, -1.71327343,  0.96673772]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05225400716467375, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 345, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'overall data shape': {'targets_shape': (259, 1), 'training_features_shape': (259, 522)}}
Trimer_scaler
Filename: (ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM5 polymer_solvent HSP and polysize cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM5 polymer_solvent HSP and polysize cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_predictions.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM5 polymer_solvent HSP and polysize cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_ClusterTruth.json
Done Saving scores!
------------------------------ 
Plotted Comparitive Cluster Scores!
______________________________ 
Plotted Parity Plots!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c010n02>
Subject: Job 294629: <XGBR_Rg1 (nm)_ECFP_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311> in cluster <Hazel> Done

Job <XGBR_Rg1 (nm)_ECFP_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311> was submitted from host <c040n04> by user <sdehgha2> in cluster <Hazel> at Tue Mar 11 18:16:47 2025
Job was executed on host(s) <6*c010n02>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Wed Mar 12 00:02:18 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Wed Mar 12 00:02:18 2025
Terminated at Wed Mar 12 15:22:48 2025
Results reported at Wed Mar 12 15:22:48 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input



#BSUB -n 6
#BSUB -W 72:05
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "XGBR_Rg1 (nm)_ECFP_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_ECFP_Trimer_3_count_KM5 polymer_solvent HSP and polysize cluster_20250311.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_ECFP_Trimer_3_count_KM5 polymer_solvent HSP and polysize cluster_20250311.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../make_ood_prediction.py --target_features "Rg1 (nm)"                                       --representation "ECFP"                                       --regressor_type "XGBR"                                       --radius "3"                                       --vector "count"                                       --oligomer_representation "Trimer"                                       --numerical_feats 'Mw (g/mol)' 'PDI' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" 'solvent dP' 'solvent dD' 'solvent dH'                                       --clustering_method "KM5 polymer_solvent HSP and polysize cluster" 



------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   205212.00 sec.
    Max Memory :                                 6 GB
    Average Memory :                             5.39 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               10.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   55230 sec.
    Turnaround time :                            75961 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_ECFP_Trimer_3_count_KM5 polymer_solvent HSP and polysize cluster_20250311.err> for stderr output of this job.

