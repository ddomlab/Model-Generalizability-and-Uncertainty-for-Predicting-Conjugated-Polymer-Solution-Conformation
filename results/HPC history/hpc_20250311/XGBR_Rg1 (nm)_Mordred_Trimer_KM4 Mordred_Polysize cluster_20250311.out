


-------------------------------------------------- 
OOD TEST ON 0



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.020844192093197322), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 310), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0245467101102957), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 638), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00682897326779193), ('regressor__regressor__max_depth', 76), ('regressor__regressor__n_estimators', 393), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09366222785972916), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 196), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06012861234487765), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1157), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08528716819448064), ('regressor__regressor__max_depth', 89), ('regressor__regressor__n_estimators', 302), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008673558897658378), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07623915430937364), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04733813229388057), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07352481813242628), ('regressor__regressor__max_depth', 1264), ('regressor__regressor__n_estimators', 1246), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 266), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07352481813242628), ('regressor__regressor__max_depth', 1264), ('regressor__regressor__n_estimators', 1246), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09165746248457825), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.061904251879098635), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 325), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004799084185061023), ('regressor__regressor__max_depth', 9193), ('regressor__regressor__n_estimators', 1900), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004374719945507424), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06633513241781437), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 110), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08605414957328526), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09123979175832536), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 112), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026752924326471757), ('regressor__regressor__max_depth', 6084), ('regressor__regressor__n_estimators', 134), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08831664568323618), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 92), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 607), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07913411171390027), ('regressor__regressor__max_depth', 168), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03613744915882504), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 302), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.016705314202208655), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 60), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003507290238065385), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09172617703623363), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1784), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06786595511737042), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 381), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 1



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006069345648812667), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004593087986281864), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1586), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04206324988649613), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 299), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004788622711429323), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0033370286543951116), ('regressor__regressor__max_depth', 5309), ('regressor__regressor__n_estimators', 1655), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005211121446274371), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1504), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05212346771339817), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 752), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035814242977974114), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07876804298850353), ('regressor__regressor__max_depth', 311), ('regressor__regressor__n_estimators', 334), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07788364895680538), ('regressor__regressor__max_depth', 177), ('regressor__regressor__n_estimators', 357), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04902990755859555), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 136), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0854671340111278), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 276), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0345667709055915), ('regressor__regressor__max_depth', 4597), ('regressor__regressor__n_estimators', 162), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004035123653395192), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 73), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009378898798179729), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1185), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03382617010386716), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 225), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03428627945971783), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03288277204812082), ('regressor__regressor__max_depth', 708), ('regressor__regressor__n_estimators', 164), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07034513767811576), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 146), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 55), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06743799681020657), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 723), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00841119968245449), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 788), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.053617811412811356), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09327278316223084), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08948670771707977), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 102), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 290), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0866432438526371), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05282007308235651), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 118), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08103180681450654), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07607242972853986), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 64), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 2



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01815613588806695), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 434), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08842403762618585), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 853), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 135), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08540412629998263), ('regressor__regressor__max_depth', 610), ('regressor__regressor__n_estimators', 260), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09009852790721003), ('regressor__regressor__max_depth', 613), ('regressor__regressor__n_estimators', 271), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010740709603023296), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1365), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0043384764864351005), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1278), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004164339779402996), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1473), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09472646708757246), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0026402101184086614), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002444317743396444), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06036458332982186), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.028907826505857798), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 141), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 129), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0328972773382793), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 476), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08750839096561933), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 292), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 66), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03988177455462562), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 327), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08114493915961667), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03151953795033388), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 68), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01746836748839925), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 239), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0754558557131662), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1605), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018096288420179829), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007514872470625398), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1747), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 60), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05795911299319488), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 94), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09217144273401129), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0727880237480246), ('regressor__regressor__max_depth', 502), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05862014417289488), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 564), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03103085599566618), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09300070299276995), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 173), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 3



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012833525406154398), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 344), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012976329276892608), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1017), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07841669000690629), ('regressor__regressor__max_depth', 196), ('regressor__regressor__n_estimators', 885), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004958435041445217), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 729), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01912657976175078), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1528), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08087495358738435), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 86), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0044407245725176), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1354), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 182), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 54), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0887896612401247), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 173), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015251999722428022), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1871), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006450477657688117), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017744246728071764), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 81), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09715958538897916), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 298), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025335279098664554), ('regressor__regressor__max_depth', 534), ('regressor__regressor__n_estimators', 140), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02177901014507121), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 180), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.047347081469283854), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 534), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 303), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0602920346611111), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 243), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05023847762089721), ('regressor__regressor__max_depth', 1256), ('regressor__regressor__n_estimators', 1515), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06620468559504654), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 85), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002814869412585081), ('regressor__regressor__max_depth', 8523), ('regressor__regressor__n_estimators', 1081), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029271753319066677), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 103), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04189865070390597), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1519), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015637081497255102), ('regressor__regressor__max_depth', 776), ('regressor__regressor__n_estimators', 398), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026454440122349043), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06436923207804567), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 103), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06323815460928675), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015168463517625384), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1867), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.057213274938687844), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0026629018040577163), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1797), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0818656018144721), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1568), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])


{'CO_0': {'cluster size (%)': 54, 6: {'test_mad': 59.97695622453599, 'test_ystd': 138.81078345008424, 'test_mae': 77.66740452975442, 'test_rmse': 168.179133123998, 'test_r2': -0.4679045221073501, 'test_pearson_r': array([-0.01485258]), 'test_pearson_p_value': array([0.86123337]), 'test_spearman_r': 0.5090320844348608, 'test_spearman_p_value': 1.1540805207631197e-10, 'test_kendall_r': 0.37762432329608897, 'test_kendall_p_value': 5.273971456072121e-11, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09366222785972916, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 196, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 59.97695622453599, 'test_ystd': 138.81078345008424, 'test_mae': 75.84820502314359, 'test_rmse': 166.15337062116265, 'test_r2': -0.43275489533671374, 'test_pearson_r': array([-0.01853366]), 'test_pearson_p_value': array([0.8273241]), 'test_spearman_r': 0.3560432698178038, 'test_spearman_p_value': 1.4708801333659854e-05, 'test_kendall_r': 0.2646239044453774, 'test_kendall_p_value': 4.194996917652842e-06, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.008673558897658378, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 59.97695622453599, 'test_ystd': 138.81078345008424, 'test_mae': 78.09361617770797, 'test_rmse': 168.0925351595578, 'test_r2': -0.46639321908325737, 'test_pearson_r': array([-0.01067339]), 'test_pearson_p_value': array([0.90003677]), 'test_spearman_r': 0.4355612337545204, 'test_spearman_p_value': 6.740430243660276e-08, 'test_kendall_r': 0.29911644772081525, 'test_kendall_p_value': 2.2300711977379582e-07, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 266, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 59.97695622453599, 'test_ystd': 138.81078345008424, 'test_mae': 76.08641344759677, 'test_rmse': 165.61399751730215, 'test_r2': -0.42346787186565926, 'test_pearson_r': array([-0.01826201]), 'test_pearson_p_value': array([0.82981649]), 'test_spearman_r': 0.35494013832604804, 'test_spearman_p_value': 1.5699966126049283e-05, 'test_kendall_r': 0.26980377231309416, 'test_kendall_p_value': 2.9483210018792554e-06, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.004799084185061023, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 9193, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1900, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 59.97695622453599, 'test_ystd': 138.81078345008424, 'test_mae': 77.10745004883246, 'test_rmse': 165.2506933951647, 'test_r2': -0.41722945578259996, 'test_pearson_r': array([-0.01708402]), 'test_pearson_p_value': array([0.8406435]), 'test_spearman_r': 0.37456349748372014, 'test_spearman_p_value': 4.743830266486481e-06, 'test_kendall_r': 0.2790709564657593, 'test_kendall_p_value': 1.663603105068688e-06, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.026752924326471757, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 6084, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 134, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 59.97695622453599, 'test_ystd': 138.81078345008424, 'test_mae': 76.82903963778232, 'test_rmse': 166.76182011791138, 'test_r2': -0.44326753401035757, 'test_pearson_r': array([-0.0104002]), 'test_pearson_p_value': array([0.90258257]), 'test_spearman_r': 0.3324191636019334, 'test_spearman_p_value': 5.643039642489139e-05, 'test_kendall_r': 0.21927593183319233, 'test_kendall_p_value': 0.00016509421779134655, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08831664568323618, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 92, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 59.97695622453599, 'test_ystd': 138.81078345008424, 'test_mae': 78.07813911220903, 'test_rmse': 167.2472133043835, 'test_r2': -0.4516815915508874, 'test_pearson_r': array([-0.01421097]), 'test_pearson_p_value': array([0.86717161]), 'test_spearman_r': 0.33944230065198633, 'test_spearman_p_value': 3.8265207347372386e-05, 'test_kendall_r': 0.2218874003724774, 'test_kendall_p_value': 0.00012875425749548974, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 60, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_0': {'cluster size (%)': 50, 6: {'fit_time': array([11.96111989, 12.05274844]), 'score_time': array([0.15946913, 0.15354872]), 'test_pearson_r': array([0.83635475, 0.97527762]), 'test_pearson_p': array([-3.21152790e-35, -3.92196488e-85]), 'test_spearman_r': array([0.82258036, 0.89585361]), 'test_spearman_p': array([-3.55452665e-33, -1.43593247e-46]), 'test_kendall_r': array([0.68902703, 0.79235487]), 'test_kendall_p': array([-5.18046939e-31, -5.25464327e-40]), 'test_rmse': array([-76.46414016, -21.96789921]), 'test_mae': array([-26.58359407, -10.49451643]), 'test_r2': array([0.68600122, 0.95034491]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([9.68165851, 7.55731273]), 'score_time': array([0.1509192 , 0.15759206]), 'test_pearson_r': array([0.86405762, 0.95879145]), 'test_pearson_p': array([-5.67448386e-40, -2.88475365e-71]), 'test_spearman_r': array([0.77923735, 0.84796732]), 'test_spearman_p': array([-9.54748135e-28, -8.08316571e-37]), 'test_kendall_r': array([0.6826883, 0.7371687]), 'test_kendall_p': array([-3.90220068e-30, -1.31932505e-34]), 'test_rmse': array([-71.08191925, -29.29414833]), 'test_mae': array([-21.4246292 , -16.45411602]), 'test_r2': array([0.72747332, 0.91319051]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.60473704, 1.86176157]), 'score_time': array([0.15232038, 0.15761733]), 'test_pearson_r': array([0.28704158, 0.66915007]), 'test_pearson_p': array([-9.29191402e-04, -4.41193691e-18]), 'test_spearman_r': array([0.81363449, 0.85360946]), 'test_spearman_p': array([-6.10869341e-32, -8.82905377e-38]), 'test_kendall_r': array([0.7056164 , 0.75230318]), 'test_kendall_p': array([-1.58503377e-32, -2.42105583e-36]), 'test_rmse': array([-148.10983204,  -71.98528254]), 'test_mae': array([-40.05175132, -17.49003548]), 'test_r2': array([0.03808738, 0.0257032 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.37437701, 1.40635467]), 'score_time': array([0.15732718, 0.15357757]), 'test_pearson_r': array([0.74454761, 0.96420793]), 'test_pearson_p': array([-3.22468544e-24, -4.44245884e-75]), 'test_spearman_r': array([0.88739708, 0.87124445]), 'test_spearman_p': array([-7.12687801e-45, -4.55414726e-41]), 'test_kendall_r': array([0.7811597 , 0.75592519]), 'test_kendall_p': array([-2.07118330e-39, -8.75463799e-37]), 'test_rmse': array([-100.37369441,  -32.45115027]), 'test_mae': array([-23.57797138, -15.97189715]), 'test_r2': array([0.30299872, 0.92486989]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([1.33643007, 1.50663757]), 'score_time': array([0.15091181, 0.1496079 ]), 'test_pearson_r': array([0.80824607, 0.96435349]), 'test_pearson_p': array([-3.14994013e-31, -3.44528632e-75]), 'test_spearman_r': array([0.87938165, 0.81967161]), 'test_spearman_p': array([-4.46427450e-43, -1.59787064e-32]), 'test_kendall_r': array([0.77081481, 0.73316531]), 'test_kendall_p': array([-1.79026345e-38, -1.14817771e-34]), 'test_rmse': array([-72.04809824, -37.22257206]), 'test_mae': array([-17.01992577, -17.06797209]), 'test_r2': array([0.52025133, 0.9214781 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.60215044, 0.59266138]), 'score_time': array([0.16489792, 0.21274972]), 'test_pearson_r': array([0.92773526, 0.8344678 ]), 'test_pearson_p': array([-1.24121617e-56, -1.14352821e-34]), 'test_spearman_r': array([0.85970471, 0.8501441 ]), 'test_spearman_p': array([-3.69096379e-39, -3.47737139e-37]), 'test_kendall_r': array([0.70956393, 0.7340113 ]), 'test_kendall_p': array([-1.29270573e-32, -1.43600153e-34]), 'test_rmse': array([-38.87073551, -76.94253003]), 'test_mae': array([-19.30974921, -25.8249508 ]), 'test_r2': array([0.85426351, 0.67268717]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([7.91854572, 8.70647073]), 'score_time': array([0.1603868, 0.1759131]), 'test_pearson_r': array([0.941066  , 0.97006952]), 'test_pearson_p': array([-4.08727818e-62, -6.23684045e-80]), 'test_spearman_r': array([0.83916161, 0.94257073]), 'test_spearman_p': array([-1.16644487e-35, -2.46229069e-62]), 'test_kendall_r': array([0.77159315, 0.84307258]), 'test_kendall_p': array([-1.83662126e-38, -2.37836931e-45]), 'test_rmse': array([-51.37807281, -28.08620485]), 'test_mae': array([-17.61692014, -14.61736275]), 'test_r2': array([0.84293497, 0.93169213]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_1': {'cluster size (%)': 7, 6: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 120.95630799544485, 'test_rmse': 264.2740642442995, 'test_r2': -132.24435540288712, 'test_pearson_r': array([-0.23796335]), 'test_pearson_p_value': array([0.32657855]), 'test_spearman_r': 0.22695927344783315, 'test_spearman_p_value': 0.35009532871532956, 'test_kendall_r': 0.1952126980229278, 'test_kendall_p_value': 0.25684798977363055, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.006069345648812667, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 121.15238357543946, 'test_rmse': 264.30713440121167, 'test_r2': -132.27770477792666, 'test_pearson_r': array([-0.23402335]), 'test_pearson_p_value': array([0.33488902]), 'test_spearman_r': 0.23866196109235743, 'test_spearman_p_value': 0.3251178141466685, 'test_kendall_r': 0.22756122983182978, 'test_kendall_p_value': 0.18138535910446807, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05212346771339817, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 752, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 120.61314987584164, 'test_rmse': 263.5599979933878, 'test_r2': -131.52527798073098, 'test_pearson_r': array([-0.23120077]), 'test_pearson_p_value': array([0.34091793]), 'test_spearman_r': 0.23582487006688915, 'test_spearman_p_value': 0.3310739230625631, 'test_kendall_r': 0.20741349164936076, 'test_kendall_p_value': 0.22830382685439277, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04902990755859555, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 136, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 120.54642499823319, 'test_rmse': 263.89103553981266, 'test_r2': -131.8583967741795, 'test_pearson_r': array([-0.23724194]), 'test_pearson_p_value': array([0.32809101]), 'test_spearman_r': 0.22695927344783315, 'test_spearman_p_value': 0.35009532871532956, 'test_kendall_r': 0.1952126980229278, 'test_kendall_p_value': 0.25684798977363055, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03382617010386716, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 225, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 119.73125485068874, 'test_rmse': 263.96215430563257, 'test_r2': -131.93001723226848, 'test_pearson_r': array([-0.24231957]), 'test_pearson_p_value': array([0.31753331]), 'test_spearman_r': 0.23866196109235743, 'test_spearman_p_value': 0.3251178141466685, 'test_kendall_r': 0.22756122983182978, 'test_kendall_p_value': 0.18138535910446807, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.053617811412811356, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 119.85121961091693, 'test_rmse': 264.01220876159255, 'test_r2': -131.98043635827148, 'test_pearson_r': array([-0.24089857]), 'test_pearson_p_value': array([0.32046732]), 'test_spearman_r': 0.23866196109235743, 'test_spearman_p_value': 0.3251178141466685, 'test_kendall_r': 0.22756122983182978, 'test_kendall_p_value': 0.18138535910446807, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08948670771707977, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 102, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 17.112243767313018, 'test_ystd': 22.894445721077116, 'test_mae': 118.71720528050473, 'test_rmse': 261.2422434939357, 'test_r2': -129.20466430725037, 'test_pearson_r': array([-0.23883828]), 'test_pearson_p_value': array([0.32474977]), 'test_spearman_r': 0.23582487006688915, 'test_spearman_p_value': 0.3310739230625631, 'test_kendall_r': 0.20741349164936076, 'test_kendall_p_value': 0.22830382685439277, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07607242972853986, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 64, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_1': {'cluster size (%)': 7, 6: {'fit_time': array([26.85230994, 28.71429706, 25.44135451, 26.12374783, 23.60074782,
       27.65632176, 26.63930559, 27.21636939, 27.72292995, 26.66782784,
       26.84904981, 25.39672303, 29.46929812, 26.23448253]), 'score_time': array([0.1598866 , 0.17123485, 0.16030788, 0.16369677, 0.16682458,
       0.16366625, 0.16987896, 0.15266466, 0.16130376, 0.16364551,
       0.15734434, 0.15751171, 0.15821218, 0.15998077]), 'test_pearson_r': array([0.95265244, 0.99916399, 0.99238802, 0.95299858, 0.09946255,
       0.98194615, 0.9924181 , 0.99700094, 0.98644372, 0.99625177,
       0.9958847 , 0.95620027, 0.99164437, 0.90229355]), 'test_pearson_p': array([-3.23175254e-10, -4.74969195e-25, -6.61773525e-17, -3.03995096e-10,
       -6.85388390e-01, -9.85199667e-14, -6.39936129e-17, -3.25964914e-19,
       -5.49659753e-14, -1.93589757e-18, -4.08302323e-18, -5.93460990e-10,
       -1.16376261e-15, -3.06192863e-07]), 'test_spearman_r': array([0.65614035, 0.99034241, 0.98245614, 0.87017544, 0.68889871,
       0.98245614, 0.86315789, 0.95090554, 0.93340229, 0.9628483 ,
       0.98502853, 0.89979387, 0.97210796, 0.94829572]), 'test_spearman_p': array([-2.28228868e-03, -4.97018651e-16, -7.73558991e-14, -1.28288236e-06,
       -1.10623477e-03, -7.73558991e-14, -1.95749994e-06, -1.45407914e-09,
       -1.57680662e-08, -1.62399435e-10, -1.21105572e-13, -3.71743858e-07,
       -1.68763179e-11, -2.18242419e-09]), 'test_kendall_r': array([0.56725146, 0.94705882, 0.92982456, 0.75438596, 0.63343381,
       0.91812865, 0.77777778, 0.87132984, 0.82623395, 0.89542484,
       0.93115255, 0.7697535 , 0.9013353 , 0.83172394]), 'test_kendall_p': array([-4.29034340e-04, -1.70481486e-08, -2.06767062e-12, -5.24238695e-07,
       -1.56352712e-04, -7.20796807e-12, -1.64978258e-07, -5.42460793e-07,
       -1.78800684e-06, -2.96242626e-10, -7.34599652e-08, -9.07720685e-06,
       -2.02850566e-07, -1.70822672e-06]), 'test_rmse': array([ -22.28737117,   -7.07207081,  -32.11808585,  -58.93550925,
       -179.50057817,  -14.69157821,   -9.56469884,   -6.44395283,
        -31.48744641,   -6.4589207 ,  -12.2294939 ,  -22.25555183,
         -9.76948414,  -25.43288286]), 'test_mae': array([-11.59625496,  -4.92756406, -13.69238169, -21.98989755,
       -53.37180515,  -9.33877795,  -6.75927282,  -4.05223477,
       -14.91252395,  -4.38653613,  -7.14488339, -12.7177323 ,
        -5.84043582, -12.66261853]), 'test_r2': array([  0.88815104,   0.9983128 ,   0.97436528,   0.90488842,
       -10.01055427,   0.96099472,   0.97661743,   0.99279971,
         0.97043626,   0.99183349,   0.98519309,   0.90819725,
         0.98063919,   0.79502313]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([19.56429219, 18.55934501, 20.00411177, 17.71922255, 16.7827487 ,
       17.72265863, 17.37977171, 16.87827587, 18.28576446, 17.78875136,
       19.17346287, 19.00252509, 15.86887169, 19.72723007]), 'score_time': array([0.15058517, 0.1613152 , 0.15770316, 0.15362215, 0.15811062,
       0.16751337, 0.15596509, 0.1594522 , 0.16482162, 0.15364718,
       0.16124964, 0.21272373, 0.1598649 , 0.15781784]), 'test_pearson_r': array([0.98702364, 0.9853404 , 0.95399078, 0.99867458, 0.64513417,
       0.98451964, 0.98667933, 0.87760774, 0.95784235, 0.98889137,
       0.99184788, 0.98650911, 0.95987518, 0.98077891]), 'test_pearson_p': array([-6.05240435e-15, -1.69706297e-14, -2.54436238e-10, -2.38321134e-23,
       -2.85755178e-03, -2.68902694e-14, -7.55258938e-15, -1.71283893e-06,
       -4.39430652e-10, -1.12610819e-14, -9.56027559e-16, -5.28914889e-14,
       -2.97836289e-10, -8.82043587e-13]), 'test_spearman_r': array([0.84101897, 0.841089  , 0.93807651, 0.8205354 , 0.72375996,
       0.87055735, 0.97017544, 0.91219057, 0.9705154 , 0.95818288,
       0.98657077, 0.96078431, 0.87822497, 0.92720714]), 'test_spearman_p': array([-6.47022373e-06, -6.44765773e-06, -3.00918779e-09, -1.68355149e-05,
       -4.60058454e-04, -1.25285079e-06, -6.74895947e-12, -1.34535861e-07,
       -2.61829819e-11, -4.12268255e-10, -5.09977899e-14, -2.48656703e-10,
       -1.64827026e-06, -3.14918237e-08]), 'test_kendall_r': array([0.69616822, 0.70001211, 0.84956122, 0.7155456 , 0.68439258,
       0.73900611, 0.90643275, 0.79606986, 0.90736436, 0.87869325,
       0.92765165, 0.85620915, 0.77777778, 0.8000043 ]), 'test_kendall_p': array([-3.53615201e-05, -3.06761171e-05, -4.48423156e-07, -1.94725637e-05,
       -4.78684059e-05, -1.02950287e-05, -2.27996852e-11, -4.43688739e-06,
       -1.92223638e-07, -3.78914056e-07, -8.87180979e-08, -5.28843419e-09,
       -4.36097754e-07, -3.75687779e-06]), 'test_rmse': array([  -6.62922141,  -20.9877731 ,  -57.70540263,   -7.44913976,
       -178.06502418,  -14.7468112 ,  -31.9889781 ,  -20.72908793,
        -13.83485388,  -42.93654746,   -9.18355731,  -16.39972139,
        -25.31712805,  -15.51184879]), 'test_mae': array([ -5.49050953, -13.75544648, -20.54058869,  -5.30771876,
       -57.91437261, -10.43000731, -16.58764573, -10.79757318,
        -9.90031526, -20.38615147,  -6.55039863, -10.27947738,
       -16.82931133, -11.56076365]), 'test_r2': array([0.96654268, 0.94131175, 0.90573687, 0.99265187, 0.03575383,
       0.96074818, 0.96736992, 0.54947613, 0.9132435 , 0.95339482,
       0.9829585 , 0.94444435, 0.91886745, 0.95653684]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([4.80384731, 5.11927915, 4.41861606, 5.27454591, 4.72204137,
       5.28505158, 5.16004467, 4.5554049 , 4.16866064, 5.03696394,
       3.66409588, 5.06580281, 5.06128883, 5.27546263]), 'score_time': array([0.23193908, 0.15940857, 0.22697663, 0.2072351 , 0.16444373,
       0.15952325, 0.1583395 , 0.45443416, 0.16242766, 0.22251129,
       0.52817059, 0.16136408, 0.1640532 , 0.16583538]), 'test_pearson_r': array([0.99477329, 0.98525016, 0.99634232, 0.99819299, 0.91737087,
       0.94951256, 0.98641658, 0.05694934, 0.99265328, 0.99402837,
       0.98663998, 0.98266611, 0.97184557, 0.99387031]), 'test_pearson_p': array([-2.73153638e-18, -1.78739234e-14, -1.32130079e-19, -3.31601505e-22,
       -3.25244276e-08, -5.51820185e-10, -8.90870845e-15, -8.22406323e-01,
       -4.17007513e-16, -7.98002032e-17, -4.89433321e-14, -3.88152472e-13,
       -1.81740048e-11, -9.83000621e-17]), 'test_spearman_r': array([0.97323397, 0.92233445, 0.96972366, 0.98552006, 0.91794656,
       0.94736842, 0.98727522, 0.63880289, 0.8295459 , 0.95872033,
       0.98915862, 0.85611179, 0.82249742, 0.98553772]), 'test_spearman_p': array([-2.71850932e-12, -1.95433775e-08, -7.65719604e-12, -1.52912058e-14,
       -3.07092205e-08, -7.80082922e-10, -5.12890798e-15, -4.32212480e-03,
       -2.06767678e-05, -3.72370945e-10, -9.27540331e-15, -5.82336862e-06,
       -2.79261707e-05, -9.19675963e-14]), 'test_kendall_r': array([0.9266902 , 0.83284816, 0.89149943, 0.93842046, 0.76246662,
       0.84795322, 0.9266902 , 0.59477124, 0.79606986, 0.86928105,
       0.94426737, 0.75757961, 0.76470588, 0.92765165]), 'test_kendall_p': array([-3.18217344e-08, -6.66104086e-07, -1.03161918e-07, -2.12970819e-08,
       -5.34143245e-06, -2.53233265e-09, -3.18217344e-08, -3.24628494e-04,
       -4.43688739e-06, -2.15825858e-09, -4.80698932e-08, -1.45284610e-05,
       -8.04176944e-07, -8.87180979e-08]), 'test_rmse': array([  -8.30255002,  -31.30871245,  -32.02568594,  -11.80184533,
        -16.52976024,  -59.03116823,  -12.39808134, -186.00506232,
        -16.90450566,   -7.86856227,  -16.36393258,  -14.87609836,
        -12.29218939,   -8.76292811]), 'test_mae': array([ -5.9466156 , -14.42413046, -17.11024987,  -7.65778986,
       -10.15566084, -20.16525508,  -5.61369291, -53.06325123,
       -10.58575133,  -5.64603669, -10.18473194,  -9.01183149,
        -6.40027581,  -5.06333863]), 'test_r2': array([  0.98561286,   0.96737115,   0.97487375,   0.99616376,
         0.83920039,   0.89765822,   0.96493334, -25.53914302,
         0.97378393,   0.98655854,   0.95975034,   0.9537098 ,
         0.94074791,   0.98596649]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([3.27354789, 3.11642432, 3.71875334, 3.65369105, 2.80231619,
       2.72323275, 2.46350694, 3.2910707 , 3.77441907, 2.33918905,
       3.16178679, 3.11269617, 3.13937306, 2.9095633 ]), 'score_time': array([0.15763044, 0.15597916, 0.15469933, 0.15242839, 0.16036057,
       0.49767089, 0.18737698, 0.16687226, 0.15464854, 0.1536994 ,
       0.22777367, 0.15185094, 0.21677637, 0.26363587]), 'test_pearson_r': array([ 0.98845213,  0.99279207,  0.98363887, -0.02402435,  0.99225501,
        0.99862391,  0.99741864,  0.9962967 ,  0.87580253,  0.9922048 ,
        0.97660902,  0.94940415,  0.97936591,  0.99708003]), 'test_pearson_p': array([-2.25676537e-15, -4.16829687e-17, -4.29119386e-14, -9.22230961e-01,
       -7.66408199e-17, -3.27781261e-23, -6.85540576e-21, -1.75809166e-18,
       -1.91433776e-06, -6.68972377e-16, -4.18762658e-12, -1.84151818e-09,
       -1.54889931e-12, -2.63282990e-19]), 'test_spearman_r': array([0.87752414, 0.9877193 , 0.97323397, 0.67908555, 0.97192982,
       0.97719298, 0.97323397, 0.96797572, 0.73102746, 0.95252838,
       0.98555212, 0.83900929, 0.94427245, 0.99174407]), 'test_spearman_p': array([-8.02375581e-07, -3.79790244e-15, -2.71850932e-12, -1.38702810e-03,
       -4.05534963e-12, -7.06769745e-13, -2.71850932e-12, -5.03056755e-11,
       -5.67719966e-04, -1.11695903e-09, -9.12417033e-14, -1.35126625e-05,
       -3.92399721e-09, -1.05753411e-15]), 'test_kendall_r': array([0.82941176, 0.92982456, 0.90322969, 0.61654215, 0.88304094,
       0.90643275, 0.87976918, 0.9013353 , 0.68197088, 0.85620915,
       0.92156863, 0.73856209, 0.84313725, 0.96078431]), 'test_kendall_p': array([-7.85254763e-07, -2.06767062e-12, -7.00361385e-08, -3.09023200e-04,
       -1.79983887e-10, -2.27996852e-11, -1.51234358e-07, -2.02850566e-07,
       -8.07679747e-05, -5.28843419e-09, -2.92550870e-11, -2.52158005e-06,
       -1.22726897e-08, -3.50182620e-13]), 'test_rmse': array([ -12.29382994,   -9.89236785,  -15.8083123 , -254.97825278,
         -8.97302925,  -25.77806204,  -14.63877466,   -6.59961004,
        -34.10847461,   -6.50412886,  -17.78474645,  -61.9867333 ,
        -14.99748215,  -17.48505228]), 'test_mae': array([ -6.48753469,  -5.08198955,  -7.42259402, -88.06151511,
        -4.97264039, -12.86355193,  -8.58223992,  -4.48391082,
       -16.08225978,  -4.2523475 ,  -8.83930612, -23.76716322,
        -9.95733112, -11.58513707]), 'test_r2': array([  0.96805105,   0.98021734,   0.96373305, -28.34583342,
         0.98430879,   0.98333097,   0.99330644,   0.98995155,
         0.67323434,   0.98315944,   0.93188093,   0.89146424,
         0.95519168,   0.99211192]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.99913907, 3.10544229, 2.66293335, 2.84600425, 2.44139481,
       3.03626347, 3.14461589, 2.0814383 , 3.41913629, 2.38587952,
       2.90121746, 2.52936459, 3.38475776, 3.22030234]), 'score_time': array([0.15617895, 0.15450835, 0.17026496, 0.15948033, 0.1608963 ,
       0.15050459, 0.1493957 , 0.15953374, 0.1503973 , 0.16770768,
       0.15789247, 0.16594243, 0.15978861, 0.15890741]), 'test_pearson_r': array([0.99787831, 0.98389753, 0.97980434, 0.99252449, 0.99539206,
       0.99295793, 0.27749274, 0.54748654, 0.99598579, 0.99434449,
       0.86185851, 0.97705567, 0.94620119, 0.99540739]), 'test_pearson_p': array([-1.29655298e-21, -3.75086256e-14, -2.53645831e-13, -5.67706303e-17,
       -9.37940214e-19, -3.42186314e-17, -2.50055737e-01, -1.86837749e-02,
       -3.34742168e-18, -5.16969848e-17, -4.28355072e-06, -3.59413274e-12,
       -2.97862481e-09, -9.80861421e-18]), 'test_spearman_r': array([0.94035088, 0.90158311, 0.76679849, 0.95568241, 0.91052632,
       0.98245614, 0.75087719, 0.83884298, 0.98604664, 0.95611784,
       0.85493042, 0.98348813, 0.82662539, 0.98142415]), 'test_spearman_p': array([-2.20654144e-09, -1.36072655e-07, -1.28111108e-04, -1.86125755e-10,
       -6.24664266e-08, -7.73558991e-14, -2.11664863e-04, -1.36171995e-05,
       -6.91609552e-14, -6.02298234e-10, -6.19280424e-06, -2.63828912e-13,
       -2.34565531e-05, -6.72563970e-13]), 'test_kendall_r': array([0.87134503, 0.79059143, 0.73746634, 0.86803892, 0.8128655 ,
       0.91812865, 0.69590643, 0.67763158, 0.93729883, 0.82623395,
       0.81311912, 0.90849673, 0.77777778, 0.93464052]), 'test_kendall_p': array([-4.58322529e-10, -2.61922646e-06, -1.18018662e-05, -2.20656528e-07,
       -2.37852170e-08, -7.20796807e-12, -6.49122200e-06, -9.34513479e-05,
       -7.03810661e-08, -1.78800684e-06, -2.59896801e-06, -9.76656516e-11,
       -4.36097754e-07, -7.81116540e-12]), 'test_rmse': array([  -5.63481511,  -14.07360567,   -9.24606981,  -25.87366009,
         -9.85222586,  -11.55574368, -182.88552783,  -59.90820688,
        -24.96348731,  -10.40404424,  -29.02197493,  -16.6060788 ,
        -13.73383276,  -18.74667039]), 'test_mae': array([ -3.51656312,  -8.82794265,  -5.17480215, -15.54235925,
        -6.02204193,  -5.18005477, -47.49600185, -22.97092826,
       -12.4095374 ,  -5.93419639, -10.68946466, -11.57944037,
        -6.46595834, -10.2732924 ]), 'test_r2': array([ 0.99385116,  0.96709744,  0.95753549,  0.98109501,  0.98270548,
        0.98479052, -3.98483921, -1.74018838,  0.99004292,  0.98750763,
        0.71631103,  0.95301085,  0.89337638,  0.98930268]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.85152817, 0.82186818, 0.89157677, 0.98283482, 0.99100423,
       0.86211324, 1.16515279, 0.85171199, 0.86881709, 0.98747444,
       0.96049023, 0.91365004, 0.92368364, 1.03521776]), 'score_time': array([0.15930271, 0.15251684, 0.15914631, 0.15230489, 0.233886  ,
       0.15242052, 0.15114617, 0.16032958, 0.16413498, 0.15627623,
       0.1526897 , 0.15418744, 0.15511942, 0.15206623]), 'test_pearson_r': array([0.97400367, 0.91821522, 0.99164011, 0.99372849, 0.98131794,
       0.99695107, 0.75769006, 0.98701585, 0.98953821, 0.99706902,
       0.99722322, 0.97487771, 0.97610062, 0.77410006]), 'test_pearson_p': array([-2.12692729e-12, -2.98928465e-08, -1.46415971e-16, -1.28115365e-17,
       -1.31482950e-13, -2.81771659e-20, -1.71523923e-04, -3.89992114e-14,
       -6.98263864e-15, -2.71316955e-19, -1.76162545e-19, -7.37381042e-12,
       -4.96569863e-12, -1.63107992e-04]), 'test_spearman_r': array([0.83084507, 0.93508772, 0.98683093, 0.98594177, 0.93146014,
       0.96270303, 0.87845555, 0.79606796, 0.97729618, 0.92927219,
       0.99122367, 0.78265369, 0.89959026, 0.72999493]), 'test_spearman_p': array([-1.05683507e-05, -4.44614837e-09, -6.85587369e-15, -1.19111358e-14,
       -6.97087151e-09, -4.40088650e-11, -7.54442824e-07, -7.75438253e-05,
       -3.30605345e-12, -2.51816334e-08, -1.72171485e-15, -1.23328329e-04,
       -3.77580298e-07, -5.83284366e-04]), 'test_kendall_r': array([0.72035296, 0.77777778, 0.9353103 , 0.9321899 , 0.83779092,
       0.86803892, 0.79765739, 0.6046812 , 0.90849673, 0.8524636 ,
       0.9573822 , 0.6950857 , 0.78416135, 0.66885605]), 'test_kendall_p': array([-2.08221512e-05, -1.64978258e-07, -2.55431689e-08, -3.02184546e-08,
       -6.38684879e-07, -2.20656528e-07, -1.92681603e-06, -5.38366683e-04,
       -9.76656516e-11, -8.32299419e-07, -3.12802418e-08, -5.87142144e-05,
       -7.19458129e-06, -1.10498991e-04]), 'test_rmse': array([ -15.94352107,  -25.73184265,  -18.24062525,   -8.02737409,
        -15.07408154,  -36.20161565,  -58.24912889,   -9.48191619,
         -9.61879889,  -14.00180952,  -10.07597568,  -16.90664629,
        -20.04042912, -178.76850737]), 'test_mae': array([ -9.73212766, -14.49964609, -10.74370446,  -5.42633009,
        -6.76010419, -17.44197865, -18.37630093,  -6.8442639 ,
        -7.25249675,  -7.443134  ,  -7.64126822, -10.49147843,
       -12.30912671, -65.75364176]), 'test_r2': array([0.94459297, 0.79187841, 0.96068464, 0.9867431 , 0.87053127,
       0.96743673, 0.36738708, 0.96040885, 0.96289184, 0.99386463,
       0.98282107, 0.94535836, 0.9390194 , 0.50922252]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([15.13963771, 18.03961778, 17.90418243, 16.07508206, 20.05102396,
       18.78205204, 19.13892365, 17.20144367, 16.39978385, 17.23514533,
       17.52784419, 18.3542726 , 17.03043127, 16.77677703]), 'score_time': array([0.15558934, 0.15434051, 0.15262675, 0.16524935, 0.15729523,
       0.17133617, 0.14942789, 0.22439361, 0.16005659, 0.15449452,
       0.1619935 , 0.19174957, 0.15023041, 0.14992976]), 'test_pearson_r': array([0.99462642, 0.99706342, 0.99934179, 0.95998374, 0.11129   ,
       0.99508345, 0.63655493, 0.98248772, 0.97362962, 0.98862397,
       0.9937438 , 0.99645579, 0.9376297 , 0.99912493]), 'test_pearson_p': array([-3.45534780e-18, -2.04863101e-20, -6.22584934e-26, -7.93046481e-11,
       -6.50129483e-01, -1.62565342e-18, -3.38493666e-03, -4.21049998e-13,
       -1.08254436e-11, -1.36099978e-14, -1.15706387e-16, -1.23795662e-18,
       -9.45788096e-09, -1.72389913e-23]), 'test_spearman_r': array([0.72751214, 0.82952676, 0.99692664, 0.8924968 , 0.58245614,
       0.99298246, 0.90478289, 0.85124012, 0.96644308, 0.99327803,
       0.97263823, 0.99174407, 0.96078431, 0.9876161 ]), 'test_spearman_p': array([-4.15416290e-04, -1.12357035e-05, -3.01519019e-20, -2.79211735e-07,
       -8.87579399e-03, -3.32215984e-17, -1.03899466e-07, -7.47927098e-06,
       -7.27678973e-11, -2.05219493e-16, -1.44981731e-11, -1.05753411e-15,
       -2.48656703e-10, -2.67561271e-14]), 'test_kendall_r': array([0.69208509, 0.76699169, 0.97938938, 0.72727585, 0.64912281,
       0.95321637, 0.78592713, 0.79606986, 0.87869325, 0.96034914,
       0.89180807, 0.96078431, 0.89542484, 0.96078431]), 'test_kendall_p': array([-3.61461714e-05, -5.15534651e-06, -5.94502052e-09, -1.41920797e-05,
       -3.57225177e-05, -1.16815227e-13, -2.71955004e-06, -4.43688739e-06,
       -3.78914056e-07, -3.57316367e-08, -2.53540670e-07, -3.50182620e-13,
       -2.96242626e-10, -3.50182620e-13]), 'test_rmse': array([ -18.88218497,  -18.40329208,   -9.03350813,  -14.1112067 ,
       -185.05579228,   -9.56441094,  -55.2256917 ,  -15.49302754,
        -15.27752443,  -13.22369031,  -15.07913423,   -7.7559831 ,
        -25.8662518 ,  -24.7799861 ]), 'test_mae': array([ -9.45722836, -10.16762702,  -5.32053379,  -7.54494132,
       -53.19233903,  -5.77119293, -17.60316386,  -8.5469898 ,
        -8.64016711,  -8.68275285,  -9.12082716,  -4.74602494,
       -15.21555902, -10.71480529]), 'test_r2': array([  0.98780013,   0.99062085,   0.99736379,   0.9146252 ,
       -10.8405094 ,   0.98979532,  -0.2886681 ,   0.96493537,
         0.93881781,   0.97376835,   0.9768297 ,   0.9925689 ,
         0.78883094,   0.98544367]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_2': {'cluster size (%)': 29, 6: {'test_mad': 73.12898100803508, 'test_ystd': 83.09248394512653, 'test_mae': 190.20587999266544, 'test_rmse': 316.3055737989056, 'test_r2': -13.490728053868695, 'test_pearson_r': array([-0.31846147]), 'test_pearson_p_value': array([0.00568776]), 'test_spearman_r': -0.5887831602167611, 'test_spearman_p_value': 3.437486828804219e-08, 'test_kendall_r': -0.4577915795862579, 'test_kendall_p_value': 1.1331653110208165e-08, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08842403762618585, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 853, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 73.12898100803508, 'test_ystd': 83.09248394512653, 'test_mae': 190.04668190182866, 'test_rmse': 316.2764299414632, 'test_r2': -13.488057874827332, 'test_pearson_r': array([-0.31856309]), 'test_pearson_p_value': array([0.00567154]), 'test_spearman_r': -0.5816254578660884, 'test_spearman_p_value': 5.500222107095227e-08, 'test_kendall_r': -0.4536954611615639, 'test_kendall_p_value': 1.599088629323028e-08, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08540412629998263, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 610, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 260, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 73.12898100803508, 'test_ystd': 83.09248394512653, 'test_mae': 188.49702658034658, 'test_rmse': 312.84088934462864, 'test_r2': -13.175015418677328, 'test_pearson_r': array([-0.31952922]), 'test_pearson_p_value': array([0.00551936]), 'test_spearman_r': -0.5967796267646103, 'test_spearman_p_value': 2.005653828962252e-08, 'test_kendall_r': -0.48581218995946646, 'test_kendall_p_value': 2.399281882854201e-09, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09472646708757246, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 73.12898100803508, 'test_ystd': 83.09248394512653, 'test_mae': 187.2856198145892, 'test_rmse': 309.1446029355102, 'test_r2': -12.842032169536521, 'test_pearson_r': array([-0.32180313]), 'test_pearson_p_value': array([0.00517533]), 'test_spearman_r': -0.6098185204502343, 'test_spearman_p_value': 8.067111211137275e-09, 'test_kendall_r': -0.493986225288168, 'test_kendall_p_value': 2.195283165414197e-09, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.028907826505857798, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 141, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 73.12898100803508, 'test_ystd': 83.09248394512653, 'test_mae': 190.29625559652172, 'test_rmse': 316.36058291874053, 'test_r2': -13.495768695427572, 'test_pearson_r': array([-0.31866879]), 'test_pearson_p_value': array([0.00565471]), 'test_spearman_r': -0.5868072526292105, 'test_spearman_p_value': 3.918206631962666e-08, 'test_kendall_r': -0.4637855773549814, 'test_kendall_p_value': 7.285738977010713e-09, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03988177455462562, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 327, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 73.12898100803508, 'test_ystd': 83.09248394512653, 'test_mae': 190.55453475256223, 'test_rmse': 316.4854124300795, 'test_r2': -13.50721042879461, 'test_pearson_r': array([-0.31904096]), 'test_pearson_p_value': array([0.00559581]), 'test_spearman_r': -0.5918552208446394, 'test_spearman_p_value': 2.799628638707166e-08, 'test_kendall_r': -0.47135001542893146, 'test_kendall_p_value': 4.258985067329017e-09, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.007514872470625398, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1747, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 73.12898100803508, 'test_ystd': 83.09248394512653, 'test_mae': 190.7356949576816, 'test_rmse': 316.5417603840716, 'test_r2': -13.512376697850817, 'test_pearson_r': array([-0.319618]), 'test_pearson_p_value': array([0.00550556]), 'test_spearman_r': -0.6018773359485755, 'test_spearman_p_value': 1.4116450549908647e-08, 'test_kendall_r': -0.49206730249481645, 'test_kendall_p_value': 8.729496016642073e-10, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05862014417289488, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 564, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_2': {'cluster size (%)': 25, 6: {'fit_time': array([16.99753737, 15.83127975, 16.29955268, 16.11546969]), 'score_time': array([0.16441441, 0.15516376, 0.1987958 , 0.15463424]), 'test_pearson_r': array([0.97196464, 0.73994775, 0.98951478, 0.96431548]), 'test_pearson_p': array([-2.53845528e-41, -1.89358047e-12, -1.15800281e-54, -1.72063223e-37]), 'test_spearman_r': array([0.86372634, 0.90478741, 0.93816612, 0.94167489]), 'test_spearman_p': array([-2.05558943e-20, -4.85926045e-25, -1.00881804e-30, -5.06085150e-31]), 'test_kendall_r': array([0.77314013, 0.82851792, 0.82032305, 0.81743891]), 'test_kendall_p': array([-1.27353917e-19, -2.05698321e-22, -7.51479357e-22, -1.89606592e-21]), 'test_rmse': array([-36.4624077 , -97.0872734 , -17.6886833 , -20.45896042]), 'test_mae': array([-13.87345752, -21.16511402,  -8.34469784, -11.00967451]), 'test_r2': array([0.94260248, 0.33026777, 0.97693276, 0.92757728]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([12.45859313, 12.63887215, 10.90106654, 11.26973176]), 'score_time': array([0.15464616, 0.15592289, 0.16947103, 0.15750194]), 'test_pearson_r': array([0.9180649 , 0.81120596, 0.97723631, 0.96194678]), 'test_pearson_p': array([-5.25938151e-27, -2.55638279e-16, -3.88347550e-44, -1.21824233e-36]), 'test_spearman_r': array([0.80874386, 0.83634123, 0.94394412, 0.92089447]), 'test_spearman_p': array([-3.69428921e-16, -4.25554761e-18, -5.01062965e-32, -4.69457974e-27]), 'test_kendall_r': array([0.64950682, 0.76399366, 0.81916273, 0.79422654]), 'test_kendall_p': array([-3.64747558e-14, -3.94197471e-19, -8.33340966e-22, -2.50833601e-20]), 'test_rmse': array([-49.27715338, -99.14878847, -28.65543164, -21.90433558]), 'test_mae': array([-21.47733772, -23.67946075, -14.11442406, -13.24224718]), 'test_r2': array([0.83064847, 0.55861469, 0.94125149, 0.91621316]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([2.38406181, 2.11476135, 2.43390179, 2.4101584 ]), 'score_time': array([0.15084267, 0.16702509, 0.15154815, 0.16067433]), 'test_pearson_r': array([0.98771795, 0.97596936, 0.52885409, 0.97429207]), 'test_pearson_p': array([-1.64420486e-52, -2.09875392e-43, -5.93377601e-06, -7.66967474e-42]), 'test_spearman_r': array([0.96073097, 0.95435323, 0.85306785, 0.94128713]), 'test_spearman_p': array([-8.73243841e-37, -9.08237733e-35, -1.86145961e-19, -6.17898086e-31]), 'test_kendall_r': array([0.87108175, 0.85053285, 0.78282437, 0.85359411]), 'test_kendall_p': array([-1.67047974e-24, -1.70789095e-23, -4.08816181e-20, -4.03355189e-23]), 'test_rmse': array([-25.64314811, -32.67176932, -98.74863685, -16.45727487]), 'test_mae': array([-12.66037519, -12.37974975, -21.33419137,  -9.35728409]), 'test_r2': array([ 0.97162048,  0.95221926, -0.84722605,  0.94900587]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.82731891, 1.82864666, 1.89194655, 1.76131654]), 'score_time': array([0.15906   , 0.15509319, 0.1519146 , 0.15140319]), 'test_pearson_r': array([0.96661862, 0.70472758, 0.94466947, 0.97126019]), 'test_pearson_p': array([-5.71994593e-39, -5.69041753e-11, -3.36124166e-32, -2.32440751e-40]), 'test_spearman_r': array([0.93506117, 0.86673442, 0.90286341, 0.9153206 ]), 'test_spearman_p': array([-4.50324265e-30, -1.06706526e-20, -8.85772737e-25, -3.56215567e-26]), 'test_kendall_r': array([0.83710078, 0.78795217, 0.82364699, 0.8047694 ]), 'test_kendall_p': array([-1.16145103e-22, -2.08402606e-20, -4.17122067e-22, -6.18990530e-21]), 'test_rmse': array([ -18.77079275, -139.44296887,  -22.71743527,  -37.4052884 ]), 'test_mae': array([ -9.8118669 , -33.61795854,  -9.41870454, -15.67456339]), 'test_r2': array([0.93151775, 0.17336716, 0.87678592, 0.93987622]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.03062606, 1.79759979, 1.86982656, 2.0687716 ]), 'score_time': array([0.17542696, 0.17011285, 0.22851944, 0.28687525]), 'test_pearson_r': array([0.99364056, 0.59423262, 0.96591062, 0.97761697]), 'test_pearson_p': array([-1.77750508e-61, -1.80383665e-07, -1.09619997e-38, -1.10003269e-43]), 'test_spearman_r': array([0.92318123, 0.92136722, 0.83495106, 0.90978409]), 'test_spearman_p': array([-7.46391181e-28, -1.51416486e-27, -5.43251310e-18, -2.33315356e-25]), 'test_kendall_r': array([0.83334121, 0.84737602, 0.75882503, 0.81949441]), 'test_kendall_p': array([-1.51044410e-22, -2.16883843e-23, -5.97728646e-19, -1.29797697e-21]), 'test_rmse': array([-14.1999113 , -98.40112538, -39.26575346, -23.83343205]), 'test_mae': array([ -7.45128871, -19.29239612, -15.45449995, -12.26840857]), 'test_r2': array([ 0.98583041, -0.30887008,  0.93287482,  0.95334561]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.75029755, 0.80587578, 0.76888156, 0.77230406]), 'score_time': array([0.157516  , 0.15084505, 0.22842836, 0.15955663]), 'test_pearson_r': array([0.94356845, 0.94923344, 0.99630546, 0.78520474]), 'test_pearson_p': array([-6.14881179e-32, -2.39250128e-33, -6.87736336e-69, -1.58481637e-14]), 'test_spearman_r': array([0.9330842 , 0.90355298, 0.95574335, 0.79749437]), 'test_spearman_p': array([-1.12380351e-29, -7.15314406e-25, -3.50124204e-35, -3.10960855e-15]), 'test_kendall_r': array([0.81113937, 0.747771  , 0.84969219, 0.70363418]), 'test_kendall_p': array([-2.09519829e-21, -1.75424942e-18, -2.34624038e-23, -3.13514724e-16]), 'test_rmse': array([ -24.95563124,  -40.02098291,  -10.15309996, -103.91604192]), 'test_mae': array([-14.5794426 , -15.19045616,  -6.90205636, -34.51199383]), 'test_r2': array([0.88216673, 0.89632578, 0.99114264, 0.55393417]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([10.5110383 ,  9.56072664, 11.76081181, 11.10279107]), 'score_time': array([0.15875649, 0.15096164, 0.16901731, 0.1460166 ]), 'test_pearson_r': array([0.9773031 , 0.48479035, 0.9817462 , 0.99135019]), 'test_pearson_p': array([-3.54369681e-44, -4.26926380e-05, -3.96220664e-47, -2.13022106e-56]), 'test_spearman_r': array([0.79740654, 0.86975052, 0.95054378, 0.97904003]), 'test_spearman_p': array([-1.88442196e-15, -5.44070451e-21, -1.07084623e-33, -1.46588873e-44]), 'test_kendall_r': array([0.73833579, 0.78969035, 0.8672221 , 0.88806158]), 'test_kendall_p': array([-5.57009831e-18, -1.68611186e-20, -2.65665733e-24, -3.56593530e-25]), 'test_rmse': array([ -43.93065866, -104.21765927,  -15.62517065,  -19.52004052]), 'test_mae': array([-17.34701766, -24.82457318,  -8.81699799, -10.39372137]), 'test_r2': array([ 0.93318565, -1.35580183,  0.9636328 ,  0.97679567]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_3': {'cluster size (%)': 10, 6: {'test_mad': 79.886624, 'test_ystd': 99.55876844075563, 'test_mae': 85.3206385910034, 'test_rmse': 138.17826227406306, 'test_r2': -0.9262844645399766, 'test_pearson_r': array([-0.58803894]), 'test_pearson_p_value': array([0.00199169]), 'test_spearman_r': -0.1556419504327438, 'test_spearman_p_value': 0.457533900906398, 'test_kendall_r': -0.0976089807581015, 'test_kendall_p_value': 0.5085239293475639, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.012976329276892608, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1017, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 79.886624, 'test_ystd': 99.55876844075563, 'test_mae': 86.28304935760498, 'test_rmse': 138.13649329701272, 'test_r2': -0.9251200734183433, 'test_pearson_r': array([-0.60799287]), 'test_pearson_p_value': array([0.00126364]), 'test_spearman_r': -0.15606060430479216, 'test_spearman_p_value': 0.4563098213093363, 'test_kendall_r': -0.10127733336481635, 'test_kendall_p_value': 0.4933828513246237, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 182, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 79.886624, 'test_ystd': 99.55876844075563, 'test_mae': 85.8104936630249, 'test_rmse': 138.22751732531128, 'test_r2': -0.9276579967988765, 'test_pearson_r': array([-0.59947638]), 'test_pearson_p_value': array([0.00154003]), 'test_spearman_r': -0.1556419504327438, 'test_spearman_p_value': 0.457533900906398, 'test_kendall_r': -0.0976089807581015, 'test_kendall_p_value': 0.5085239293475639, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09715958538897916, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 298, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 79.886624, 'test_ystd': 99.55876844075563, 'test_mae': 86.28304874725342, 'test_rmse': 138.13648097187675, 'test_r2': -0.9251197298832639, 'test_pearson_r': array([-0.60799339]), 'test_pearson_p_value': array([0.00126363]), 'test_spearman_r': -0.15606060430479216, 'test_spearman_p_value': 0.4563098213093363, 'test_kendall_r': -0.10127733336481635, 'test_kendall_p_value': 0.4933828513246237, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 303, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 79.886624, 'test_ystd': 99.55876844075563, 'test_mae': 86.0032652694702, 'test_rmse': 137.69328735108593, 'test_r2': -0.9127865347192821, 'test_pearson_r': array([-0.5946099]), 'test_pearson_p_value': array([0.00172012]), 'test_spearman_r': -0.15920164776088358, 'test_spearman_p_value': 0.44718092759447436, 'test_kendall_r': -0.10354501739451785, 'test_kendall_p_value': 0.49081100388794674, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06620468559504654, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 85, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 79.886624, 'test_ystd': 99.55876844075563, 'test_mae': 86.02101078338623, 'test_rmse': 137.94439194027848, 'test_r2': -0.9197694086827821, 'test_pearson_r': array([-0.59955359]), 'test_pearson_p_value': array([0.00153731]), 'test_spearman_r': -0.165963064768084, 'test_spearman_p_value': 0.42786323651460456, 'test_kendall_r': -0.11694776983803247, 'test_kendall_p_value': 0.43386368453009194, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06436923207804567, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 103, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 79.886624, 'test_ystd': 99.55876844075563, 'test_mae': 85.21912617034911, 'test_rmse': 138.10724085848446, 'test_r2': -0.9243048146470354, 'test_pearson_r': array([-0.58062951]), 'test_pearson_p_value': array([0.00234112]), 'test_spearman_r': -0.15920164776088358, 'test_spearman_p_value': 0.44718092759447436, 'test_kendall_r': -0.10354501739451785, 'test_kendall_p_value': 0.49081100388794674, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0026629018040577163, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1797, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_3': {'cluster size (%)': 10, 6: {'fit_time': array([18.36412477, 20.05238438, 18.77313137, 18.55722141, 19.41686201,
       18.22302127, 18.91461945, 18.08488297, 19.56963754, 18.34831667]), 'score_time': array([0.20736861, 0.15141296, 0.17165995, 0.15777969, 0.1641407 ,
       0.16118956, 0.225178  , 0.15601754, 0.15255952, 0.16201782]), 'test_pearson_r': array([0.92585479, 0.99480814, 0.95253255, 0.26129032, 0.98194236,
       0.94048154, 0.99767266, 0.99440578, 0.96831304, 0.93645127]), 'test_pearson_p': array([-1.24309918e-11, -2.46650975e-25, -6.77128372e-14, -1.97281331e-01,
       -7.23820595e-19, -9.60592675e-13, -1.64762691e-29, -6.02826956e-25,
       -5.75290942e-16, -6.00853993e-12]), 'test_spearman_r': array([0.74611046, 0.98682866, 0.91521368, 0.78330778, 0.8760472 ,
       0.94679248, 0.98478374, 0.97108675, 0.91515572, 0.97978871]), 'test_spearman_p': array([-1.20957726e-05, -1.68309019e-20, -5.87653284e-11, -2.22959000e-06,
       -4.54834019e-09, -2.58617910e-13, -9.41252685e-20, -1.94393056e-16,
       -5.92311113e-11, -1.41237786e-17]), 'test_kendall_r': array([0.69645691, 0.93189301, 0.81538462, 0.71716381, 0.78890695,
       0.84963793, 0.91833699, 0.88856193, 0.77709351, 0.90606067]), 'test_kendall_p': array([-6.27352373e-07, -3.11672516e-11, -7.50650577e-12, -3.09824822e-07,
       -1.66136182e-08, -1.47811877e-09, -5.03226074e-11, -2.40270672e-10,
       -3.06294247e-08, -2.72120722e-10]), 'test_rmse': array([ -27.42581607,  -25.79569272,  -51.55483336, -153.59208844,
        -12.05344794,  -23.5163838 ,  -14.00517835,  -12.37831135,
        -19.68273493,  -22.14988926]), 'test_mae': array([-12.29828461,  -9.81658736, -19.36474331, -40.92005495,
        -7.33772142,  -8.37648552,  -8.49825076,  -7.26132351,
       -10.88697442, -10.76835599]), 'test_r2': array([ 0.85092129,  0.9862196 ,  0.90442661, -3.67587936,  0.9621748 ,
        0.86950878,  0.99183602,  0.98415041,  0.92788938,  0.87463888]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([14.84655714, 15.61325598, 15.53454852, 15.94385672, 15.39281154,
       14.53220606, 13.81760788, 16.08771682, 15.99966598, 15.07090092]), 'score_time': array([0.16884851, 0.16688347, 0.16931319, 0.16253567, 0.17833281,
       0.24464631, 0.25366306, 0.18592906, 0.16735816, 0.17478418]), 'test_pearson_r': array([0.99075718, 0.96087291, 0.99842078, 0.6691477 , 0.98919107,
       0.95295491, 0.98762671, 0.98964602, 0.96346357, 0.98566547]), 'test_pearson_p': array([-2.44852681e-22, -6.95651161e-15, -1.57577814e-31, -1.85616026e-04,
       -1.58918219e-21, -6.09597306e-14, -7.98252149e-21, -9.50776210e-22,
       -3.09871792e-15, -2.79543079e-19]), 'test_spearman_r': array([0.88013745, 0.85308344, 0.87993844, 0.74186961, 0.89755442,
       0.92989062, 0.95775624, 0.99333004, 0.9008547 , 0.93092184]), 'test_spearman_p': array([-3.10812187e-09, -3.08925818e-08, -3.16723907e-09, -1.44034032e-05,
       -5.18265539e-10, -6.48645717e-12, -1.71718385e-14, -4.94788977e-24,
       -3.56046742e-10, -1.52587622e-11]), 'test_kendall_r': array([0.73210144, 0.73837509, 0.75425129, 0.69784979, 0.79135317,
       0.81173226, 0.85936009, 0.94591434, 0.79692308, 0.79397987]), 'test_kendall_p': array([-2.08605091e-07, -1.64332704e-07, -7.36407027e-08, -7.54030575e-07,
       -1.63505969e-08, -6.64153532e-09, -8.67694185e-10, -1.48217457e-11,
       -3.76435185e-11, -3.03056336e-08]), 'test_rmse': array([ -12.80191548,  -47.80239098,   -7.33052837, -153.19097979,
        -26.00929619,  -17.43870601,  -36.75780155,  -12.01234032,
        -19.72390972,  -16.70397605]), 'test_mae': array([ -8.07998777, -19.62026177,  -5.26448455, -47.90496775,
       -12.89302788,  -9.8650031 , -17.9798366 ,  -7.70688114,
       -12.14977605, -11.47541546]), 'test_r2': array([0.96360164, 0.91754297, 0.99133866, 0.12216066, 0.97211168,
       0.85161796, 0.95346104, 0.97414339, 0.92498478, 0.95505022]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([2.64625144, 2.96097589, 2.63598108, 2.76094913, 2.72311687,
       2.64019918, 2.8091836 , 2.73485303, 2.71791553, 2.61036444]), 'score_time': array([0.16533566, 0.16567302, 0.16636682, 0.15418553, 0.15795898,
       0.1638341 , 0.15748525, 0.16431427, 0.16745019, 0.15146971]), 'test_pearson_r': array([0.99473604, 0.9823066 , 0.99700697, 0.99699979, 0.74627705,
       0.22818456, 0.99625848, 0.98392905, 0.9801858 , 0.96063639]), 'test_pearson_p': array([-2.90940854e-25, -5.67865216e-19, -3.36050821e-28, -3.45835121e-28,
       -1.20122659e-05, -2.62217452e-01, -4.87522596e-27, -1.80556536e-19,
       -2.18531234e-18, -2.74482160e-14]), 'test_spearman_r': array([0.97263109, 0.94475801, 0.97691137, 0.95264149, 0.93504274,
       0.66017094, 0.97587717, 0.9905936 , 0.87540992, 0.83916897]), 'test_spearman_p': array([-1.01404294e-16, -4.01439677e-13, -1.34674874e-17, -6.59085418e-14,
       -2.66641742e-12, -2.42687849e-04, -2.26642676e-17, -3.01975891e-22,
       -4.82051862e-09, -1.59174655e-07]), 'test_kendall_r': array([0.90881966, 0.82843994, 0.90263721, 0.85670364, 0.84615385,
       0.6       , 0.88856193, 0.95209679, 0.75321695, 0.80268007]), 'test_kendall_p': array([-8.81477994e-11, -3.39137502e-09, -1.18823272e-10, -8.84108293e-10,
       -3.70435003e-13, -5.05162783e-06, -2.40270672e-10, -1.09255387e-11,
       -9.85905727e-08, -2.04379965e-08]), 'test_rmse': array([  -8.18945994,  -29.45320563,  -33.91999698,  -14.04001638,
        -52.55484912, -155.27909352,  -10.52019561,  -14.80552225,
        -12.34836674,  -19.62684967]), 'test_mae': array([ -5.8762218 , -14.00594578, -16.11936777,  -7.56292039,
       -16.66064058, -40.78767918,  -6.98004119,  -9.08739887,
        -6.9791991 ,  -8.58363924]), 'test_r2': array([ 0.98740157,  0.96416063,  0.97767316,  0.99246716,  0.29435612,
       -6.24004993,  0.98712289,  0.963857  ,  0.95780889,  0.91209438]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([2.07916641, 2.14846706, 2.14548707, 2.09538841, 2.09632802,
       2.29840922, 2.08993244, 2.10300374, 2.23543692, 2.05602312]), 'score_time': array([0.15494061, 0.15404034, 0.15003276, 0.16055751, 0.1643033 ,
       0.16024399, 0.16255403, 0.16101813, 0.15650249, 0.15048027]), 'test_pearson_r': array([0.98985802, 0.98117066, 0.01189394, 0.99791613, 0.99492683,
       0.93145578, 0.95682409, 0.79784906, 0.9973709 , 0.99547745]), 'test_pearson_p': array([-7.42566033e-22, -1.19126110e-18, -9.54014215e-01, -4.38056724e-30,
       -1.86992093e-25, -4.98771207e-12, -2.22059613e-14, -1.05061011e-06,
       -7.10481401e-29, -5.07712118e-25]), 'test_spearman_r': array([0.91482813, 0.97862884, 0.75921491, 0.96786325, 0.95879639,
       0.94935026, 0.82079343, 0.86100189, 0.96700292, 0.97692308]), 'test_spearman_p': array([-6.19274385e-11, -5.37363792e-18, -6.89866900e-06, -6.79734917e-16,
       -1.28004411e-14, -1.45103513e-13, -2.80984907e-07, -1.65850591e-08,
       -9.29175450e-16, -6.39879345e-17]), 'test_kendall_r': array([0.85316949, 0.89368365, 0.70364161, 0.87076923, 0.8505403 ,
       0.88064662, 0.75      , 0.77658027, 0.86903031, 0.9       ]), 'test_kendall_p': array([-1.14403399e-09, -1.62021758e-10, -7.39804238e-07, -2.32824644e-14,
       -1.16530353e-09, -3.64694855e-10, -8.38243599e-08, -2.76310638e-08,
       -5.06015047e-10, -2.56889702e-15]), 'test_rmse': array([ -12.25600487,  -16.12426462, -218.01422963,  -20.66700785,
        -16.58283867,  -23.96567518,  -17.76322212,  -50.64257181,
        -12.62838637,  -18.18743717]), 'test_mae': array([ -6.28993585,  -8.14598628, -65.19047038,  -8.94412688,
       -10.03724111,  -8.44758405,  -8.9975385 , -17.90694264,
        -7.7192637 , -12.20323836]), 'test_r2': array([  0.96895643,   0.96244812, -26.16726527,   0.98622813,
         0.98927876,   0.85130082,   0.90390376,   0.42318736,
         0.99414089,   0.98855569]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.62651539, 2.72966194, 2.34319687, 2.44505882, 2.25732994,
       2.72540498, 2.65538335, 2.53914261, 2.60688806, 2.43904138]), 'score_time': array([0.17033148, 0.1625731 , 0.19373679, 0.16201043, 0.17925024,
       0.16981959, 0.17886329, 0.16947365, 0.15741777, 0.17322016]), 'test_pearson_r': array([0.99159589, 0.98672331, 0.99251788, 0.99603941, 0.44747875,
       0.57242492, 0.9955896 , 0.91306753, 0.98990723, 0.99479121]), 'test_pearson_p': array([-7.85253192e-23, -1.85094073e-20, -1.95632772e-23, -9.63936894e-27,
       -2.18950320e-02, -2.24412710e-03, -3.49681166e-26, -7.84298070e-11,
       -7.00640203e-22, -2.56883766e-24]), 'test_spearman_r': array([0.86775053, 0.88421414, 0.95143639, 0.98102241, 0.83589744,
       0.88793853, 0.98648893, 0.88698924, 0.98820313, 0.88209273]), 'test_spearman_p': array([-9.46545260e-09, -2.09716332e-09, -8.85490104e-14, -1.30781904e-18,
       -1.06115192e-07, -1.44503486e-09, -2.28071872e-20, -1.59088911e-09,
       -4.51645367e-21, -5.58598601e-09]), 'test_kendall_r': array([0.79568089, 0.80061919, 0.82407407, 0.91217366, 0.74769231,
       0.75851757, 0.927367  , 0.77041694, 0.93066366, 0.8313868 ]), 'test_kendall_p': array([-1.41874450e-08, -1.11055281e-08, -3.91013273e-09, -6.76014225e-11,
       -1.59717434e-09, -6.43400417e-08, -3.65845108e-11, -3.55330310e-08,
       -2.77265727e-11, -5.99225379e-09]), 'test_rmse': array([ -11.13055598,  -10.87825857,  -22.42107627,   -8.46714414,
       -156.74152549,  -51.96693048,  -22.07398409,  -27.51832607,
        -11.37961532,  -17.69316659]), 'test_mae': array([ -5.89760547,  -6.21252049, -12.74523501,  -4.66791667,
       -37.81385523, -16.97348893, -10.87004411, -11.95334292,
        -7.67197823,  -9.77632688]), 'test_r2': array([ 0.9763287 ,  0.97254779,  0.98193397,  0.98460478, -1.37171731,
       -1.54438584,  0.98983267,  0.8302147 ,  0.96957074,  0.98755281]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.7893424 , 0.89608836, 0.8615346 , 0.86619687, 0.86897302,
       0.79868555, 0.85235357, 1.00456905, 0.84386158, 0.94465446]), 'score_time': array([0.15233803, 0.15135789, 0.19692516, 0.15207958, 0.17520523,
       0.1520009 , 0.20554447, 0.16768837, 0.15051603, 0.15910792]), 'test_pearson_r': array([0.97252725, 0.95714662, 0.99035198, 0.9734013 , 0.94722858,
       0.9932245 , 0.97458023, 0.9986512 , 0.92797449, 0.78762877]), 'test_pearson_p': array([-1.06061851e-16, -2.03290619e-14, -4.08895994e-22, -7.22786202e-17,
       -2.34828833e-13, -5.97049344e-24, -4.22057971e-17, -2.37718721e-32,
       -8.87504691e-12, -2.96984327e-06]), 'test_spearman_r': array([0.88336712, 0.96476246, 0.99401211, 0.92573629, 0.8774397 ,
       0.91401299, 0.95278845, 0.99230388, 0.86222862, 0.7574129 ]), 'test_spearman_p': array([-2.27851455e-09, -2.02043616e-15, -1.36063118e-24, -1.26636445e-11,
       -4.00145084e-09, -6.91284592e-11, -6.35440521e-14, -2.74118887e-23,
       -1.50104846e-08, -1.16660160e-05]), 'test_kendall_r': array([0.80322306, 0.88856193, 0.96285291, 0.81242751, 0.74652335,
       0.77885021, 0.86554253, 0.95209679, 0.71119384, 0.66220826]), 'test_kendall_p': array([-1.28722055e-08, -2.41876932e-10, -6.75753611e-12, -7.34446820e-09,
       -1.15912015e-07, -3.30063562e-08, -6.52737816e-10, -1.09255387e-11,
       -4.28837014e-07, -4.06451574e-06]), 'test_rmse': array([ -14.74883   ,  -24.16477975,  -12.27486504,  -12.38758886,
        -58.23963624,   -9.19689396,  -13.16647133,   -9.23408048,
        -28.10893481, -151.78578138]), 'test_mae': array([-10.07448422, -12.11052183,  -6.69499138,  -6.41545678,
       -23.72950141,  -6.68875936,  -7.61442594,  -6.55675212,
       -17.58415916, -49.60205976]), 'test_r2': array([0.93964458, 0.91173287, 0.97343673, 0.90876957, 0.89056569,
       0.98049872, 0.94299351, 0.99664082, 0.85210589, 0.53752475]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([12.60601401, 13.43113565, 12.1781292 , 13.08818769, 11.61990786,
       13.14317513, 12.61425519, 13.24352407, 12.58428431, 13.1352098 ]), 'score_time': array([0.16272688, 0.16005921, 0.15861988, 0.16019392, 0.16091442,
       0.21269011, 0.16335773, 0.18039298, 0.16845751, 0.16569138]), 'test_pearson_r': array([0.99389904, 0.99299303, 0.88268646, 0.3100484 , 0.82950978,
       0.97138385, 0.9911073 , 0.99379343, 0.97411248, 0.99790871]), 'test_pearson_p': array([-1.70209547e-24, -8.92400535e-24, -2.43442875e-09, -1.23204693e-01,
       -1.62035677e-07, -1.71995252e-16, -1.54323007e-22, -2.09020541e-24,
       -5.24028360e-17, -7.22064865e-29]), 'test_spearman_r': array([0.80116553, 0.81231852, 0.89623419, 0.78146375, 0.93075741,
       0.88440498, 0.99109734, 0.98682671, 0.96973843, 0.97538462]), 'test_spearman_p': array([-8.77472482e-07, -4.66882493e-07, -6.00120349e-10, -2.44288355e-06,
       -5.61234097e-12, -2.05815685e-09, -1.56401155e-22, -1.68606620e-20,
       -3.33583306e-16, -1.33403656e-16]), 'test_kendall_r': array([0.75274438, 0.74614433, 0.76090259, 0.79320988, 0.8505403 ,
       0.78086792, 0.94724608, 0.93190641, 0.87519364, 0.9       ]), 'test_kendall_p': array([-8.96213821e-08, -1.04887725e-07, -6.24694124e-08, -1.44956613e-08,
       -1.16530353e-09, -2.41594578e-08, -1.61833930e-11, -3.09369950e-11,
       -3.81728436e-10, -2.56889702e-15]), 'test_rmse': array([ -17.65029358,  -26.5261387 ,  -26.10740312, -156.44919859,
        -47.70241725,  -17.87405624,  -11.41048918,  -12.63342863,
        -19.21037045,  -21.10632224]), 'test_mae': array([ -8.61756955, -12.12112648, -10.54781854, -35.19197047,
       -15.37991148, -10.27417526,  -7.25030397,  -6.90126573,
       -11.40332916,  -8.748238  ]), 'test_r2': array([ 0.98573069,  0.98493543,  0.72577836, -4.44311374,  0.61443265,
        0.94129518,  0.98035221,  0.97868953,  0.94313102,  0.98595147]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'overall data shape': {'targets_shape': (259, 1), 'training_features_shape': (259, 532)}}
Trimer_scaler
Filename: (Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM4 Mordred_Polysize cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM4 Mordred_Polysize cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_predictions.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/KM4 Mordred_Polysize cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_ClusterTruth.json
Done Saving scores!
------------------------------ 
Plotted Comparitive Cluster Scores!
______________________________ 
Plotted Parity Plots!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c207n02>
Subject: Job 294641: <XGBR_Rg1 (nm)_Mordred_Trimer_KM4 Mordred_Polysize cluster_20250311> in cluster <Hazel> Done

Job <XGBR_Rg1 (nm)_Mordred_Trimer_KM4 Mordred_Polysize cluster_20250311> was submitted from host <c040n04> by user <sdehgha2> in cluster <Hazel> at Tue Mar 11 18:17:46 2025
Job was executed on host(s) <6*c207n02>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Wed Mar 12 05:18:13 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Wed Mar 12 05:18:13 2025
Terminated at Thu Mar 13 07:34:51 2025
Results reported at Thu Mar 13 07:34:51 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input



#BSUB -n 6
#BSUB -W 72:05
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "XGBR_Rg1 (nm)_Mordred_Trimer_KM4 Mordred_Polysize cluster_20250311"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_Mordred_Trimer_KM4 Mordred_Polysize cluster_20250311.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_Mordred_Trimer_KM4 Mordred_Polysize cluster_20250311.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../make_ood_prediction.py --target_features "Rg1 (nm)"                                       --representation "Mordred"                                       --regressor_type "XGBR"                                       --oligomer_representation "Trimer"                                       --numerical_feats 'Mw (g/mol)' 'PDI' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" 'solvent dP' 'solvent dD' 'solvent dH'                                       --clustering_method "KM4 Mordred_Polysize cluster" 



------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   385683.25 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.97 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   94605 sec.
    Turnaround time :                            134225 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_Mordred_Trimer_KM4 Mordred_Polysize cluster_20250311.err> for stderr output of this job.

