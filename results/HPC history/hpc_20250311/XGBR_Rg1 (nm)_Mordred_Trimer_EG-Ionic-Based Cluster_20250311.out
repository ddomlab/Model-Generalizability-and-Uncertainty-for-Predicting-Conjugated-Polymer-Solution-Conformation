


-------------------------------------------------- 
OOD TEST ON ionic-EG



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008542083883534746), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 495), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06598378487873381), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 449), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 135), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030734046211965175), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1355), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02715640809187273), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 359), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003871103157766316), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1358), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07919162760385312), ('regressor__regressor__max_depth', 218), ('regressor__regressor__n_estimators', 329), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004064014664851312), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1294), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023054898057299753), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 689), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07039413230297692), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020101543626092084), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03379893728954596), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 173), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02785028102370364), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06391539542494189), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002491579109513428), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 572), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005118554249040685), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1721), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08555344228065241), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09701396082625709), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 789), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012984663347173738), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 455), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006644425076218177), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 776), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09851085998763467), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 921), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.048221135325462766), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 288), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003399530898726845), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1248), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.040060155392438686), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 812), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08091208420449222), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006739919750144023), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05998294210452379), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.030169378179991217), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 148), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06718253954065002), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 90), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 169), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0059190960847435165), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 145), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])


{'CO_ionic-EG': {'cluster size (%)': 6, 6: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.26233224868773, 'test_rmse': 180.59749188401673, 'test_r2': -0.8809467686116861, 'test_pearson_r': array([-0.84858129]), 'test_pearson_p_value': array([3.24727225e-05]), 'test_spearman_r': -0.6744613040487055, 'test_spearman_p_value': 0.004160546791390076, 'test_kendall_r': -0.46742635244280273, 'test_kendall_p_value': 0.015679264187725396, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02715640809187273, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 359, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 145.3665531158447, 'test_rmse': 181.22076952841317, 'test_r2': -0.893952210362801, 'test_pearson_r': array([-0.84840443]), 'test_pearson_p_value': array([3.2722978e-05]), 'test_spearman_r': -0.6714368138960207, 'test_spearman_p_value': 0.004398517053045006, 'test_kendall_r': -0.44944841581038725, 'test_kendall_p_value': 0.020159684267826914, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07919162760385312, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 218, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 329, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.5075707912445, 'test_rmse': 180.48494220952333, 'test_r2': -0.8786030596502461, 'test_pearson_r': array([-0.84598261]), 'test_pearson_p_value': array([3.63157752e-05]), 'test_spearman_r': -0.6826335665319366, 'test_spearman_p_value': 0.0035688445829489476, 'test_kendall_r': -0.4834390212789159, 'test_kendall_p_value': 0.013417011168453882, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 145.27242069244383, 'test_rmse': 180.9800779244376, 'test_r2': -0.8889245783942015, 'test_pearson_r': array([-0.84666364]), 'test_pearson_p_value': array([3.52736346e-05]), 'test_spearman_r': -0.6744613040487055, 'test_spearman_p_value': 0.004160546791390076, 'test_kendall_r': -0.46742635244280273, 'test_kendall_p_value': 0.015679264187725396, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.005118554249040685, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1721, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 145.1623514175415, 'test_rmse': 180.8136114941948, 'test_r2': -0.8854512909228045, 'test_pearson_r': array([-0.84705364]), 'test_pearson_p_value': array([3.46881846e-05]), 'test_spearman_r': -0.679677541504564, 'test_spearman_p_value': 0.0037744862509452273, 'test_kendall_r': -0.48829782699345753, 'test_kendall_p_value': 0.013150586201222912, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.006644425076218177, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 776, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.78427748680113, 'test_rmse': 180.137446140865, 'test_r2': -0.8713760995529001, 'test_pearson_r': array([-0.84491973]), 'test_pearson_p_value': array([3.79936786e-05]), 'test_spearman_r': -0.6856674934943008, 'test_spearman_p_value': 0.003367260538476543, 'test_kendall_r': -0.5016820032139693, 'test_kendall_p_value': 0.010293628851541642, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08091208420449222, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 145.10368757247923, 'test_rmse': 180.71955026601933, 'test_r2': -0.8834901361903713, 'test_pearson_r': array([-0.84778875]), 'test_pearson_p_value': array([3.36068075e-05]), 'test_spearman_r': -0.6856674934943008, 'test_spearman_p_value': 0.003367260538476543, 'test_kendall_r': -0.5016820032139693, 'test_kendall_p_value': 0.010293628851541642, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06718253954065002, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 90, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_ionic-EG': {'cluster size (%)': 6, 6: {'fit_time': array([26.03040504, 27.2525723 , 30.48568869, 25.32475042, 23.317976  ,
       25.33196497, 29.06166172, 28.28489494, 26.72515345, 27.07988548,
       24.63820648, 25.88919258, 24.50114918, 29.75693822, 25.37902665,
       24.85595942]), 'score_time': array([0.16083813, 0.16776943, 0.14973211, 0.16652298, 0.36144614,
       0.1534338 , 0.15498471, 0.15152884, 0.16411948, 0.16197824,
       0.18230081, 0.16002536, 0.15506887, 0.15242362, 0.17203784,
       0.17301917]), 'test_pearson_r': array([0.95978752, 0.99748343, 0.99452061, 0.74823348, 0.9967084 ,
       0.16810122, 0.97437537, 0.99409289, 0.99635552, 0.98606698,
       0.99589218, 0.99760064, 0.99440701, 0.85602802, 0.99720138,
       0.90301592]), 'test_pearson_p': array([-1.11326419e-09, -1.16765700e-18, -3.96322054e-16, -8.56758351e-04,
       -1.11284453e-16, -5.33734867e-01, -1.81792403e-10, -6.62552190e-15,
       -2.26794088e-16, -2.63466012e-12, -5.23512164e-16, -1.21974130e-17,
       -4.52337832e-15, -2.32932039e-05, -3.57893553e-17, -1.66904169e-06]), 'test_spearman_r': array([0.65686275, 0.96382605, 0.99141179, 0.87941176, 0.89117647,
       0.69705882, 0.98529412, 0.81176471, 0.94334095, 0.84915402,
       0.9757177 , 0.97277436, 0.9757177 , 0.86892583, 0.97201873,
       0.95364264]), 'test_spearman_p': array([-4.17478639e-03, -5.09295480e-10, -1.14272617e-14, -7.18727304e-06,
       -3.61864891e-06, -2.69058940e-03, -3.83671954e-12, -1.34322375e-04,
       -4.32397330e-08, -3.16732673e-05, -1.25183504e-10, -2.76678019e-10,
       -1.25183504e-10, -1.25158918e-05, -3.34448567e-10, -1.09099012e-08]), 'test_kendall_r': array([0.57352941, 0.89299501, 0.96298938, 0.75      , 0.76666667,
       0.66666667, 0.95      , 0.73333333, 0.86193223, 0.6778302 ,
       0.91214188, 0.89540533, 0.91214188, 0.73952191, 0.90759507,
       0.82845913]), 'test_kendall_p': array([-9.01334702e-04, -6.08366508e-07, -8.13306630e-08, -8.91848950e-06,
       -4.72451181e-06, -1.34937165e-04, -7.63760478e-11, -1.62687222e-05,
       -3.45008795e-06, -2.61704221e-04, -8.99518934e-07, -1.41912826e-06,
       -8.99518934e-07, -7.18614621e-05, -1.10296350e-06, -8.12917002e-06]), 'test_rmse': array([ -21.87888316,   -7.08873923,  -31.56731427,  -64.65428586,
        -18.6729078 , -195.41788006,  -12.01878845,   -9.66158572,
         -7.45155955,  -33.41304207,   -5.85625655,   -6.32231646,
        -15.74180142,  -23.43113098,   -6.30573113,  -26.55572623]), 'test_mae': array([-11.89328229,  -4.94729153, -12.63793923, -22.38421412,
       -13.14618114, -59.88832651,  -8.30748958,  -6.49718847,
        -5.19759356, -16.7737103 ,  -3.79956243,  -4.27247294,
       -10.60693785, -12.33495256,  -4.49411791, -13.50094265]), 'test_r2': array([ 0.89860111,  0.98796038,  0.9853385 ,  0.32706717,  0.99109581,
       -4.93635597,  0.9487489 ,  0.97934676,  0.99102958,  0.96945442,
        0.99052372,  0.9950124 ,  0.97744144,  0.44192123,  0.99246579,
        0.7982232 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([19.00384212, 20.60577679, 19.05246329, 19.99566913, 19.2539227 ,
       18.42885256, 16.25921655, 16.51366377, 16.76603794, 18.37449408,
       18.97083664, 18.92224503, 18.33182406, 21.23210645, 18.82113361,
       20.20695853]), 'score_time': array([0.1581738 , 0.15235114, 0.15666103, 0.15741372, 0.15524936,
       0.15711904, 0.22894692, 0.15253735, 0.33447266, 0.17726564,
       0.1508882 , 0.15917587, 0.18689513, 0.14822316, 0.154814  ,
       0.16039538]), 'test_pearson_r': array([0.98798248, 0.9852372 , 0.65035227, 0.99954185, 0.24746581,
       0.98501365, 0.98877809, 0.98715094, 0.83548649, 0.95914069,
       0.88335008, 0.99493691, 0.99595986, 0.96126914, 0.97652182,
       0.98161007]), 'test_pearson_p': array([-1.40602545e-13, -6.52696431e-13, -4.70383661e-03, -1.13458614e-22,
       -3.55457617e-01, -4.37594945e-12, -5.83422004e-13, -1.49882613e-12,
       -5.59422770e-05, -4.57517099e-09, -5.75882645e-06, -2.25667601e-15,
       -4.66126524e-16, -3.16399655e-09, -9.91048734e-11, -1.81700052e-11]), 'test_spearman_r': array([0.83507067, 0.77225306, 0.8887565 , 0.85935199, 0.66666685,
       0.91979422, 0.90294118, 0.98749107, 0.87858743, 0.98527353,
       0.90721748, 0.98823529, 1.        , 0.93529412, 0.87776237,
       0.89705882]), 'test_spearman_p': array([-3.03071218e-05, -2.80387118e-04, -1.86072399e-06, -1.99634802e-05,
       -4.79590355e-03, -4.62206235e-07, -1.67772437e-06, -1.24331763e-12,
       -7.52120583e-06, -3.87426958e-12, -1.23824457e-06, -8.10888105e-13,
       -0.00000000e+00, -1.07201672e-07, -7.86842475e-06, -2.49237597e-06]), 'test_kendall_r': array([0.70111178, 0.60223464, 0.80605994, 0.77310924, 0.6778302 ,
       0.84519568, 0.75      , 0.94561497, 0.74477639, 0.9412097 ,
       0.73952191, 0.95      , 1.        , 0.81666667, 0.78994386,
       0.75      ]), 'test_kendall_p': array([-8.97976474e-05, -8.22570773e-04, -7.95010666e-06, -3.31810562e-05,
       -2.61704221e-04, -5.31661458e-06, -8.91848950e-06, -3.52984089e-07,
       -6.04438410e-05, -4.35438108e-07, -7.18614621e-05, -7.63760478e-11,
       -9.55895466e-14, -5.50848432e-07, -2.22802570e-05, -8.91848950e-06]), 'test_rmse': array([  -6.42474983,  -20.02746241,  -59.82837866,  -24.44828672,
       -189.79930115,  -33.89379257,  -12.69718459,  -34.6418153 ,
        -18.56056012,  -15.55447029,  -25.81383942,  -40.61526479,
        -10.10463454,  -23.74603406,  -19.18786792,  -14.38876277]), 'test_mae': array([ -5.26493911, -13.80967896, -19.06627977,  -9.63338966,
       -55.10362877, -17.63261189,  -9.42242404, -18.11560246,
        -9.42341435, -10.13119699, -14.14918766, -18.85018382,
        -5.45442699, -15.43705489, -12.2881059 , -10.82102555]), 'test_r2': array([ 0.97113363,  0.9412877 , -0.02456964,  0.98645321, -3.15225779,
        0.96911126,  0.97358033,  0.96731063,  0.47437392,  0.87606971,
        0.6774328 ,  0.96336666,  0.97641881,  0.92123016,  0.93587213,
        0.96161118]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([4.21714044, 3.23778081, 3.16159821, 3.40748167, 3.54304338,
       4.33989429, 4.55011749, 3.71285868, 3.5363481 , 3.97900796,
       3.84155488, 3.90549541, 4.37954545, 3.83642626, 4.13724971,
       3.71037531]), 'score_time': array([0.15994167, 0.17662883, 0.19352889, 0.29572487, 0.26997662,
       0.14931059, 0.14882374, 0.19990134, 0.15893078, 0.15279603,
       0.15752149, 0.16278648, 0.15350342, 0.15541005, 0.15398002,
       0.14904666]), 'test_pearson_r': array([0.99460445, 0.996091  , 0.88706446, 0.99758168, 0.99785005,
       0.99696131, 0.75543465, 0.98313914, 0.06631439, 0.98340149,
       0.99558728, 0.97750223, 0.9782542 , 0.99163342, 0.9656584 ,
       0.99359012]), 'test_pearson_p': array([-3.53122995e-16, -3.16230193e-17, -2.07321560e-06, -1.28877432e-17,
       -5.66085997e-18, -6.36320067e-17, -7.14072729e-04, -9.93591972e-12,
       -8.07224476e-01, -8.90913773e-12, -8.63465543e-16, -7.37138830e-11,
       -5.82190073e-11, -7.52692911e-14, -1.37929828e-09, -1.17211970e-14]), 'test_spearman_r': array([0.99202962, 0.98712465, 0.93807498, 0.97058824, 0.94411765,
       0.95588235, 0.89705882, 0.98380077, 0.63823529, 0.78440051,
       0.96983102, 0.97058824, 0.95217097, 0.90037513, 0.80294118,
       0.97938251]), 'test_spearman_p': array([-6.53940522e-15, -2.35235248e-13, -2.66240836e-08, -4.72340113e-10,
       -3.93392920e-08, -7.76027446e-09, -2.49237597e-06, -7.52089449e-12,
       -7.80113863e-03, -3.21258144e-04, -5.63193822e-10, -4.72340113e-10,
       -1.35244908e-08, -1.99988222e-06, -1.80516795e-04, -4.02148125e-11]), 'test_kendall_r': array([0.96679625, 0.93727575, 0.81919377, 0.9       , 0.81666667,
       0.85      , 0.8       , 0.92440239, 0.6       , 0.72803985,
       0.89540533, 0.9       , 0.89540533, 0.77977303, 0.8       ,
       0.90759507]), 'test_kendall_p': array([-6.63375843e-08, -1.64175866e-07, -4.73348832e-06, -4.72556483e-09,
       -5.50848432e-07, -1.02027025e-07, -1.17934846e-06, -6.95749778e-07,
       -7.73831095e-04, -8.82060896e-05, -1.41912826e-06, -4.72556483e-09,
       -1.41912826e-06, -3.15745343e-05, -1.17934846e-06, -1.10296350e-06]), 'test_rmse': array([  -8.66374732,  -16.76931286,  -31.71456355,  -30.24873798,
        -13.75092752,  -16.91019221,  -63.92484807,  -13.5151016 ,
       -197.2091149 ,  -17.87303012,  -10.41507348,  -10.05235141,
        -19.3741889 ,   -9.520811  ,  -12.7993128 ,   -9.29300154]), 'test_mae': array([ -6.37381642,  -8.54547485, -13.89754877, -15.27383531,
        -8.19335047,  -9.96666053, -22.66612757,  -5.65186671,
       -57.05668159, -10.59011043,  -6.79735579,  -5.68962444,
       -11.88228894,  -5.67342202,  -6.71959916,  -5.623405  ]), 'test_r2': array([  0.98524661,   0.9914771 ,   0.78456301,   0.97988078,
         0.99547661,   0.99208119,   0.43236961,   0.95802285,
       -18.11535514,   0.95916447,   0.98794674,   0.94654317,
         0.95057093,   0.97726136,   0.92834227,   0.98533354]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([2.52004457, 2.54491329, 3.60727525, 2.79934096, 2.56231213,
       3.27207685, 2.53806281, 3.25849295, 2.95743227, 3.57102013,
       2.46859694, 2.60519481, 3.41047764, 3.66700506, 2.99137092,
       2.76245928]), 'score_time': array([0.15793967, 0.27045655, 0.14827204, 0.15331149, 0.17169499,
       0.15130782, 0.25105047, 0.15005946, 0.14840865, 0.15324068,
       0.23772359, 0.15899754, 0.15327334, 0.15388131, 0.15369749,
       0.15286088]), 'test_pearson_r': array([ 0.98700307,  0.99578908,  0.98015908,  0.99823286, -0.08340779,
        0.99410824,  0.99573286,  0.98793372,  0.99548652,  0.76375035,
        0.99589694,  0.99592971,  0.6853534 ,  0.9980428 ,  0.98559494,
        0.99755923]), 'test_pearson_p': array([-2.52326751e-13, -5.52030643e-17, -5.90596173e-12, -1.43618975e-18,
       -7.58764932e-01, -6.50622615e-15, -6.83014150e-16, -9.67303725e-13,
       -1.01104344e-15, -5.74190267e-04, -5.19287519e-16, -4.90985666e-16,
       -3.38769406e-03, -2.93460518e-18, -3.32256219e-12, -1.37482022e-17]), 'test_spearman_r': array([0.83128834, 0.9877451 , 0.96995726, 0.98669374, 0.57731959,
       0.97941176, 0.98235294, 0.98230516, 0.97126251, 0.74025038,
       0.98749107, 0.97058824, 0.69117647, 0.97352941, 0.92058824,
       0.97647059]), 'test_spearman_p': array([-3.55098199e-05, -1.62708343e-13, -1.28761744e-10, -1.91214071e-12,
       -1.91955219e-02, -3.98200979e-11, -1.36412383e-11, -1.39001436e-11,
       -4.02278911e-10, -1.04142867e-03, -1.24331763e-12, -4.72340113e-10,
       -3.02471880e-03, -2.27689766e-10, -4.32041043e-07, -1.00615044e-10]), 'test_kendall_r': array([0.8       , 0.94117647, 0.87823476, 0.94048016, 0.50420168,
       0.91666667, 0.93333333, 0.91990493, 0.90302594, 0.72803985,
       0.94561497, 0.9       , 0.6       , 0.9       , 0.8       ,
       0.91666667]), 'test_kendall_p': array([-8.33692000e-06, -2.62815024e-11, -9.29113866e-07, -5.83620144e-07,
       -6.79309811e-03, -1.38948965e-09, -3.55879882e-10, -8.40185652e-07,
       -1.35084085e-06, -8.82060896e-05, -3.52984089e-07, -4.72556483e-09,
       -7.73831095e-04, -4.72556483e-09, -1.17934846e-06, -1.38948965e-09]), 'test_rmse': array([ -12.4835401 ,   -6.10965418,  -18.6330302 ,   -3.7699694 ,
       -277.86776386,   -8.5710209 ,  -28.67769372,  -14.27182866,
         -6.61654882,  -36.00369743,   -8.51322679,   -7.05335428,
        -64.93652422,  -13.39902282,  -17.2515188 ,  -17.15175534]), 'test_mae': array([  -6.3096136 ,   -4.53878374,  -10.53954675,   -2.24203356,
       -106.24933785,   -4.52883817,  -16.06003612,   -6.99722141,
         -4.5690198 ,  -16.88427593,   -6.58998024,   -4.53586511,
        -27.06002179,   -7.29668626,  -12.32197868,  -11.00736654]), 'test_r2': array([ 9.67721514e-01,  9.89239067e-01,  9.60465891e-01,  9.91830373e-01,
       -5.86445724e+01,  9.88146142e-01,  9.88422523e-01,  9.69907814e-01,
        9.90879726e-01,  1.36991195e-02,  9.82139131e-01,  9.91497056e-01,
        1.02292391e-02,  9.95311668e-01,  9.54653438e-01,  9.93056819e-01]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([4.4130671 , 2.61938906, 4.28812551, 4.16378212, 3.91964817,
       4.31292963, 3.60471106, 4.38765788, 4.11866355, 4.34066319,
       2.99252796, 4.28519416, 3.74887085, 4.47732067, 4.48241568,
       4.50895429]), 'score_time': array([0.15728807, 0.35616565, 0.23458147, 0.15906978, 0.16691804,
       0.21535301, 0.166888  , 0.20093369, 0.163342  , 0.15817118,
       0.24309969, 0.22127485, 0.39684415, 0.1615057 , 0.16634536,
       0.16440964]), 'test_pearson_r': array([0.99796798, 0.97442679, 0.98797641, 0.99596081, 0.98825719,
       0.99052412, 0.9921006 , 0.26047619, 0.49405398, 0.99631606,
       0.98850433, 0.99105249, 0.89430404, 0.98680923, 0.93907036,
       0.99469594]), 'test_pearson_p': array([-2.35131127e-19, -3.89726668e-11, -1.41134187e-13, -4.65356058e-16,
       -8.00429204e-13, -1.79411131e-13, -5.04054915e-14, -3.29883985e-01,
       -5.17582661e-02, -2.44523969e-16, -6.90147444e-13, -1.20236201e-13,
       -2.97591728e-06, -1.79949514e-12, -7.10905658e-08, -3.12277258e-15]), 'test_spearman_r': array([0.97058824, 0.83602082, 0.81840491, 0.95805765, 0.98160439,
       0.98235294, 0.97941176, 0.75882353, 0.84705882, 0.94767896,
       0.95217097, 0.98235294, 0.84071162, 0.96983102, 0.75588235,
       0.96470588]), 'test_spearman_p': array([-1.10013067e-10, -2.91067062e-05, -5.92622110e-05, -5.47877174e-09,
       -1.82090718e-11, -1.36412383e-11, -3.98200979e-11, -6.54030236e-04,
       -3.46804648e-05, -2.50488881e-08, -1.35244908e-08, -1.36412383e-11,
       -4.52882807e-05, -5.63193822e-10, -7.05890587e-04, -1.66620775e-09]), 'test_kendall_r': array([0.91176471, 0.73702963, 0.76296296, 0.84519568, 0.92887842,
       0.93333333, 0.9       , 0.75      , 0.73333333, 0.86920605,
       0.86193223, 0.91666667, 0.75111503, 0.87866878, 0.73333333,
       0.91666667]), 'test_kendall_p': array([-3.85990589e-10, -4.76443323e-05, -2.13740150e-05, -5.31661458e-06,
       -5.65704076e-07, -3.55879882e-10, -4.72556483e-09, -8.91848950e-06,
       -1.62687222e-05, -3.29681493e-06, -3.45008795e-06, -1.38948965e-09,
       -5.77113463e-05, -2.22140114e-06, -1.62687222e-05, -1.38948965e-09]), 'test_rmse': array([  -5.79428449,  -14.06223858,  -11.97995729,  -21.77513697,
        -16.82582387,   -6.4377872 ,  -12.95431273, -199.34584627,
        -63.67424945,  -26.00186521,  -12.10140676,  -15.27624996,
        -31.48799363,  -14.36763346,  -13.66916716,  -21.13660692]), 'test_mae': array([ -3.71922091,  -7.82687133,  -6.28607414, -12.46624326,
       -10.61989394,  -4.42345821,  -7.36626819, -54.8455048 ,
       -24.45608982, -12.34728504,  -6.84375698,  -7.14293989,
       -14.24419988,  -9.3820587 ,  -6.13410078, -12.12622316]), 'test_r2': array([ 0.9939296 ,  0.94188094,  0.9739682 ,  0.98828182,  0.96921699,
        0.98032715,  0.98352765, -4.10981297, -2.04097007,  0.99064016,
        0.97552569,  0.97180996,  0.71733409,  0.9540586 ,  0.87586047,
        0.98757458]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([1.38562393, 1.31290865, 1.31476235, 0.8577714 , 0.87534928,
       0.87909579, 0.92777491, 0.87719917, 1.16077399, 0.86844444,
       1.43299031, 1.44436979, 1.3862803 , 1.39069295, 1.34948373,
       1.19005203]), 'score_time': array([0.16127372, 0.15616035, 0.15438509, 0.1542151 , 0.15254521,
       0.15524316, 0.16233277, 0.14900637, 0.16458654, 0.2281158 ,
       0.14800119, 0.1474719 , 0.16527128, 0.15244126, 0.1523149 ,
       0.15958071]), 'test_pearson_r': array([0.97507949, 0.9229966 , 0.99472907, 0.98844174, 0.99683489,
       0.97205398, 0.99664206, 0.69336852, 0.99601054, 0.99560768,
       0.97311846, 0.99957706, 0.99536769, 0.87453677, 0.982259  ,
       0.76968681]), 'test_pearson_p': array([-3.21639650e-11, -1.30550758e-07, -2.96463099e-16, -7.16764488e-13,
       -8.46143138e-17, -3.31541493e-10, -1.27944042e-16, -2.89650275e-03,
       -4.26763325e-16, -8.35950264e-16, -2.53340199e-10, -6.48305200e-23,
       -1.21237549e-15, -9.35835850e-06, -1.41542456e-11, -4.88818484e-04]), 'test_spearman_r': array([0.83232161, 0.96078431, 0.96196391, 0.99043441, 0.91605302,
       0.89411765, 0.97201767, 0.8550407 , 0.87352941, 0.93519882,
       0.94117647, 0.99410462, 0.98600094, 0.79911721, 0.83100197,
       0.67844021]), 'test_spearman_p': array([-3.40187898e-05, -9.24915993e-10, -7.38099260e-10, -1.91599035e-13,
       -6.29537130e-07, -3.01130993e-06, -3.34535840e-10, -2.43675207e-05,
       -9.86965167e-06, -1.08283925e-07, -5.58893763e-08, -6.53417850e-15,
       -2.72286416e-12, -2.04273128e-04, -6.66843678e-05, -3.86334348e-03]), 'test_kendall_r': array([0.75207105, 0.86764706, 0.88891328, 0.96235152, 0.82352941,
       0.81666667, 0.90756303, 0.72803985, 0.75      , 0.88235294,
       0.83333333, 0.97054189, 0.93678391, 0.62762056, 0.71196668,
       0.62762056]), 'test_kendall_p': array([-3.32635548e-05, -9.57597523e-09, -7.36343941e-07, -2.18526649e-07,
       -9.81814824e-06, -5.50848432e-07, -1.10319426e-06, -8.82060896e-05,
       -8.91848950e-06, -2.16973828e-06, -2.44193725e-07, -2.02597451e-07,
       -5.36536512e-07, -7.24551643e-04, -1.44750601e-04, -7.24551643e-04]), 'test_rmse': array([ -16.36835262,  -26.55348389,  -12.81392845,  -14.27398583,
         -6.61066688,  -15.18132744,  -39.31964296,  -63.37900799,
         -8.50758633,  -10.47648106,  -15.30414535,   -5.8207185 ,
        -11.01511565,  -31.63853743,  -18.74592578, -189.56085963]), 'test_mae': array([ -9.82910095, -14.76638988,  -8.93058472,  -6.76154066,
        -5.16640493,  -7.40174595, -19.32655571, -20.40248213,
        -6.08497165,  -8.30627447,  -8.84295056,  -4.28203794,
        -8.30928448, -21.34682942, -10.15430512, -72.55296683]), 'test_r2': array([0.94626035, 0.78603257, 0.97785912, 0.95996209, 0.99129351,
       0.9052461 , 0.96598953, 0.00263671, 0.98518132, 0.95199648,
       0.94079557, 0.99900594, 0.98670341, 0.7439972 , 0.93774724,
       0.49979563]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([18.22060919, 16.70420241, 16.2762773 , 16.68562722, 16.7228086 ,
       19.62451506, 17.31629515, 17.18856049, 17.57803202, 15.77978468,
       15.42790627, 17.14253855, 20.07615376, 15.96032596, 15.80200911,
       16.28956795]), 'score_time': array([0.15283561, 0.15771031, 0.15096641, 0.15140772, 0.15511179,
       0.15297937, 0.15314126, 0.15347648, 0.15269613, 0.19616437,
       0.17792654, 0.1469357 , 0.16347766, 0.15788245, 0.15462875,
       0.15603161]), 'test_pearson_r': array([0.99582668, 0.99702758, 0.99929836, 0.98474089, 0.81740443,
       0.24069142, 0.99356997, 0.60899174, 0.96442292, 0.98396481,
       0.99421505, 0.9901049 , 0.98817376, 0.99749481, 0.94321092,
       0.9991742 ]), 'test_pearson_p': array([-5.16177115e-17, -4.06455030e-18, -8.11679865e-23, -4.96125672e-12,
       -1.10309954e-04, -3.69200203e-01, -1.19808426e-14, -1.22845863e-02,
       -1.76066821e-09, -7.00674467e-12, -5.72572987e-15, -2.42647580e-13,
       -8.40908936e-13, -1.64953191e-17, -4.39237866e-08, -7.00680096e-21]), 'test_spearman_r': array([0.69037413, 0.85258243, 0.97914184, 0.94334095, 0.91096419,
       0.64312012, 0.99117647, 0.89117647, 0.80559734, 0.97352941,
       0.99705449, 0.98598457, 0.97941176, 0.98160439, 0.94411765,
       0.98235294]), 'test_spearman_p': array([-2.15713172e-03, -1.37786098e-05, -8.56778542e-12, -4.32397330e-08,
       -9.37408818e-07, -7.19968646e-03, -1.09082915e-13, -3.61864891e-06,
       -1.65403905e-04, -2.27689766e-10, -5.11806168e-17, -2.74510261e-12,
       -3.98200979e-11, -1.82090718e-11, -3.93392920e-08, -1.36412383e-11]), 'test_kendall_r': array([0.67159129, 0.79558851, 0.91854372, 0.84519568, 0.84519568,
       0.72803985, 0.95      , 0.78333333, 0.72271459, 0.88333333,
       0.98742088, 0.94928891, 0.9       , 0.91214188, 0.86666667,
       0.95      ]), 'test_kendall_p': array([-1.75630107e-04, -9.80693735e-06, -3.11133291e-07, -5.31661458e-06,
       -5.31661458e-06, -8.82060896e-05, -7.63760478e-11, -2.41022656e-06,
       -1.04538557e-04, -1.43717927e-08, -1.24121435e-07, -4.05106961e-07,
       -4.72556483e-09, -8.99518934e-07, -3.98309214e-08, -7.63760478e-11]), 'test_rmse': array([ -17.54877783,  -19.34455119,   -9.75868644,  -10.47286082,
        -29.85155747, -199.41890032,  -10.10576415,  -60.31961103,
        -16.52348827,  -15.48637481,  -10.29914272,  -14.72887026,
        -13.49713658,   -6.49487762,  -25.7989649 ,  -26.27141313]), 'test_mae': array([ -9.25096286, -10.87043994,  -5.98158219,  -6.24105596,
        -9.85084709, -54.21158535,  -6.22383325, -20.03148352,
        -9.63299349,  -9.12925782,  -6.01778857,  -9.41905774,
        -7.25762321,  -4.63591086, -15.81254967, -11.99422077]), 'test_r2': array([ 0.99050352,  0.99054593,  0.99720604,  0.96706002,  0.53408296,
       -5.76065013,  0.98659486, -0.39625149,  0.9255284 ,  0.96711091,
        0.98318492,  0.97658439,  0.96469221,  0.99471651,  0.80556277,
        0.98524484]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'overall data shape': {'targets_shape': (259, 1), 'training_features_shape': (259, 532)}}
Trimer_scaler
Filename: (Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/EG-Ionic-Based Cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/EG-Ionic-Based Cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_predictions.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/EG-Ionic-Based Cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_ClusterTruth.json
Done Saving scores!
------------------------------ 
Plotted Comparitive Cluster Scores!
______________________________ 
Plotted Parity Plots!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c207n04>
Subject: Job 294643: <XGBR_Rg1 (nm)_Mordred_Trimer_EG-Ionic-Based Cluster_20250311> in cluster <Hazel> Done

Job <XGBR_Rg1 (nm)_Mordred_Trimer_EG-Ionic-Based Cluster_20250311> was submitted from host <c040n04> by user <sdehgha2> in cluster <Hazel> at Tue Mar 11 18:17:46 2025
Job was executed on host(s) <6*c207n04>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Wed Mar 12 05:18:13 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Wed Mar 12 05:18:13 2025
Terminated at Wed Mar 12 12:10:34 2025
Results reported at Wed Mar 12 12:10:34 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input



#BSUB -n 6
#BSUB -W 72:05
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "XGBR_Rg1 (nm)_Mordred_Trimer_EG-Ionic-Based Cluster_20250311"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_Mordred_Trimer_EG-Ionic-Based Cluster_20250311.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_Mordred_Trimer_EG-Ionic-Based Cluster_20250311.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../make_ood_prediction.py --target_features "Rg1 (nm)"                                       --representation "Mordred"                                       --regressor_type "XGBR"                                       --oligomer_representation "Trimer"                                       --numerical_feats 'Mw (g/mol)' 'PDI' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" 'solvent dP' 'solvent dD' 'solvent dH'                                       --clustering_method "EG-Ionic-Based Cluster" 



------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   102374.00 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.91 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   24746 sec.
    Turnaround time :                            64368 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_Mordred_Trimer_EG-Ionic-Based Cluster_20250311.err> for stderr output of this job.

