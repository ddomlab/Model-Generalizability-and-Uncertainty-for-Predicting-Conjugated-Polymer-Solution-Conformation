


-------------------------------------------------- 
OOD TEST ON 0



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06691496056727488), ('regressor__regressor__max_depth', 9960), ('regressor__regressor__n_estimators', 1460), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010784686139245684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 293), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.047101450705423625), ('regressor__regressor__max_depth', 6165), ('regressor__regressor__n_estimators', 342), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09900421675060596), ('regressor__regressor__max_depth', 2249), ('regressor__regressor__n_estimators', 216), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07693173041362837), ('regressor__regressor__max_depth', 269), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06991692945397764), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 586), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007476736232962265), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1339), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02235317496820828), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1361), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034769668589043685), ('regressor__regressor__max_depth', 2287), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054611118933333466), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.044142961484786865), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09964956943278974), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 263), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08122210979569741), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 248), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029846085308718375), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1646), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09673275795705669), ('regressor__regressor__max_depth', 6366), ('regressor__regressor__n_estimators', 111), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.016707722321526768), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 905), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.027364528220782454), ('regressor__regressor__max_depth', 33), ('regressor__regressor__n_estimators', 454), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06430422638335676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 348), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002861049879148768), ('regressor__regressor__max_depth', 3169), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012933553514178048), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1254), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004540102074705809), ('regressor__regressor__max_depth', 8931), ('regressor__regressor__n_estimators', 1863), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.018892380435165137), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 982), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.033842172784931644), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0636380275390342), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 270), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023878802071886857), ('regressor__regressor__max_depth', 6612), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07144648941556735), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 257), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0056446688924867835), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 515), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019513341865553903), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 197), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 709), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00978405663103578), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 976), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014798641065097335), ('regressor__regressor__max_depth', 41), ('regressor__regressor__n_estimators', 720), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06932966365817923), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025454649768777), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004553430532180703), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 327), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05322307893823153), ('regressor__regressor__max_depth', 6336), ('regressor__regressor__n_estimators', 1972), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035976152908526224), ('regressor__regressor__max_depth', 3400), ('regressor__regressor__n_estimators', 93), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018906632583248512), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03437207373023222), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1048), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04043514983864281), ('regressor__regressor__max_depth', 7159), ('regressor__regressor__n_estimators', 1084), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 523), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02666301886779036), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0727880237480246), ('regressor__regressor__max_depth', 502), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.061244537567261184), ('regressor__regressor__max_depth', 9778), ('regressor__regressor__n_estimators', 86), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0036027714527399816), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1254), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016782628487438305), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08722595424697485), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 549), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009658578773779758), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06719393641583839), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 1



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07400106531629838), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 103), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06448549176772554), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023355437206208584), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1315), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 59), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09900421675060596), ('regressor__regressor__max_depth', 2249), ('regressor__regressor__n_estimators', 216), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0035367525237197123), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02432062808308654), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 194), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04168926788341541), ('regressor__regressor__max_depth', 13), ('regressor__regressor__n_estimators', 600), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.021326332021506612), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 738), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054611118933333466), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.044142961484786865), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09964956943278974), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 263), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08122210979569741), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 248), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01375745507495999), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1049), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005241731481517986), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06718419967550611), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 175), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00493766456298934), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06430422638335676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 348), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002861049879148768), ('regressor__regressor__max_depth', 3169), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.018347354984659933), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 998), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011265620546133868), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 384), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0474818398896254), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1244), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003413294299800041), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 938), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0636380275390342), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 270), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023878802071886857), ('regressor__regressor__max_depth', 6612), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07144648941556735), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 257), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0056446688924867835), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 515), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03826194283498802), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06289984026196727), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 367), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02808287184621455), ('regressor__regressor__max_depth', 236), ('regressor__regressor__n_estimators', 102), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04028577320512334), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014798641065097335), ('regressor__regressor__max_depth', 41), ('regressor__regressor__n_estimators', 720), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06932966365817923), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025454649768777), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004553430532180703), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04205245532540546), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 181), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.046241568368948625), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 588), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005340137210463049), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 608), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06037022578047438), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1095), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018906632583248512), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03437207373023222), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1048), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04043514983864281), ('regressor__regressor__max_depth', 7159), ('regressor__regressor__n_estimators', 1084), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 523), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02666301886779036), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06603940892563014), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1132), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.028764781492881895), ('regressor__regressor__max_depth', 36), ('regressor__regressor__n_estimators', 652), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05955815940310405), ('regressor__regressor__max_depth', 14), ('regressor__regressor__n_estimators', 647), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.028764781492881895), ('regressor__regressor__max_depth', 36), ('regressor__regressor__n_estimators', 652), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05099458396658225), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 681), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016782628487438305), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08722595424697485), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 549), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009658578773779758), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06719393641583839), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 2



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011100803216085116), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06177308018104403), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 236), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04989503113689693), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 72), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09900421675060596), ('regressor__regressor__max_depth', 2249), ('regressor__regressor__n_estimators', 216), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06991692945397764), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 586), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03084963668718735), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 551), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034769668589043685), ('regressor__regressor__max_depth', 2287), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06991692945397764), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 586), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 267), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054611118933333466), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.044142961484786865), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09964956943278974), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 263), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08122210979569741), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 248), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 240), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770546264154471), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 676), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 75), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 101), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06430422638335676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 348), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002861049879148768), ('regressor__regressor__max_depth', 3169), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010140994491396016), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 408), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.082533793031362), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 1376), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02288285280570927), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1105), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0636380275390342), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 270), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023878802071886857), ('regressor__regressor__max_depth', 6612), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07144648941556735), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 257), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0056446688924867835), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 515), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.021650644653546904), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 217), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054265923859029695), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 321), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05716478825756704), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010188282727061109), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06539594673390173), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014798641065097335), ('regressor__regressor__max_depth', 41), ('regressor__regressor__n_estimators', 720), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06932966365817923), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025454649768777), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004553430532180703), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0916606457067034), ('regressor__regressor__max_depth', 8114), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09866603777275508), ('regressor__regressor__max_depth', 8558), ('regressor__regressor__n_estimators', 1963), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 117), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06860587232651784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 145), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018906632583248512), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03437207373023222), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1048), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04043514983864281), ('regressor__regressor__max_depth', 7159), ('regressor__regressor__n_estimators', 1084), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 523), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02666301886779036), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0700855910032767), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1327), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 392), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05675144902419427), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 111), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 55), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 100), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016782628487438305), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08722595424697485), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 549), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009658578773779758), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06719393641583839), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 3



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.045538980195761004), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1214), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003137586972595484), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 947), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04143875301171883), ('regressor__regressor__max_depth', 2244), ('regressor__regressor__n_estimators', 552), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09900421675060596), ('regressor__regressor__max_depth', 2249), ('regressor__regressor__n_estimators', 216), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 311), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 202), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06991692945397764), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 586), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07693173041362837), ('regressor__regressor__max_depth', 269), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054611118933333466), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.044142961484786865), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09964956943278974), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 263), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08122210979569741), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 248), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08505399982568303), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09864507104082976), ('regressor__regressor__max_depth', 2921), ('regressor__regressor__n_estimators', 419), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001857735989745937), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1585), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03351998413480203), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 221), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002115444065960139), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1719), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06430422638335676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 348), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002861049879148768), ('regressor__regressor__max_depth', 3169), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 84), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03578100722941682), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023684694034183233), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009832691171440634), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0636380275390342), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 270), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023878802071886857), ('regressor__regressor__max_depth', 6612), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07144648941556735), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 257), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0056446688924867835), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 515), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.038034026019202506), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.092567490916079), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014798641065097335), ('regressor__regressor__max_depth', 41), ('regressor__regressor__n_estimators', 720), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06932966365817923), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025454649768777), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004553430532180703), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06935590406220689), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 167), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 73), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002687568689829605), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 897), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 545), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018906632583248512), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03437207373023222), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1048), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04043514983864281), ('regressor__regressor__max_depth', 7159), ('regressor__regressor__n_estimators', 1084), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 523), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02666301886779036), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 443), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 345), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016782628487438305), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08722595424697485), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 549), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009658578773779758), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06719393641583839), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 4



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031136046801672077), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05088514964930641), ('regressor__regressor__max_depth', 13), ('regressor__regressor__n_estimators', 656), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913427408426909), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.061280822921180575), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 198), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09900421675060596), ('regressor__regressor__max_depth', 2249), ('regressor__regressor__n_estimators', 216), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06609576912703036), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 187), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.053651178280419744), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06983186191992174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05611141084376036), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054611118933333466), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.044142961484786865), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09964956943278974), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 263), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08122210979569741), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 248), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04387902362585827), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05612060210227508), ('regressor__regressor__max_depth', 9040), ('regressor__regressor__n_estimators', 543), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1163), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05432200821306124), ('regressor__regressor__max_depth', 14), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02446761761243193), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06430422638335676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 348), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002861049879148768), ('regressor__regressor__max_depth', 3169), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.058034723444563695), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0025639366890400517), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07209476005152633), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 1346), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.018690230293335323), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 522), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0636380275390342), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 270), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023878802071886857), ('regressor__regressor__max_depth', 6612), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07144648941556735), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 257), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0056446688924867835), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 515), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06667100983259124), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 585), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.047797181875125085), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0527870663233038), ('regressor__regressor__max_depth', 13), ('regressor__regressor__n_estimators', 109), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.059374744223908524), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 121), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014798641065097335), ('regressor__regressor__max_depth', 41), ('regressor__regressor__n_estimators', 720), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06932966365817923), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025454649768777), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004553430532180703), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04291123640495174), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 581), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06262460025079034), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 178), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0019752701924272784), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1287), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06449854041502759), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018906632583248512), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03437207373023222), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1048), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04043514983864281), ('regressor__regressor__max_depth', 7159), ('regressor__regressor__n_estimators', 1084), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 523), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02666301886779036), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03693499023328491), ('regressor__regressor__max_depth', 28), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005082949196805614), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 76), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05882646764116619), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 430), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02369977595419692), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 164), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016782628487438305), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08722595424697485), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 549), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009658578773779758), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06719393641583839), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])


{'CO_0': {'cluster size (%)': 34, 6: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.4323645682730271, 'test_rmse': 0.6250293781502717, 'test_r2': -0.20809447420649074, 'test_pearson_r': array([0.01058803]), 'test_pearson_p_value': array([0.92155279]), 'test_spearman_r': -0.1559789098630279, 'test_spearman_p_value': 0.14438618372383535, 'test_kendall_r': -0.07994410204264424, 'test_kendall_p_value': 0.2766511023252606, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.4386373603571246, 'test_rmse': 0.6319870589094312, 'test_r2': -0.23514062660157053, 'test_pearson_r': array([-0.02347242]), 'test_pearson_p_value': array([0.8271657]), 'test_spearman_r': -0.18889901837696094, 'test_spearman_p_value': 0.07624932228276042, 'test_kendall_r': -0.10213996877970824, 'test_kendall_p_value': 0.16365005888679252, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.007476736232962265, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1339, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.4375295939699566, 'test_rmse': 0.6309934096157312, 'test_r2': -0.2312597503146676, 'test_pearson_r': array([-0.0173188]), 'test_pearson_p_value': array([0.87202443]), 'test_spearman_r': -0.1682375324899816, 'test_spearman_p_value': 0.11503309299554199, 'test_kendall_r': -0.09289439842092663, 'test_kendall_p_value': 0.2068644427864783, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.027364528220782454, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 33, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 454, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.4385543960493181, 'test_rmse': 0.631544993434452, 'test_r2': -0.2334133062202257, 'test_pearson_r': array([-0.02194003]), 'test_pearson_p_value': array([0.83829067]), 'test_spearman_r': -0.19075858022315378, 'test_spearman_p_value': 0.07334878616283727, 'test_kendall_r': -0.1056198186271976, 'test_kendall_p_value': 0.14918508269622557, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.012933553514178048, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1254, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.4349267318939783, 'test_rmse': 0.6187508745413072, 'test_r2': -0.18394543583243617, 'test_pearson_r': array([-0.00868485]), 'test_pearson_p_value': array([0.93562011]), 'test_spearman_r': -0.15101656622152573, 'test_spearman_p_value': 0.15775473825937675, 'test_kendall_r': -0.07514769670572262, 'test_kendall_p_value': 0.3127950247788108, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.019513341865553903, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 197, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.43547682546968924, 'test_rmse': 0.6228811650842896, 'test_r2': -0.19980435369565885, 'test_pearson_r': array([-0.00077899]), 'test_pearson_p_value': array([0.9942193]), 'test_spearman_r': -0.16437927599207255, 'test_spearman_p_value': 0.1237262014715694, 'test_kendall_r': -0.07465241418764011, 'test_kendall_p_value': 0.307902832884427, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 327, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.438378224308529, 'test_rmse': 0.6250979918845598, 'test_r2': -0.20835973029188115, 'test_pearson_r': array([-0.02205778]), 'test_pearson_p_value': array([0.8374347]), 'test_spearman_r': -0.1856165431852523, 'test_spearman_p_value': 0.0815930734840702, 'test_kendall_r': -0.09524999541832832, 'test_kendall_p_value': 0.20041783963559145, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.061244537567261184, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 9778, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 86, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_0': {'cluster size (%)': 33, 6: {'fit_time': array([2.75960517, 2.79550529, 2.68953633]), 'score_time': array([0.10721254, 0.10507488, 0.09792972]), 'test_pearson_r': array([0.93955839, 0.94009689, 0.87396985]), 'test_pearson_p': array([-2.49184403e-41, -5.08313717e-41, -4.69267248e-28]), 'test_spearman_r': array([0.92701422, 0.95207901, 0.85287735]), 'test_spearman_p': array([-5.79812230e-38, -5.52444925e-45, -1.98540537e-25]), 'test_kendall_r': array([0.82562826, 0.85687073, 0.74904106]), 'test_kendall_p': array([-1.41057272e-29, -2.37126565e-31, -2.24866671e-24]), 'test_rmse': array([-0.22467934, -0.22620337, -0.29714187]), 'test_mae': array([-0.10812368, -0.11015592, -0.14177466]), 'test_r2': array([0.87873255, 0.88109985, 0.73628039]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.2128346 , 2.02426124, 1.98468137]), 'score_time': array([0.10566211, 0.11651325, 0.11510634]), 'test_pearson_r': array([0.84980232, 0.89361107, 0.95214957]), 'test_pearson_p': array([-2.32139111e-25, -5.78038827e-31, -5.20044241e-45]), 'test_spearman_r': array([0.83245534, 0.90348544, 0.94441826]), 'test_spearman_p': array([-1.65149325e-23, -1.18970368e-32, -2.39360170e-42]), 'test_kendall_r': array([0.71503338, 0.82023989, 0.82894464]), 'test_kendall_p': array([-1.43175123e-22, -6.57810817e-29, -1.98264175e-29]), 'test_rmse': array([-0.3668929 , -0.29887229, -0.18506491]), 'test_mae': array([-0.17214402, -0.12350351, -0.11011634]), 'test_r2': array([0.65220698, 0.78414581, 0.90551458]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.044142961484786865, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 163, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([22.92700577, 23.96186686, 26.05526304]), 'score_time': array([0.10567737, 0.10737085, 0.10162282]), 'test_pearson_r': array([0.96839807, 0.8110169 , 0.91275763]), 'test_pearson_p': array([-4.86626482e-53, -2.94711916e-21, -2.07690774e-34]), 'test_spearman_r': array([0.96904022, 0.83311395, 0.92876665]), 'test_spearman_p': array([-2.06070213e-53, -2.57752974e-23, -5.81096973e-38]), 'test_kendall_r': array([0.87548763, 0.75460702, 0.82944511]), 'test_kendall_p': array([-4.78440456e-33, -1.24677700e-24, -2.29618702e-29]), 'test_rmse': array([-0.16228963, -0.38138859, -0.27267336]), 'test_mae': array([-0.09507147, -0.16372388, -0.12315961]), 'test_r2': array([0.93762952, 0.56460424, 0.82443044]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.002861049879148768, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 3169, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.61156201, 1.67528653, 1.71679568]), 'score_time': array([0.10447049, 0.09967422, 0.09795427]), 'test_pearson_r': array([0.85111934, 0.86233573, 0.9348813 ]), 'test_pearson_p': array([-1.64313451e-25, -1.49291291e-26, -1.52107184e-39]), 'test_spearman_r': array([0.8982353 , 0.88462283, 0.92390792]), 'test_spearman_p': array([-4.30657835e-32, -1.44151466e-29, -8.39489222e-37]), 'test_kendall_r': array([0.82406358, 0.78842122, 0.8015344 ]), 'test_kendall_p': array([-2.68107799e-29, -8.37646480e-27, -9.85241967e-28]), 'test_rmse': array([-0.33649724, -0.35080313, -0.23784903]), 'test_mae': array([-0.12086701, -0.14712228, -0.13146255]), 'test_r2': array([0.66864391, 0.69847935, 0.86846283]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09939793013929618, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4800, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 161, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([ 9.62235832,  9.753721  , 10.9457829 ]), 'score_time': array([0.10607982, 0.1049757 , 0.10254955]), 'test_pearson_r': array([0.95604863, 0.83231063, 0.89762584]), 'test_pearson_p': array([-4.62347252e-47, -3.09888287e-23, -1.25037903e-31]), 'test_spearman_r': array([0.93968273, 0.82775702, 0.91072709]), 'test_spearman_p': array([-2.28896230e-41, -8.64636927e-23, -5.23187311e-34]), 'test_kendall_r': array([0.83338168, 0.75140552, 0.81612598]), 'test_kendall_p': array([-4.68825363e-30, -1.59317759e-24, -1.23229260e-28]), 'test_rmse': array([-0.18446304, -0.36794086, -0.27991122]), 'test_mae': array([-0.10419172, -0.15431494, -0.12415429]), 'test_r2': array([0.91358764, 0.65716816, 0.80161643]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.014798641065097335, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 41, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 720, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([3.51331162, 2.97579575, 3.76439238]), 'score_time': array([0.09994698, 0.10050607, 0.10439157]), 'test_pearson_r': array([0.89262171, 0.934914  , 0.84803326]), 'test_pearson_p': array([-3.74269674e-31, -1.49031775e-39, -6.97258549e-25]), 'test_spearman_r': array([0.90039284, 0.93656769, 0.85695956]), 'test_spearman_p': array([-1.81365635e-32, -5.23212683e-40, -6.64833973e-26]), 'test_kendall_r': array([0.77709566, 0.80904767, 0.78145007]), 'test_kendall_p': array([-2.32628201e-26, -3.49776814e-28, -3.40067184e-26]), 'test_rmse': array([-0.28919347, -0.23429351, -0.37420997]), 'test_mae': array([-0.15980476, -0.13223232, -0.15163709]), 'test_r2': array([0.76377022, 0.84975456, 0.6994232 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02666301886779036, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 289, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.14341307, 2.12633681, 2.32422495]), 'score_time': array([0.14926076, 0.10448933, 0.14919019]), 'test_pearson_r': array([0.88309033, 0.78690945, 0.98684191]), 'test_pearson_p': array([-1.13296624e-29, -2.67628923e-19, -2.97223213e-68]), 'test_spearman_r': array([0.90126579, 0.82693188, 0.98419124]), 'test_spearman_p': array([-1.27101448e-32, -1.03797954e-22, -6.27313517e-65]), 'test_kendall_r': array([0.83424244, 0.74032528, 0.89800001]), 'test_kendall_p': array([-5.69800165e-30, -8.17487733e-24, -2.52917735e-34]), 'test_rmse': array([-0.31194126, -0.3979703 , -0.10559978]), 'test_mae': array([-0.11066334, -0.16812295, -0.07718494]), 'test_r2': array([0.75402441, 0.53489841, 0.97260867]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08722595424697485, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 549, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_1': {'cluster size (%)': 6, 6: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.6847965280941521, 'test_rmse': 0.7558519053108299, 'test_r2': 0.30941373007991435, 'test_pearson_r': array([0.5889141]), 'test_pearson_p_value': array([0.01638456]), 'test_spearman_r': 0.4399194095428036, 'test_spearman_p_value': 0.08816371656254912, 'test_kendall_r': 0.20979429225311444, 'test_kendall_p_value': 0.28328298370814486, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06448549176772554, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 77, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.6996206987134015, 'test_rmse': 0.7880987292264622, 'test_r2': 0.24923197184322277, 'test_pearson_r': array([0.57233987]), 'test_pearson_p_value': array([0.02051157]), 'test_spearman_r': 0.43806034499815993, 'test_spearman_p_value': 0.08967282953475358, 'test_kendall_r': 0.1996866881862366, 'test_kendall_p_value': 0.30526089342285023, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.021326332021506612, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 738, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.6868574965230023, 'test_rmse': 0.7599964918582185, 'test_r2': 0.30181953940648876, 'test_pearson_r': array([0.57910767]), 'test_pearson_p_value': array([0.01873928]), 'test_spearman_r': 0.43806034499815993, 'test_spearman_p_value': 0.08967282953475358, 'test_kendall_r': 0.1996866881862366, 'test_kendall_p_value': 0.30526089342285023, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.00493766456298934, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.6929617460301911, 'test_rmse': 0.7835422047002504, 'test_r2': 0.2578882570906482, 'test_pearson_r': array([0.58016714]), 'test_pearson_p_value': array([0.01847294]), 'test_spearman_r': 0.45018658292198444, 'test_spearman_p_value': 0.08015505502481834, 'test_kendall_r': 0.2178400234758945, 'test_kendall_p_value': 0.2633883610692104, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0474818398896254, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1244, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.6951782602301633, 'test_rmse': 0.7762519386565517, 'test_r2': 0.27163358731154796, 'test_pearson_r': array([0.57021376]), 'test_pearson_p_value': array([0.02109424]), 'test_spearman_r': 0.43806034499815993, 'test_spearman_p_value': 0.08967282953475358, 'test_kendall_r': 0.1996866881862366, 'test_kendall_p_value': 0.30526089342285023, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04028577320512334, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.6958313147953545, 'test_rmse': 0.7771582508234257, 'test_r2': 0.26993178748503643, 'test_pearson_r': array([0.56967233]), 'test_pearson_p_value': array([0.02124464]), 'test_spearman_r': 0.43806034499815993, 'test_spearman_p_value': 0.08967282953475358, 'test_kendall_r': 0.1996866881862366, 'test_kendall_p_value': 0.30526089342285023, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.046241568368948625, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 588, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7009121749034917, 'test_rmse': 0.7848248983897439, 'test_r2': 0.25545652795860463, 'test_pearson_r': array([0.57032587]), 'test_pearson_p_value': array([0.0210632]), 'test_spearman_r': 0.43806034499815993, 'test_spearman_p_value': 0.08967282953475358, 'test_kendall_r': 0.1996866881862366, 'test_kendall_p_value': 0.30526089342285023, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05955815940310405, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 14, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 647, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_1': {'cluster size (%)': 6, 6: {'fit_time': array([5.19676566, 3.67906094, 5.52257109, 3.55869508, 3.76934648,
       4.83822513, 5.37330103, 3.76099372, 4.68775845, 4.28306341,
       4.78937268, 4.58844447, 5.32825708, 4.8314743 , 5.29098058,
       3.83670974]), 'score_time': array([0.10022569, 0.11460376, 0.09480548, 0.27334762, 0.11435032,
       0.10337877, 0.10069942, 0.11352754, 0.11173654, 0.11430311,
       0.11151314, 0.11252642, 0.14209867, 0.10527921, 0.10144329,
       0.11112332]), 'test_pearson_r': array([0.8855183 , 0.97199993, 0.99544519, 0.92500915, 0.97519681,
       0.70398852, 0.9926275 , 0.84787365, 0.96677166, 0.91138069,
       0.99366546, 0.96958421, 0.95366878, 0.95233834, 0.98577445,
       0.98447336]), 'test_pearson_p': array([-2.28516196e-06, -7.63851236e-11, -9.93648178e-17, -2.92812787e-07,
       -1.45034763e-10, -2.33592490e-03, -3.11332856e-14, -3.34837530e-05,
       -1.09840305e-09, -9.08169478e-07, -1.07923009e-14, -5.95857432e-10,
       -1.08676777e-08, -1.32025829e-08, -3.04478382e-12, -5.59916331e-12]), 'test_spearman_r': array([0.87009804, 0.9417537 , 0.98957713, 0.84411765, 0.96176471,
       0.71764706, 0.99411765, 0.81176471, 0.94334095, 0.87058824,
       0.99337775, 0.9256809 , 0.93451092, 0.95294118, 0.97496424,
       0.95294118]), 'test_spearman_p': array([-5.62745161e-06, -1.70014816e-08, -4.85604035e-14, -3.93024274e-05,
       -2.89508013e-09, -1.74753506e-03, -6.43399749e-15, -1.34322375e-04,
       -4.32397330e-08, -1.14989348e-05, -1.47168758e-14, -2.75438509e-07,
       -1.16375217e-07, -1.20965793e-08, -1.54730831e-10, -1.20965793e-08]), 'test_kendall_r': array([0.79411765, 0.83395402, 0.952036  , 0.73333333, 0.88333333,
       0.71666667, 0.96666667, 0.73333333, 0.86193223, 0.73333333,
       0.96235152, 0.82845913, 0.87866878, 0.86666667, 0.90759507,
       0.85      ]), 'test_kendall_p': array([-5.45407093e-07, -3.18179868e-06, -1.04704970e-07, -1.62687222e-05,
       -1.43717927e-08, -2.87624658e-05, -1.29045888e-11, -1.62687222e-05,
       -3.45008795e-06, -1.62687222e-05, -2.18526649e-07, -8.12917002e-06,
       -2.22140114e-06, -3.98309214e-08, -1.10296350e-06, -1.02027025e-07]), 'test_rmse': array([-0.28291057, -0.15843515, -0.07730707, -0.26542575, -0.11021063,
       -0.53849409, -0.08312057, -0.39485685, -0.18016658, -0.25338777,
       -0.06615993, -0.16085813, -0.2070983 , -0.19857406, -0.09343472,
       -0.08776711]), 'test_mae': array([-0.12317124, -0.08226873, -0.05008994, -0.14898474, -0.07614975,
       -0.18014073, -0.06073588, -0.16153383, -0.0819189 , -0.11158605,
       -0.04445627, -0.08993758, -0.10079376, -0.14029865, -0.05555695,
       -0.06162891]), 'test_r2': array([0.76205819, 0.9337161 , 0.98917935, 0.83738212, 0.94328063,
       0.34870862, 0.97907784, 0.68356297, 0.93226873, 0.81274431,
       0.98716423, 0.93182746, 0.90248654, 0.83358984, 0.96892042,
       0.9671354 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([3.05667043, 3.11912513, 3.4044621 , 3.87378716, 3.31169033,
       3.06053543, 3.00328851, 3.16169429, 2.90242815, 3.44173217,
       3.6427381 , 2.9779942 , 3.36675906, 2.8162148 , 4.0860014 ,
       3.19272685]), 'score_time': array([0.11478877, 0.12884545, 0.16303921, 0.09632468, 0.16405249,
       0.15009189, 0.11560559, 0.12705493, 0.20091033, 0.10435033,
       0.09649158, 0.19701052, 0.11867523, 0.11171484, 0.09647131,
       0.10693645]), 'test_pearson_r': array([0.98001824, 0.90539749, 0.97997489, 0.99340311, 0.65706496,
       0.9367392 , 0.81420255, 0.99493898, 0.97254545, 0.98184504,
       0.96457543, 0.99076574, 0.99205607, 0.97207414, 0.99201415,
       0.92558219]), 'test_pearson_p': array([-6.22518020e-12, -5.80119846e-07, -6.32640617e-12, -1.43278237e-14,
       -5.68298581e-03, -9.18816822e-08, -1.23458789e-04, -2.25022557e-15,
       -2.93200800e-10, -1.66161945e-11, -1.70920538e-09, -1.49831794e-13,
       -5.24221905e-14, -3.29888492e-10, -5.43832193e-14, -2.77935239e-07]), 'test_spearman_r': array([0.90128772, 0.86082174, 0.95823385, 0.97277436, 0.66961019,
       0.92273756, 0.85882353, 0.98823529, 0.961001  , 0.98307606,
       0.92273756, 0.97647059, 0.99117647, 0.95588235, 0.98085526,
       0.86470588]), 'test_spearman_p': array([-7.88324131e-07, -9.17831042e-06, -1.47267682e-09, -2.76678019e-10,
       -4.54744509e-03, -3.58624443e-07, -2.04643957e-05, -8.10888105e-13,
       -3.31817876e-09, -1.01973765e-11, -3.58624443e-07, -1.00615044e-10,
       -1.09082915e-13, -7.76027446e-09, -2.40310904e-11, -1.54423405e-05]), 'test_kendall_r': array([0.78967327, 0.76015278, 0.86994258, 0.91214188, 0.69456675,
       0.82845913, 0.75      , 0.95      , 0.86193223, 0.92887842,
       0.79498604, 0.93333333, 0.96666667, 0.85      , 0.92440239,
       0.7       ]), 'test_kendall_p': array([-1.02725536e-05, -2.17189123e-05, -1.33413173e-06, -8.99518934e-07,
       -1.83536177e-04, -8.12917002e-06, -8.91848950e-06, -7.63760478e-11,
       -3.45008795e-06, -5.65704076e-07, -1.85653874e-05, -3.55879882e-10,
       -1.29045888e-11, -1.02027025e-07, -6.95749778e-07, -4.94106357e-05]), 'test_rmse': array([-0.10301672, -0.28310448, -0.12110779, -0.09134597, -0.53216659,
       -0.24823008, -0.42034322, -0.07359404, -0.11320368, -0.11877233,
       -0.16128446, -0.09688115, -0.07317662, -0.15225867, -0.0860799 ,
       -0.24205661]), 'test_mae': array([-0.05643168, -0.11963899, -0.089482  , -0.0488697 , -0.17845801,
       -0.10783801, -0.1928437 , -0.04862579, -0.08706925, -0.08320126,
       -0.11716645, -0.06608785, -0.04755288, -0.10524056, -0.05594696,
       -0.13787712]), 'test_r2': array([0.96003401, 0.80831896, 0.95678566, 0.98240229, 0.23685961,
       0.86955799, 0.63187683, 0.98959426, 0.94344465, 0.95434491,
       0.9284547 , 0.97968063, 0.9834315 , 0.93428558, 0.98111326,
       0.76679785]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.044142961484786865, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 163, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([37.52173066, 37.25330877, 37.67432332, 37.98972082, 37.2873683 ,
       38.08313727, 37.09772396, 38.39061403, 38.17086101, 38.25307727,
       36.99140596, 35.16204762, 36.06695485, 34.94954967, 33.14284778,
       38.88542509]), 'score_time': array([0.10719299, 0.10952163, 0.10447216, 0.15483403, 0.10671115,
       0.10648084, 0.11560488, 0.14555287, 0.1000886 , 0.10009694,
       0.18518496, 0.11722159, 0.11156011, 0.11825585, 0.19177079,
       0.09830952]), 'test_pearson_r': array([0.91399557, 0.99389804, 0.9312621 , 0.97802241, 0.99126569,
       0.9787313 , 0.98058184, 0.98252006, 0.54799327, 0.98325   ,
       0.982141  , 0.9809019 , 0.91044003, 0.98472369, 0.80835858,
       0.99420035]), 'test_pearson_p': array([-2.91251682e-07, -8.86738635e-16, -5.70866180e-08, -6.26658907e-11,
       -1.01616028e-13, -4.99083528e-11, -2.65197268e-11, -1.27678876e-11,
       -2.79780890e-02, -9.49033639e-12, -1.48219129e-11, -2.36271783e-11,
       -9.75335391e-07, -5.00031247e-12, -1.50822384e-04, -5.82814297e-15]), 'test_spearman_r': array([0.89883524, 0.99202962, 0.92892157, 0.93235294, 0.95      ,
       0.95588235, 0.98454773, 0.98380077, 0.67941176, 0.9757177 ,
       0.96983102, 0.96764706, 0.96688768, 0.90332718, 0.87941176,
       0.97938251]), 'test_spearman_p': array([-9.40713499e-07, -6.53940522e-15, -7.28779911e-08, -1.45175444e-07,
       -1.83461727e-08, -7.76027446e-09, -5.41517846e-12, -7.52089449e-12,
       -3.79343267e-03, -1.25183504e-10, -5.63193822e-10, -9.13289481e-10,
       -1.07216639e-09, -1.63329218e-06, -7.18727304e-06, -4.02148125e-11]), 'test_kendall_r': array([0.81919377, 0.952036  , 0.79411765, 0.85      , 0.83333333,
       0.85      , 0.92887842, 0.92440239, 0.71666667, 0.89540533,
       0.89540533, 0.88333333, 0.91214188, 0.79672462, 0.81666667,
       0.90759507]), 'test_kendall_p': array([-4.73348832e-06, -1.04704970e-07, -5.45407093e-07, -1.02027025e-07,
       -2.44193725e-07, -1.02027025e-07, -5.65704076e-07, -6.95749778e-07,
       -2.87624658e-05, -1.41912826e-06, -1.41912826e-06, -1.43717927e-08,
       -8.99518934e-07, -2.11608369e-05, -5.50848432e-07, -1.10296350e-06]), 'test_rmse': array([-0.27293189, -0.07857714, -0.24651541, -0.12475159, -0.09376825,
       -0.13365063, -0.10971376, -0.1016592 , -0.54628557, -0.13213328,
       -0.11988729, -0.12705247, -0.30046991, -0.11520161, -0.38567794,
       -0.07157029]), 'test_mae': array([-0.12794054, -0.05099518, -0.12629301, -0.07870163, -0.05919459,
       -0.09356962, -0.08124571, -0.06823763, -0.20620111, -0.10065679,
       -0.07967318, -0.08059323, -0.12950133, -0.07351522, -0.15304365,
       -0.05019728]), 'test_r2': array([ 0.82632689,  0.9862537 ,  0.84941344,  0.95192289,  0.98077821,
        0.95541444,  0.95871638,  0.95714014, -0.19854768,  0.9450356 ,
        0.96246562,  0.95015397,  0.81385955,  0.96927444,  0.61993367,
        0.98813994]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.002861049879148768, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 3169, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([2.40608001, 2.42095447, 2.39741302, 2.43215108, 2.19431782,
       2.38759542, 2.34074402, 2.47297764, 2.4771688 , 2.44249058,
       2.41268873, 2.34812117, 2.45442367, 2.4409802 , 2.27201653,
       2.33193946]), 'score_time': array([0.14616203, 0.14499283, 0.14341879, 0.14387584, 0.10762215,
       0.09782434, 0.15047789, 0.09735656, 0.09715676, 0.09690428,
       0.09697556, 0.18167067, 0.11772323, 0.1685245 , 0.17811108,
       0.1115911 ]), 'test_pearson_r': array([0.99218713, 0.98810188, 0.982712  , 0.99701051, 0.41020955,
       0.99339858, 0.9747851 , 0.98627078, 0.95573176, 0.75392498,
       0.99204344, 0.98780116, 0.84415328, 0.98750932, 0.98931502,
       0.98069331]), 'test_pearson_p': array([-5.63273107e-15, -1.30502735e-13, -2.11770166e-12, -5.67679898e-17,
       -1.14536721e-01, -1.43966973e-14, -1.62572108e-10, -2.37772995e-12,
       -7.94440981e-09, -7.42239651e-04, -5.30067631e-14, -1.04382347e-12,
       -3.92434909e-05, -1.23073613e-12, -4.14521613e-13, -2.54797881e-11]), 'test_spearman_r': array([0.98588957, 0.99019608, 0.97240975, 0.99261983, 0.63328424,
       0.98529412, 0.97352941, 0.95805765, 0.96241945, 0.83738065,
       0.98749107, 0.96470588, 0.87941176, 0.97058824, 0.93235294,
       0.97058824]), 'test_spearman_p': array([-4.65923278e-13, -3.07362545e-14, -6.84697631e-11, -3.13601186e-14,
       -8.45074340e-03, -3.83671954e-12, -2.27689766e-10, -5.47877174e-09,
       -2.56986058e-09, -5.18614608e-05, -1.24331763e-12, -1.66620775e-09,
       -7.18727304e-06, -4.72340113e-10, -1.45175444e-07, -4.72340113e-10]), 'test_kendall_r': array([0.93333333, 0.94117647, 0.89299501, 0.97467943, 0.60504202,
       0.93333333, 0.91666667, 0.84519568, 0.88614695, 0.74477639,
       0.94561497, 0.9       , 0.75      , 0.9       , 0.81666667,
       0.9       ]), 'test_kendall_p': array([-2.00290194e-07, -2.62815024e-11, -6.08366508e-07, -2.23973215e-07,
       -1.16143904e-03, -3.55879882e-10, -1.38948965e-09, -5.31661458e-06,
       -2.11823604e-06, -6.04438410e-05, -3.52984089e-07, -4.72556483e-09,
       -8.91848950e-06, -4.72556483e-09, -5.50848432e-07, -4.72556483e-09]), 'test_rmse': array([-0.08175277, -0.07317061, -0.12184816, -0.05131826, -0.75537134,
       -0.07397298, -0.19217143, -0.10419396, -0.16778127, -0.41358496,
       -0.07919674, -0.10427168, -0.30122888, -0.12350061, -0.09364268,
       -0.14584191]), 'test_mae': array([-0.06566196, -0.04798129, -0.08113329, -0.03429051, -0.31086369,
       -0.05739039, -0.10199589, -0.07379578, -0.09234401, -0.1951052 ,
       -0.06304024, -0.05998547, -0.15077085, -0.07879649, -0.06938114,
       -0.0853756 ]), 'test_r2': array([ 0.98401459,  0.97608398,  0.95885263,  0.99104217, -1.36927694,
        0.98618232,  0.9406817 ,  0.96890726,  0.90253475,  0.43583508,
        0.97700645,  0.97533327,  0.66072322,  0.96752706,  0.97164427,
        0.96096622]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09939793013929618, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4800, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 161, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([14.57419324, 14.12556005, 14.32640529, 13.95559955, 13.1115129 ,
       14.60227299, 13.23702836, 13.94891143, 13.72071671, 13.23891425,
       13.98886466, 14.5498004 , 13.62838006, 14.16674495, 13.39264941,
       14.22579956]), 'score_time': array([0.10027719, 0.1022172 , 0.16330671, 0.1257894 , 0.18487072,
       0.09878731, 0.12724257, 0.12593269, 0.11326742, 0.13109326,
       0.1789391 , 0.14623404, 0.10554194, 0.15506411, 0.10368109,
       0.15330338]), 'test_pearson_r': array([0.96926918, 0.86321775, 0.99434025, 0.98931898, 0.96457674,
       0.97722021, 0.96099071, 0.62691413, 0.92575492, 0.90134847,
       0.9925487 , 0.99357803, 0.87137418, 0.98946171, 0.82835339,
       0.99218785]), 'test_pearson_p': array([-1.52292778e-10, -8.11634495e-06, -5.05023853e-16, -4.13450716e-13,
       -1.70876775e-09, -8.03702787e-11, -3.32422030e-09, -9.34875080e-03,
       -2.73578744e-07, -1.87202881e-06, -3.35317528e-14, -1.18763672e-14,
       -1.10428984e-05, -3.76432840e-13, -7.38005703e-05, -4.66458611e-14]), 'test_spearman_r': array([0.93382353, 0.85328379, 0.98773006, 0.96394434, 0.98749107,
       0.97647059, 0.96176471, 0.73823529, 0.91176471, 0.88365243,
       0.95511431, 0.97941176, 0.84956122, 0.9256809 , 0.85588235,
       0.98529412]), 'test_spearman_p': array([-4.32632699e-08, -1.33229485e-05, -1.64204527e-13, -1.93084048e-09,
       -1.24331763e-12, -1.00615044e-10, -2.89508013e-09, -1.09285081e-03,
       -8.81898574e-07, -5.65986076e-06, -8.73885027e-09, -3.98200979e-11,
       -3.11149595e-05, -2.75438509e-07, -2.34491569e-05, -3.83671954e-12]), 'test_kendall_r': array([0.83823529, 0.72198821, 0.94074074, 0.86193223, 0.94561497,
       0.91666667, 0.85      , 0.7       , 0.76666667, 0.80672269,
       0.87866878, 0.9       , 0.76799402, 0.82845913, 0.8       ,
       0.93333333]), 'test_kendall_p': array([-5.63431609e-08, -6.77950945e-05, -1.60289263e-07, -3.45008795e-06,
       -3.52984089e-07, -1.38948965e-09, -1.02027025e-07, -4.94106357e-05,
       -4.72451181e-06, -1.48492509e-05, -2.22140114e-06, -4.72556483e-09,
       -3.91635038e-05, -8.12917002e-06, -1.17934846e-06, -3.55879882e-10]), 'test_rmse': array([-0.1520865 , -0.33168287, -0.06722451, -0.10501738, -0.19467925,
       -0.11617007, -0.20534898, -0.55031017, -0.1856665 , -0.34055215,
       -0.08791531, -0.06886504, -0.26421604, -0.09220611, -0.35216441,
       -0.07697679]), 'test_mae': array([-0.0860672 , -0.15935354, -0.05622876, -0.08356108, -0.09431751,
       -0.07185029, -0.12527555, -0.20807111, -0.12614375, -0.12875092,
       -0.05614394, -0.05285704, -0.13165244, -0.07299668, -0.15268651,
       -0.04557736]), 'test_r2': array([0.93740395, 0.68841559, 0.98756569, 0.96724194, 0.92259152,
       0.95198909, 0.91705778, 0.12445696, 0.82339742, 0.78922038,
       0.98490907, 0.98655168, 0.70538391, 0.97715153, 0.63860498,
       0.9834815 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.014798641065097335, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 41, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 720, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([4.78330803, 5.01795578, 5.02738023, 5.1635232 , 5.09678531,
       4.93340969, 5.05863619, 4.78299904, 4.96946287, 4.79349899,
       4.76784873, 4.90670562, 4.75956416, 4.61919022, 4.82525682,
       4.7693193 ]), 'score_time': array([0.11255312, 0.10141134, 0.10027218, 0.09869194, 0.10396719,
       0.10717034, 0.10167313, 0.16709685, 0.10677552, 0.11468101,
       0.12111735, 0.117836  , 0.11817813, 0.11181259, 0.17950678,
       0.16449213]), 'test_pearson_r': array([0.82294331, 0.96990564, 0.98431415, 0.99496629, 0.99534005,
       0.98615397, 0.95240666, 0.99683479, 0.93357869, 0.943919  ,
       0.97292827, 0.99432535, 0.99579925, 0.88693848, 0.99190654,
       0.74721341]), 'test_pearson_p': array([-4.97086168e-05, -1.30411034e-10, -1.02588520e-12, -2.16675319e-15,
       -1.26382922e-15, -2.52222713e-12, -1.30730582e-08, -8.46346131e-17,
       -1.28155977e-07, -4.03071817e-08, -2.66022058e-10, -5.00533825e-15,
       -6.12115684e-16, -4.67341730e-06, -5.97085948e-14, -8.78736378e-04]), 'test_spearman_r': array([0.81127451, 0.94852941, 0.97177987, 0.99043441, 0.98749107,
       0.97352941, 0.93451092, 0.98823529, 0.85588235, 0.96983102,
       0.95294118, 0.99115475, 0.99852833, 0.92941176, 0.97345556,
       0.72647059]), 'test_spearman_p': array([-7.73803618e-05, -6.85959526e-09, -8.09524658e-11, -1.91599035e-13,
       -1.24331763e-12, -2.27689766e-10, -1.16375217e-07, -8.10888105e-13,
       -2.34491569e-05, -5.63193822e-10, -1.20965793e-08, -1.10969762e-13,
       -3.99332349e-19, -1.94011895e-07, -2.32128210e-10, -1.43618264e-03]), 'test_kendall_r': array([0.69117647, 0.82352941, 0.9037285 , 0.96235152, 0.94561497,
       0.91666667, 0.87866878, 0.93333333, 0.66666667, 0.89540533,
       0.88333333, 0.9536629 , 0.99163165, 0.8       , 0.90302594,
       0.68333333]), 'test_kendall_p': array([-3.20901942e-05, -1.25716600e-07, -4.80224875e-07, -2.18526649e-07,
       -3.52984089e-07, -1.38948965e-09, -2.22140114e-06, -3.55879882e-10,
       -1.34937165e-04, -1.41912826e-06, -1.43717927e-08, -3.28081900e-07,
       -1.01812551e-07, -1.17934846e-06, -1.32869973e-06, -8.26619198e-05]), 'test_rmse': array([-0.27989199, -0.13627734, -0.12989633, -0.06489862, -0.06159831,
       -0.10144465, -0.22351713, -0.06190224, -0.18290689, -0.23424818,
       -0.11956758, -0.07932398, -0.07592259, -0.3414636 , -0.09235135,
       -0.54432435]), 'test_mae': array([-0.11444246, -0.10777865, -0.06898216, -0.04362787, -0.04200887,
       -0.0632004 , -0.09233784, -0.0448022 , -0.10857004, -0.15931117,
       -0.07864976, -0.05216942, -0.05378761, -0.16751905, -0.07099892,
       -0.21735363]), 'test_r2': array([0.67084188, 0.90322276, 0.96723087, 0.98880738, 0.99000505,
       0.96410431, 0.90311461, 0.99029348, 0.86629429, 0.80593989,
       0.94562146, 0.9878125 , 0.98652559, 0.77344182, 0.97646901,
       0.44706988]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02666301886779036, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 289, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.90163827, 2.8327117 , 2.97418284, 2.793993  , 2.92826176,
       2.90370822, 2.96989298, 2.65191627, 3.04739642, 2.86278844,
       2.92348504, 2.79307675, 2.80077553, 2.93007064, 2.75476837,
       2.96652269]), 'score_time': array([0.09857106, 0.14682889, 0.09892178, 0.10105252, 0.09750843,
       0.14302802, 0.09813213, 0.09980512, 0.10641289, 0.09792876,
       0.11461377, 0.17871499, 0.10244179, 0.17859435, 0.11182046,
       0.10317302]), 'test_pearson_r': array([0.99313109, 0.71094862, 0.98064362, 0.92938562, 0.90658186,
       0.56904353, 0.99418951, 0.92264779, 0.85153333, 0.96490489,
       0.98748527, 0.99316985, 0.99181787, 0.97403688, 0.9712559 ,
       0.99614487]), 'test_pearson_p': array([-2.15020904e-15, -1.37724544e-03, -4.91322139e-12, -1.94501780e-07,
       -1.29660880e-06, -2.14203552e-02, -5.90465480e-15, -3.61463439e-07,
       -2.85262286e-05, -1.60239409e-09, -1.24734069e-12, -1.82621488e-14,
       -6.44256419e-14, -1.99104449e-10, -4.02919440e-10, -3.35898763e-16]), 'test_spearman_r': array([0.96750478, 0.73218894, 0.94478599, 0.86681407, 0.91390753,
       0.63429009, 0.99117647, 0.89411765, 0.76436018, 0.93156758,
       0.99410462, 0.97417637, 0.98529412, 0.97866104, 0.96176471,
       0.96470588]), 'test_spearman_p': array([-2.30299590e-10, -8.32107073e-04, -1.14870783e-08, -1.39158204e-05,
       -7.46809230e-07, -8.31542258e-03, -1.09082915e-13, -3.01130993e-06,
       -5.64892036e-04, -1.57059247e-07, -6.53417850e-15, -1.91806935e-10,
       -3.83671954e-12, -5.10643005e-11, -2.89508013e-09, -1.66620775e-09]), 'test_kendall_r': array([0.89299501, 0.75097607, 0.84446761, 0.74477639, 0.86193223,
       0.69456675, 0.95      , 0.73333333, 0.65548533, 0.81172259,
       0.97054189, 0.91538573, 0.91666667, 0.92887842, 0.88333333,
       0.9       ]), 'test_kendall_p': array([-6.08366508e-07, -3.00010062e-05, -2.55178070e-06, -6.04438410e-05,
       -3.45008795e-06, -1.83536177e-04, -7.63760478e-11, -1.62687222e-05,
       -4.33345797e-04, -1.23329686e-05, -2.02597451e-07, -1.03117352e-06,
       -1.38948965e-09, -5.65704076e-07, -1.43717927e-08, -4.72556483e-09]), 'test_rmse': array([-0.07506845, -0.56900617, -0.13369281, -0.22477518, -0.2497699 ,
       -0.52495092, -0.06996125, -0.22222916, -0.31413351, -0.16939292,
       -0.10609388, -0.08481719, -0.08288399, -0.13081609, -0.14912021,
       -0.06359769]), 'test_mae': array([-0.05129717, -0.1853804 , -0.08268578, -0.12720608, -0.10305109,
       -0.17499465, -0.05578745, -0.15337606, -0.16577405, -0.09551842,
       -0.05830129, -0.06619509, -0.06930822, -0.0595687 , -0.11871796,
       -0.04470772]), 'test_r2': array([ 0.98519422,  0.40502663,  0.95695827,  0.86055688,  0.80253051,
       -0.0430913 ,  0.98748475,  0.81832267,  0.71580175,  0.90110234,
        0.97341188,  0.98183179,  0.98357258,  0.94030248,  0.93466835,
        0.99153513]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08722595424697485, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 549, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_2': {'cluster size (%)': 22, 6: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.6752290564907555, 'test_rmse': 0.8191692495715606, 'test_r2': -0.4475794514544045, 'test_pearson_r': array([0.59751514]), 'test_pearson_p_value': array([7.35199371e-07]), 'test_spearman_r': 0.26207766597525917, 'test_spearman_p_value': 0.04688232865494565, 'test_kendall_r': 0.16555633538159112, 'test_kendall_p_value': 0.06967552779728275, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 72, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.6840381995900471, 'test_rmse': 0.8285946704741888, 'test_r2': -0.481083004760974, 'test_pearson_r': array([0.59619173]), 'test_pearson_p_value': array([7.89091004e-07]), 'test_spearman_r': 0.25858515594337533, 'test_spearman_p_value': 0.05000381080804717, 'test_kendall_r': 0.16661772550213577, 'test_kendall_p_value': 0.06594031998735038, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06991692945397764, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 25, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 586, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.6756795679216274, 'test_rmse': 0.8203621051542058, 'test_r2': -0.4517983853566081, 'test_pearson_r': array([0.59912867]), 'test_pearson_p_value': array([6.74157461e-07]), 'test_spearman_r': 0.2614536021677336, 'test_spearman_p_value': 0.04742808054137804, 'test_kendall_r': 0.1630024366046936, 'test_kendall_p_value': 0.07392789252450255, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.6983361697530343, 'test_rmse': 0.8266179299420161, 'test_r2': -0.47402472970571874, 'test_pearson_r': array([0.53442883]), 'test_pearson_p_value': array([1.55254112e-05]), 'test_spearman_r': 0.2754626451246164, 'test_spearman_p_value': 0.036360695744405556, 'test_kendall_r': 0.18021897745794516, 'test_kendall_p_value': 0.04628884439809787, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02288285280570927, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.6895448977705124, 'test_rmse': 0.816650668843133, 'test_r2': -0.4386918106279547, 'test_pearson_r': array([0.53543784]), 'test_pearson_p_value': array([1.48565368e-05]), 'test_spearman_r': 0.27472848985186143, 'test_spearman_p_value': 0.03688203377633618, 'test_kendall_r': 0.18209476121235646, 'test_kendall_p_value': 0.044122632507053214, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.054265923859029695, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 321, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.6905627755383383, 'test_rmse': 0.813285251003584, 'test_r2': -0.42685854399108036, 'test_pearson_r': array([0.55091656]), 'test_pearson_p_value': array([7.42446742e-06]), 'test_spearman_r': 0.25063077682384377, 'test_spearman_p_value': 0.05774805544180569, 'test_kendall_r': 0.14585346246147, 'test_kendall_p_value': 0.1072816733482176, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0916606457067034, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 8114, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 77, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.6803580896123249, 'test_rmse': 0.8233831193239097, 'test_r2': -0.4625106771434402, 'test_pearson_r': array([0.59170403]), 'test_pearson_p_value': array([1.00066383e-06]), 'test_spearman_r': 0.2517019286049825, 'test_spearman_p_value': 0.056651929757402186, 'test_kendall_r': 0.15886079095638309, 'test_kendall_p_value': 0.08183281553180802, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 55, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_2': {'cluster size (%)': 25, 6: {'fit_time': array([2.92474079, 2.95525098, 2.89884567, 2.88797784]), 'score_time': array([0.14205909, 0.14024639, 0.09770393, 0.09661579]), 'test_pearson_r': array([0.94151261, 0.79691984, 0.95829645, 0.97857395]), 'test_pearson_p': array([-1.83969427e-31, -2.01628428e-15, -5.59854598e-36, -2.87890638e-44]), 'test_spearman_r': array([0.91742721, 0.83548786, 0.94412084, 0.96758683]), 'test_spearman_p': array([-6.64869503e-27, -4.94503701e-18, -4.54843441e-32, -9.16558641e-39]), 'test_kendall_r': array([0.82943597, 0.77708314, 0.85018294, 0.8651097 ]), 'test_kendall_p': array([-2.13187585e-22, -6.33526143e-20, -1.89911936e-23, -7.32867076e-24]), 'test_rmse': array([-0.22734612, -0.41897382, -0.18344083, -0.11860017]), 'test_mae': array([-0.10454682, -0.14584004, -0.0905846 , -0.08157614]), 'test_r2': array([0.88073445, 0.58662841, 0.91384125, 0.95674544]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.28727961, 2.27409482, 2.17441082, 2.11302686]), 'score_time': array([0.10593009, 0.15495253, 0.1047163 , 0.10515094]), 'test_pearson_r': array([0.92592284, 0.82654993, 0.97028046, 0.92626634]), 'test_pearson_p': array([-2.47769628e-28, -2.26788126e-17, -1.55487165e-40, -5.75422122e-28]), 'test_spearman_r': array([0.91022853, 0.86853697, 0.95345307, 0.92271234]), 'test_spearman_p': array([-8.28074370e-26, -7.14868832e-21, -1.65746197e-34, -2.34697381e-27]), 'test_kendall_r': array([0.79092235, 0.82094939, 0.83634905, 0.78896465]), 'test_kendall_p': array([-1.75438339e-20, -5.81275255e-22, -8.76254770e-23, -3.71271278e-20]), 'test_rmse': array([-0.25899063, -0.40196658, -0.15109707, -0.22250422]), 'test_mae': array([-0.1320039 , -0.13681976, -0.09445745, -0.12693412]), 'test_r2': array([0.82618159, 0.64631203, 0.93846279, 0.851669  ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.044142961484786865, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 163, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([26.89327765, 24.86405468, 29.14806414, 28.11007309]), 'score_time': array([0.10423994, 0.10838723, 0.10053897, 0.10547423]), 'test_pearson_r': array([0.97618895, 0.97988407, 0.85917834, 0.92997592]), 'test_pearson_p': array([-1.57690553e-43, -8.21795797e-46, -5.38052614e-20, -1.22813578e-28]), 'test_spearman_r': array([0.97568334, 0.96760023, 0.89493586, 0.94476207]), 'test_spearman_p': array([-3.03369057e-43, -2.26713488e-39, -9.27155964e-24, -9.81921353e-32]), 'test_kendall_r': array([0.89216237, 0.86925177, 0.80810367, 0.86599879]), 'test_kendall_p': array([-1.17565003e-25, -1.61430294e-24, -2.29907434e-21, -8.41604714e-24]), 'test_rmse': array([-0.14863042, -0.12017525, -0.31169271, -0.25304183]), 'test_mae': array([-0.08288604, -0.08009321, -0.13734273, -0.10297796]), 'test_r2': array([0.94910477, 0.95928315, 0.70046713, 0.85978298]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.002861049879148768, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 3169, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.87612081, 1.72374487, 2.01439357, 1.82165098]), 'score_time': array([0.15832305, 0.10268664, 0.09758902, 0.10732913]), 'test_pearson_r': array([0.98184939, 0.84552173, 0.83720103, 0.92010209]), 'test_pearson_p': array([-3.31933130e-47, -7.99598623e-19, -3.65486831e-18, -6.31812436e-27]), 'test_spearman_r': array([0.97532141, 0.86181687, 0.86538653, 0.91543508]), 'test_spearman_p': array([-4.80546932e-43, -3.09167299e-20, -1.43426819e-20, -3.42178037e-26]), 'test_kendall_r': array([0.87970626, 0.78698832, 0.80598916, 0.80178877]), 'test_kendall_p': array([-7.38496802e-25, -2.31701088e-20, -3.15566035e-21, -8.60446310e-21]), 'test_rmse': array([-0.11279368, -0.38237338, -0.34994003, -0.26600236]), 'test_mae': array([-0.07545509, -0.14909604, -0.12381459, -0.14128619]), 'test_r2': array([0.96399234, 0.66508667, 0.65296131, 0.83305918]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09939793013929618, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4800, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 161, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([10.70467424,  9.79757404, 10.56452775, 11.15335584]), 'score_time': array([0.09902263, 0.10137844, 0.14356637, 0.09746957]), 'test_pearson_r': array([0.95099788, 0.88711439, 0.86887542, 0.87390484]), 'test_pearson_p': array([-8.06346411e-34, -7.88016409e-23, -6.62638433e-21, -4.33787958e-21]), 'test_spearman_r': array([0.92613566, 0.91385923, 0.82881192, 0.88316238]), 'test_spearman_p': array([-2.27041070e-28, -2.38559971e-26, -1.55537937e-17, -4.70590222e-22]), 'test_kendall_r': array([0.82356321, 0.84228271, 0.74493067, 0.7925472 ]), 'test_kendall_p': array([-4.36857046e-22, -4.04486258e-23, -2.46725753e-18, -2.41895553e-20]), 'test_rmse': array([-0.19242228, -0.30417709, -0.33243441, -0.31556253]), 'test_mae': array([-0.10483629, -0.1240846 , -0.13797149, -0.12819837]), 'test_r2': array([0.90272404, 0.77175958, 0.72440623, 0.74262192]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.014798641065097335, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 41, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 720, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([3.75142765, 3.64719248, 3.67944884, 3.6733439 ]), 'score_time': array([0.09222293, 0.09468055, 0.09295821, 0.09340763]), 'test_pearson_r': array([0.91118907, 0.98137829, 0.96846691, 0.7586868 ]), 'test_pearson_p': array([-5.98879316e-26, -7.38832159e-47, -9.77694316e-40, -3.80116064e-13]), 'test_spearman_r': array([0.92377978, 0.97368536, 0.97241651, 0.77543172]), 'test_spearman_p': array([-5.88764869e-28, -3.54187975e-42, -1.53185103e-41, -5.37379696e-14]), 'test_kendall_r': array([0.80502531, 0.87201859, 0.87271065, 0.7181724 ]), 'test_kendall_p': array([-3.51292613e-21, -1.26756651e-24, -1.18939588e-24, -6.70522422e-17]), 'test_rmse': array([-0.25642333, -0.127977  , -0.16304512, -0.48181419]), 'test_mae': array([-0.13962519, -0.07521469, -0.09677246, -0.19247771]), 'test_r2': array([0.8037936 , 0.96061302, 0.92352898, 0.5048284 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02666301886779036, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 289, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.30451632, 2.10022163, 2.34421897, 2.41909051]), 'score_time': array([0.09628081, 0.09395242, 0.09541678, 0.09293246]), 'test_pearson_r': array([0.86187944, 0.84273262, 0.95099159, 0.96744058]), 'test_pearson_p': array([-3.05089729e-20, -1.34385113e-18, -8.09534901e-34, -1.05155330e-38]), 'test_spearman_r': array([0.88138837, 0.86220387, 0.93559214, 0.95693583]), 'test_spearman_p': array([-3.42421165e-22, -2.84762727e-20, -3.50528370e-30, -5.23553927e-35]), 'test_kendall_r': array([0.82536466, 0.76811999, 0.83149023, 0.86352357]), 'test_kendall_p': array([-4.20207181e-22, -1.70081211e-19, -1.80071840e-22, -6.68761271e-24]), 'test_rmse': array([-0.361321  , -0.33835729, -0.18948749, -0.16184024]), 'test_mae': array([-0.12467606, -0.14286933, -0.09976398, -0.08996335]), 'test_r2': array([0.700188  , 0.64333373, 0.90349763, 0.93593473]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08722595424697485, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 549, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_3': {'cluster size (%)': 7, 6: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.38738781539472616, 'test_rmse': 0.4361214644225979, 'test_r2': -1.9579001087209003, 'test_pearson_r': array([-0.43811102]), 'test_pearson_p_value': array([0.06063291]), 'test_spearman_r': -0.6215978928884986, 'test_spearman_p_value': 0.004495583399559936, 'test_kendall_r': -0.5235294117647058, 'test_kendall_p_value': 0.0018237781361665644, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.045538980195761004, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1214, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.39168202261630947, 'test_rmse': 0.44141921020665437, 'test_r2': -2.030198219673245, 'test_pearson_r': array([-0.45083247]), 'test_pearson_p_value': array([0.05271605]), 'test_spearman_r': -0.6025472693507509, 'test_spearman_p_value': 0.006326934550140348, 'test_kendall_r': -0.48377791604218745, 'test_kendall_p_value': 0.004052090498421282, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07693173041362837, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 269, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 289, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.39492799118400707, 'test_rmse': 0.4419341452489155, 'test_r2': -2.0372720638736315, 'test_pearson_r': array([-0.43953622]), 'test_pearson_p_value': array([0.05970402]), 'test_spearman_r': -0.6411946160729565, 'test_spearman_p_value': 0.003090579061327294, 'test_kendall_r': -0.5191763001428353, 'test_kendall_p_value': 0.0020397945306137185, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08505399982568303, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 69, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.3962981137421993, 'test_rmse': 0.4504576708677263, 'test_r2': -2.1555608103687067, 'test_pearson_r': array([-0.45842984]), 'test_pearson_p_value': array([0.04837779]), 'test_spearman_r': -0.6262626866575588, 'test_spearman_p_value': 0.004121082852637437, 'test_kendall_r': -0.5309757615097179, 'test_kendall_p_value': 0.001607867648202442, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 84, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.38339330660124665, 'test_rmse': 0.43195052052034416, 'test_r2': -1.901593590989878, 'test_pearson_r': array([-0.42986709]), 'test_pearson_p_value': array([0.06622072]), 'test_spearman_r': -0.6215978928884986, 'test_spearman_p_value': 0.004495583399559936, 'test_kendall_r': -0.5235294117647058, 'test_kendall_p_value': 0.0018237781361665644, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.038034026019202506, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.4102873928868879, 'test_rmse': 0.4633885554696966, 'test_r2': -2.3393288314864336, 'test_pearson_r': array([-0.50207105]), 'test_pearson_p_value': array([0.02848991]), 'test_spearman_r': -0.6221443526800914, 'test_spearman_p_value': 0.004450318447105261, 'test_kendall_r': -0.5207191751642659, 'test_kendall_p_value': 0.0020269051575429377, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.40336825357695466, 'test_rmse': 0.45559157187236965, 'test_r2': -2.2278990393109646, 'test_pearson_r': array([-0.475378]), 'test_pearson_p_value': array([0.0396838]), 'test_spearman_r': -0.6203868827572663, 'test_spearman_p_value': 0.004597243546392882, 'test_kendall_r': -0.5207191751642659, 'test_kendall_p_value': 0.0020269051575429377, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_3': {'cluster size (%)': 7, 6: {'fit_time': array([3.21506715, 3.19212818, 3.2749753 , 3.1015687 , 3.12057424,
       3.18621349, 3.22405672, 3.12268257, 3.20300627, 3.15095782,
       3.20621824, 3.12501693, 3.18977571, 3.1014607 ]), 'score_time': array([1.51546812, 0.09714365, 0.09713173, 0.09825587, 0.09714365,
       0.14433408, 0.09774184, 0.09777117, 0.09677553, 0.14325142,
       0.09646249, 0.0972414 , 0.09672236, 0.14269948]), 'test_pearson_r': array([0.89321584, 0.99347567, 0.98771321, 0.96940596, 0.60176723,
       0.99333874, 0.86759658, 0.96932315, 0.93551679, 0.96418532,
       0.9930846 , 0.95125865, 0.98440768, 0.98271928]), 'test_pearson_p': array([-2.64396665e-07, -1.79111387e-17, -3.81386947e-15, -8.35863122e-12,
       -6.41323748e-03, -2.13597417e-17, -1.50253419e-06, -3.58189330e-11,
       -1.22634672e-08, -1.21640289e-10, -2.57348764e-16, -1.37402708e-09,
       -1.67297452e-13, -3.78792520e-13]), 'test_spearman_r': array([0.85263158, 0.97805092, 0.94736842, 0.94210526, 0.71929825,
       0.98245614, 0.86491228, 0.94883835, 0.94166249, 0.93188854,
       0.99122367, 0.95405279, 0.97830631, 0.96491228]), 'test_spearman_p': array([-3.53981453e-06, -5.11677137e-13, -7.80082922e-10, -1.72238365e-09,
       -5.18354290e-04, -7.73558991e-14, -1.76513030e-06, -2.00924333e-09,
       -5.61230323e-09, -1.87828793e-08, -1.72171485e-15, -8.64446630e-10,
       -2.30443206e-12, -1.03472876e-10]), 'test_kendall_r': array([0.75438596, 0.9       , 0.87134503, 0.83625731, 0.67251462,
       0.91812865, 0.77777778, 0.87132984, 0.86557842, 0.83006536,
       0.94426737, 0.8524636 , 0.91449348, 0.86928105]), 'test_kendall_p': array([-5.24238695e-07, -8.35279080e-08, -4.58322529e-10, -5.55516932e-09,
       -1.56889756e-05, -7.20796807e-12, -1.64978258e-07, -5.42460793e-07,
       -5.63141283e-07, -2.71335027e-08, -4.80698932e-08, -8.32299419e-07,
       -1.34526112e-07, -2.15825858e-09]), 'test_rmse': array([-0.27791933, -0.08149525, -0.12804959, -0.17467355, -0.50319335,
       -0.07946063, -0.35853806, -0.16235008, -0.23354297, -0.15732878,
       -0.07454196, -0.18497365, -0.11070071, -0.08832024]), 'test_mae': array([-0.12842832, -0.04874483, -0.07770959, -0.0906649 , -0.19667492,
       -0.05553965, -0.14834443, -0.06740453, -0.09355605, -0.09598152,
       -0.05389875, -0.12885822, -0.06212148, -0.06363387]), 'test_r2': array([0.77635641, 0.98526768, 0.9655985 , 0.93351643, 0.10317679,
       0.98444915, 0.72304812, 0.93671339, 0.86482177, 0.92545281,
       0.98551483, 0.89658037, 0.96392094, 0.96263006]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.72720003, 2.91919422, 2.5277102 , 2.85855031, 2.77201557,
       2.48095536, 2.68683434, 2.7932055 , 2.61182594, 2.59470987,
       2.58648419, 2.66960144, 2.37993264, 2.75223875]), 'score_time': array([0.10404658, 0.09957623, 0.11094737, 0.10017419, 0.10864878,
       0.10951161, 0.10568905, 0.11228919, 0.11109447, 0.11972404,
       0.10889864, 0.11284828, 0.10700202, 0.11297297]), 'test_pearson_r': array([0.98305392, 0.91799418, 0.98975064, 0.9820831 , 0.73583617,
       0.84050307, 0.9940664 , 0.97471688, 0.97753425, 0.98794419,
       0.99207055, 0.95679165, 0.98913694, 0.93727222]), 'test_pearson_p': array([-5.77293157e-14, -3.05630909e-08, -8.22323245e-16, -9.23881750e-14,
       -3.29287971e-04, -6.63856812e-06, -8.01007431e-18, -7.75610775e-12,
       -3.04096370e-12, -2.16063485e-14, -7.66566934e-16, -5.33304770e-10,
       -9.42425931e-15, -9.88905219e-09]), 'test_spearman_r': array([0.92361721, 0.89552273, 0.97366111, 0.93157895, 0.74275709,
       0.91754386, 0.99122807, 0.95611784, 0.94785764, 0.95611784,
       0.98657077, 0.9504644 , 0.98555212, 0.87764596]), 'test_spearman_p': array([-1.70392493e-08, -2.21384800e-07, -2.37451687e-12, -6.87164496e-09,
       -2.69684992e-04, -3.19693619e-08, -2.20085178e-16, -6.02298234e-10,
       -2.33156775e-09, -6.02298234e-10, -5.09977899e-14, -1.55976502e-09,
       -9.12417033e-14, -1.70877825e-06]), 'test_kendall_r': array([0.81764706, 0.78236648, 0.91176471, 0.8245614 , 0.71177702,
       0.8128655 , 0.95321637, 0.8524636 , 0.8524636 , 0.86557842,
       0.94080983, 0.85620915, 0.93464052, 0.73443018]), 'test_kendall_p': array([-1.12198370e-06, -3.18078416e-06, -5.65458167e-08, -1.17067315e-08,
       -2.25073168e-05, -2.37852170e-08, -1.16815227e-13, -8.32299419e-07,
       -8.32299419e-07, -5.63141283e-07, -5.81823612e-08, -5.28843419e-09,
       -7.81116540e-12, -2.18253405e-05]), 'test_rmse': array([-0.0928169 , -0.2668494 , -0.09446777, -0.12547602, -0.5347441 ,
       -0.38135979, -0.07420631, -0.11569061, -0.12813003, -0.10286422,
       -0.09747179, -0.15473571, -0.09577486, -0.22624995]), 'test_mae': array([-0.05142505, -0.11677759, -0.06742052, -0.07873519, -0.20900592,
       -0.1717062 , -0.0489592 , -0.08663428, -0.09294601, -0.06301398,
       -0.06732512, -0.10501236, -0.0605942 , -0.12740253]), 'test_r2': array([0.9659836 , 0.83623543, 0.97807548, 0.95403752, 0.42979317,
       0.67454184, 0.98790657, 0.94401067, 0.95442974, 0.97203108,
       0.97722654, 0.91290347, 0.97711322, 0.81817614]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.044142961484786865, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 163, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([32.91301227, 33.22461271, 33.44547129, 34.02674866, 31.82091308,
       32.54785562, 33.86033201, 33.59100127, 34.32134962, 34.5625217 ,
       33.98287535, 32.8821106 , 32.01589203, 34.50522304]), 'score_time': array([0.10734153, 0.12036943, 0.10593438, 0.11701465, 0.10224342,
       0.11241341, 0.11392188, 0.11270332, 0.09797192, 0.10564137,
       0.10014009, 0.11179543, 0.10771036, 0.10040832]), 'test_pearson_r': array([0.91849236, 0.97584097, 0.99152982, 0.98876352, 0.96667203,
       0.98920727, 0.98354599, 0.44288021, 0.98270341, 0.96965277,
       0.99081023, 0.91401004, 0.84132753, 0.99343564]), 'test_pearson_p': array([-2.90706499e-08, -1.14784091e-12, -1.63610624e-16, -1.79074272e-15,
       -1.71419371e-11, -1.27332835e-15, -4.50130039e-14, -6.56761522e-02,
       -3.81566202e-13, -3.28874523e-11, -2.48505364e-15, -1.14456330e-07,
       -1.21254381e-05, -1.69823466e-16]), 'test_spearman_r': array([0.89951742, 0.96445819, 0.9877193 , 0.97368421, 0.93549812,
       0.98727522, 0.9837649 , 0.59266915, 0.96384349, 0.94427245,
       0.98915862, 0.90580147, 0.86171311, 0.98553772]), 'test_spearman_p': array([-1.61180294e-07, -2.93899065e-11, -3.79790244e-15, -2.35705500e-12,
       -4.21876611e-09, -5.12890798e-15, -4.01991254e-14, -9.54244177e-03,
       -1.31102802e-10, -3.92399721e-09, -9.27540331e-15, -2.31150851e-07,
       -4.31768401e-06, -9.19675963e-14]), 'test_kendall_r': array([0.8211179 , 0.89149943, 0.92982456, 0.91812865, 0.80938764,
       0.93842046, 0.9266902 , 0.57705228, 0.87501894, 0.83006536,
       0.94426737, 0.82403396, 0.77777778, 0.92765165]), 'test_kendall_p': array([-9.53596222e-07, -1.03161918e-07, -2.06767062e-12, -7.20796807e-12,
       -1.35872010e-06, -2.12970819e-08, -3.18217344e-08, -8.51059259e-04,
       -4.53574602e-07, -2.71335027e-08, -4.80698932e-08, -2.40473321e-06,
       -4.36097754e-07, -8.87180979e-08]), 'test_rmse': array([-0.26205169, -0.14800182, -0.09913501, -0.10229006, -0.13109444,
       -0.10637335, -0.09916489, -0.53836354, -0.12849809, -0.14282576,
       -0.09516102, -0.28504606, -0.36669418, -0.07406901]), 'test_mae': array([-0.11365561, -0.07222114, -0.07602207, -0.06185123, -0.08870113,
       -0.07445755, -0.06714267, -0.22740318, -0.08488617, -0.09534008,
       -0.05718214, -0.12303857, -0.14416745, -0.05368168]), 'test_r2': array([ 0.83495142,  0.94826201,  0.98129278,  0.9759435 ,  0.91717021,
        0.97517532,  0.96362812, -0.5159886 ,  0.96244341,  0.93584939,
        0.98112415,  0.8134772 ,  0.69284204,  0.9859494 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.002861049879148768, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 3169, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([2.25529099, 2.44479156, 2.30963039, 2.4469831 , 2.01567411,
       2.24790382, 2.17363691, 2.19586945, 2.22468996, 2.44981766,
       2.41147995, 2.1744709 , 2.10505533, 2.46007323]), 'score_time': array([0.14902043, 0.10515189, 0.1116147 , 0.10524201, 0.28304458,
       0.12177753, 0.12278318, 0.13846898, 0.16886139, 0.09940886,
       0.10663772, 0.14689827, 0.21211052, 0.1066432 ]), 'test_pearson_r': array([0.99132286, 0.98924085, 0.98112898, 0.43694362, 0.98987213,
       0.96551168, 0.98974033, 0.96529064, 0.75814962, 0.98536716,
       0.98797742, 0.9185152 , 0.98009569, 0.98014481]), 'test_pearson_p': array([-2.00735229e-16, -1.24018925e-15, -1.43133366e-13, -6.14018349e-02,
       -7.43364734e-16, -2.28392753e-11, -8.29352252e-16, -9.49898001e-11,
       -2.66509852e-04, -1.00957307e-13, -2.11366435e-14, -7.55046562e-08,
       -1.16388683e-12, -1.14128305e-12]), 'test_spearman_r': array([0.98463565, 0.9877193 , 0.97323397, 0.68439782, 0.99122807,
       0.93157895, 0.97715441, 0.95971126, 0.80949933, 0.95872033,
       0.98968008, 0.85758514, 0.9504644 , 0.97936017]), 'test_spearman_p': array([-2.52347607e-14, -3.79790244e-15, -2.71850932e-12, -1.22844681e-03,
       -2.20085178e-16, -6.87164496e-09, -7.16901319e-13, -3.07551300e-10,
       -4.70504360e-05, -3.72370945e-10, -6.26289422e-15, -5.38925995e-06,
       -1.55976502e-09, -1.55232323e-12]), 'test_kendall_r': array([0.92352941, 0.92982456, 0.91495995, 0.62863121, 0.94152047,
       0.83625731, 0.89679028, 0.86186076, 0.72131535, 0.89542484,
       0.94771242, 0.76470588, 0.86928105, 0.92156863]), 'test_kendall_p': array([-3.80976840e-08, -2.06767062e-12, -4.73213851e-08, -2.34744248e-04,
       -5.27929196e-13, -5.55516932e-09, -9.83316810e-08, -6.72597856e-07,
       -3.05216065e-05, -2.96242626e-10, -1.81026609e-12, -8.04176944e-07,
       -2.15825858e-09, -2.92550870e-11]), 'test_rmse': array([-0.08612298, -0.0794163 , -0.11937705, -0.69638629, -0.08484177,
       -0.19339801, -0.09849364, -0.15696219, -0.42556529, -0.10216098,
       -0.08472351, -0.32211775, -0.11642568, -0.14627241]), 'test_mae': array([-0.06925258, -0.05077806, -0.07941518, -0.26307924, -0.06091187,
       -0.11268993, -0.06899153, -0.08511326, -0.19412242, -0.06472354,
       -0.05536728, -0.17364233, -0.07656098, -0.08671362]), 'test_r2': array([ 0.98220857,  0.97760986,  0.96078983, -0.83550324,  0.97841407,
        0.93055365,  0.97798248,  0.91987721,  0.48180892,  0.96949734,
        0.96836353,  0.79771921,  0.9590754 ,  0.95926732]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09939793013929618, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4800, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 161, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([12.98786831, 12.40535831, 12.79045796, 12.51852965, 12.31326056,
       12.69306898, 12.55489111, 11.71434045, 12.94215107, 13.01507664,
       13.49789453, 12.91069865, 13.01879311, 12.57245111]), 'score_time': array([0.09458852, 0.11519408, 0.10813498, 0.10346603, 0.17209506,
       0.10022926, 0.11435032, 0.10316348, 0.09419322, 0.13399553,
       0.1098268 , 0.10334802, 0.10283709, 0.09955144]), 'test_pearson_r': array([0.97057619, 0.88424051, 0.98865177, 0.97803168, 0.96035122,
       0.97380731, 0.62133873, 0.91680562, 0.99576991, 0.98823842,
       0.90305279, 0.98188679, 0.85865543, 0.99132074]), 'test_pearson_p': array([-6.02405266e-12, -5.08711852e-07, -1.94716132e-15, -5.15469091e-13,
       -7.34152188e-11, -2.26590865e-12, -4.51718224e-03, -8.86589166e-08,
       -5.08642290e-18, -1.77473959e-14, -2.88376623e-07, -5.50475241e-13,
       -5.09160238e-06, -1.57562071e-15]), 'test_spearman_r': array([0.91754386, 0.89279575, 0.9793589 , 0.95480483, 0.96842105,
       0.97368421, 0.71578947, 0.92561983, 0.94834711, 0.94166249,
       0.85493042, 0.98142415, 0.89473684, 0.98968008]), 'test_spearman_p': array([-3.19693619e-08, -2.72966487e-07, -3.04866461e-13, -2.19224178e-10,
       -1.09055587e-11, -2.35705500e-12, -5.68469114e-04, -3.72334764e-08,
       -2.16548572e-09, -5.61230323e-09, -6.19280424e-06, -6.72563970e-13,
       -5.42211053e-07, -6.26289422e-15]), 'test_kendall_r': array([0.8245614 , 0.77879156, 0.90265879, 0.86803892, 0.88304094,
       0.89473684, 0.66081871, 0.79605263, 0.82236842, 0.82623395,
       0.81311912, 0.90849673, 0.81699346, 0.94771242]), 'test_kendall_p': array([-1.17067315e-08, -3.68335665e-06, -8.20285757e-08, -2.20656528e-07,
       -1.79983887e-10, -6.63913300e-11, -2.38419293e-05, -4.43734615e-06,
       -2.12143788e-06, -1.78800684e-06, -2.59896801e-06, -9.76656516e-11,
       -5.74338967e-08, -1.81026609e-12]), 'test_rmse': array([-0.1459091 , -0.30634985, -0.07442169, -0.13398035, -0.17761544,
       -0.16768635, -0.51593188, -0.19354472, -0.06926879, -0.10497915,
       -0.2295005 , -0.11670879, -0.33527099, -0.09076987]), 'test_mae': array([-0.07807132, -0.15134459, -0.06088726, -0.09242822, -0.08331516,
       -0.08918802, -0.19740619, -0.12290902, -0.04845466, -0.06845406,
       -0.09265031, -0.08746052, -0.13209626, -0.057648  ]), 'test_r2': array([0.94001883, 0.75412317, 0.97725732, 0.94186423, 0.91875601,
       0.94177511, 0.13709517, 0.82067112, 0.99132191, 0.97617599,
       0.77900815, 0.9621031 , 0.70832137, 0.97999569]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.014798641065097335, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 41, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 720, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([4.32930589, 4.58769894, 4.97563934, 4.43183208, 4.80979252,
       4.46302795, 4.34891438, 4.47312927, 4.50227284, 4.79362297,
       4.74675941, 4.32119846, 4.75004959, 4.45147109]), 'score_time': array([0.1501081 , 0.10117984, 0.09014511, 0.1489172 , 0.10015154,
       0.09910321, 0.11887956, 0.11123586, 0.10142279, 0.09533501,
       0.13369894, 0.10786128, 0.10117221, 0.09697342]), 'test_pearson_r': array([0.83276799, 0.94209428, 0.99845123, 0.99266633, 0.98605514,
       0.9683719 , 0.99760959, 0.90311739, 0.94613206, 0.99404242,
       0.99443107, 0.89081178, 0.99197511, 0.77190483]), 'test_pearson_p': array([-9.65633931e-06, -1.72509692e-09, -8.94788369e-23, -4.82630330e-17,
       -1.11231681e-14, -1.10488468e-11, -3.56956178e-21, -2.86903089e-07,
       -3.00872274e-09, -7.83133876e-17, -4.57069519e-17, -7.17492437e-07,
       -8.43313419e-16, -1.74907471e-04]), 'test_spearman_r': array([0.84358654, 0.91531382, 0.99209871, 0.9841843 , 0.98947368,
       0.97368421, 0.98947368, 0.79183884, 0.97110423, 0.96644308,
       0.99948387, 0.9127518 , 0.98037242, 0.78121775]), 'test_spearman_p': array([-5.68610425e-06, -3.97996537e-08, -9.07791577e-17, -3.22268444e-14,
       -1.03053958e-15, -2.35705500e-12, -1.03053958e-15, -9.00793632e-05,
       -2.23221965e-11, -7.27678973e-11, -2.52759617e-25, -1.28040412e-07,
       -1.04146544e-12, -1.29363860e-04]), 'test_kendall_r': array([0.74339194, 0.75073637, 0.95884012, 0.94398977, 0.94152047,
       0.90643275, 0.92982456, 0.58552632, 0.88235294, 0.87869325,
       0.99672667, 0.82623395, 0.91449348, 0.73856209]), 'test_kendall_p': array([-9.95689890e-06, -7.43302335e-06, -1.13214749e-08, -2.01982025e-08,
       -5.27929196e-13, -2.27996852e-11, -2.06767062e-12, -7.35622083e-04,
       -8.28241250e-10, -3.78914056e-07, -8.33473697e-09, -1.78800684e-06,
       -1.34526112e-07, -2.52158005e-06]), 'test_rmse': array([-0.26984218, -0.17553712, -0.04866855, -0.07124317, -0.09808816,
       -0.18163801, -0.05548024, -0.18626768, -0.21115362, -0.07536492,
       -0.07332368, -0.32236214, -0.09653903, -0.51100506]), 'test_mae': array([-0.11623792, -0.1241929 , -0.03826261, -0.04692011, -0.0647675 ,
       -0.08121953, -0.0392642 , -0.11722954, -0.12634369, -0.05382464,
       -0.0559679 , -0.13534515, -0.07588976, -0.19088338]), 'test_r2': array([0.68471047, 0.85471665, 0.99577433, 0.98482348, 0.96406992,
       0.93628402, 0.99283681, 0.78479332, 0.86395704, 0.98811022,
       0.98594797, 0.78156181, 0.97607764, 0.50297867]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02666301886779036, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 289, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.76139927, 2.69391966, 2.70421076, 2.56803608, 2.77385426,
       2.92746878, 2.4618578 , 2.75607562, 2.76519918, 2.70100808,
       2.8595736 , 3.0184083 , 2.83865809, 3.02026916]), 'score_time': array([0.0971334 , 0.09490776, 0.09447408, 0.09485483, 0.09889317,
       0.09496951, 0.09933281, 0.09730673, 0.09453845, 0.09818554,
       0.09929538, 0.09987426, 0.10518146, 0.10488987]), 'test_pearson_r': array([0.99222958, 0.65609926, 0.99470665, 0.94092757, 0.47895137,
       0.99585511, 0.93430685, 0.88081501, 0.97966653, 0.99272716,
       0.99039885, 0.98226252, 0.96357387, 0.99638082]), 'test_pearson_p': array([-7.87995420e-17, -2.28424182e-03, -3.04141163e-18, -2.03568192e-09,
       -3.80153007e-02, -3.81856663e-19, -4.90859043e-09, -1.39963778e-06,
       -1.37860908e-12, -3.84705019e-16, -3.52310286e-15, -4.66036819e-13,
       -1.39012581e-10, -1.46328693e-18]), 'test_spearman_r': array([0.97147881, 0.62917496, 0.98287305, 0.9240896 , 0.57368421,
       0.99298246, 0.89776226, 0.80578555, 0.94372754, 0.98913937,
       0.98089843, 0.98142415, 0.94014448, 0.98348813]), 'test_spearman_p': array([-4.63665082e-12, -3.90057676e-03, -6.31424104e-14, -1.61904890e-08,
       -1.02225810e-02, -3.32215984e-17, -1.85595135e-07, -5.42251287e-05,
       -4.23430894e-09, -9.40746531e-15, -8.39423191e-13, -6.72563970e-13,
       -6.85945810e-09, -2.63828912e-13]), 'test_kendall_r': array([0.90322969, 0.66079284, 0.9321899 , 0.8211179 , 0.62573099,
       0.95321637, 0.76246662, 0.71712078, 0.81311912, 0.94710295,
       0.93115255, 0.92156863, 0.81699346, 0.93464052]), 'test_kendall_p': array([-7.00361385e-08, -8.59381967e-05, -3.06124963e-08, -9.53596222e-07,
       -7.70690079e-05, -1.16815227e-13, -5.34143245e-06, -3.55564627e-05,
       -2.59896801e-06, -5.48777592e-08, -7.34599652e-08, -2.92550870e-11,
       -5.74338967e-08, -7.81116540e-12]), 'test_rmse': array([-0.08100578, -0.5735106 , -0.07435804, -0.19649379, -0.54290551,
       -0.0599937 , -0.19782125, -0.2942498 , -0.11182584, -0.08053291,
       -0.09638837, -0.13474448, -0.15505925, -0.06149473]), 'test_mae': array([-0.05790026, -0.19916626, -0.04957301, -0.10064888, -0.20776129,
       -0.04281262, -0.13781589, -0.14101109, -0.07709222, -0.05585942,
       -0.07750277, -0.06898156, -0.11792877, -0.04280758]), 'test_r2': array([ 0.98332705,  0.29616457,  0.98783497,  0.86938148, -0.3006576 ,
        0.99160102,  0.84967001,  0.76978413,  0.95557149,  0.98290924,
        0.97870933,  0.96057192,  0.91376216,  0.99221207]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08722595424697485, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 549, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_4': {'cluster size (%)': 30, 6: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5635082870801174, 'test_rmse': 0.7746422085326758, 'test_r2': -1.8767179557704479, 'test_pearson_r': array([-0.12113415]), 'test_pearson_p_value': array([0.29397924]), 'test_spearman_r': -0.21540405283065056, 'test_spearman_p_value': 0.059917869280703286, 'test_kendall_r': -0.12198625757311785, 'test_kendall_p_value': 0.11923476200825751, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5645627567212703, 'test_rmse': 0.7704120483228539, 'test_r2': -1.845385421685763, 'test_pearson_r': array([-0.12932396]), 'test_pearson_p_value': array([0.26230205]), 'test_spearman_r': -0.23455529634081043, 'test_spearman_p_value': 0.04004455850833104, 'test_kendall_r': -0.13339578586320755, 'test_kendall_p_value': 0.09155912634779995, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5603076835445042, 'test_rmse': 0.768608673916828, 'test_r2': -1.8320801012190842, 'test_pearson_r': array([-0.12064254]), 'test_pearson_p_value': array([0.29595746]), 'test_spearman_r': -0.22167790667506385, 'test_spearman_p_value': 0.05267452742650833, 'test_kendall_r': -0.11793282943127761, 'test_kendall_p_value': 0.1322603018288062, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02446761761243193, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5581096182883607, 'test_rmse': 0.7596464552416664, 'test_r2': -1.7664192711856814, 'test_pearson_r': array([-0.09713379]), 'test_pearson_p_value': array([0.4006875]), 'test_spearman_r': -0.16211365752580448, 'test_spearman_p_value': 0.15895027968461223, 'test_kendall_r': -0.078040535084247, 'test_kendall_p_value': 0.31983421017607083, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.018690230293335323, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 522, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5637875743192912, 'test_rmse': 0.7697382359635725, 'test_r2': -1.8404103763452513, 'test_pearson_r': array([-0.12961913]), 'test_pearson_p_value': array([0.26120525]), 'test_spearman_r': -0.23238367083811803, 'test_spearman_p_value': 0.04197804098985231, 'test_kendall_r': -0.13060945091045126, 'test_kendall_p_value': 0.09853707017338002, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5587325639235874, 'test_rmse': 0.7607848895476244, 'test_r2': -1.7747172010316583, 'test_pearson_r': array([-0.08831551]), 'test_pearson_p_value': array([0.44499596]), 'test_spearman_r': -0.16653845684628077, 'test_spearman_p_value': 0.14772980090927712, 'test_kendall_r': -0.07435509416067873, 'test_kendall_p_value': 0.3418212562802748, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04291123640495174, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 581, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5653419416121792, 'test_rmse': 0.774970361559819, 'test_r2': -1.879155735803336, 'test_pearson_r': array([-0.12156851]), 'test_pearson_p_value': array([0.29223862]), 'test_spearman_r': -0.2341055485561686, 'test_spearman_p_value': 0.04043878981172574, 'test_kendall_r': -0.1280356090164601, 'test_kendall_p_value': 0.1050145188813124, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 76, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_4': {'cluster size (%)': 33, 6: {'fit_time': array([2.68370295, 2.70386791, 2.66207075]), 'score_time': array([0.09528375, 0.09210038, 0.09431338]), 'test_pearson_r': array([0.93955839, 0.94009689, 0.87396985]), 'test_pearson_p': array([-2.49184403e-41, -5.08313717e-41, -4.69267248e-28]), 'test_spearman_r': array([0.92701422, 0.95207901, 0.85287735]), 'test_spearman_p': array([-5.79812230e-38, -5.52444925e-45, -1.98540537e-25]), 'test_kendall_r': array([0.82562826, 0.85687073, 0.74904106]), 'test_kendall_p': array([-1.41057272e-29, -2.37126565e-31, -2.24866671e-24]), 'test_rmse': array([-0.22467934, -0.22620337, -0.29714187]), 'test_mae': array([-0.10812368, -0.11015592, -0.14177466]), 'test_r2': array([0.87873255, 0.88109985, 0.73628039]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.13414979, 2.09445715, 1.94411039]), 'score_time': array([0.09613609, 0.16042852, 0.09963703]), 'test_pearson_r': array([0.84980232, 0.89361107, 0.95214957]), 'test_pearson_p': array([-2.32139111e-25, -5.78038827e-31, -5.20044241e-45]), 'test_spearman_r': array([0.83245534, 0.90348544, 0.94441826]), 'test_spearman_p': array([-1.65149325e-23, -1.18970368e-32, -2.39360170e-42]), 'test_kendall_r': array([0.71503338, 0.82023989, 0.82894464]), 'test_kendall_p': array([-1.43175123e-22, -6.57810817e-29, -1.98264175e-29]), 'test_rmse': array([-0.3668929 , -0.29887229, -0.18506491]), 'test_mae': array([-0.17214402, -0.12350351, -0.11011634]), 'test_r2': array([0.65220698, 0.78414581, 0.90551458]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.044142961484786865, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 163, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([23.0225141 , 24.32902265, 25.72652197]), 'score_time': array([0.13387084, 0.11246228, 0.10288882]), 'test_pearson_r': array([0.96839807, 0.8110169 , 0.91275763]), 'test_pearson_p': array([-4.86626482e-53, -2.94711916e-21, -2.07690774e-34]), 'test_spearman_r': array([0.96904022, 0.83311395, 0.92876665]), 'test_spearman_p': array([-2.06070213e-53, -2.57752974e-23, -5.81096973e-38]), 'test_kendall_r': array([0.87548763, 0.75460702, 0.82944511]), 'test_kendall_p': array([-4.78440456e-33, -1.24677700e-24, -2.29618702e-29]), 'test_rmse': array([-0.16228963, -0.38138859, -0.27267336]), 'test_mae': array([-0.09507147, -0.16372388, -0.12315961]), 'test_r2': array([0.93762952, 0.56460424, 0.82443044]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.002861049879148768, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 3169, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.5612309 , 1.65505624, 1.67546821]), 'score_time': array([0.14383793, 0.10675406, 0.10627007]), 'test_pearson_r': array([0.85111934, 0.86233573, 0.9348813 ]), 'test_pearson_p': array([-1.64313451e-25, -1.49291291e-26, -1.52107184e-39]), 'test_spearman_r': array([0.8982353 , 0.88462283, 0.92390792]), 'test_spearman_p': array([-4.30657835e-32, -1.44151466e-29, -8.39489222e-37]), 'test_kendall_r': array([0.82406358, 0.78842122, 0.8015344 ]), 'test_kendall_p': array([-2.68107799e-29, -8.37646480e-27, -9.85241967e-28]), 'test_rmse': array([-0.33649724, -0.35080313, -0.23784903]), 'test_mae': array([-0.12086701, -0.14712228, -0.13146255]), 'test_r2': array([0.66864391, 0.69847935, 0.86846283]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09939793013929618, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4800, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 161, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([ 9.19119358,  9.24770284, 10.61101413]), 'score_time': array([0.10794783, 0.10373998, 0.11247301]), 'test_pearson_r': array([0.95604863, 0.83231063, 0.89762584]), 'test_pearson_p': array([-4.62347252e-47, -3.09888287e-23, -1.25037903e-31]), 'test_spearman_r': array([0.93968273, 0.82775702, 0.91072709]), 'test_spearman_p': array([-2.28896230e-41, -8.64636927e-23, -5.23187311e-34]), 'test_kendall_r': array([0.83338168, 0.75140552, 0.81612598]), 'test_kendall_p': array([-4.68825363e-30, -1.59317759e-24, -1.23229260e-28]), 'test_rmse': array([-0.18446304, -0.36794086, -0.27991122]), 'test_mae': array([-0.10419172, -0.15431494, -0.12415429]), 'test_r2': array([0.91358764, 0.65716816, 0.80161643]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.014798641065097335, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 41, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 720, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([3.44590783, 3.07143092, 3.62625933]), 'score_time': array([0.10006571, 0.11404204, 0.10182977]), 'test_pearson_r': array([0.89262171, 0.934914  , 0.84803326]), 'test_pearson_p': array([-3.74269674e-31, -1.49031775e-39, -6.97258549e-25]), 'test_spearman_r': array([0.90039284, 0.93656769, 0.85695956]), 'test_spearman_p': array([-1.81365635e-32, -5.23212683e-40, -6.64833973e-26]), 'test_kendall_r': array([0.77709566, 0.80904767, 0.78145007]), 'test_kendall_p': array([-2.32628201e-26, -3.49776814e-28, -3.40067184e-26]), 'test_rmse': array([-0.28919347, -0.23429351, -0.37420997]), 'test_mae': array([-0.15980476, -0.13223232, -0.15163709]), 'test_r2': array([0.76377022, 0.84975456, 0.6994232 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02666301886779036, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 289, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.08947825, 2.06257081, 2.27022982]), 'score_time': array([0.09849191, 0.09399915, 0.09614563]), 'test_pearson_r': array([0.88309033, 0.78690945, 0.98684191]), 'test_pearson_p': array([-1.13296624e-29, -2.67628923e-19, -2.97223213e-68]), 'test_spearman_r': array([0.90126579, 0.82693188, 0.98419124]), 'test_spearman_p': array([-1.27101448e-32, -1.03797954e-22, -6.27313517e-65]), 'test_kendall_r': array([0.83424244, 0.74032528, 0.89800001]), 'test_kendall_p': array([-5.69800165e-30, -8.17487733e-24, -2.52917735e-34]), 'test_rmse': array([-0.31194126, -0.3979703 , -0.10559978]), 'test_mae': array([-0.11066334, -0.16812295, -0.07718494]), 'test_r2': array([0.75402441, 0.53489841, 0.97260867]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08722595424697485, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 549, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'overall data shape': {'targets_shape': (259, 1), 'training_features_shape': (259, 532)}}
Trimer_scaler
Filename: (Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_log Rg (nm)/KM5 polymer_solvent HSP and polysize cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_log Rg (nm)/KM5 polymer_solvent HSP and polysize cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_predictions.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_log Rg (nm)/KM5 polymer_solvent HSP and polysize cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_ClusterTruth.json
Done Saving scores!
------------------------------ 
Plotted Comparitive Cluster Scores!
______________________________ 
Plotted Parity Plots!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c025n03>
Subject: Job 295214: <XGBR_log Rg (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311> in cluster <Hazel> Done

Job <XGBR_log Rg (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311> was submitted from host <c040n02> by user <sdehgha2> in cluster <Hazel> at Tue Mar 11 19:09:31 2025
Job was executed on host(s) <8*c025n03>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Wed Mar 12 08:47:34 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Wed Mar 12 08:47:34 2025
Terminated at Thu Mar 13 20:39:21 2025
Results reported at Thu Mar 13 20:39:21 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input



#BSUB -n 8
#BSUB -W 72:05
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "XGBR_log Rg (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_log Rg (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_log Rg (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../make_ood_prediction.py --target_features "log Rg (nm)"                                       --representation "Mordred"                                       --regressor_type "XGBR"                                       --oligomer_representation "Trimer"                                       --numerical_feats 'Mw (g/mol)' 'PDI' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" 'solvent dP' 'solvent dD' 'solvent dH'                                       --clustering_method "KM5 polymer_solvent HSP and polysize cluster" 



------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   443734.00 sec.
    Max Memory :                                 7 GB
    Average Memory :                             5.35 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               9.00 GB
    Max Swap :                                   4 GB
    Max Processes :                              39
    Max Threads :                                42
    Run time :                                   129119 sec.
    Turnaround time :                            178190 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_log Rg (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311.err> for stderr output of this job.




-------------------------------------------------- 
OOD TEST ON 0



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06691496056727488), ('regressor__regressor__max_depth', 9960), ('regressor__regressor__n_estimators', 1460), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010784686139245684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 293), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.047101450705423625), ('regressor__regressor__max_depth', 6165), ('regressor__regressor__n_estimators', 342), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09900421675060596), ('regressor__regressor__max_depth', 2249), ('regressor__regressor__n_estimators', 216), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07693173041362837), ('regressor__regressor__max_depth', 269), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06991692945397764), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 586), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007476736232962265), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1339), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02235317496820828), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1361), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034769668589043685), ('regressor__regressor__max_depth', 2287), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054611118933333466), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.044142961484786865), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09964956943278974), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 263), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08122210979569741), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 248), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029846085308718375), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1646), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09673275795705669), ('regressor__regressor__max_depth', 6366), ('regressor__regressor__n_estimators', 111), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.016707722321526768), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 905), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.027364528220782454), ('regressor__regressor__max_depth', 33), ('regressor__regressor__n_estimators', 454), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06430422638335676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 348), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002861049879148768), ('regressor__regressor__max_depth', 3169), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012933553514178048), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1254), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004540102074705809), ('regressor__regressor__max_depth', 8931), ('regressor__regressor__n_estimators', 1863), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.018892380435165137), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 982), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.033842172784931644), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0636380275390342), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 270), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023878802071886857), ('regressor__regressor__max_depth', 6612), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07144648941556735), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 257), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0056446688924867835), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 515), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019513341865553903), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 197), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 709), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00978405663103578), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 976), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014798641065097335), ('regressor__regressor__max_depth', 41), ('regressor__regressor__n_estimators', 720), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06932966365817923), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025454649768777), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004553430532180703), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 327), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05322307893823153), ('regressor__regressor__max_depth', 6336), ('regressor__regressor__n_estimators', 1972), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035976152908526224), ('regressor__regressor__max_depth', 3400), ('regressor__regressor__n_estimators', 93), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018906632583248512), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03437207373023222), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1048), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04043514983864281), ('regressor__regressor__max_depth', 7159), ('regressor__regressor__n_estimators', 1084), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 523), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02666301886779036), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0727880237480246), ('regressor__regressor__max_depth', 502), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.061244537567261184), ('regressor__regressor__max_depth', 9778), ('regressor__regressor__n_estimators', 86), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0036027714527399816), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1254), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016782628487438305), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08722595424697485), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 549), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009658578773779758), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06719393641583839), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 1



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07400106531629838), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 103), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06448549176772554), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023355437206208584), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1315), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 59), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09900421675060596), ('regressor__regressor__max_depth', 2249), ('regressor__regressor__n_estimators', 216), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0035367525237197123), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02432062808308654), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 194), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04168926788341541), ('regressor__regressor__max_depth', 13), ('regressor__regressor__n_estimators', 600), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.021326332021506612), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 738), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054611118933333466), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.044142961484786865), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09964956943278974), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 263), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08122210979569741), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 248), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01375745507495999), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1049), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005241731481517986), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06718419967550611), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 175), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00493766456298934), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06430422638335676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 348), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002861049879148768), ('regressor__regressor__max_depth', 3169), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.018347354984659933), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 998), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011265620546133868), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 384), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0474818398896254), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1244), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003413294299800041), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 938), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0636380275390342), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 270), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023878802071886857), ('regressor__regressor__max_depth', 6612), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07144648941556735), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 257), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0056446688924867835), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 515), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03826194283498802), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06289984026196727), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 367), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02808287184621455), ('regressor__regressor__max_depth', 236), ('regressor__regressor__n_estimators', 102), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04028577320512334), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014798641065097335), ('regressor__regressor__max_depth', 41), ('regressor__regressor__n_estimators', 720), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06932966365817923), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025454649768777), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004553430532180703), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04205245532540546), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 181), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.046241568368948625), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 588), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005340137210463049), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 608), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06037022578047438), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1095), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018906632583248512), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03437207373023222), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1048), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04043514983864281), ('regressor__regressor__max_depth', 7159), ('regressor__regressor__n_estimators', 1084), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 523), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02666301886779036), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06603940892563014), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1132), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.028764781492881895), ('regressor__regressor__max_depth', 36), ('regressor__regressor__n_estimators', 652), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05955815940310405), ('regressor__regressor__max_depth', 14), ('regressor__regressor__n_estimators', 647), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.028764781492881895), ('regressor__regressor__max_depth', 36), ('regressor__regressor__n_estimators', 652), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05099458396658225), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 681), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016782628487438305), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08722595424697485), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 549), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009658578773779758), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06719393641583839), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 2



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011100803216085116), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06177308018104403), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 236), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04989503113689693), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 72), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09900421675060596), ('regressor__regressor__max_depth', 2249), ('regressor__regressor__n_estimators', 216), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06991692945397764), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 586), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03084963668718735), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 551), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034769668589043685), ('regressor__regressor__max_depth', 2287), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06991692945397764), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 586), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 267), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054611118933333466), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.044142961484786865), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09964956943278974), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 263), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08122210979569741), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 248), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 240), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770546264154471), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 676), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 75), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 101), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06430422638335676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 348), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002861049879148768), ('regressor__regressor__max_depth', 3169), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010140994491396016), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 408), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.082533793031362), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 1376), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02288285280570927), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1105), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0636380275390342), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 270), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023878802071886857), ('regressor__regressor__max_depth', 6612), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07144648941556735), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 257), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0056446688924867835), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 515), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.021650644653546904), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 217), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054265923859029695), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 321), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05716478825756704), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010188282727061109), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06539594673390173), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014798641065097335), ('regressor__regressor__max_depth', 41), ('regressor__regressor__n_estimators', 720), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06932966365817923), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025454649768777), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004553430532180703), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0916606457067034), ('regressor__regressor__max_depth', 8114), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09866603777275508), ('regressor__regressor__max_depth', 8558), ('regressor__regressor__n_estimators', 1963), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 117), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06860587232651784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 145), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018906632583248512), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03437207373023222), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1048), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04043514983864281), ('regressor__regressor__max_depth', 7159), ('regressor__regressor__n_estimators', 1084), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 523), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02666301886779036), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0700855910032767), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1327), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 392), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05675144902419427), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 111), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 55), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 100), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016782628487438305), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08722595424697485), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 549), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009658578773779758), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06719393641583839), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 3



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.045538980195761004), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1214), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003137586972595484), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 947), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04143875301171883), ('regressor__regressor__max_depth', 2244), ('regressor__regressor__n_estimators', 552), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09900421675060596), ('regressor__regressor__max_depth', 2249), ('regressor__regressor__n_estimators', 216), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 311), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 202), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06991692945397764), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 586), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07693173041362837), ('regressor__regressor__max_depth', 269), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054611118933333466), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.044142961484786865), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09964956943278974), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 263), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08122210979569741), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 248), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08505399982568303), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09864507104082976), ('regressor__regressor__max_depth', 2921), ('regressor__regressor__n_estimators', 419), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001857735989745937), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1585), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03351998413480203), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 221), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002115444065960139), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1719), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06430422638335676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 348), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002861049879148768), ('regressor__regressor__max_depth', 3169), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 84), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03578100722941682), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023684694034183233), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009832691171440634), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0636380275390342), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 270), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023878802071886857), ('regressor__regressor__max_depth', 6612), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07144648941556735), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 257), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0056446688924867835), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 515), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.038034026019202506), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.092567490916079), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014798641065097335), ('regressor__regressor__max_depth', 41), ('regressor__regressor__n_estimators', 720), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06932966365817923), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025454649768777), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004553430532180703), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06935590406220689), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 167), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 73), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002687568689829605), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 897), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 545), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018906632583248512), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03437207373023222), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1048), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04043514983864281), ('regressor__regressor__max_depth', 7159), ('regressor__regressor__n_estimators', 1084), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 523), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02666301886779036), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 443), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 345), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016782628487438305), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08722595424697485), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 549), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009658578773779758), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06719393641583839), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 4



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031136046801672077), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05088514964930641), ('regressor__regressor__max_depth', 13), ('regressor__regressor__n_estimators', 656), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913427408426909), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.061280822921180575), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 198), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09900421675060596), ('regressor__regressor__max_depth', 2249), ('regressor__regressor__n_estimators', 216), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06609576912703036), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 187), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.053651178280419744), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06983186191992174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05611141084376036), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054611118933333466), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.044142961484786865), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09964956943278974), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 263), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08122210979569741), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 248), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04387902362585827), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05612060210227508), ('regressor__regressor__max_depth', 9040), ('regressor__regressor__n_estimators', 543), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1163), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05432200821306124), ('regressor__regressor__max_depth', 14), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02446761761243193), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06430422638335676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 348), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002861049879148768), ('regressor__regressor__max_depth', 3169), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.058034723444563695), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0025639366890400517), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07209476005152633), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 1346), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.018690230293335323), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 522), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0636380275390342), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 270), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023878802071886857), ('regressor__regressor__max_depth', 6612), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07144648941556735), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 257), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0056446688924867835), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 515), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06667100983259124), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 585), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.047797181875125085), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0527870663233038), ('regressor__regressor__max_depth', 13), ('regressor__regressor__n_estimators', 109), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.059374744223908524), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 121), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014798641065097335), ('regressor__regressor__max_depth', 41), ('regressor__regressor__n_estimators', 720), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06932966365817923), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025454649768777), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004553430532180703), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04291123640495174), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 581), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06262460025079034), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 178), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0019752701924272784), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1287), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06449854041502759), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018906632583248512), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03437207373023222), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1048), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04043514983864281), ('regressor__regressor__max_depth', 7159), ('regressor__regressor__n_estimators', 1084), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 523), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02666301886779036), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03693499023328491), ('regressor__regressor__max_depth', 28), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005082949196805614), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 76), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05882646764116619), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 430), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02369977595419692), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 164), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016782628487438305), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08722595424697485), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 549), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009658578773779758), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06719393641583839), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])


{'CO_0': {'cluster size (%)': 34, 6: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.4323645682730271, 'test_rmse': 0.6250293781502717, 'test_r2': -0.20809447420649074, 'test_pearson_r': array([0.01058803]), 'test_pearson_p_value': array([0.92155279]), 'test_spearman_r': -0.1559789098630279, 'test_spearman_p_value': 0.14438618372383535, 'test_kendall_r': -0.07994410204264424, 'test_kendall_p_value': 0.2766511023252606, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.4386373603571246, 'test_rmse': 0.6319870589094312, 'test_r2': -0.23514062660157053, 'test_pearson_r': array([-0.02347242]), 'test_pearson_p_value': array([0.8271657]), 'test_spearman_r': -0.18889901837696094, 'test_spearman_p_value': 0.07624932228276042, 'test_kendall_r': -0.10213996877970824, 'test_kendall_p_value': 0.16365005888679252, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.007476736232962265, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1339, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.4375295939699566, 'test_rmse': 0.6309934096157312, 'test_r2': -0.2312597503146676, 'test_pearson_r': array([-0.0173188]), 'test_pearson_p_value': array([0.87202443]), 'test_spearman_r': -0.1682375324899816, 'test_spearman_p_value': 0.11503309299554199, 'test_kendall_r': -0.09289439842092663, 'test_kendall_p_value': 0.2068644427864783, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.027364528220782454, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 33, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 454, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.4385543960493181, 'test_rmse': 0.631544993434452, 'test_r2': -0.2334133062202257, 'test_pearson_r': array([-0.02194003]), 'test_pearson_p_value': array([0.83829067]), 'test_spearman_r': -0.19075858022315378, 'test_spearman_p_value': 0.07334878616283727, 'test_kendall_r': -0.1056198186271976, 'test_kendall_p_value': 0.14918508269622557, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.012933553514178048, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1254, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.4349267318939783, 'test_rmse': 0.6187508745413072, 'test_r2': -0.18394543583243617, 'test_pearson_r': array([-0.00868485]), 'test_pearson_p_value': array([0.93562011]), 'test_spearman_r': -0.15101656622152573, 'test_spearman_p_value': 0.15775473825937675, 'test_kendall_r': -0.07514769670572262, 'test_kendall_p_value': 0.3127950247788108, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.019513341865553903, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 197, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.43547682546968924, 'test_rmse': 0.6228811650842896, 'test_r2': -0.19980435369565885, 'test_pearson_r': array([-0.00077899]), 'test_pearson_p_value': array([0.9942193]), 'test_spearman_r': -0.16437927599207255, 'test_spearman_p_value': 0.1237262014715694, 'test_kendall_r': -0.07465241418764011, 'test_kendall_p_value': 0.307902832884427, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 327, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.438378224308529, 'test_rmse': 0.6250979918845598, 'test_r2': -0.20835973029188115, 'test_pearson_r': array([-0.02205778]), 'test_pearson_p_value': array([0.8374347]), 'test_spearman_r': -0.1856165431852523, 'test_spearman_p_value': 0.0815930734840702, 'test_kendall_r': -0.09524999541832832, 'test_kendall_p_value': 0.20041783963559145, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.061244537567261184, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 9778, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 86, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_0': {'cluster size (%)': 33, 6: {'fit_time': array([3.45965314, 3.41695046, 3.34621978]), 'score_time': array([0.1338675 , 0.12102318, 0.19617629]), 'test_pearson_r': array([0.93955839, 0.94009689, 0.87396985]), 'test_pearson_p': array([-2.49184403e-41, -5.08313717e-41, -4.69267248e-28]), 'test_spearman_r': array([0.92701422, 0.95207901, 0.85287735]), 'test_spearman_p': array([-5.79812230e-38, -5.52444925e-45, -1.98540537e-25]), 'test_kendall_r': array([0.82562826, 0.85687073, 0.74904106]), 'test_kendall_p': array([-1.41057272e-29, -2.37126565e-31, -2.24866671e-24]), 'test_rmse': array([-0.22467934, -0.22620337, -0.29714187]), 'test_mae': array([-0.10812368, -0.11015592, -0.14177466]), 'test_r2': array([0.87873255, 0.88109985, 0.73628039]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.66190267, 2.43643332, 2.44176841]), 'score_time': array([0.12142682, 0.12625074, 0.12725019]), 'test_pearson_r': array([0.84980232, 0.89361107, 0.95214957]), 'test_pearson_p': array([-2.32139111e-25, -5.78038827e-31, -5.20044241e-45]), 'test_spearman_r': array([0.83245534, 0.90348544, 0.94441826]), 'test_spearman_p': array([-1.65149325e-23, -1.18970368e-32, -2.39360170e-42]), 'test_kendall_r': array([0.71503338, 0.82023989, 0.82894464]), 'test_kendall_p': array([-1.43175123e-22, -6.57810817e-29, -1.98264175e-29]), 'test_rmse': array([-0.3668929 , -0.29887229, -0.18506491]), 'test_mae': array([-0.17214402, -0.12350351, -0.11011634]), 'test_r2': array([0.65220698, 0.78414581, 0.90551458]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.044142961484786865, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 163, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([28.4171114 , 30.3977468 , 30.89164472]), 'score_time': array([0.13162708, 0.14247942, 0.12708902]), 'test_pearson_r': array([0.96839807, 0.8110169 , 0.91275763]), 'test_pearson_p': array([-4.86626482e-53, -2.94711916e-21, -2.07690774e-34]), 'test_spearman_r': array([0.96904022, 0.83311395, 0.92876665]), 'test_spearman_p': array([-2.06070213e-53, -2.57752974e-23, -5.81096973e-38]), 'test_kendall_r': array([0.87548763, 0.75460702, 0.82944511]), 'test_kendall_p': array([-4.78440456e-33, -1.24677700e-24, -2.29618702e-29]), 'test_rmse': array([-0.16228963, -0.38138859, -0.27267336]), 'test_mae': array([-0.09507147, -0.16372388, -0.12315961]), 'test_r2': array([0.93762952, 0.56460424, 0.82443044]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.002861049879148768, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 3169, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.98494029, 1.99749303, 2.07323742]), 'score_time': array([0.12665415, 0.11797452, 0.12658215]), 'test_pearson_r': array([0.85111934, 0.86233573, 0.9348813 ]), 'test_pearson_p': array([-1.64313451e-25, -1.49291291e-26, -1.52107184e-39]), 'test_spearman_r': array([0.8982353 , 0.88462283, 0.92390792]), 'test_spearman_p': array([-4.30657835e-32, -1.44151466e-29, -8.39489222e-37]), 'test_kendall_r': array([0.82406358, 0.78842122, 0.8015344 ]), 'test_kendall_p': array([-2.68107799e-29, -8.37646480e-27, -9.85241967e-28]), 'test_rmse': array([-0.33649724, -0.35080313, -0.23784903]), 'test_mae': array([-0.12086701, -0.14712228, -0.13146255]), 'test_r2': array([0.66864391, 0.69847935, 0.86846283]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09939793013929618, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4800, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 161, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([11.46396971, 11.4526813 , 12.72384238]), 'score_time': array([0.12444401, 0.13572621, 0.11878085]), 'test_pearson_r': array([0.95604863, 0.83231063, 0.89762584]), 'test_pearson_p': array([-4.62347252e-47, -3.09888287e-23, -1.25037903e-31]), 'test_spearman_r': array([0.93968273, 0.82775702, 0.91072709]), 'test_spearman_p': array([-2.28896230e-41, -8.64636927e-23, -5.23187311e-34]), 'test_kendall_r': array([0.83338168, 0.75140552, 0.81612598]), 'test_kendall_p': array([-4.68825363e-30, -1.59317759e-24, -1.23229260e-28]), 'test_rmse': array([-0.18446304, -0.36794086, -0.27991122]), 'test_mae': array([-0.10419172, -0.15431494, -0.12415429]), 'test_r2': array([0.91358764, 0.65716816, 0.80161643]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.014798641065097335, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 41, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 720, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([4.22521591, 3.56751323, 4.47474527]), 'score_time': array([0.12009096, 0.11812687, 0.11757278]), 'test_pearson_r': array([0.89262171, 0.934914  , 0.84803326]), 'test_pearson_p': array([-3.74269674e-31, -1.49031775e-39, -6.97258549e-25]), 'test_spearman_r': array([0.90039284, 0.93656769, 0.85695956]), 'test_spearman_p': array([-1.81365635e-32, -5.23212683e-40, -6.64833973e-26]), 'test_kendall_r': array([0.77709566, 0.80904767, 0.78145007]), 'test_kendall_p': array([-2.32628201e-26, -3.49776814e-28, -3.40067184e-26]), 'test_rmse': array([-0.28919347, -0.23429351, -0.37420997]), 'test_mae': array([-0.15980476, -0.13223232, -0.15163709]), 'test_r2': array([0.76377022, 0.84975456, 0.6994232 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02666301886779036, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 289, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.57028508, 2.54775   , 2.78119707]), 'score_time': array([0.11289883, 0.11788034, 0.11511517]), 'test_pearson_r': array([0.88309033, 0.78690945, 0.98684191]), 'test_pearson_p': array([-1.13296624e-29, -2.67628923e-19, -2.97223213e-68]), 'test_spearman_r': array([0.90126579, 0.82693188, 0.98419124]), 'test_spearman_p': array([-1.27101448e-32, -1.03797954e-22, -6.27313517e-65]), 'test_kendall_r': array([0.83424244, 0.74032528, 0.89800001]), 'test_kendall_p': array([-5.69800165e-30, -8.17487733e-24, -2.52917735e-34]), 'test_rmse': array([-0.31194126, -0.3979703 , -0.10559978]), 'test_mae': array([-0.11066334, -0.16812295, -0.07718494]), 'test_r2': array([0.75402441, 0.53489841, 0.97260867]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08722595424697485, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 549, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_1': {'cluster size (%)': 6, 6: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.6847965280941521, 'test_rmse': 0.7558519053108299, 'test_r2': 0.30941373007991435, 'test_pearson_r': array([0.5889141]), 'test_pearson_p_value': array([0.01638456]), 'test_spearman_r': 0.4399194095428036, 'test_spearman_p_value': 0.08816371656254912, 'test_kendall_r': 0.20979429225311444, 'test_kendall_p_value': 0.28328298370814486, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06448549176772554, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 77, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.6996206987134015, 'test_rmse': 0.7880987292264622, 'test_r2': 0.24923197184322277, 'test_pearson_r': array([0.57233987]), 'test_pearson_p_value': array([0.02051157]), 'test_spearman_r': 0.43806034499815993, 'test_spearman_p_value': 0.08967282953475358, 'test_kendall_r': 0.1996866881862366, 'test_kendall_p_value': 0.30526089342285023, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.021326332021506612, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 738, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.6868574965230023, 'test_rmse': 0.7599964918582185, 'test_r2': 0.30181953940648876, 'test_pearson_r': array([0.57910767]), 'test_pearson_p_value': array([0.01873928]), 'test_spearman_r': 0.43806034499815993, 'test_spearman_p_value': 0.08967282953475358, 'test_kendall_r': 0.1996866881862366, 'test_kendall_p_value': 0.30526089342285023, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.00493766456298934, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.6929617460301911, 'test_rmse': 0.7835422047002504, 'test_r2': 0.2578882570906482, 'test_pearson_r': array([0.58016714]), 'test_pearson_p_value': array([0.01847294]), 'test_spearman_r': 0.45018658292198444, 'test_spearman_p_value': 0.08015505502481834, 'test_kendall_r': 0.2178400234758945, 'test_kendall_p_value': 0.2633883610692104, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0474818398896254, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1244, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.6951782602301633, 'test_rmse': 0.7762519386565517, 'test_r2': 0.27163358731154796, 'test_pearson_r': array([0.57021376]), 'test_pearson_p_value': array([0.02109424]), 'test_spearman_r': 0.43806034499815993, 'test_spearman_p_value': 0.08967282953475358, 'test_kendall_r': 0.1996866881862366, 'test_kendall_p_value': 0.30526089342285023, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04028577320512334, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.6958313147953545, 'test_rmse': 0.7771582508234257, 'test_r2': 0.26993178748503643, 'test_pearson_r': array([0.56967233]), 'test_pearson_p_value': array([0.02124464]), 'test_spearman_r': 0.43806034499815993, 'test_spearman_p_value': 0.08967282953475358, 'test_kendall_r': 0.1996866881862366, 'test_kendall_p_value': 0.30526089342285023, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.046241568368948625, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 588, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7009121749034917, 'test_rmse': 0.7848248983897439, 'test_r2': 0.25545652795860463, 'test_pearson_r': array([0.57032587]), 'test_pearson_p_value': array([0.0210632]), 'test_spearman_r': 0.43806034499815993, 'test_spearman_p_value': 0.08967282953475358, 'test_kendall_r': 0.1996866881862366, 'test_kendall_p_value': 0.30526089342285023, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05955815940310405, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 14, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 647, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_1': {'cluster size (%)': 6, 6: {'fit_time': array([5.24481106, 6.66891551, 4.71683025, 5.23116732, 6.67484474,
       4.38213944, 5.48988461, 5.12597299, 5.20104003, 6.89671326,
       7.04921317, 5.96409106, 5.25843239, 6.43580461, 6.44192791,
       6.60076404]), 'score_time': array([0.12385058, 0.11891913, 0.14370394, 0.12521744, 0.11407423,
       0.13594317, 0.12802815, 0.14560771, 0.24060583, 0.11265349,
       0.12289953, 0.11542988, 0.19422197, 0.11441994, 0.11500859,
       0.11366439]), 'test_pearson_r': array([0.8855183 , 0.97199993, 0.99544519, 0.92500915, 0.97519681,
       0.70398852, 0.9926275 , 0.84787365, 0.96677166, 0.91138069,
       0.99366546, 0.96958421, 0.95366878, 0.95233834, 0.98577445,
       0.98447336]), 'test_pearson_p': array([-2.28516196e-06, -7.63851236e-11, -9.93648178e-17, -2.92812787e-07,
       -1.45034763e-10, -2.33592490e-03, -3.11332856e-14, -3.34837530e-05,
       -1.09840305e-09, -9.08169478e-07, -1.07923009e-14, -5.95857432e-10,
       -1.08676777e-08, -1.32025829e-08, -3.04478382e-12, -5.59916331e-12]), 'test_spearman_r': array([0.87009804, 0.9417537 , 0.98957713, 0.84411765, 0.96176471,
       0.71764706, 0.99411765, 0.81176471, 0.94334095, 0.87058824,
       0.99337775, 0.9256809 , 0.93451092, 0.95294118, 0.97496424,
       0.95294118]), 'test_spearman_p': array([-5.62745161e-06, -1.70014816e-08, -4.85604035e-14, -3.93024274e-05,
       -2.89508013e-09, -1.74753506e-03, -6.43399749e-15, -1.34322375e-04,
       -4.32397330e-08, -1.14989348e-05, -1.47168758e-14, -2.75438509e-07,
       -1.16375217e-07, -1.20965793e-08, -1.54730831e-10, -1.20965793e-08]), 'test_kendall_r': array([0.79411765, 0.83395402, 0.952036  , 0.73333333, 0.88333333,
       0.71666667, 0.96666667, 0.73333333, 0.86193223, 0.73333333,
       0.96235152, 0.82845913, 0.87866878, 0.86666667, 0.90759507,
       0.85      ]), 'test_kendall_p': array([-5.45407093e-07, -3.18179868e-06, -1.04704970e-07, -1.62687222e-05,
       -1.43717927e-08, -2.87624658e-05, -1.29045888e-11, -1.62687222e-05,
       -3.45008795e-06, -1.62687222e-05, -2.18526649e-07, -8.12917002e-06,
       -2.22140114e-06, -3.98309214e-08, -1.10296350e-06, -1.02027025e-07]), 'test_rmse': array([-0.28291057, -0.15843515, -0.07730707, -0.26542575, -0.11021063,
       -0.53849409, -0.08312057, -0.39485685, -0.18016658, -0.25338777,
       -0.06615993, -0.16085813, -0.2070983 , -0.19857406, -0.09343472,
       -0.08776711]), 'test_mae': array([-0.12317124, -0.08226873, -0.05008994, -0.14898474, -0.07614975,
       -0.18014073, -0.06073588, -0.16153383, -0.0819189 , -0.11158605,
       -0.04445627, -0.08993758, -0.10079376, -0.14029865, -0.05555695,
       -0.06162891]), 'test_r2': array([0.76205819, 0.9337161 , 0.98917935, 0.83738212, 0.94328063,
       0.34870862, 0.97907784, 0.68356297, 0.93226873, 0.81274431,
       0.98716423, 0.93182746, 0.90248654, 0.83358984, 0.96892042,
       0.9671354 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([4.12262774, 4.47782397, 3.87422609, 5.32671642, 3.51808834,
       4.37780595, 3.59367085, 3.79099917, 5.03472185, 5.01958346,
       3.83368111, 4.56837821, 4.58422589, 3.96907091, 3.56568909,
       4.00542808]), 'score_time': array([0.12901878, 0.12680936, 0.20467591, 0.11482668, 0.12331653,
       0.12769437, 0.13031411, 0.13121915, 0.11770368, 0.12254953,
       0.131392  , 0.12265706, 0.13226008, 0.12886381, 0.13152361,
       0.1336751 ]), 'test_pearson_r': array([0.98001824, 0.90539749, 0.97997489, 0.99340311, 0.65706496,
       0.9367392 , 0.81420255, 0.99493898, 0.97254545, 0.98184504,
       0.96457543, 0.99076574, 0.99205607, 0.97207414, 0.99201415,
       0.92558219]), 'test_pearson_p': array([-6.22518020e-12, -5.80119846e-07, -6.32640617e-12, -1.43278237e-14,
       -5.68298581e-03, -9.18816822e-08, -1.23458789e-04, -2.25022557e-15,
       -2.93200800e-10, -1.66161945e-11, -1.70920538e-09, -1.49831794e-13,
       -5.24221905e-14, -3.29888492e-10, -5.43832193e-14, -2.77935239e-07]), 'test_spearman_r': array([0.90128772, 0.86082174, 0.95823385, 0.97277436, 0.66961019,
       0.92273756, 0.85882353, 0.98823529, 0.961001  , 0.98307606,
       0.92273756, 0.97647059, 0.99117647, 0.95588235, 0.98085526,
       0.86470588]), 'test_spearman_p': array([-7.88324131e-07, -9.17831042e-06, -1.47267682e-09, -2.76678019e-10,
       -4.54744509e-03, -3.58624443e-07, -2.04643957e-05, -8.10888105e-13,
       -3.31817876e-09, -1.01973765e-11, -3.58624443e-07, -1.00615044e-10,
       -1.09082915e-13, -7.76027446e-09, -2.40310904e-11, -1.54423405e-05]), 'test_kendall_r': array([0.78967327, 0.76015278, 0.86994258, 0.91214188, 0.69456675,
       0.82845913, 0.75      , 0.95      , 0.86193223, 0.92887842,
       0.79498604, 0.93333333, 0.96666667, 0.85      , 0.92440239,
       0.7       ]), 'test_kendall_p': array([-1.02725536e-05, -2.17189123e-05, -1.33413173e-06, -8.99518934e-07,
       -1.83536177e-04, -8.12917002e-06, -8.91848950e-06, -7.63760478e-11,
       -3.45008795e-06, -5.65704076e-07, -1.85653874e-05, -3.55879882e-10,
       -1.29045888e-11, -1.02027025e-07, -6.95749778e-07, -4.94106357e-05]), 'test_rmse': array([-0.10301672, -0.28310448, -0.12110779, -0.09134597, -0.53216659,
       -0.24823008, -0.42034322, -0.07359404, -0.11320368, -0.11877233,
       -0.16128446, -0.09688115, -0.07317662, -0.15225867, -0.0860799 ,
       -0.24205661]), 'test_mae': array([-0.05643168, -0.11963899, -0.089482  , -0.0488697 , -0.17845801,
       -0.10783801, -0.1928437 , -0.04862579, -0.08706925, -0.08320126,
       -0.11716645, -0.06608785, -0.04755288, -0.10524056, -0.05594696,
       -0.13787712]), 'test_r2': array([0.96003401, 0.80831896, 0.95678566, 0.98240229, 0.23685961,
       0.86955799, 0.63187683, 0.98959426, 0.94344465, 0.95434491,
       0.9284547 , 0.97968063, 0.9834315 , 0.93428558, 0.98111326,
       0.76679785]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.044142961484786865, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 163, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([50.72968411, 52.10014915, 53.23852301, 42.42557716, 51.30805612,
       53.26677775, 48.07448578, 49.95437551, 51.43608046, 48.9787395 ,
       55.04669785, 53.49787784, 53.78140163, 40.05818391, 49.67142248,
       54.9219656 ]), 'score_time': array([0.13129425, 0.12986636, 0.12811661, 0.21942091, 0.13125849,
       0.12853622, 0.12931061, 0.20373249, 0.12784553, 0.13134432,
       0.12318015, 0.12588048, 0.12721205, 0.13257265, 0.22528172,
       0.11720419]), 'test_pearson_r': array([0.91399557, 0.99389804, 0.9312621 , 0.97802241, 0.99126569,
       0.9787313 , 0.98058184, 0.98252006, 0.54799327, 0.98325   ,
       0.982141  , 0.9809019 , 0.91044003, 0.98472369, 0.80835858,
       0.99420035]), 'test_pearson_p': array([-2.91251682e-07, -8.86738635e-16, -5.70866180e-08, -6.26658907e-11,
       -1.01616028e-13, -4.99083528e-11, -2.65197268e-11, -1.27678876e-11,
       -2.79780890e-02, -9.49033639e-12, -1.48219129e-11, -2.36271783e-11,
       -9.75335391e-07, -5.00031247e-12, -1.50822384e-04, -5.82814297e-15]), 'test_spearman_r': array([0.89883524, 0.99202962, 0.92892157, 0.93235294, 0.95      ,
       0.95588235, 0.98454773, 0.98380077, 0.67941176, 0.9757177 ,
       0.96983102, 0.96764706, 0.96688768, 0.90332718, 0.87941176,
       0.97938251]), 'test_spearman_p': array([-9.40713499e-07, -6.53940522e-15, -7.28779911e-08, -1.45175444e-07,
       -1.83461727e-08, -7.76027446e-09, -5.41517846e-12, -7.52089449e-12,
       -3.79343267e-03, -1.25183504e-10, -5.63193822e-10, -9.13289481e-10,
       -1.07216639e-09, -1.63329218e-06, -7.18727304e-06, -4.02148125e-11]), 'test_kendall_r': array([0.81919377, 0.952036  , 0.79411765, 0.85      , 0.83333333,
       0.85      , 0.92887842, 0.92440239, 0.71666667, 0.89540533,
       0.89540533, 0.88333333, 0.91214188, 0.79672462, 0.81666667,
       0.90759507]), 'test_kendall_p': array([-4.73348832e-06, -1.04704970e-07, -5.45407093e-07, -1.02027025e-07,
       -2.44193725e-07, -1.02027025e-07, -5.65704076e-07, -6.95749778e-07,
       -2.87624658e-05, -1.41912826e-06, -1.41912826e-06, -1.43717927e-08,
       -8.99518934e-07, -2.11608369e-05, -5.50848432e-07, -1.10296350e-06]), 'test_rmse': array([-0.27293189, -0.07857714, -0.24651541, -0.12475159, -0.09376825,
       -0.13365063, -0.10971376, -0.1016592 , -0.54628557, -0.13213328,
       -0.11988729, -0.12705247, -0.30046991, -0.11520161, -0.38567794,
       -0.07157029]), 'test_mae': array([-0.12794054, -0.05099518, -0.12629301, -0.07870163, -0.05919459,
       -0.09356962, -0.08124571, -0.06823763, -0.20620111, -0.10065679,
       -0.07967318, -0.08059323, -0.12950133, -0.07351522, -0.15304365,
       -0.05019728]), 'test_r2': array([ 0.82632689,  0.9862537 ,  0.84941344,  0.95192289,  0.98077821,
        0.95541444,  0.95871638,  0.95714014, -0.19854768,  0.9450356 ,
        0.96246562,  0.95015397,  0.81385955,  0.96927444,  0.61993367,
        0.98813994]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.002861049879148768, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 3169, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([4.13048434, 3.81261349, 3.61086512, 2.81327534, 2.66503525,
       3.66938734, 2.77576518, 3.51246428, 3.03235388, 3.63582778,
       3.02082562, 3.83854795, 3.04450202, 4.3158896 , 3.81556821,
       4.1368928 ]), 'score_time': array([0.11656404, 0.11749721, 0.12231398, 0.14920354, 0.26057982,
       0.12241292, 0.13029623, 0.12007332, 0.12636256, 0.12492085,
       0.19157839, 0.12140965, 0.12733769, 0.11487007, 0.18638921,
       0.11972094]), 'test_pearson_r': array([0.99218713, 0.98810188, 0.982712  , 0.99701051, 0.41020955,
       0.99339858, 0.9747851 , 0.98627078, 0.95573176, 0.75392498,
       0.99204344, 0.98780116, 0.84415328, 0.98750932, 0.98931502,
       0.98069331]), 'test_pearson_p': array([-5.63273107e-15, -1.30502735e-13, -2.11770166e-12, -5.67679898e-17,
       -1.14536721e-01, -1.43966973e-14, -1.62572108e-10, -2.37772995e-12,
       -7.94440981e-09, -7.42239651e-04, -5.30067631e-14, -1.04382347e-12,
       -3.92434909e-05, -1.23073613e-12, -4.14521613e-13, -2.54797881e-11]), 'test_spearman_r': array([0.98588957, 0.99019608, 0.97240975, 0.99261983, 0.63328424,
       0.98529412, 0.97352941, 0.95805765, 0.96241945, 0.83738065,
       0.98749107, 0.96470588, 0.87941176, 0.97058824, 0.93235294,
       0.97058824]), 'test_spearman_p': array([-4.65923278e-13, -3.07362545e-14, -6.84697631e-11, -3.13601186e-14,
       -8.45074340e-03, -3.83671954e-12, -2.27689766e-10, -5.47877174e-09,
       -2.56986058e-09, -5.18614608e-05, -1.24331763e-12, -1.66620775e-09,
       -7.18727304e-06, -4.72340113e-10, -1.45175444e-07, -4.72340113e-10]), 'test_kendall_r': array([0.93333333, 0.94117647, 0.89299501, 0.97467943, 0.60504202,
       0.93333333, 0.91666667, 0.84519568, 0.88614695, 0.74477639,
       0.94561497, 0.9       , 0.75      , 0.9       , 0.81666667,
       0.9       ]), 'test_kendall_p': array([-2.00290194e-07, -2.62815024e-11, -6.08366508e-07, -2.23973215e-07,
       -1.16143904e-03, -3.55879882e-10, -1.38948965e-09, -5.31661458e-06,
       -2.11823604e-06, -6.04438410e-05, -3.52984089e-07, -4.72556483e-09,
       -8.91848950e-06, -4.72556483e-09, -5.50848432e-07, -4.72556483e-09]), 'test_rmse': array([-0.08175277, -0.07317061, -0.12184816, -0.05131826, -0.75537134,
       -0.07397298, -0.19217143, -0.10419396, -0.16778127, -0.41358496,
       -0.07919674, -0.10427168, -0.30122888, -0.12350061, -0.09364268,
       -0.14584191]), 'test_mae': array([-0.06566196, -0.04798129, -0.08113329, -0.03429051, -0.31086369,
       -0.05739039, -0.10199589, -0.07379578, -0.09234401, -0.1951052 ,
       -0.06304024, -0.05998547, -0.15077085, -0.07879649, -0.06938114,
       -0.0853756 ]), 'test_r2': array([ 0.98401459,  0.97608398,  0.95885263,  0.99104217, -1.36927694,
        0.98618232,  0.9406817 ,  0.96890726,  0.90253475,  0.43583508,
        0.97700645,  0.97533327,  0.66072322,  0.96752706,  0.97164427,
        0.96096622]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09939793013929618, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4800, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 161, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([16.65005612, 15.64762211, 16.44509697, 15.68208408, 15.68214178,
       16.25688839, 16.84309316, 15.98452163, 17.26423359, 15.90551853,
       16.93292999, 16.4666636 , 16.87438369, 16.91985989, 16.47469282,
       16.69868684]), 'score_time': array([0.12689948, 0.13310552, 0.12358785, 0.13343525, 0.13118052,
       0.17884421, 0.11937237, 0.12754631, 0.1161418 , 0.12331295,
       0.16588497, 0.12213635, 0.12110233, 0.1759212 , 0.11840129,
       0.11859393]), 'test_pearson_r': array([0.96926918, 0.86321775, 0.99434025, 0.98931898, 0.96457674,
       0.97722021, 0.96099071, 0.62691413, 0.92575492, 0.90134847,
       0.9925487 , 0.99357803, 0.87137418, 0.98946171, 0.82835339,
       0.99218785]), 'test_pearson_p': array([-1.52292778e-10, -8.11634495e-06, -5.05023853e-16, -4.13450716e-13,
       -1.70876775e-09, -8.03702787e-11, -3.32422030e-09, -9.34875080e-03,
       -2.73578744e-07, -1.87202881e-06, -3.35317528e-14, -1.18763672e-14,
       -1.10428984e-05, -3.76432840e-13, -7.38005703e-05, -4.66458611e-14]), 'test_spearman_r': array([0.93382353, 0.85328379, 0.98773006, 0.96394434, 0.98749107,
       0.97647059, 0.96176471, 0.73823529, 0.91176471, 0.88365243,
       0.95511431, 0.97941176, 0.84956122, 0.9256809 , 0.85588235,
       0.98529412]), 'test_spearman_p': array([-4.32632699e-08, -1.33229485e-05, -1.64204527e-13, -1.93084048e-09,
       -1.24331763e-12, -1.00615044e-10, -2.89508013e-09, -1.09285081e-03,
       -8.81898574e-07, -5.65986076e-06, -8.73885027e-09, -3.98200979e-11,
       -3.11149595e-05, -2.75438509e-07, -2.34491569e-05, -3.83671954e-12]), 'test_kendall_r': array([0.83823529, 0.72198821, 0.94074074, 0.86193223, 0.94561497,
       0.91666667, 0.85      , 0.7       , 0.76666667, 0.80672269,
       0.87866878, 0.9       , 0.76799402, 0.82845913, 0.8       ,
       0.93333333]), 'test_kendall_p': array([-5.63431609e-08, -6.77950945e-05, -1.60289263e-07, -3.45008795e-06,
       -3.52984089e-07, -1.38948965e-09, -1.02027025e-07, -4.94106357e-05,
       -4.72451181e-06, -1.48492509e-05, -2.22140114e-06, -4.72556483e-09,
       -3.91635038e-05, -8.12917002e-06, -1.17934846e-06, -3.55879882e-10]), 'test_rmse': array([-0.1520865 , -0.33168287, -0.06722451, -0.10501738, -0.19467925,
       -0.11617007, -0.20534898, -0.55031017, -0.1856665 , -0.34055215,
       -0.08791531, -0.06886504, -0.26421604, -0.09220611, -0.35216441,
       -0.07697679]), 'test_mae': array([-0.0860672 , -0.15935354, -0.05622876, -0.08356108, -0.09431751,
       -0.07185029, -0.12527555, -0.20807111, -0.12614375, -0.12875092,
       -0.05614394, -0.05285704, -0.13165244, -0.07299668, -0.15268651,
       -0.04557736]), 'test_r2': array([0.93740395, 0.68841559, 0.98756569, 0.96724194, 0.92259152,
       0.95198909, 0.91705778, 0.12445696, 0.82339742, 0.78922038,
       0.98490907, 0.98655168, 0.70538391, 0.97715153, 0.63860498,
       0.9834815 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.014798641065097335, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 41, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 720, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([5.9507587 , 5.94868851, 6.35761118, 6.59423709, 5.95055771,
       6.47664022, 6.41185164, 5.36065769, 6.11087966, 5.3873136 ,
       6.1432302 , 5.83965826, 6.23817968, 5.90449476, 7.01540136,
       5.99480629]), 'score_time': array([0.12486577, 0.12275863, 0.11945844, 0.11625004, 0.18613529,
       0.12779284, 0.12017846, 0.12947989, 0.18728995, 0.13569808,
       0.21851277, 0.12066174, 0.12362599, 0.12431407, 0.1165669 ,
       0.12506604]), 'test_pearson_r': array([0.82294331, 0.96990564, 0.98431415, 0.99496629, 0.99534005,
       0.98615397, 0.95240666, 0.99683479, 0.93357869, 0.943919  ,
       0.97292827, 0.99432535, 0.99579925, 0.88693848, 0.99190654,
       0.74721341]), 'test_pearson_p': array([-4.97086168e-05, -1.30411034e-10, -1.02588520e-12, -2.16675319e-15,
       -1.26382922e-15, -2.52222713e-12, -1.30730582e-08, -8.46346131e-17,
       -1.28155977e-07, -4.03071817e-08, -2.66022058e-10, -5.00533825e-15,
       -6.12115684e-16, -4.67341730e-06, -5.97085948e-14, -8.78736378e-04]), 'test_spearman_r': array([0.81127451, 0.94852941, 0.97177987, 0.99043441, 0.98749107,
       0.97352941, 0.93451092, 0.98823529, 0.85588235, 0.96983102,
       0.95294118, 0.99115475, 0.99852833, 0.92941176, 0.97345556,
       0.72647059]), 'test_spearman_p': array([-7.73803618e-05, -6.85959526e-09, -8.09524658e-11, -1.91599035e-13,
       -1.24331763e-12, -2.27689766e-10, -1.16375217e-07, -8.10888105e-13,
       -2.34491569e-05, -5.63193822e-10, -1.20965793e-08, -1.10969762e-13,
       -3.99332349e-19, -1.94011895e-07, -2.32128210e-10, -1.43618264e-03]), 'test_kendall_r': array([0.69117647, 0.82352941, 0.9037285 , 0.96235152, 0.94561497,
       0.91666667, 0.87866878, 0.93333333, 0.66666667, 0.89540533,
       0.88333333, 0.9536629 , 0.99163165, 0.8       , 0.90302594,
       0.68333333]), 'test_kendall_p': array([-3.20901942e-05, -1.25716600e-07, -4.80224875e-07, -2.18526649e-07,
       -3.52984089e-07, -1.38948965e-09, -2.22140114e-06, -3.55879882e-10,
       -1.34937165e-04, -1.41912826e-06, -1.43717927e-08, -3.28081900e-07,
       -1.01812551e-07, -1.17934846e-06, -1.32869973e-06, -8.26619198e-05]), 'test_rmse': array([-0.27989199, -0.13627734, -0.12989633, -0.06489862, -0.06159831,
       -0.10144465, -0.22351713, -0.06190224, -0.18290689, -0.23424818,
       -0.11956758, -0.07932398, -0.07592259, -0.3414636 , -0.09235135,
       -0.54432435]), 'test_mae': array([-0.11444246, -0.10777865, -0.06898216, -0.04362787, -0.04200887,
       -0.0632004 , -0.09233784, -0.0448022 , -0.10857004, -0.15931117,
       -0.07864976, -0.05216942, -0.05378761, -0.16751905, -0.07099892,
       -0.21735363]), 'test_r2': array([0.67084188, 0.90322276, 0.96723087, 0.98880738, 0.99000505,
       0.96410431, 0.90311461, 0.99029348, 0.86629429, 0.80593989,
       0.94562146, 0.9878125 , 0.98652559, 0.77344182, 0.97646901,
       0.44706988]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02666301886779036, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 289, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([3.305619  , 3.27264643, 3.40291405, 3.15876555, 3.35311532,
       3.33849454, 3.34424353, 3.07062125, 3.42547512, 3.28214979,
       3.35298133, 3.19222546, 3.31252289, 3.46723199, 3.24335718,
       3.41930223]), 'score_time': array([0.11341453, 0.11259341, 0.15429306, 0.1133666 , 0.11441112,
       0.11532497, 0.113276  , 0.11167192, 0.11323476, 0.1145947 ,
       0.11621332, 0.1608119 , 0.11558199, 0.11234164, 0.11389875,
       0.11779404]), 'test_pearson_r': array([0.99313109, 0.71094862, 0.98064362, 0.92938562, 0.90658186,
       0.56904353, 0.99418951, 0.92264779, 0.85153333, 0.96490489,
       0.98748527, 0.99316985, 0.99181787, 0.97403688, 0.9712559 ,
       0.99614487]), 'test_pearson_p': array([-2.15020904e-15, -1.37724544e-03, -4.91322139e-12, -1.94501780e-07,
       -1.29660880e-06, -2.14203552e-02, -5.90465480e-15, -3.61463439e-07,
       -2.85262286e-05, -1.60239409e-09, -1.24734069e-12, -1.82621488e-14,
       -6.44256419e-14, -1.99104449e-10, -4.02919440e-10, -3.35898763e-16]), 'test_spearman_r': array([0.96750478, 0.73218894, 0.94478599, 0.86681407, 0.91390753,
       0.63429009, 0.99117647, 0.89411765, 0.76436018, 0.93156758,
       0.99410462, 0.97417637, 0.98529412, 0.97866104, 0.96176471,
       0.96470588]), 'test_spearman_p': array([-2.30299590e-10, -8.32107073e-04, -1.14870783e-08, -1.39158204e-05,
       -7.46809230e-07, -8.31542258e-03, -1.09082915e-13, -3.01130993e-06,
       -5.64892036e-04, -1.57059247e-07, -6.53417850e-15, -1.91806935e-10,
       -3.83671954e-12, -5.10643005e-11, -2.89508013e-09, -1.66620775e-09]), 'test_kendall_r': array([0.89299501, 0.75097607, 0.84446761, 0.74477639, 0.86193223,
       0.69456675, 0.95      , 0.73333333, 0.65548533, 0.81172259,
       0.97054189, 0.91538573, 0.91666667, 0.92887842, 0.88333333,
       0.9       ]), 'test_kendall_p': array([-6.08366508e-07, -3.00010062e-05, -2.55178070e-06, -6.04438410e-05,
       -3.45008795e-06, -1.83536177e-04, -7.63760478e-11, -1.62687222e-05,
       -4.33345797e-04, -1.23329686e-05, -2.02597451e-07, -1.03117352e-06,
       -1.38948965e-09, -5.65704076e-07, -1.43717927e-08, -4.72556483e-09]), 'test_rmse': array([-0.07506845, -0.56900617, -0.13369281, -0.22477518, -0.2497699 ,
       -0.52495092, -0.06996125, -0.22222916, -0.31413351, -0.16939292,
       -0.10609388, -0.08481719, -0.08288399, -0.13081609, -0.14912021,
       -0.06359769]), 'test_mae': array([-0.05129717, -0.1853804 , -0.08268578, -0.12720608, -0.10305109,
       -0.17499465, -0.05578745, -0.15337606, -0.16577405, -0.09551842,
       -0.05830129, -0.06619509, -0.06930822, -0.0595687 , -0.11871796,
       -0.04470772]), 'test_r2': array([ 0.98519422,  0.40502663,  0.95695827,  0.86055688,  0.80253051,
       -0.0430913 ,  0.98748475,  0.81832267,  0.71580175,  0.90110234,
        0.97341188,  0.98183179,  0.98357258,  0.94030248,  0.93466835,
        0.99153513]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08722595424697485, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 549, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_2': {'cluster size (%)': 22, 6: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.6752290564907555, 'test_rmse': 0.8191692495715606, 'test_r2': -0.4475794514544045, 'test_pearson_r': array([0.59751514]), 'test_pearson_p_value': array([7.35199371e-07]), 'test_spearman_r': 0.26207766597525917, 'test_spearman_p_value': 0.04688232865494565, 'test_kendall_r': 0.16555633538159112, 'test_kendall_p_value': 0.06967552779728275, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 72, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.6840381995900471, 'test_rmse': 0.8285946704741888, 'test_r2': -0.481083004760974, 'test_pearson_r': array([0.59619173]), 'test_pearson_p_value': array([7.89091004e-07]), 'test_spearman_r': 0.25858515594337533, 'test_spearman_p_value': 0.05000381080804717, 'test_kendall_r': 0.16661772550213577, 'test_kendall_p_value': 0.06594031998735038, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06991692945397764, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 25, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 586, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.6756795679216274, 'test_rmse': 0.8203621051542058, 'test_r2': -0.4517983853566081, 'test_pearson_r': array([0.59912867]), 'test_pearson_p_value': array([6.74157461e-07]), 'test_spearman_r': 0.2614536021677336, 'test_spearman_p_value': 0.04742808054137804, 'test_kendall_r': 0.1630024366046936, 'test_kendall_p_value': 0.07392789252450255, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.6983361697530343, 'test_rmse': 0.8266179299420161, 'test_r2': -0.47402472970571874, 'test_pearson_r': array([0.53442883]), 'test_pearson_p_value': array([1.55254112e-05]), 'test_spearman_r': 0.2754626451246164, 'test_spearman_p_value': 0.036360695744405556, 'test_kendall_r': 0.18021897745794516, 'test_kendall_p_value': 0.04628884439809787, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02288285280570927, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.6895448977705124, 'test_rmse': 0.816650668843133, 'test_r2': -0.4386918106279547, 'test_pearson_r': array([0.53543784]), 'test_pearson_p_value': array([1.48565368e-05]), 'test_spearman_r': 0.27472848985186143, 'test_spearman_p_value': 0.03688203377633618, 'test_kendall_r': 0.18209476121235646, 'test_kendall_p_value': 0.044122632507053214, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.054265923859029695, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 321, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.6905627755383383, 'test_rmse': 0.813285251003584, 'test_r2': -0.42685854399108036, 'test_pearson_r': array([0.55091656]), 'test_pearson_p_value': array([7.42446742e-06]), 'test_spearman_r': 0.25063077682384377, 'test_spearman_p_value': 0.05774805544180569, 'test_kendall_r': 0.14585346246147, 'test_kendall_p_value': 0.1072816733482176, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0916606457067034, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 8114, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 77, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.6803580896123249, 'test_rmse': 0.8233831193239097, 'test_r2': -0.4625106771434402, 'test_pearson_r': array([0.59170403]), 'test_pearson_p_value': array([1.00066383e-06]), 'test_spearman_r': 0.2517019286049825, 'test_spearman_p_value': 0.056651929757402186, 'test_kendall_r': 0.15886079095638309, 'test_kendall_p_value': 0.08183281553180802, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 55, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_2': {'cluster size (%)': 25, 6: {'fit_time': array([3.63811707, 3.69039893, 3.61286449, 3.58087587]), 'score_time': array([0.17882276, 0.17657447, 0.12436295, 0.12363744]), 'test_pearson_r': array([0.94151261, 0.79691984, 0.95829645, 0.97857395]), 'test_pearson_p': array([-1.83969427e-31, -2.01628428e-15, -5.59854598e-36, -2.87890638e-44]), 'test_spearman_r': array([0.91742721, 0.83548786, 0.94412084, 0.96758683]), 'test_spearman_p': array([-6.64869503e-27, -4.94503701e-18, -4.54843441e-32, -9.16558641e-39]), 'test_kendall_r': array([0.82943597, 0.77708314, 0.85018294, 0.8651097 ]), 'test_kendall_p': array([-2.13187585e-22, -6.33526143e-20, -1.89911936e-23, -7.32867076e-24]), 'test_rmse': array([-0.22734612, -0.41897382, -0.18344083, -0.11860017]), 'test_mae': array([-0.10454682, -0.14584004, -0.0905846 , -0.08157614]), 'test_r2': array([0.88073445, 0.58662841, 0.91384125, 0.95674544]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.63798141, 2.63555765, 2.5094173 , 2.42001033]), 'score_time': array([0.14966822, 0.11414957, 0.1154747 , 0.1156013 ]), 'test_pearson_r': array([0.92592284, 0.82654993, 0.97028046, 0.92626634]), 'test_pearson_p': array([-2.47769628e-28, -2.26788126e-17, -1.55487165e-40, -5.75422122e-28]), 'test_spearman_r': array([0.91022853, 0.86853697, 0.95345307, 0.92271234]), 'test_spearman_p': array([-8.28074370e-26, -7.14868832e-21, -1.65746197e-34, -2.34697381e-27]), 'test_kendall_r': array([0.79092235, 0.82094939, 0.83634905, 0.78896465]), 'test_kendall_p': array([-1.75438339e-20, -5.81275255e-22, -8.76254770e-23, -3.71271278e-20]), 'test_rmse': array([-0.25899063, -0.40196658, -0.15109707, -0.22250422]), 'test_mae': array([-0.1320039 , -0.13681976, -0.09445745, -0.12693412]), 'test_r2': array([0.82618159, 0.64631203, 0.93846279, 0.851669  ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.044142961484786865, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 163, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([31.47547221, 29.28054428, 34.15238667, 32.74411917]), 'score_time': array([0.12072635, 0.12220931, 0.12127662, 0.11994195]), 'test_pearson_r': array([0.97618895, 0.97988407, 0.85917834, 0.92997592]), 'test_pearson_p': array([-1.57690553e-43, -8.21795797e-46, -5.38052614e-20, -1.22813578e-28]), 'test_spearman_r': array([0.97568334, 0.96760023, 0.89493586, 0.94476207]), 'test_spearman_p': array([-3.03369057e-43, -2.26713488e-39, -9.27155964e-24, -9.81921353e-32]), 'test_kendall_r': array([0.89216237, 0.86925177, 0.80810367, 0.86599879]), 'test_kendall_p': array([-1.17565003e-25, -1.61430294e-24, -2.29907434e-21, -8.41604714e-24]), 'test_rmse': array([-0.14863042, -0.12017525, -0.31169271, -0.25304183]), 'test_mae': array([-0.08288604, -0.08009321, -0.13734273, -0.10297796]), 'test_r2': array([0.94910477, 0.95928315, 0.70046713, 0.85978298]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.002861049879148768, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 3169, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([2.14678717, 1.96308422, 2.25480366, 2.08609056]), 'score_time': array([0.11271644, 0.11434555, 0.11320233, 0.11273885]), 'test_pearson_r': array([0.98184939, 0.84552173, 0.83720103, 0.92010209]), 'test_pearson_p': array([-3.31933130e-47, -7.99598623e-19, -3.65486831e-18, -6.31812436e-27]), 'test_spearman_r': array([0.97532141, 0.86181687, 0.86538653, 0.91543508]), 'test_spearman_p': array([-4.80546932e-43, -3.09167299e-20, -1.43426819e-20, -3.42178037e-26]), 'test_kendall_r': array([0.87970626, 0.78698832, 0.80598916, 0.80178877]), 'test_kendall_p': array([-7.38496802e-25, -2.31701088e-20, -3.15566035e-21, -8.60446310e-21]), 'test_rmse': array([-0.11279368, -0.38237338, -0.34994003, -0.26600236]), 'test_mae': array([-0.07545509, -0.14909604, -0.12381459, -0.14128619]), 'test_r2': array([0.96399234, 0.66508667, 0.65296131, 0.83305918]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09939793013929618, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4800, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 161, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([12.65443587, 11.60215831, 12.65456915, 13.2544868 ]), 'score_time': array([0.11877131, 0.11864996, 0.11748743, 0.11466813]), 'test_pearson_r': array([0.95099788, 0.88711439, 0.86887542, 0.87390484]), 'test_pearson_p': array([-8.06346411e-34, -7.88016409e-23, -6.62638433e-21, -4.33787958e-21]), 'test_spearman_r': array([0.92613566, 0.91385923, 0.82881192, 0.88316238]), 'test_spearman_p': array([-2.27041070e-28, -2.38559971e-26, -1.55537937e-17, -4.70590222e-22]), 'test_kendall_r': array([0.82356321, 0.84228271, 0.74493067, 0.7925472 ]), 'test_kendall_p': array([-4.36857046e-22, -4.04486258e-23, -2.46725753e-18, -2.41895553e-20]), 'test_rmse': array([-0.19242228, -0.30417709, -0.33243441, -0.31556253]), 'test_mae': array([-0.10483629, -0.1240846 , -0.13797149, -0.12819837]), 'test_r2': array([0.90272404, 0.77175958, 0.72440623, 0.74262192]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.014798641065097335, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 41, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 720, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([4.78326344, 4.5532794 , 4.61326432, 4.5970881 ]), 'score_time': array([0.11634135, 0.11691165, 0.11816335, 0.11886311]), 'test_pearson_r': array([0.91118907, 0.98137829, 0.96846691, 0.7586868 ]), 'test_pearson_p': array([-5.98879316e-26, -7.38832159e-47, -9.77694316e-40, -3.80116064e-13]), 'test_spearman_r': array([0.92377978, 0.97368536, 0.97241651, 0.77543172]), 'test_spearman_p': array([-5.88764869e-28, -3.54187975e-42, -1.53185103e-41, -5.37379696e-14]), 'test_kendall_r': array([0.80502531, 0.87201859, 0.87271065, 0.7181724 ]), 'test_kendall_p': array([-3.51292613e-21, -1.26756651e-24, -1.18939588e-24, -6.70522422e-17]), 'test_rmse': array([-0.25642333, -0.127977  , -0.16304512, -0.48181419]), 'test_mae': array([-0.13962519, -0.07521469, -0.09677246, -0.19247771]), 'test_r2': array([0.8037936 , 0.96061302, 0.92352898, 0.5048284 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02666301886779036, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 289, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.87036729, 2.61096787, 3.02216434, 3.02574086]), 'score_time': array([0.16186213, 0.11396837, 0.11435223, 0.12334585]), 'test_pearson_r': array([0.86187944, 0.84273262, 0.95099159, 0.96744058]), 'test_pearson_p': array([-3.05089729e-20, -1.34385113e-18, -8.09534901e-34, -1.05155330e-38]), 'test_spearman_r': array([0.88138837, 0.86220387, 0.93559214, 0.95693583]), 'test_spearman_p': array([-3.42421165e-22, -2.84762727e-20, -3.50528370e-30, -5.23553927e-35]), 'test_kendall_r': array([0.82536466, 0.76811999, 0.83149023, 0.86352357]), 'test_kendall_p': array([-4.20207181e-22, -1.70081211e-19, -1.80071840e-22, -6.68761271e-24]), 'test_rmse': array([-0.361321  , -0.33835729, -0.18948749, -0.16184024]), 'test_mae': array([-0.12467606, -0.14286933, -0.09976398, -0.08996335]), 'test_r2': array([0.700188  , 0.64333373, 0.90349763, 0.93593473]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08722595424697485, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 549, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_3': {'cluster size (%)': 7, 6: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.38738781539472616, 'test_rmse': 0.4361214644225979, 'test_r2': -1.9579001087209003, 'test_pearson_r': array([-0.43811102]), 'test_pearson_p_value': array([0.06063291]), 'test_spearman_r': -0.6215978928884986, 'test_spearman_p_value': 0.004495583399559936, 'test_kendall_r': -0.5235294117647058, 'test_kendall_p_value': 0.0018237781361665644, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.045538980195761004, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1214, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.39168202261630947, 'test_rmse': 0.44141921020665437, 'test_r2': -2.030198219673245, 'test_pearson_r': array([-0.45083247]), 'test_pearson_p_value': array([0.05271605]), 'test_spearman_r': -0.6025472693507509, 'test_spearman_p_value': 0.006326934550140348, 'test_kendall_r': -0.48377791604218745, 'test_kendall_p_value': 0.004052090498421282, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07693173041362837, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 269, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 289, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.39492799118400707, 'test_rmse': 0.4419341452489155, 'test_r2': -2.0372720638736315, 'test_pearson_r': array([-0.43953622]), 'test_pearson_p_value': array([0.05970402]), 'test_spearman_r': -0.6411946160729565, 'test_spearman_p_value': 0.003090579061327294, 'test_kendall_r': -0.5191763001428353, 'test_kendall_p_value': 0.0020397945306137185, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08505399982568303, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 69, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.3962981137421993, 'test_rmse': 0.4504576708677263, 'test_r2': -2.1555608103687067, 'test_pearson_r': array([-0.45842984]), 'test_pearson_p_value': array([0.04837779]), 'test_spearman_r': -0.6262626866575588, 'test_spearman_p_value': 0.004121082852637437, 'test_kendall_r': -0.5309757615097179, 'test_kendall_p_value': 0.001607867648202442, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 84, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.38339330660124665, 'test_rmse': 0.43195052052034416, 'test_r2': -1.901593590989878, 'test_pearson_r': array([-0.42986709]), 'test_pearson_p_value': array([0.06622072]), 'test_spearman_r': -0.6215978928884986, 'test_spearman_p_value': 0.004495583399559936, 'test_kendall_r': -0.5235294117647058, 'test_kendall_p_value': 0.0018237781361665644, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.038034026019202506, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.4102873928868879, 'test_rmse': 0.4633885554696966, 'test_r2': -2.3393288314864336, 'test_pearson_r': array([-0.50207105]), 'test_pearson_p_value': array([0.02848991]), 'test_spearman_r': -0.6221443526800914, 'test_spearman_p_value': 0.004450318447105261, 'test_kendall_r': -0.5207191751642659, 'test_kendall_p_value': 0.0020269051575429377, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.40336825357695466, 'test_rmse': 0.45559157187236965, 'test_r2': -2.2278990393109646, 'test_pearson_r': array([-0.475378]), 'test_pearson_p_value': array([0.0396838]), 'test_spearman_r': -0.6203868827572663, 'test_spearman_p_value': 0.004597243546392882, 'test_kendall_r': -0.5207191751642659, 'test_kendall_p_value': 0.0020269051575429377, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_3': {'cluster size (%)': 7, 6: {'fit_time': array([4.80981612, 4.32620978, 6.34640431, 4.34054422, 5.02972364,
       5.62993932, 4.95291924, 5.0408175 , 5.00073981, 5.64240527,
       5.99512362, 5.99887848, 6.26772594, 5.57715559]), 'score_time': array([0.22288156, 0.12038183, 0.11691213, 0.18576217, 0.11958933,
       0.12554884, 0.21051955, 0.12487197, 0.19243217, 0.11658478,
       0.11832333, 0.11642194, 0.11641264, 0.20288324]), 'test_pearson_r': array([0.89321584, 0.99347567, 0.98771321, 0.96940596, 0.60176723,
       0.99333874, 0.86759658, 0.96932315, 0.93551679, 0.96418532,
       0.9930846 , 0.95125865, 0.98440768, 0.98271928]), 'test_pearson_p': array([-2.64396665e-07, -1.79111387e-17, -3.81386947e-15, -8.35863122e-12,
       -6.41323748e-03, -2.13597417e-17, -1.50253419e-06, -3.58189330e-11,
       -1.22634672e-08, -1.21640289e-10, -2.57348764e-16, -1.37402708e-09,
       -1.67297452e-13, -3.78792520e-13]), 'test_spearman_r': array([0.85263158, 0.97805092, 0.94736842, 0.94210526, 0.71929825,
       0.98245614, 0.86491228, 0.94883835, 0.94166249, 0.93188854,
       0.99122367, 0.95405279, 0.97830631, 0.96491228]), 'test_spearman_p': array([-3.53981453e-06, -5.11677137e-13, -7.80082922e-10, -1.72238365e-09,
       -5.18354290e-04, -7.73558991e-14, -1.76513030e-06, -2.00924333e-09,
       -5.61230323e-09, -1.87828793e-08, -1.72171485e-15, -8.64446630e-10,
       -2.30443206e-12, -1.03472876e-10]), 'test_kendall_r': array([0.75438596, 0.9       , 0.87134503, 0.83625731, 0.67251462,
       0.91812865, 0.77777778, 0.87132984, 0.86557842, 0.83006536,
       0.94426737, 0.8524636 , 0.91449348, 0.86928105]), 'test_kendall_p': array([-5.24238695e-07, -8.35279080e-08, -4.58322529e-10, -5.55516932e-09,
       -1.56889756e-05, -7.20796807e-12, -1.64978258e-07, -5.42460793e-07,
       -5.63141283e-07, -2.71335027e-08, -4.80698932e-08, -8.32299419e-07,
       -1.34526112e-07, -2.15825858e-09]), 'test_rmse': array([-0.27791933, -0.08149525, -0.12804959, -0.17467355, -0.50319335,
       -0.07946063, -0.35853806, -0.16235008, -0.23354297, -0.15732878,
       -0.07454196, -0.18497365, -0.11070071, -0.08832024]), 'test_mae': array([-0.12842832, -0.04874483, -0.07770959, -0.0906649 , -0.19667492,
       -0.05553965, -0.14834443, -0.06740453, -0.09355605, -0.09598152,
       -0.05389875, -0.12885822, -0.06212148, -0.06363387]), 'test_r2': array([0.77635641, 0.98526768, 0.9655985 , 0.93351643, 0.10317679,
       0.98444915, 0.72304812, 0.93671339, 0.86482177, 0.92545281,
       0.98551483, 0.89658037, 0.96392094, 0.96263006]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([3.95242405, 3.93194151, 4.97101021, 3.54350781, 5.11887765,
       3.4740622 , 4.43641734, 3.41354418, 4.70497584, 3.73949885,
       3.86006713, 3.45262289, 4.57010698, 5.02746439]), 'score_time': array([0.15705538, 0.16534567, 0.17460179, 0.19582152, 0.11924434,
       0.12265205, 0.11999464, 0.18128037, 0.12387228, 0.16135383,
       0.12951565, 0.12911725, 0.12313795, 0.11516738]), 'test_pearson_r': array([0.98305392, 0.91799418, 0.98975064, 0.9820831 , 0.73583617,
       0.84050307, 0.9940664 , 0.97471688, 0.97753425, 0.98794419,
       0.99207055, 0.95679165, 0.98913694, 0.93727222]), 'test_pearson_p': array([-5.77293157e-14, -3.05630909e-08, -8.22323245e-16, -9.23881750e-14,
       -3.29287971e-04, -6.63856812e-06, -8.01007431e-18, -7.75610775e-12,
       -3.04096370e-12, -2.16063485e-14, -7.66566934e-16, -5.33304770e-10,
       -9.42425931e-15, -9.88905219e-09]), 'test_spearman_r': array([0.92361721, 0.89552273, 0.97366111, 0.93157895, 0.74275709,
       0.91754386, 0.99122807, 0.95611784, 0.94785764, 0.95611784,
       0.98657077, 0.9504644 , 0.98555212, 0.87764596]), 'test_spearman_p': array([-1.70392493e-08, -2.21384800e-07, -2.37451687e-12, -6.87164496e-09,
       -2.69684992e-04, -3.19693619e-08, -2.20085178e-16, -6.02298234e-10,
       -2.33156775e-09, -6.02298234e-10, -5.09977899e-14, -1.55976502e-09,
       -9.12417033e-14, -1.70877825e-06]), 'test_kendall_r': array([0.81764706, 0.78236648, 0.91176471, 0.8245614 , 0.71177702,
       0.8128655 , 0.95321637, 0.8524636 , 0.8524636 , 0.86557842,
       0.94080983, 0.85620915, 0.93464052, 0.73443018]), 'test_kendall_p': array([-1.12198370e-06, -3.18078416e-06, -5.65458167e-08, -1.17067315e-08,
       -2.25073168e-05, -2.37852170e-08, -1.16815227e-13, -8.32299419e-07,
       -8.32299419e-07, -5.63141283e-07, -5.81823612e-08, -5.28843419e-09,
       -7.81116540e-12, -2.18253405e-05]), 'test_rmse': array([-0.0928169 , -0.2668494 , -0.09446777, -0.12547602, -0.5347441 ,
       -0.38135979, -0.07420631, -0.11569061, -0.12813003, -0.10286422,
       -0.09747179, -0.15473571, -0.09577486, -0.22624995]), 'test_mae': array([-0.05142505, -0.11677759, -0.06742052, -0.07873519, -0.20900592,
       -0.1717062 , -0.0489592 , -0.08663428, -0.09294601, -0.06301398,
       -0.06732512, -0.10501236, -0.0605942 , -0.12740253]), 'test_r2': array([0.9659836 , 0.83623543, 0.97807548, 0.95403752, 0.42979317,
       0.67454184, 0.98790657, 0.94401067, 0.95442974, 0.97203108,
       0.97722654, 0.91290347, 0.97711322, 0.81817614]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.044142961484786865, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 163, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([42.81767368, 47.93669367, 40.87479424, 48.50747466, 44.10363674,
       41.74529481, 43.11864471, 49.19267201, 50.63819361, 42.55235815,
       50.72134089, 46.47491956, 48.73879457, 53.048949  ]), 'score_time': array([0.12718987, 0.1289289 , 0.13251138, 0.12962246, 0.131778  ,
       0.13376498, 0.129884  , 0.19312167, 0.18706894, 0.21601415,
       0.12368393, 0.19720817, 0.12831402, 0.12204099]), 'test_pearson_r': array([0.91849236, 0.97584097, 0.99152982, 0.98876352, 0.96667203,
       0.98920727, 0.98354599, 0.44288021, 0.98270341, 0.96965277,
       0.99081023, 0.91401004, 0.84132753, 0.99343564]), 'test_pearson_p': array([-2.90706499e-08, -1.14784091e-12, -1.63610624e-16, -1.79074272e-15,
       -1.71419371e-11, -1.27332835e-15, -4.50130039e-14, -6.56761522e-02,
       -3.81566202e-13, -3.28874523e-11, -2.48505364e-15, -1.14456330e-07,
       -1.21254381e-05, -1.69823466e-16]), 'test_spearman_r': array([0.89951742, 0.96445819, 0.9877193 , 0.97368421, 0.93549812,
       0.98727522, 0.9837649 , 0.59266915, 0.96384349, 0.94427245,
       0.98915862, 0.90580147, 0.86171311, 0.98553772]), 'test_spearman_p': array([-1.61180294e-07, -2.93899065e-11, -3.79790244e-15, -2.35705500e-12,
       -4.21876611e-09, -5.12890798e-15, -4.01991254e-14, -9.54244177e-03,
       -1.31102802e-10, -3.92399721e-09, -9.27540331e-15, -2.31150851e-07,
       -4.31768401e-06, -9.19675963e-14]), 'test_kendall_r': array([0.8211179 , 0.89149943, 0.92982456, 0.91812865, 0.80938764,
       0.93842046, 0.9266902 , 0.57705228, 0.87501894, 0.83006536,
       0.94426737, 0.82403396, 0.77777778, 0.92765165]), 'test_kendall_p': array([-9.53596222e-07, -1.03161918e-07, -2.06767062e-12, -7.20796807e-12,
       -1.35872010e-06, -2.12970819e-08, -3.18217344e-08, -8.51059259e-04,
       -4.53574602e-07, -2.71335027e-08, -4.80698932e-08, -2.40473321e-06,
       -4.36097754e-07, -8.87180979e-08]), 'test_rmse': array([-0.26205169, -0.14800182, -0.09913501, -0.10229006, -0.13109444,
       -0.10637335, -0.09916489, -0.53836354, -0.12849809, -0.14282576,
       -0.09516102, -0.28504606, -0.36669418, -0.07406901]), 'test_mae': array([-0.11365561, -0.07222114, -0.07602207, -0.06185123, -0.08870113,
       -0.07445755, -0.06714267, -0.22740318, -0.08488617, -0.09534008,
       -0.05718214, -0.12303857, -0.14416745, -0.05368168]), 'test_r2': array([ 0.83495142,  0.94826201,  0.98129278,  0.9759435 ,  0.91717021,
        0.97517532,  0.96362812, -0.5159886 ,  0.96244341,  0.93584939,
        0.98112415,  0.8134772 ,  0.69284204,  0.9859494 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.002861049879148768, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 3169, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([2.63449717, 2.74474406, 2.81489515, 4.01248097, 3.81759191,
       3.26699042, 2.90172935, 3.68906093, 3.61705399, 3.6046524 ,
       2.91125441, 3.2188468 , 3.98416185, 4.07906914]), 'score_time': array([0.12153721, 0.32287455, 0.18381405, 0.11575341, 0.11967611,
       0.14159513, 0.19119835, 0.11944604, 0.13239312, 0.12208176,
       0.12835383, 0.19076681, 0.17804027, 0.11581421]), 'test_pearson_r': array([0.99132286, 0.98924085, 0.98112898, 0.43694362, 0.98987213,
       0.96551168, 0.98974033, 0.96529064, 0.75814962, 0.98536716,
       0.98797742, 0.9185152 , 0.98009569, 0.98014481]), 'test_pearson_p': array([-2.00735229e-16, -1.24018925e-15, -1.43133366e-13, -6.14018349e-02,
       -7.43364734e-16, -2.28392753e-11, -8.29352252e-16, -9.49898001e-11,
       -2.66509852e-04, -1.00957307e-13, -2.11366435e-14, -7.55046562e-08,
       -1.16388683e-12, -1.14128305e-12]), 'test_spearman_r': array([0.98463565, 0.9877193 , 0.97323397, 0.68439782, 0.99122807,
       0.93157895, 0.97715441, 0.95971126, 0.80949933, 0.95872033,
       0.98968008, 0.85758514, 0.9504644 , 0.97936017]), 'test_spearman_p': array([-2.52347607e-14, -3.79790244e-15, -2.71850932e-12, -1.22844681e-03,
       -2.20085178e-16, -6.87164496e-09, -7.16901319e-13, -3.07551300e-10,
       -4.70504360e-05, -3.72370945e-10, -6.26289422e-15, -5.38925995e-06,
       -1.55976502e-09, -1.55232323e-12]), 'test_kendall_r': array([0.92352941, 0.92982456, 0.91495995, 0.62863121, 0.94152047,
       0.83625731, 0.89679028, 0.86186076, 0.72131535, 0.89542484,
       0.94771242, 0.76470588, 0.86928105, 0.92156863]), 'test_kendall_p': array([-3.80976840e-08, -2.06767062e-12, -4.73213851e-08, -2.34744248e-04,
       -5.27929196e-13, -5.55516932e-09, -9.83316810e-08, -6.72597856e-07,
       -3.05216065e-05, -2.96242626e-10, -1.81026609e-12, -8.04176944e-07,
       -2.15825858e-09, -2.92550870e-11]), 'test_rmse': array([-0.08612298, -0.0794163 , -0.11937705, -0.69638629, -0.08484177,
       -0.19339801, -0.09849364, -0.15696219, -0.42556529, -0.10216098,
       -0.08472351, -0.32211775, -0.11642568, -0.14627241]), 'test_mae': array([-0.06925258, -0.05077806, -0.07941518, -0.26307924, -0.06091187,
       -0.11268993, -0.06899153, -0.08511326, -0.19412242, -0.06472354,
       -0.05536728, -0.17364233, -0.07656098, -0.08671362]), 'test_r2': array([ 0.98220857,  0.97760986,  0.96078983, -0.83550324,  0.97841407,
        0.93055365,  0.97798248,  0.91987721,  0.48180892,  0.96949734,
        0.96836353,  0.79771921,  0.9590754 ,  0.95926732]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09939793013929618, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4800, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 161, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([19.78552055, 15.72609234, 22.02535081, 19.87782073, 17.25691557,
       19.45621586, 16.97588897, 16.64693952, 21.02671027, 16.49682164,
       21.7623136 , 19.69984031, 19.32382727, 19.21763706]), 'score_time': array([0.12507892, 0.13334107, 0.12591815, 0.18884373, 0.19971681,
       0.12475276, 0.13801193, 0.1840148 , 0.11868834, 0.13465762,
       0.11935449, 0.12415218, 0.13086104, 0.19334722]), 'test_pearson_r': array([0.97057619, 0.88424051, 0.98865177, 0.97803168, 0.96035122,
       0.97380731, 0.62133873, 0.91680562, 0.99576991, 0.98823842,
       0.90305279, 0.98188679, 0.85865543, 0.99132074]), 'test_pearson_p': array([-6.02405266e-12, -5.08711852e-07, -1.94716132e-15, -5.15469091e-13,
       -7.34152188e-11, -2.26590865e-12, -4.51718224e-03, -8.86589166e-08,
       -5.08642290e-18, -1.77473959e-14, -2.88376623e-07, -5.50475241e-13,
       -5.09160238e-06, -1.57562071e-15]), 'test_spearman_r': array([0.91754386, 0.89279575, 0.9793589 , 0.95480483, 0.96842105,
       0.97368421, 0.71578947, 0.92561983, 0.94834711, 0.94166249,
       0.85493042, 0.98142415, 0.89473684, 0.98968008]), 'test_spearman_p': array([-3.19693619e-08, -2.72966487e-07, -3.04866461e-13, -2.19224178e-10,
       -1.09055587e-11, -2.35705500e-12, -5.68469114e-04, -3.72334764e-08,
       -2.16548572e-09, -5.61230323e-09, -6.19280424e-06, -6.72563970e-13,
       -5.42211053e-07, -6.26289422e-15]), 'test_kendall_r': array([0.8245614 , 0.77879156, 0.90265879, 0.86803892, 0.88304094,
       0.89473684, 0.66081871, 0.79605263, 0.82236842, 0.82623395,
       0.81311912, 0.90849673, 0.81699346, 0.94771242]), 'test_kendall_p': array([-1.17067315e-08, -3.68335665e-06, -8.20285757e-08, -2.20656528e-07,
       -1.79983887e-10, -6.63913300e-11, -2.38419293e-05, -4.43734615e-06,
       -2.12143788e-06, -1.78800684e-06, -2.59896801e-06, -9.76656516e-11,
       -5.74338967e-08, -1.81026609e-12]), 'test_rmse': array([-0.1459091 , -0.30634985, -0.07442169, -0.13398035, -0.17761544,
       -0.16768635, -0.51593188, -0.19354472, -0.06926879, -0.10497915,
       -0.2295005 , -0.11670879, -0.33527099, -0.09076987]), 'test_mae': array([-0.07807132, -0.15134459, -0.06088726, -0.09242822, -0.08331516,
       -0.08918802, -0.19740619, -0.12290902, -0.04845466, -0.06845406,
       -0.09265031, -0.08746052, -0.13209626, -0.057648  ]), 'test_r2': array([0.94001883, 0.75412317, 0.97725732, 0.94186423, 0.91875601,
       0.94177511, 0.13709517, 0.82067112, 0.99132191, 0.97617599,
       0.77900815, 0.9621031 , 0.70832137, 0.97999569]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.014798641065097335, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 41, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 720, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([6.54115152, 8.70840812, 7.13990092, 6.36563015, 6.161093  ,
       5.53203344, 6.69540381, 6.81045246, 8.73893213, 7.0143671 ,
       8.92270517, 7.44904017, 8.93051505, 6.44636154]), 'score_time': array([0.23490286, 0.11947918, 0.12368488, 0.23562074, 0.13034225,
       0.12988567, 0.12822843, 0.12971997, 0.18645406, 0.12369323,
       0.11836267, 0.1290381 , 0.11906981, 0.1453042 ]), 'test_pearson_r': array([0.83276799, 0.94209428, 0.99845123, 0.99266633, 0.98605514,
       0.9683719 , 0.99760959, 0.90311739, 0.94613206, 0.99404242,
       0.99443107, 0.89081178, 0.99197511, 0.77190483]), 'test_pearson_p': array([-9.65633931e-06, -1.72509692e-09, -8.94788369e-23, -4.82630330e-17,
       -1.11231681e-14, -1.10488468e-11, -3.56956178e-21, -2.86903089e-07,
       -3.00872274e-09, -7.83133876e-17, -4.57069519e-17, -7.17492437e-07,
       -8.43313419e-16, -1.74907471e-04]), 'test_spearman_r': array([0.84358654, 0.91531382, 0.99209871, 0.9841843 , 0.98947368,
       0.97368421, 0.98947368, 0.79183884, 0.97110423, 0.96644308,
       0.99948387, 0.9127518 , 0.98037242, 0.78121775]), 'test_spearman_p': array([-5.68610425e-06, -3.97996537e-08, -9.07791577e-17, -3.22268444e-14,
       -1.03053958e-15, -2.35705500e-12, -1.03053958e-15, -9.00793632e-05,
       -2.23221965e-11, -7.27678973e-11, -2.52759617e-25, -1.28040412e-07,
       -1.04146544e-12, -1.29363860e-04]), 'test_kendall_r': array([0.74339194, 0.75073637, 0.95884012, 0.94398977, 0.94152047,
       0.90643275, 0.92982456, 0.58552632, 0.88235294, 0.87869325,
       0.99672667, 0.82623395, 0.91449348, 0.73856209]), 'test_kendall_p': array([-9.95689890e-06, -7.43302335e-06, -1.13214749e-08, -2.01982025e-08,
       -5.27929196e-13, -2.27996852e-11, -2.06767062e-12, -7.35622083e-04,
       -8.28241250e-10, -3.78914056e-07, -8.33473697e-09, -1.78800684e-06,
       -1.34526112e-07, -2.52158005e-06]), 'test_rmse': array([-0.26984218, -0.17553712, -0.04866855, -0.07124317, -0.09808816,
       -0.18163801, -0.05548024, -0.18626768, -0.21115362, -0.07536492,
       -0.07332368, -0.32236214, -0.09653903, -0.51100506]), 'test_mae': array([-0.11623792, -0.1241929 , -0.03826261, -0.04692011, -0.0647675 ,
       -0.08121953, -0.0392642 , -0.11722954, -0.12634369, -0.05382464,
       -0.0559679 , -0.13534515, -0.07588976, -0.19088338]), 'test_r2': array([0.68471047, 0.85471665, 0.99577433, 0.98482348, 0.96406992,
       0.93628402, 0.99283681, 0.78479332, 0.86395704, 0.98811022,
       0.98594797, 0.78156181, 0.97607764, 0.50297867]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02666301886779036, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 289, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([4.00659585, 4.29861188, 3.36552358, 3.09021759, 4.1845541 ,
       3.58445787, 2.99088097, 4.91010141, 4.82890797, 4.76186514,
       4.86603594, 3.39447474, 3.41216135, 4.10144734]), 'score_time': array([0.11995149, 0.11806655, 0.11892748, 0.11959434, 0.11720061,
       0.1257    , 0.12084627, 0.17443943, 0.11305451, 0.11457467,
       0.17487931, 0.12372303, 0.12615919, 0.11852551]), 'test_pearson_r': array([0.99222958, 0.65609926, 0.99470665, 0.94092757, 0.47895137,
       0.99585511, 0.93430685, 0.88081501, 0.97966653, 0.99272716,
       0.99039885, 0.98226252, 0.96357387, 0.99638082]), 'test_pearson_p': array([-7.87995420e-17, -2.28424182e-03, -3.04141163e-18, -2.03568192e-09,
       -3.80153007e-02, -3.81856663e-19, -4.90859043e-09, -1.39963778e-06,
       -1.37860908e-12, -3.84705019e-16, -3.52310286e-15, -4.66036819e-13,
       -1.39012581e-10, -1.46328693e-18]), 'test_spearman_r': array([0.97147881, 0.62917496, 0.98287305, 0.9240896 , 0.57368421,
       0.99298246, 0.89776226, 0.80578555, 0.94372754, 0.98913937,
       0.98089843, 0.98142415, 0.94014448, 0.98348813]), 'test_spearman_p': array([-4.63665082e-12, -3.90057676e-03, -6.31424104e-14, -1.61904890e-08,
       -1.02225810e-02, -3.32215984e-17, -1.85595135e-07, -5.42251287e-05,
       -4.23430894e-09, -9.40746531e-15, -8.39423191e-13, -6.72563970e-13,
       -6.85945810e-09, -2.63828912e-13]), 'test_kendall_r': array([0.90322969, 0.66079284, 0.9321899 , 0.8211179 , 0.62573099,
       0.95321637, 0.76246662, 0.71712078, 0.81311912, 0.94710295,
       0.93115255, 0.92156863, 0.81699346, 0.93464052]), 'test_kendall_p': array([-7.00361385e-08, -8.59381967e-05, -3.06124963e-08, -9.53596222e-07,
       -7.70690079e-05, -1.16815227e-13, -5.34143245e-06, -3.55564627e-05,
       -2.59896801e-06, -5.48777592e-08, -7.34599652e-08, -2.92550870e-11,
       -5.74338967e-08, -7.81116540e-12]), 'test_rmse': array([-0.08100578, -0.5735106 , -0.07435804, -0.19649379, -0.54290551,
       -0.0599937 , -0.19782125, -0.2942498 , -0.11182584, -0.08053291,
       -0.09638837, -0.13474448, -0.15505925, -0.06149473]), 'test_mae': array([-0.05790026, -0.19916626, -0.04957301, -0.10064888, -0.20776129,
       -0.04281262, -0.13781589, -0.14101109, -0.07709222, -0.05585942,
       -0.07750277, -0.06898156, -0.11792877, -0.04280758]), 'test_r2': array([ 0.98332705,  0.29616457,  0.98783497,  0.86938148, -0.3006576 ,
        0.99160102,  0.84967001,  0.76978413,  0.95557149,  0.98290924,
        0.97870933,  0.96057192,  0.91376216,  0.99221207]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08722595424697485, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 549, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_4': {'cluster size (%)': 30, 6: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5635082870801174, 'test_rmse': 0.7746422085326758, 'test_r2': -1.8767179557704479, 'test_pearson_r': array([-0.12113415]), 'test_pearson_p_value': array([0.29397924]), 'test_spearman_r': -0.21540405283065056, 'test_spearman_p_value': 0.059917869280703286, 'test_kendall_r': -0.12198625757311785, 'test_kendall_p_value': 0.11923476200825751, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5645627567212703, 'test_rmse': 0.7704120483228539, 'test_r2': -1.845385421685763, 'test_pearson_r': array([-0.12932396]), 'test_pearson_p_value': array([0.26230205]), 'test_spearman_r': -0.23455529634081043, 'test_spearman_p_value': 0.04004455850833104, 'test_kendall_r': -0.13339578586320755, 'test_kendall_p_value': 0.09155912634779995, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5603076835445042, 'test_rmse': 0.768608673916828, 'test_r2': -1.8320801012190842, 'test_pearson_r': array([-0.12064254]), 'test_pearson_p_value': array([0.29595746]), 'test_spearman_r': -0.22167790667506385, 'test_spearman_p_value': 0.05267452742650833, 'test_kendall_r': -0.11793282943127761, 'test_kendall_p_value': 0.1322603018288062, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02446761761243193, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5581096182883607, 'test_rmse': 0.7596464552416664, 'test_r2': -1.7664192711856814, 'test_pearson_r': array([-0.09713379]), 'test_pearson_p_value': array([0.4006875]), 'test_spearman_r': -0.16211365752580448, 'test_spearman_p_value': 0.15895027968461223, 'test_kendall_r': -0.078040535084247, 'test_kendall_p_value': 0.31983421017607083, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.018690230293335323, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 522, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5637875743192912, 'test_rmse': 0.7697382359635725, 'test_r2': -1.8404103763452513, 'test_pearson_r': array([-0.12961913]), 'test_pearson_p_value': array([0.26120525]), 'test_spearman_r': -0.23238367083811803, 'test_spearman_p_value': 0.04197804098985231, 'test_kendall_r': -0.13060945091045126, 'test_kendall_p_value': 0.09853707017338002, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5587325639235874, 'test_rmse': 0.7607848895476244, 'test_r2': -1.7747172010316583, 'test_pearson_r': array([-0.08831551]), 'test_pearson_p_value': array([0.44499596]), 'test_spearman_r': -0.16653845684628077, 'test_spearman_p_value': 0.14772980090927712, 'test_kendall_r': -0.07435509416067873, 'test_kendall_p_value': 0.3418212562802748, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04291123640495174, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 581, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5653419416121792, 'test_rmse': 0.774970361559819, 'test_r2': -1.879155735803336, 'test_pearson_r': array([-0.12156851]), 'test_pearson_p_value': array([0.29223862]), 'test_spearman_r': -0.2341055485561686, 'test_spearman_p_value': 0.04043878981172574, 'test_kendall_r': -0.1280356090164601, 'test_kendall_p_value': 0.1050145188813124, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 76, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_4': {'cluster size (%)': 33, 6: {'fit_time': array([3.27261448, 3.37639308, 3.37010789]), 'score_time': array([0.1152966 , 0.11625791, 0.11768174]), 'test_pearson_r': array([0.93955839, 0.94009689, 0.87396985]), 'test_pearson_p': array([-2.49184403e-41, -5.08313717e-41, -4.69267248e-28]), 'test_spearman_r': array([0.92701422, 0.95207901, 0.85287735]), 'test_spearman_p': array([-5.79812230e-38, -5.52444925e-45, -1.98540537e-25]), 'test_kendall_r': array([0.82562826, 0.85687073, 0.74904106]), 'test_kendall_p': array([-1.41057272e-29, -2.37126565e-31, -2.24866671e-24]), 'test_rmse': array([-0.22467934, -0.22620337, -0.29714187]), 'test_mae': array([-0.10812368, -0.11015592, -0.14177466]), 'test_r2': array([0.87873255, 0.88109985, 0.73628039]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.63380337, 2.41249132, 2.44666314]), 'score_time': array([0.11651421, 0.12096691, 0.12063169]), 'test_pearson_r': array([0.84980232, 0.89361107, 0.95214957]), 'test_pearson_p': array([-2.32139111e-25, -5.78038827e-31, -5.20044241e-45]), 'test_spearman_r': array([0.83245534, 0.90348544, 0.94441826]), 'test_spearman_p': array([-1.65149325e-23, -1.18970368e-32, -2.39360170e-42]), 'test_kendall_r': array([0.71503338, 0.82023989, 0.82894464]), 'test_kendall_p': array([-1.43175123e-22, -6.57810817e-29, -1.98264175e-29]), 'test_rmse': array([-0.3668929 , -0.29887229, -0.18506491]), 'test_mae': array([-0.17214402, -0.12350351, -0.11011634]), 'test_r2': array([0.65220698, 0.78414581, 0.90551458]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.044142961484786865, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 163, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([28.54274011, 30.01805973, 32.00166464]), 'score_time': array([0.12504554, 0.12581015, 0.16479015]), 'test_pearson_r': array([0.96839807, 0.8110169 , 0.91275763]), 'test_pearson_p': array([-4.86626482e-53, -2.94711916e-21, -2.07690774e-34]), 'test_spearman_r': array([0.96904022, 0.83311395, 0.92876665]), 'test_spearman_p': array([-2.06070213e-53, -2.57752974e-23, -5.81096973e-38]), 'test_kendall_r': array([0.87548763, 0.75460702, 0.82944511]), 'test_kendall_p': array([-4.78440456e-33, -1.24677700e-24, -2.29618702e-29]), 'test_rmse': array([-0.16228963, -0.38138859, -0.27267336]), 'test_mae': array([-0.09507147, -0.16372388, -0.12315961]), 'test_r2': array([0.93762952, 0.56460424, 0.82443044]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.002861049879148768, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 3169, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.92579818, 2.01185179, 2.04918361]), 'score_time': array([0.11556697, 0.16498637, 0.11535716]), 'test_pearson_r': array([0.85111934, 0.86233573, 0.9348813 ]), 'test_pearson_p': array([-1.64313451e-25, -1.49291291e-26, -1.52107184e-39]), 'test_spearman_r': array([0.8982353 , 0.88462283, 0.92390792]), 'test_spearman_p': array([-4.30657835e-32, -1.44151466e-29, -8.39489222e-37]), 'test_kendall_r': array([0.82406358, 0.78842122, 0.8015344 ]), 'test_kendall_p': array([-2.68107799e-29, -8.37646480e-27, -9.85241967e-28]), 'test_rmse': array([-0.33649724, -0.35080313, -0.23784903]), 'test_mae': array([-0.12086701, -0.14712228, -0.13146255]), 'test_r2': array([0.66864391, 0.69847935, 0.86846283]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09939793013929618, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4800, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 161, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([11.34613085, 11.4297781 , 12.74543786]), 'score_time': array([0.1186831 , 0.1197052 , 0.11851907]), 'test_pearson_r': array([0.95604863, 0.83231063, 0.89762584]), 'test_pearson_p': array([-4.62347252e-47, -3.09888287e-23, -1.25037903e-31]), 'test_spearman_r': array([0.93968273, 0.82775702, 0.91072709]), 'test_spearman_p': array([-2.28896230e-41, -8.64636927e-23, -5.23187311e-34]), 'test_kendall_r': array([0.83338168, 0.75140552, 0.81612598]), 'test_kendall_p': array([-4.68825363e-30, -1.59317759e-24, -1.23229260e-28]), 'test_rmse': array([-0.18446304, -0.36794086, -0.27991122]), 'test_mae': array([-0.10419172, -0.15431494, -0.12415429]), 'test_r2': array([0.91358764, 0.65716816, 0.80161643]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.014798641065097335, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 41, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 720, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([4.25846624, 3.56722927, 4.47075009]), 'score_time': array([0.11962867, 0.11880064, 0.11544681]), 'test_pearson_r': array([0.89262171, 0.934914  , 0.84803326]), 'test_pearson_p': array([-3.74269674e-31, -1.49031775e-39, -6.97258549e-25]), 'test_spearman_r': array([0.90039284, 0.93656769, 0.85695956]), 'test_spearman_p': array([-1.81365635e-32, -5.23212683e-40, -6.64833973e-26]), 'test_kendall_r': array([0.77709566, 0.80904767, 0.78145007]), 'test_kendall_p': array([-2.32628201e-26, -3.49776814e-28, -3.40067184e-26]), 'test_rmse': array([-0.28919347, -0.23429351, -0.37420997]), 'test_mae': array([-0.15980476, -0.13223232, -0.15163709]), 'test_r2': array([0.76377022, 0.84975456, 0.6994232 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02666301886779036, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 289, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.57539988, 2.6068387 , 2.79773259]), 'score_time': array([0.11710668, 0.11657238, 0.11388779]), 'test_pearson_r': array([0.88309033, 0.78690945, 0.98684191]), 'test_pearson_p': array([-1.13296624e-29, -2.67628923e-19, -2.97223213e-68]), 'test_spearman_r': array([0.90126579, 0.82693188, 0.98419124]), 'test_spearman_p': array([-1.27101448e-32, -1.03797954e-22, -6.27313517e-65]), 'test_kendall_r': array([0.83424244, 0.74032528, 0.89800001]), 'test_kendall_p': array([-5.69800165e-30, -8.17487733e-24, -2.52917735e-34]), 'test_rmse': array([-0.31194126, -0.3979703 , -0.10559978]), 'test_mae': array([-0.11066334, -0.16812295, -0.07718494]), 'test_r2': array([0.75402441, 0.53489841, 0.97260867]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08722595424697485, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 549, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'overall data shape': {'targets_shape': (259, 1), 'training_features_shape': (259, 532)}}
Trimer_scaler
Filename: (Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_log Rg (nm)/KM5 polymer_solvent HSP and polysize cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_log Rg (nm)/KM5 polymer_solvent HSP and polysize cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_predictions.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_log Rg (nm)/KM5 polymer_solvent HSP and polysize cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_ClusterTruth.json
Done Saving scores!
------------------------------ 
Plotted Comparitive Cluster Scores!
______________________________ 
Plotted Parity Plots!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c035n02>
Subject: Job 347646: <XGBR_log Rg (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311> in cluster <Hazel> Done

Job <XGBR_log Rg (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311> was submitted from host <c025n03> by user <sdehgha2> in cluster <Hazel> at Sun Mar 16 15:02:04 2025
Job was executed on host(s) <8*c035n02>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Sun Mar 16 15:02:06 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Sun Mar 16 15:02:06 2025
Terminated at Tue Mar 18 01:24:22 2025
Results reported at Tue Mar 18 01:24:22 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input



#BSUB -n 8
#BSUB -W 80:05
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "XGBR_log Rg (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_log Rg (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_log Rg (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../make_ood_prediction.py --target_features "log Rg (nm)"                                       --representation "Mordred"                                       --regressor_type "XGBR"                                       --oligomer_representation "Trimer"                                       --numerical_feats 'Mw (g/mol)' 'PDI' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" 'solvent dP' 'solvent dD' 'solvent dH'                                       --clustering_method "KM5 polymer_solvent HSP and polysize cluster" 



------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   533752.06 sec.
    Max Memory :                                 7 GB
    Average Memory :                             6.85 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               9.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   123739 sec.
    Turnaround time :                            123738 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_log Rg (nm)_Mordred_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311.err> for stderr output of this job.

