


-------------------------------------------------- 
OOD TEST ON 0



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03935390902884975), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 117), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05215169370947723), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 170), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06142456841095915), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03774462230484414), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 178), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07693173041362837), ('regressor__regressor__max_depth', 269), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.030736009338413566), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08605522178717644), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1414), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05082576163662753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05920658006461146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03427544215886672), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0379946260355663), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1017), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 971), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015321258937556835), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1048), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.013627828990742562), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1288), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06048574530226919), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 240), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 344), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022420809114951697), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05911517604912221), ('regressor__regressor__max_depth', 9381), ('regressor__regressor__n_estimators', 370), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08010015160319119), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1432), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 73), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05487044866344626), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 90), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 398), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06165697655748211), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002157166904588675), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1308), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06942094706700487), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00876824589538263), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 331), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1600), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05408582221878534), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06058202107752814), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 99), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08048347691924113), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 133), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003733987964678198), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007822694349900915), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 538), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011195530108082438), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 271), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031061518378147693), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 252), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 167), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06413357436937349), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031651348425763504), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 83), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03507372269231158), ('regressor__regressor__max_depth', 5007), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06163281946791306), ('regressor__regressor__max_depth', 8857), ('regressor__regressor__n_estimators', 949), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 830), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029313474843246806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1452), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.048094379354093816), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01328597633671729), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 341), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 112), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014063880966826727), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008335258720839973), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 364), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 112), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015039363284612632), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1911), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05992734954599357), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 681), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0064346824732958744), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 530), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 1



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05069610633175344), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 102), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004866083656078861), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 1446), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05846497950090801), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 88), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07032338770692316), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 73), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03774462230484414), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 178), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 72), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09467470213469133), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 70), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 733), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07693173041362837), ('regressor__regressor__max_depth', 269), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08025412157590898), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1289), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05082576163662753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05920658006461146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03427544215886672), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0379946260355663), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1017), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06958319673078459), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04936913593170336), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 84), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.051931254003100974), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 121), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06048574530226919), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 240), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 344), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022420809114951697), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08358025084973794), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1235), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.023083043923962702), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0028344243857401437), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1240), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.021475232890348087), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 211), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 68), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 398), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06165697655748211), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002157166904588675), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1308), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06942094706700487), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00876824589538263), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 331), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 247), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 401), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07003727538262132), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 66), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05853151562592266), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 123), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02387635382297919), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 416), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003733987964678198), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007822694349900915), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 538), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011195530108082438), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 271), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031061518378147693), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 252), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04841611863639475), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 116), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0028163203848482923), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1639), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.059830194492921616), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 117), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 489), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00870656647918633), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 608), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03507372269231158), ('regressor__regressor__max_depth', 5007), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06163281946791306), ('regressor__regressor__max_depth', 8857), ('regressor__regressor__n_estimators', 949), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 830), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029313474843246806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1452), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.048094379354093816), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0033720613816370045), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1439), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01161389490860677), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 242), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006000548047404285), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 509), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0727880237480246), ('regressor__regressor__max_depth', 502), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016293143957286428), ('regressor__regressor__max_depth', 307), ('regressor__regressor__n_estimators', 1539), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008335258720839973), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 364), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 112), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015039363284612632), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1911), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05992734954599357), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 681), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0064346824732958744), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 530), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 2



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06067794740568264), ('regressor__regressor__max_depth', 15), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 211), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.037945267948942644), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 567), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026969982285796744), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1642), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06553604128271025), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03774462230484414), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 178), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07088404412108718), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1192), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09979665703990129), ('regressor__regressor__max_depth', 14), ('regressor__regressor__n_estimators', 1203), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05569487379335273), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 180), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05082576163662753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05920658006461146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03427544215886672), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0379946260355663), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1017), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01269506931896583), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06494420153174531), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 870), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 481), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.061501708356091464), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 96), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06048574530226919), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 240), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 344), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022420809114951697), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031038216306112743), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 396), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002122499693652956), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.043811726412052256), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 674), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03944332691092641), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 99), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05961889310545623), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 612), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 398), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06165697655748211), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002157166904588675), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1308), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06942094706700487), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00876824589538263), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 331), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02804110654198831), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03075956956086816), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06217640902440871), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.018756971188188698), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 215), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003733987964678198), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007822694349900915), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 538), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011195530108082438), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 271), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031061518378147693), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 252), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0798318423806833), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 408), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04512867701170123), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 250), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05916774037006332), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1388), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06843428002150219), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 559), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03507372269231158), ('regressor__regressor__max_depth', 5007), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06163281946791306), ('regressor__regressor__max_depth', 8857), ('regressor__regressor__n_estimators', 949), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 830), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029313474843246806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1452), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.048094379354093816), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001201563537731437), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012172697762000214), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07562332273251955), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 237), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02869319834960243), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07337023871757074), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 68), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008335258720839973), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 364), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 112), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015039363284612632), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1911), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05992734954599357), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 681), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0064346824732958744), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 530), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 3



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06304783973411551), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 434), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010920197487738438), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 315), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 139), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06651772472286016), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 136), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03774462230484414), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 178), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07055362523271222), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 84), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06863763254026796), ('regressor__regressor__max_depth', 9307), ('regressor__regressor__n_estimators', 1238), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008390551019063658), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 890), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07641486799865452), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1294), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09870685544637856), ('regressor__regressor__max_depth', 2008), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05082576163662753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05920658006461146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03427544215886672), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0379946260355663), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1017), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025041499136197735), ('regressor__regressor__max_depth', 206), ('regressor__regressor__n_estimators', 349), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09747692544726866), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 885), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0611493882524312), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09978170646081941), ('regressor__regressor__max_depth', 2934), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026269040392670695), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06048574530226919), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 240), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 344), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022420809114951697), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06935659257635673), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 668), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.053118681514143624), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0632049595958689), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 736), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 398), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06165697655748211), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002157166904588675), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1308), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06942094706700487), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00876824589538263), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 331), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 81), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07946971396951137), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 368), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005888966109219236), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1490), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035835315835056565), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04321155279191647), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 699), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003733987964678198), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007822694349900915), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 538), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011195530108082438), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 271), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031061518378147693), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 252), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 938), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022573633947439), ('regressor__regressor__max_depth', 4345), ('regressor__regressor__n_estimators', 1168), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07285231807057116), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 159), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008857790490392405), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1255), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03507372269231158), ('regressor__regressor__max_depth', 5007), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06163281946791306), ('regressor__regressor__max_depth', 8857), ('regressor__regressor__n_estimators', 949), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 830), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029313474843246806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1452), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.048094379354093816), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.055423350988957), ('regressor__regressor__max_depth', 14), ('regressor__regressor__n_estimators', 616), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07222108023177035), ('regressor__regressor__max_depth', 9255), ('regressor__regressor__n_estimators', 1385), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.018382062280162384), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 422), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 14), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08744941279281333), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008335258720839973), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 364), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 112), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015039363284612632), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1911), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05992734954599357), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 681), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0064346824732958744), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 530), ('regressor__regressor__n_jobs', -2)])


{'CO_0': {'cluster size (%)': 37, 6: {'test_mad': 0.471413734311726, 'test_ystd': 0.5739132295666852, 'test_mae': 0.4310624515047329, 'test_rmse': 0.6248214272655941, 'test_r2': -0.18527563544823544, 'test_pearson_r': array([0.1640006]), 'test_pearson_p_value': array([0.10845686]), 'test_spearman_r': -0.25253855545090714, 'test_spearman_p_value': 0.012575713749113636, 'test_kendall_r': -0.1704295357160496, 'test_kendall_p_value': 0.014733014113509543, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06142456841095915, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.471413734311726, 'test_ystd': 0.5739132295666852, 'test_mae': 0.4318020879996742, 'test_rmse': 0.6218989934474327, 'test_r2': -0.17421395047687804, 'test_pearson_r': array([0.15884443]), 'test_pearson_p_value': array([0.12017495]), 'test_spearman_r': -0.24760211075775715, 'test_spearman_p_value': 0.014477675314572423, 'test_kendall_r': -0.1541110588185463, 'test_kendall_p_value': 0.02967214622615671, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08605522178717644, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.471413734311726, 'test_ystd': 0.5739132295666852, 'test_mae': 0.4369310855025419, 'test_rmse': 0.6314238780212732, 'test_r2': -0.21045745748926237, 'test_pearson_r': array([0.13879185]), 'test_pearson_p_value': array([0.1751652]), 'test_spearman_r': -0.27644105443672623, 'test_spearman_p_value': 0.006125931923132901, 'test_kendall_r': -0.16173330787698262, 'test_kendall_p_value': 0.020823283209661706, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.015321258937556835, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1048, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.471413734311726, 'test_ystd': 0.5739132295666852, 'test_mae': 0.4331564357989164, 'test_rmse': 0.626330363081549, 'test_r2': -0.19100739939944456, 'test_pearson_r': array([0.16370744]), 'test_pearson_p_value': array([0.10909831]), 'test_spearman_r': -0.23966655068936962, 'test_spearman_p_value': 0.018058724691998665, 'test_kendall_r': -0.14508394906522945, 'test_kendall_p_value': 0.03783766249583677, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08010015160319119, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1432, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.471413734311726, 'test_ystd': 0.5739132295666852, 'test_mae': 0.43694475647302605, 'test_rmse': 0.6295818166041284, 'test_r2': -0.20340519153570513, 'test_pearson_r': array([0.14481591]), 'test_pearson_p_value': array([0.15699407]), 'test_spearman_r': -0.27334996204465817, 'test_spearman_p_value': 0.0067469141146954984, 'test_kendall_r': -0.17305854421953243, 'test_kendall_p_value': 0.013698127880040385, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06058202107752814, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 99, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.471413734311726, 'test_ystd': 0.5739132295666852, 'test_mae': 0.4368506892257074, 'test_rmse': 0.6272336042630192, 'test_r2': -0.1944450185362574, 'test_pearson_r': array([0.1503319]), 'test_pearson_p_value': array([0.14162401]), 'test_spearman_r': -0.2501519653621471, 'test_spearman_p_value': 0.013466186020630952, 'test_kendall_r': -0.1580178129662952, 'test_kendall_p_value': 0.023929764057944548, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 167, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.471413734311726, 'test_ystd': 0.5739132295666852, 'test_mae': 0.43643078187703527, 'test_rmse': 0.6284200387856749, 'test_r2': -0.19896796205285994, 'test_pearson_r': array([0.15024332]), 'test_pearson_p_value': array([0.14186148]), 'test_spearman_r': -0.24892926227126294, 'test_spearman_p_value': 0.013943276299038184, 'test_kendall_r': -0.16477406147709642, 'test_kendall_p_value': 0.018389129217604695, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 161, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_0': {'cluster size (%)': 33, 6: {'fit_time': array([1.61917353, 1.5888288 , 1.70361996]), 'score_time': array([0.13378477, 0.13148761, 0.12540817]), 'test_pearson_r': array([0.93290338, 0.9419318 , 0.87341986]), 'test_pearson_p': array([-1.83689199e-39, -1.42918346e-41, -5.56875524e-28]), 'test_spearman_r': array([0.92103573, 0.95429112, 0.85289012]), 'test_spearman_p': array([-1.45159938e-36, -7.94157749e-46, -1.97872652e-25]), 'test_kendall_r': array([0.81597806, 0.85985193, 0.75161277]), 'test_kendall_p': array([-6.28538363e-29, -1.52577831e-31, -1.58927853e-24]), 'test_rmse': array([-0.23716248, -0.22261836, -0.29532564]), 'test_mae': array([-0.11683381, -0.10733072, -0.13969371]), 'test_r2': array([0.86488302, 0.8848388 , 0.73949442]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.98456454, 2.91734815, 2.89158511]), 'score_time': array([0.12491727, 0.1301167 , 0.12821436]), 'test_pearson_r': array([0.8584328 , 0.91528342, 0.96058549]), 'test_pearson_p': array([-2.26535623e-26, -6.37443922e-35, -1.79187862e-48]), 'test_spearman_r': array([0.84247078, 0.93290057, 0.95140182]), 'test_spearman_p': array([-1.49883426e-24, -5.13941842e-39, -9.82240623e-45]), 'test_kendall_r': array([0.72966107, 0.84891807, 0.83640239]), 'test_kendall_p': array([-1.85117409e-23, -7.45483602e-31, -6.03515818e-30]), 'test_rmse': array([-0.35340945, -0.26639228, -0.16835666]), 'test_mae': array([-0.1644751 , -0.10956543, -0.10517067]), 'test_r2': array([0.6773003 , 0.82851251, 0.92180532]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05920658006461146, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([8.5168767 , 8.30620027, 8.95097613]), 'score_time': array([0.12887239, 0.14250278, 0.12697124]), 'test_pearson_r': array([0.97144434, 0.80987386, 0.90876359]), 'test_pearson_p': array([-6.97426098e-55, -3.70224590e-21, -1.25213940e-33]), 'test_spearman_r': array([0.97327373, 0.83658652, 0.91949928]), 'test_spearman_p': array([-4.34290834e-56, -1.14928284e-23, -8.15685685e-36]), 'test_kendall_r': array([0.88475095, 0.74911097, 0.80760012]), 'test_kendall_p': array([-1.01082083e-33, -2.68963464e-24, -6.23033294e-28]), 'test_rmse': array([-0.15528376, -0.37222485, -0.27627396]), 'test_mae': array([-0.09567929, -0.16407413, -0.12884316]), 'test_r2': array([0.94289822, 0.58527565, 0.8197631 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0022420809114951697, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.18450093, 1.15932298, 1.14187026]), 'score_time': array([0.136446  , 0.1223371 , 0.13413596]), 'test_pearson_r': array([0.84726723, 0.86070121, 0.93756233]), 'test_pearson_p': array([-4.47326698e-25, -2.36653627e-26, -2.74989204e-40]), 'test_spearman_r': array([0.89391322, 0.87630622, 0.92364882]), 'test_spearman_p': array([-2.30048029e-31, -2.24752693e-28, -9.63121578e-37]), 'test_kendall_r': array([0.81653052, 0.78305098, 0.805533  ]), 'test_kendall_p': array([-8.53591896e-29, -1.73821411e-26, -5.31905345e-28]), 'test_rmse': array([-0.34177213, -0.35525307, -0.23199164]), 'test_mae': array([-0.12380733, -0.15147263, -0.12700006]), 'test_r2': array([0.65817389, 0.69078126, 0.87486166]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06942094706700487, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 306, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([0.85175848, 0.84895587, 0.90441442]), 'score_time': array([0.13167095, 0.17711592, 0.12849426]), 'test_pearson_r': array([0.9554554 , 0.83222415, 0.8934837 ]), 'test_pearson_p': array([-8.07408481e-47, -3.16076484e-23, -6.06200180e-31]), 'test_spearman_r': array([0.94043069, 0.83076299, 0.90630234]), 'test_spearman_p': array([-1.36806626e-41, -4.40702554e-23, -3.63752193e-33]), 'test_kendall_r': array([0.84174123, 0.75377025, 0.82615926]), 'test_kendall_p': array([-1.21321999e-30, -1.12695995e-24, -2.60744676e-29]), 'test_rmse': array([-0.18549012, -0.36829607, -0.28789519]), 'test_mae': array([-0.10424534, -0.15676856, -0.11705155]), 'test_r2': array([0.91262269, 0.65650591, 0.79013795]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 252, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.68756819, 0.59521437, 0.67915368]), 'score_time': array([0.12695122, 0.1258688 , 0.12802362]), 'test_pearson_r': array([0.89099491, 0.93643839, 0.83698375]), 'test_pearson_p': array([-6.84888229e-31, -5.68410412e-40, -1.04659509e-23]), 'test_spearman_r': array([0.89455912, 0.93718066, 0.85883243]), 'test_spearman_p': array([-1.79922969e-31, -3.52414735e-40, -3.97903560e-26]), 'test_kendall_r': array([0.77156638, 0.80993722, 0.76377929]), 'test_kendall_p': array([-5.28961536e-26, -3.45641335e-28, -4.09140866e-25]), 'test_rmse': array([-0.29100951, -0.23015498, -0.3777861 ]), 'test_mae': array([-0.15932236, -0.13467913, -0.17185453]), 'test_r2': array([0.76079402, 0.85501552, 0.69365083]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.048094379354093816, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 115, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.70056939, 2.83078289, 2.71056628]), 'score_time': array([0.12859535, 0.12146449, 0.12638617]), 'test_pearson_r': array([0.87648755, 0.79176929, 0.98787444]), 'test_pearson_p': array([-1.01534021e-28, -1.13156994e-19, -9.80615085e-70]), 'test_spearman_r': array([0.89352113, 0.82753578, 0.985069  ]), 'test_spearman_p': array([-2.66854419e-31, -9.08138791e-23, -5.79697331e-66]), 'test_kendall_r': array([0.8167984 , 0.74032528, 0.90064512]), 'test_kendall_p': array([-8.19162808e-29, -8.17487733e-24, -1.53158525e-34]), 'test_rmse': array([-0.32050782, -0.39494113, -0.10168096]), 'test_mae': array([-0.12177023, -0.16460376, -0.07431635]), 'test_r2': array([0.74032889, 0.54195175, 0.97460394]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 112, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_1': {'cluster size (%)': 6, 6: {'test_mad': 0.8649260421603344, 'test_ystd': 0.9179933030716202, 'test_mae': 0.7190530747438915, 'test_rmse': 0.7925460529424377, 'test_r2': 0.25463329547678404, 'test_pearson_r': array([0.72972598]), 'test_pearson_p_value': array([0.00201497]), 'test_spearman_r': 0.5688707577888202, 'test_spearman_p_value': 0.02689374034371847, 'test_kendall_r': 0.3259007784866645, 'test_kendall_p_value': 0.10965254207056035, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.004866083656078861, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 26, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1446, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.8649260421603344, 'test_ystd': 0.9179933030716202, 'test_mae': 0.7031970630353139, 'test_rmse': 0.7847478130735988, 'test_r2': 0.269229171913991, 'test_pearson_r': array([0.76859145]), 'test_pearson_p_value': array([0.00081399]), 'test_spearman_r': 0.6170487372758213, 'test_spearman_p_value': 0.014266685239605564, 'test_kendall_r': 0.4310300618694595, 'test_kendall_p_value': 0.03436119124458412, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07693173041362837, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 269, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 289, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.8649260421603344, 'test_ystd': 0.9179933030716202, 'test_mae': 0.7021714300180919, 'test_rmse': 0.7720312376558615, 'test_r2': 0.2927210708659205, 'test_pearson_r': array([0.75410907]), 'test_pearson_p_value': array([0.00116263]), 'test_spearman_r': 0.5688707577888202, 'test_spearman_p_value': 0.02689374034371847, 'test_kendall_r': 0.3259007784866645, 'test_kendall_p_value': 0.10965254207056035, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.051931254003100974, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 121, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.8649260421603344, 'test_ystd': 0.9179933030716202, 'test_mae': 0.6840273549423066, 'test_rmse': 0.7497013912810155, 'test_r2': 0.3330433491099891, 'test_pearson_r': array([0.75822134]), 'test_pearson_p_value': array([0.00105327]), 'test_spearman_r': 0.5836947514771282, 'test_spearman_p_value': 0.02234734410393638, 'test_kendall_r': 0.34692663516322353, 'test_kendall_p_value': 0.088574256569191, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 68, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.8649260421603344, 'test_ystd': 0.9179933030716202, 'test_mae': 0.690017959501887, 'test_rmse': 0.7624619395035005, 'test_r2': 0.31014579944968546, 'test_pearson_r': array([0.75468753]), 'test_pearson_p_value': array([0.00114672]), 'test_spearman_r': 0.5836947514771282, 'test_spearman_p_value': 0.02234734410393638, 'test_kendall_r': 0.34692663516322353, 'test_kendall_p_value': 0.088574256569191, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 247, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.8649260421603344, 'test_ystd': 0.9179933030716202, 'test_mae': 0.69706195297494, 'test_rmse': 0.7617222925454041, 'test_r2': 0.3114835739517061, 'test_pearson_r': array([0.76957195]), 'test_pearson_p_value': array([0.00079387]), 'test_spearman_r': 0.5985187451654362, 'test_spearman_p_value': 0.018411916770752587, 'test_kendall_r': 0.3889783485163415, 'test_kendall_p_value': 0.05621216484702337, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04841611863639475, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 116, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.8649260421603344, 'test_ystd': 0.9179933030716202, 'test_mae': 0.6925874402389375, 'test_rmse': 0.7541377700746642, 'test_r2': 0.3251265252080603, 'test_pearson_r': array([0.7676525]), 'test_pearson_p_value': array([0.00083365]), 'test_spearman_r': 0.5725767562108972, 'test_spearman_p_value': 0.025696755722984608, 'test_kendall_r': 0.34692663516322353, 'test_kendall_p_value': 0.088574256569191, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0727880237480246, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 502, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 56, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_1': {'cluster size (%)': 6, 6: {'fit_time': array([1.7696414 , 1.80209208, 1.91691041, 1.77768588, 2.1318512 ,
       1.90695119, 1.82477474, 3.02922559, 2.36836171, 2.39587331,
       3.09336829, 1.81150675, 2.35602093, 3.045017  , 2.4113071 ,
       1.74871087, 1.7796526 ]), 'score_time': array([0.18314338, 0.13441348, 0.12496495, 0.17685986, 0.11961937,
       0.12572861, 0.12589359, 0.12552643, 0.12598085, 0.12340188,
       0.12368107, 0.12722707, 0.16986775, 0.19649148, 0.14142632,
       0.1265316 , 0.12607718]), 'test_pearson_r': array([0.88203775, 0.99108535, 0.99621257, 0.9833825 , 0.97071773,
       0.60321296, 0.9837653 , 0.99667909, 0.83524002, 0.95470811,
       0.93346193, 0.98705158, 0.94849573, 0.95792498, 0.95091683,
       0.98189411, 0.98117564]), 'test_pearson_p': array([-6.20546930e-06, -1.17188519e-13, -2.96776430e-16, -8.98026163e-12,
       -1.97589439e-09, -1.72840313e-02, -4.40909577e-11, -1.50678287e-15,
       -1.06293830e-04, -3.23702045e-08, -3.74522915e-07, -1.02162448e-11,
       -7.35254220e-08, -2.02096679e-08, -5.40847799e-08, -8.91951088e-11,
       -1.14668298e-10]), 'test_spearman_r': array([0.88823529, 0.97866104, 0.98823529, 0.91685087, 0.96785714,
       0.69642857, 0.96428571, 0.98571429, 0.86071429, 0.94096752,
       0.95978591, 0.97142857, 0.93118893, 0.93571429, 0.92142857,
       0.97408439, 0.94727473]), 'test_spearman_p': array([-4.32625087e-06, -5.10643005e-11, -8.10888105e-13, -5.90106916e-07,
       -3.59653554e-09, -3.92119051e-03, -7.07230301e-09, -1.92909487e-11,
       -3.80552502e-05, -1.75219002e-07, -1.51292714e-08, -1.68707649e-09,
       -4.63322550e-07, -3.01064562e-07, -1.07131730e-06, -9.00544474e-10,
       -8.53666117e-08]), 'test_kendall_r': array([0.83333333, 0.92887842, 0.95      , 0.82845913, 0.88571429,
       0.6952381 , 0.86666667, 0.94285714, 0.73333333, 0.83657714,
       0.89953183, 0.9047619 , 0.8421149 , 0.86666667, 0.84761905,
       0.9186708 , 0.82297593]), 'test_kendall_p': array([-2.44193725e-07, -5.65704076e-07, -7.63760478e-11, -8.12917002e-06,
       -5.33772028e-08, -1.17603724e-04, -1.54339647e-07, -1.01554334e-09,
       -3.70285640e-05, -1.58906350e-05, -3.20072183e-06, -1.65377563e-08,
       -1.29935955e-05, -1.54339647e-07, -4.07346059e-07, -1.96884727e-06,
       -2.03407556e-05]), 'test_rmse': array([-0.28931163, -0.08921163, -0.06789911, -0.14707678, -0.13667985,
       -0.55071124, -0.11486978, -0.06610236, -0.38886122, -0.1559253 ,
       -0.25519401, -0.09167456, -0.17926423, -0.22560714, -0.18876922,
       -0.09723034, -0.09452779]), 'test_mae': array([-0.119587  , -0.04875619, -0.04145817, -0.09225749, -0.0900488 ,
       -0.20339378, -0.07185564, -0.04595336, -0.1722486 , -0.07474132,
       -0.1040587 , -0.06620733, -0.0956739 , -0.12113172, -0.11290479,
       -0.0552452 , -0.07093571]), 'test_r2': array([0.75528826, 0.97776797, 0.99027167, 0.95953515, 0.93829447,
       0.02065349, 0.96552252, 0.99119088, 0.66129125, 0.90699261,
       0.85927844, 0.97257756, 0.89037675, 0.90478618, 0.87827658,
       0.95875771, 0.96044784]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([3.32214427, 4.41722083, 5.11120915, 4.53897285, 3.34780192,
       4.10974646, 5.07107615, 3.21571088, 3.33616686, 3.47177768,
       5.02443886, 4.16340566, 3.62556934, 3.68055677, 5.05460215,
       4.12540984, 3.53718758]), 'score_time': array([0.13613677, 0.12787223, 0.12270331, 0.1303885 , 0.13972187,
       0.13052249, 0.13860774, 0.12587118, 0.13056946, 0.12798548,
       0.1317513 , 0.13769794, 0.21709394, 0.14478278, 0.12422729,
       0.20007324, 0.15404105]), 'test_pearson_r': array([0.98822121, 0.90496184, 0.94553341, 0.99084288, 0.97265353,
       0.71384468, 0.95827828, 0.67547738, 0.99385364, 0.96294717,
       0.95660328, 0.98968952, 0.98566227, 0.96922395, 0.97793732,
       0.98441083, 0.96591883]), 'test_pearson_p': array([-8.17679802e-13, -1.45598613e-06, -3.29963383e-08, -1.41315607e-13,
       -1.27267465e-09, -2.79902483e-03, -1.91481624e-08, -5.71613463e-03,
       -8.18399470e-14, -8.95408750e-09, -2.46308396e-08, -2.33850856e-12,
       -1.97496053e-11, -2.72051973e-09, -3.19272788e-10, -3.39221915e-11,
       -5.23777303e-09]), 'test_spearman_r': array([0.91685087, 0.85356903, 0.94186928, 0.961001  , 0.95357143,
       0.69526391, 0.97142857, 0.71071429, 0.98123364, 0.90714286,
       0.92046507, 0.93118893, 0.98123364, 0.94642857, 0.95714286,
       0.99463487, 0.95357143]), 'test_spearman_p': array([-5.90106916e-07, -2.60458161e-05, -5.15371766e-08, -3.31817876e-09,
       -3.79244004e-08, -4.00737148e-03, -1.68707649e-09, -2.97899489e-03,
       -1.12406985e-10, -3.06331054e-06, -1.15689725e-06, -4.63322550e-07,
       -1.12406985e-10, -9.44793851e-08, -2.27367516e-08, -3.38871184e-14,
       -3.79244004e-08]), 'test_kendall_r': array([0.77824949, 0.77824949, 0.84519568, 0.89540533, 0.88571429,
       0.63158618, 0.9047619 , 0.71428571, 0.9186708 , 0.80952381,
       0.82297593, 0.8421149 , 0.9186708 , 0.9047619 , 0.86666667,
       0.97119874, 0.84761905]), 'test_kendall_p': array([-2.77306574e-05, -2.77306574e-05, -5.31661458e-06, -1.41912826e-06,
       -5.33772028e-08, -1.07486789e-03, -1.65377563e-08, -6.71036430e-05,
       -1.96884727e-06, -2.27466721e-06, -2.03407556e-05, -1.29935955e-05,
       -1.96884727e-06, -1.65377563e-08, -1.54339647e-07, -5.42917868e-07,
       -4.07346059e-07]), 'test_rmse': array([-0.08269476, -0.27714211, -0.21852778, -0.09763092, -0.14898984,
       -0.60042587, -0.18276178, -0.59003446, -0.07871955, -0.1601126 ,
       -0.19426106, -0.09798165, -0.10946081, -0.15063167, -0.11981837,
       -0.11772987, -0.13609441]), 'test_mae': array([-0.0554884 , -0.10879719, -0.11423679, -0.0554423 , -0.07084536,
       -0.25750019, -0.10982532, -0.19786049, -0.06352614, -0.09615044,
       -0.11954835, -0.06253046, -0.08322746, -0.07982637, -0.08867398,
       -0.06331568, -0.0904437 ]), 'test_r2': array([0.97553987, 0.80700946, 0.86407844, 0.98005977, 0.93849324,
       0.34519624, 0.90725134, 0.39265114, 0.97883065, 0.89071144,
       0.90773998, 0.97818273, 0.96598549, 0.93719391, 0.94808293,
       0.96591146, 0.92868304]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05920658006461146, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([13.44666576, 15.69792962, 14.19205475, 14.55707788, 13.46438599,
       13.71917725, 10.15411472, 10.702075  , 11.70192361, 10.1920743 ,
       12.9303298 , 13.97601223, 10.22219443, 12.51754236, 13.66263556,
       13.06665754, 14.07927275]), 'score_time': array([0.14517832, 0.1297667 , 0.17457795, 0.11855412, 0.15039396,
       0.15837741, 0.14006162, 0.13839579, 0.23452926, 0.1464467 ,
       0.14422369, 0.12978959, 0.14056134, 0.13698316, 0.24930978,
       0.14247227, 0.13337064]), 'test_pearson_r': array([0.91704948, 0.99773414, 0.92372726, 0.99609732, 0.98088563,
       0.9734136 , 0.99116092, 0.93131678, 0.96908914, 0.43641377,
       0.9877418 , 0.98612387, 0.97484606, 0.85279646, 0.99440828,
       0.73484641, 0.99425393]), 'test_pearson_p': array([-5.80623706e-07, -8.17313805e-18, -3.28556696e-07, -3.65952010e-16,
       -1.26560707e-10, -1.06155165e-09, -8.62581961e-13, -4.57899175e-07,
       -2.79800611e-09, -1.03874532e-01, -7.16759183e-12, -1.59830923e-11,
       -7.43176373e-10, -5.34322916e-05, -4.43168545e-14, -1.80382235e-03,
       -5.28784335e-14]), 'test_spearman_r': array([0.91390753, 0.99337775, 0.93235294, 0.98823529, 0.95      ,
       0.94548742, 0.98214286, 0.89285714, 0.96071429, 0.57142857,
       0.97316793, 0.98571429, 0.95978591, 0.90714286, 0.98476326,
       0.825     , 0.97853466]), 'test_spearman_p': array([-7.46809230e-07, -1.47168758e-14, -1.45175444e-07, -8.10888105e-13,
       -6.08625796e-08, -1.05561216e-07, -8.15733351e-11, -7.49473606e-06,
       -1.30274898e-08, -2.60631934e-02, -1.12628958e-09, -1.92909487e-11,
       -1.51292714e-08, -3.06331054e-06, -2.92616077e-11, -1.53235571e-04,
       -2.67486384e-10]), 'test_kendall_r': array([0.86193223, 0.96235152, 0.81666667, 0.95      , 0.86666667,
       0.8421149 , 0.92380952, 0.79047619, 0.86666667, 0.54285714,
       0.89427211, 0.92380952, 0.86125388, 0.80952381, 0.94192516,
       0.77142857, 0.91350377]), 'test_kendall_p': array([-3.45008795e-06, -2.18526649e-07, -5.50848432e-07, -7.63760478e-11,
       -1.54339647e-07, -1.29935955e-05, -4.47206135e-09, -4.90647531e-06,
       -1.54339647e-07, -4.14288160e-03, -3.95717604e-06, -4.47206135e-09,
       -8.22244396e-06, -2.27466721e-06, -1.37964761e-06, -1.00560004e-05,
       -2.44292118e-06]), 'test_rmse': array([-0.26925507, -0.04923407, -0.25544985, -0.06689361, -0.15520816,
       -0.12583008, -0.09765937, -0.17677576, -0.12185421, -0.59699839,
       -0.11444959, -0.1016081 , -0.15405046, -0.34835698, -0.07370459,
       -0.39102428, -0.07400842]), 'test_mae': array([-0.13604224, -0.03624215, -0.12965783, -0.05546348, -0.09261978,
       -0.08985893, -0.07600133, -0.09411967, -0.08316228, -0.27236949,
       -0.0821394 , -0.07030951, -0.08743384, -0.15995408, -0.05000513,
       -0.15736505, -0.05347067]), 'test_r2': array([ 0.83068778,  0.99451368,  0.83513426,  0.99010994,  0.94729054,
        0.92537393,  0.98205607,  0.85850122,  0.93619241, -0.66468675,
        0.97173769,  0.97008228,  0.93912431,  0.68865071,  0.98861222,
        0.46428503,  0.98772971]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0022420809114951697, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.32631087, 1.41074133, 1.65488648, 1.58683896, 1.9036293 ,
       1.95696688, 1.32306504, 1.34153271, 2.23099566, 2.23399687,
       1.51874399, 1.73878503, 2.18564439, 1.72551441, 1.70536089,
       1.38312125, 1.35893154]), 'score_time': array([0.12542319, 0.1671567 , 0.12554812, 0.22742653, 0.12450266,
       0.13183212, 0.12609649, 0.12859797, 0.12735772, 0.13282299,
       0.12965488, 0.12499714, 0.13475871, 0.15596819, 0.1244843 ,
       0.13422155, 0.12866211]), 'test_pearson_r': array([0.99281017, 0.99619871, 0.97476961, 0.99759472, 0.32805703,
       0.95684169, 0.98199271, 0.99073623, 0.96487088, 0.98809448,
       0.70985622, 0.99046388, 0.99609885, 0.90620354, 0.96775383,
       0.9770875 , 0.97582926]), 'test_pearson_p': array([-2.61313153e-14, -3.04453346e-16, -1.63265537e-10, -1.24096158e-17,
       -2.32584932e-01, -2.37782152e-08, -8.61048125e-11, -1.16905142e-12,
       -6.36121462e-09, -5.93380072e-12, -3.02990546e-03, -1.41041147e-12,
       -4.28576262e-15, -3.26282519e-06, -3.67142813e-09, -4.07348050e-10,
       -5.74863597e-10]), 'test_spearman_r': array([0.99043441, 0.99411765, 0.95294118, 0.98518437, 0.47227191,
       0.94285714, 0.95714286, 0.95357143, 0.96071429, 0.9534899 ,
       0.76785714, 0.99285714, 0.98928571, 0.91428571, 0.98214286,
       0.92857143, 0.97857143]), 'test_spearman_p': array([-1.91599035e-13, -6.43399749e-15, -1.20965793e-08, -4.04052904e-12,
       -7.54747857e-02, -1.42476769e-07, -2.27367516e-08, -3.79244004e-08,
       -1.30274898e-08, -3.83517842e-08, -8.29329629e-04, -2.16812149e-13,
       -2.99893426e-12, -1.85311213e-06, -8.15733351e-11, -5.86793827e-07,
       -2.64545601e-10]), 'test_kendall_r': array([0.94561497, 0.96666667, 0.83333333, 0.95742711, 0.50961538,
       0.84761905, 0.86666667, 0.86666667, 0.9047619 , 0.89427211,
       0.67619048, 0.96190476, 0.94285714, 0.82857143, 0.92380952,
       0.80952381, 0.92380952]), 'test_kendall_p': array([-3.52984089e-07, -1.29045888e-11, -2.44193725e-07, -4.69648705e-07,
       -8.55769726e-03, -4.07346059e-07, -1.54339647e-07, -1.54339647e-07,
       -1.65377563e-08, -3.95717604e-06, -1.99899920e-04, -1.82002497e-10,
       -1.01554334e-09, -9.95137652e-07, -4.47206135e-09, -2.27466721e-06,
       -4.47206135e-09]), 'test_rmse': array([-0.07806472, -0.0492014 , -0.12900413, -0.0456384 , -0.7850036 ,
       -0.17017515, -0.1600219 , -0.0937594 , -0.17009022, -0.08311189,
       -0.46781622, -0.09192354, -0.05424661, -0.30453635, -0.18592428,
       -0.12170688, -0.16534153]), 'test_mae': array([-0.06411743, -0.03129297, -0.08983565, -0.02806095, -0.33031359,
       -0.11168014, -0.10987315, -0.06294501, -0.07646423, -0.05886826,
       -0.22728492, -0.05618436, -0.04192082, -0.14724097, -0.09663938,
       -0.07805985, -0.10131604]), 'test_r2': array([ 0.98544897,  0.99100685,  0.94583155,  0.99393703, -1.22619161,
        0.91169386,  0.96013093,  0.97839819,  0.91993034,  0.97595203,
        0.38048854,  0.97674097,  0.99041912,  0.7764434 ,  0.92538842,
        0.94619626,  0.95108878]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06942094706700487, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 306, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([0.937078  , 1.40715361, 1.06828642, 0.94483113, 0.91497707,
       0.9643383 , 0.94302726, 1.49539685, 1.49836898, 1.07706881,
       0.9961431 , 0.94850206, 1.36510253, 1.2337029 , 1.52299833,
       1.46426058, 1.41356587]), 'score_time': array([0.12532902, 0.12328982, 0.16044736, 0.21997857, 0.12792397,
       0.12770939, 0.1249249 , 0.12812543, 0.12539911, 0.13476038,
       0.12978625, 0.12906861, 0.12641525, 0.11704612, 0.12669992,
       0.11972976, 0.12406087]), 'test_pearson_r': array([0.97088965, 0.88137291, 0.99602103, 0.98227179, 0.9670095 ,
       0.98542236, 0.96456062, 0.70848141, 0.97859865, 0.89102137,
       0.99720919, 0.99298298, 0.99717522, 0.8914762 , 0.98535964,
       0.76003361, 0.99827452]), 'test_pearson_p': array([-4.39831976e-10, -6.44265471e-06, -4.18977513e-16, -1.40834269e-11,
       -4.25083720e-09, -2.19863593e-11, -6.73032679e-09, -3.11292097e-03,
       -2.62386012e-10, -8.33161555e-06, -4.87162089e-16, -1.93214955e-13,
       -5.26983701e-16, -8.11735909e-06, -2.26051479e-11, -1.00779238e-03,
       -2.14509010e-17]), 'test_spearman_r': array([0.91176471, 0.87316014, 0.98896274, 0.97277436, 0.98659557,
       0.97857143, 0.96428571, 0.72857143, 0.94642857, 0.83946492,
       0.94633274, 0.97408439, 0.99285714, 0.8757823 , 0.92761431,
       0.79285714, 0.99642857]), 'test_spearman_p': array([-8.81898574e-07, -1.00628703e-05, -5.19703224e-13, -2.76678019e-10,
       -1.27797613e-11, -2.64545601e-10, -7.07230301e-09, -2.06520974e-03,
       -9.44793851e-08, -9.07505167e-05, -9.55610979e-08, -9.00544474e-10,
       -2.16812149e-13, -1.87787743e-05, -6.38323204e-07, -4.22077185e-04,
       -2.41597932e-15]), 'test_kendall_r': array([0.8       , 0.78487301, 0.94561497, 0.87866878, 0.93780978,
       0.92380952, 0.86666667, 0.67619048, 0.80952381, 0.68935288,
       0.85576923, 0.89953183, 0.96190476, 0.765559  , 0.8421149 ,
       0.73333333, 0.98095238]), 'test_kendall_p': array([-1.17934846e-06, -2.63701676e-05, -3.52984089e-07, -2.22140114e-06,
       -1.19967260e-06, -4.47206135e-09, -1.54339647e-07, -1.99899920e-04,
       -2.27466721e-06, -4.09762473e-04, -1.00948376e-05, -3.20072183e-06,
       -1.82002497e-10, -7.37568107e-05, -1.29935955e-05, -3.70285640e-05,
       -2.29414912e-11]), 'test_rmse': array([-0.1479727 , -0.3129916 , -0.05576957, -0.09689531, -0.19398469,
       -0.10351699, -0.18353703, -0.54578759, -0.09948769, -0.19982648,
       -0.05752681, -0.08323265, -0.04233039, -0.26872695, -0.10220923,
       -0.37024357, -0.0375587 ]), 'test_mae': array([-0.09116119, -0.14255761, -0.04263591, -0.07816112, -0.10111424,
       -0.06371145, -0.11109232, -0.20477315, -0.07012997, -0.12875476,
       -0.04063642, -0.06061354, -0.0327653 , -0.14433274, -0.08329594,
       -0.1553417 , -0.02870001]), 'test_r2': array([0.93883575, 0.74150788, 0.99193387, 0.95974793, 0.92960179,
       0.96916498, 0.92656694, 0.33871618, 0.94847478, 0.73735933,
       0.99418018, 0.98480072, 0.99417507, 0.76390578, 0.96730678,
       0.53294967, 0.9962971 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 252, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.84324622, 0.73756123, 1.15873384, 0.75810909, 1.28181434,
       0.76110935, 0.74202728, 0.97408032, 0.73415923, 0.86823606,
       1.28298306, 0.9030447 , 1.22398806, 1.20012569, 1.08963633,
       0.85421586, 1.01717734]), 'score_time': array([0.13052511, 0.13593769, 0.17539406, 0.12899733, 0.12218857,
       0.13201141, 0.17637992, 0.14379358, 0.19584823, 0.12544131,
       0.12576866, 0.13833785, 0.13780403, 0.12641406, 0.12655163,
       0.13699794, 0.17075276]), 'test_pearson_r': array([0.79529694, 0.97045249, 0.98079136, 0.99775988, 0.99450592,
       0.98414965, 0.96452692, 0.99857528, 0.99176755, 0.96820262,
       0.95972185, 0.99398511, 0.99477203, 0.98439251, 0.77868899,
       0.98714511, 0.7087626 ]), 'test_pearson_p': array([-2.30539386e-04, -4.87636993e-10, -2.45940503e-11, -7.54549614e-18,
       -3.95316429e-14, -3.77672140e-11, -6.77148321e-09, -6.18144520e-18,
       -5.44154277e-13, -3.35537856e-09, -1.52842320e-08, -7.11323604e-14,
       -2.86461821e-14, -3.41806079e-11, -6.25380224e-04, -9.74819533e-12,
       -3.09579544e-03]), 'test_spearman_r': array([0.7492658 , 0.92941176, 0.96318219, 0.99117647, 0.99105546,
       0.97857143, 0.96071429, 0.97408439, 0.98928571, 0.92940162,
       0.97142857, 0.95978591, 0.99642857, 0.99910674, 0.88571429,
       0.96057965, 0.65236845]), 'test_spearman_p': array([-8.34977207e-04, -1.94011895e-07, -2.23077439e-09, -1.09082915e-13,
       -9.31479423e-13, -2.64545601e-10, -1.30274898e-08, -9.00544474e-10,
       -2.99893426e-12, -5.44963808e-07, -1.68707649e-09, -1.51292714e-08,
       -2.41597932e-15, -2.97672627e-19, -1.11998219e-05, -1.33161058e-08,
       -8.39007203e-03]), 'test_kendall_r': array([0.66672008, 0.8       , 0.89078776, 0.96666667, 0.95192308,
       0.9047619 , 0.86666667, 0.9186708 , 0.94285714, 0.80383695,
       0.88571429, 0.86125388, 0.98095238, 0.9952267 , 0.79047619,
       0.86965655, 0.65072515]), 'test_kendall_p': array([-3.56884848e-04, -1.17934846e-06, -1.73481918e-06, -1.29045888e-11,
       -9.05141252e-07, -1.65377563e-08, -1.54339647e-07, -1.96884727e-06,
       -1.01554334e-09, -3.15442760e-05, -5.33772028e-08, -8.22244396e-06,
       -2.29414912e-11, -2.56380829e-07, -4.90647531e-06, -7.67778329e-06,
       -7.53715459e-04]), 'test_rmse': array([-0.30017941, -0.11936626, -0.13672027, -0.06109067, -0.06943177,
       -0.10327002, -0.14456631, -0.04345678, -0.08536242, -0.11342863,
       -0.17730424, -0.07118528, -0.06664244, -0.13715867, -0.48163569,
       -0.10461603, -0.56798325]), 'test_mae': array([-0.12914601, -0.09092471, -0.07987545, -0.04637626, -0.0444364 ,
       -0.06901514, -0.08017703, -0.03312197, -0.06459205, -0.0759951 ,
       -0.12312535, -0.05542431, -0.04705053, -0.08438112, -0.219449  ,
       -0.08554627, -0.22897339]), 'test_r2': array([0.62515668, 0.92382559, 0.96067656, 0.9908771 , 0.98675429,
       0.95995111, 0.92682361, 0.99655768, 0.97954456, 0.91715111,
       0.89439733, 0.98693381, 0.98927722, 0.9617579 , 0.58315528,
       0.96508303, 0.38134577]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.048094379354093816, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 115, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([3.04757261, 2.95556188, 4.77968383, 3.17068219, 4.17712569,
       2.90252113, 3.35542893, 3.07071614, 3.94906783, 4.09137154,
       3.42524576, 3.4090414 , 4.43670964, 4.33730412, 3.47705317,
       4.45587564, 2.89817214]), 'score_time': array([0.30629253, 0.13197589, 0.12628484, 0.21609569, 0.12222266,
       0.12821102, 0.20100284, 0.21054649, 0.1238718 , 0.12160015,
       0.13404226, 0.13300776, 0.17530942, 0.11993122, 0.18099141,
       0.12530208, 0.13121772]), 'test_pearson_r': array([0.99225244, 0.70452748, 0.98070277, 0.95132803, 0.90120792,
       0.45992044, 0.99311421, 0.94501618, 0.96176538, 0.84515297,
       0.9828845 , 0.99355414, 0.99398304, 0.99372943, 0.9677642 ,
       0.96839834, 0.99634078]), 'test_pearson_p': array([-4.40197500e-14, -2.31001277e-03, -2.53932085e-11, -1.52493890e-08,
       -4.51544069e-06, -8.45380604e-02, -1.70955716e-13, -1.11507503e-07,
       -1.09498806e-08, -7.28267878e-05, -6.20263336e-11, -1.11420363e-13,
       -7.12909059e-14, -9.31791795e-14, -3.66384779e-09, -3.22490254e-09,
       -2.82848934e-15]), 'test_spearman_r': array([0.94628429, 0.72566687, 0.93451092, 0.95217097, 0.86327112,
       0.59642857, 0.99285714, 0.92857143, 0.97765901, 0.78928571,
       0.96693515, 0.99553212, 0.99910674, 0.98571429, 0.92403969,
       0.96785714, 0.975     ]), 'test_spearman_p': array([-3.00012032e-08, -1.46251914e-03, -1.16375217e-07, -1.35244908e-08,
       -3.39556843e-05, -1.89319247e-02, -2.16812149e-13, -5.86793827e-07,
       -3.46144222e-10, -4.67326756e-04, -4.31271816e-09, -1.03359251e-14,
       -2.97672627e-19, -1.92909487e-11, -8.65565027e-07, -3.59653554e-09,
       -7.14370597e-10]), 'test_kendall_r': array([0.84519568, 0.75111503, 0.81172259, 0.84519568, 0.80383695,
       0.65714286, 0.96190476, 0.84761905, 0.89953183, 0.6952381 ,
       0.88039285, 0.97608773, 0.9952267 , 0.92380952, 0.82297593,
       0.88571429, 0.92380952]), 'test_kendall_p': array([-5.31661458e-06, -5.77113463e-05, -1.23329686e-05, -5.31661458e-06,
       -3.15442760e-05, -3.30370902e-04, -1.82002497e-10, -4.07346059e-07,
       -3.20072183e-06, -1.17603724e-04, -5.15437155e-06, -4.32916538e-07,
       -2.56380829e-07, -4.47206135e-09, -2.03407556e-05, -5.33772028e-08,
       -4.47206135e-09]), 'test_rmse': array([-0.08249033, -0.57067042, -0.12891775, -0.19787645, -0.25406601,
       -0.56196247, -0.07217763, -0.20435412, -0.16231571, -0.30836601,
       -0.10091545, -0.08531981, -0.08402961, -0.08390994, -0.1399268 ,
       -0.15944775, -0.06445921]), 'test_mae': array([-0.05929706, -0.1898008 , -0.06592282, -0.11458087, -0.10133384,
       -0.19638609, -0.05826915, -0.10400955, -0.1182416 , -0.13875769,
       -0.07188814, -0.0624659 , -0.06382444, -0.06511559, -0.07092162,
       -0.11703168, -0.04888435]), 'test_r2': array([ 0.98293719,  0.38327026,  0.96064977,  0.902432  ,  0.77721578,
       -0.43766738,  0.98601174,  0.87251538,  0.9190174 ,  0.69970651,
        0.96395006,  0.98390875,  0.9802551 ,  0.98588118,  0.92333412,
        0.93291382,  0.99154386]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 112, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_2': {'cluster size (%)': 32, 6: {'test_mad': 0.45093437358172256, 'test_ystd': 0.5199954063053398, 'test_mae': 0.3882518971891501, 'test_rmse': 0.4927515497574193, 'test_r2': 0.10204001582273114, 'test_pearson_r': array([0.51970323]), 'test_pearson_p_value': array([4.78421683e-07]), 'test_spearman_r': 0.3864137286671637, 'test_spearman_p_value': 0.0003082936401309971, 'test_kendall_r': 0.2375851196115363, 'test_kendall_p_value': 0.0016763283627691783, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06553604128271025, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 137, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.45093437358172256, 'test_ystd': 0.5199954063053398, 'test_mae': 0.3858312541812512, 'test_rmse': 0.49043515453688324, 'test_r2': 0.11046268306145968, 'test_pearson_r': array([0.52780304]), 'test_pearson_p_value': array([2.93734049e-07]), 'test_spearman_r': 0.3928834183094431, 'test_spearman_p_value': 0.00023882602679127046, 'test_kendall_r': 0.2445268581848895, 'test_kendall_p_value': 0.0011530544086894763, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07088404412108718, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1192, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.45093437358172256, 'test_ystd': 0.5199954063053398, 'test_mae': 0.38212243600849016, 'test_rmse': 0.4820035875484307, 'test_r2': 0.14078563891055484, 'test_pearson_r': array([0.54437072]), 'test_pearson_p_value': array([1.03995014e-07]), 'test_spearman_r': 0.3945523036422541, 'test_spearman_p_value': 0.0002234128802070535, 'test_kendall_r': 0.25157321824300116, 'test_kendall_p_value': 0.0008678448297888405, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 481, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.45093437358172256, 'test_ystd': 0.5199954063053398, 'test_mae': 0.38296963803126516, 'test_rmse': 0.4825089844938079, 'test_r2': 0.13898286405736282, 'test_pearson_r': array([0.55455856]), 'test_pearson_p_value': array([5.33860178e-08]), 'test_spearman_r': 0.40438550951631186, 'test_spearman_p_value': 0.000149711685186184, 'test_kendall_r': 0.2611396319113531, 'test_kendall_p_value': 0.0005696103784755084, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03944332691092641, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 99, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.45093437358172256, 'test_ystd': 0.5199954063053398, 'test_mae': 0.3858422652417131, 'test_rmse': 0.4920412727304653, 'test_r2': 0.10462688001157205, 'test_pearson_r': array([0.52483735]), 'test_pearson_p_value': array([3.51692806e-07]), 'test_spearman_r': 0.3955425705597194, 'test_spearman_p_value': 0.0002147057875715138, 'test_kendall_r': 0.24102907239927895, 'test_kendall_p_value': 0.001326000620551376, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02804110654198831, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.45093437358172256, 'test_ystd': 0.5199954063053398, 'test_mae': 0.3890027278649346, 'test_rmse': 0.4904610026656915, 'test_r2': 0.11036891539065141, 'test_pearson_r': array([0.52340309]), 'test_pearson_p_value': array([3.83460416e-07]), 'test_spearman_r': 0.38876794721267893, 'test_spearman_p_value': 0.00028111178334482516, 'test_kendall_r': 0.24339814454715872, 'test_kendall_p_value': 0.0012613520891287095, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06843428002150219, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 559, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.45093437358172256, 'test_ystd': 0.5199954063053398, 'test_mae': 0.3872065405751791, 'test_rmse': 0.49067940651475456, 'test_r2': 0.10957642786149757, 'test_pearson_r': array([0.52755004]), 'test_pearson_p_value': array([2.98301525e-07]), 'test_spearman_r': 0.392648303632392, 'test_spearman_p_value': 0.00024107444821667797, 'test_kendall_r': 0.24297436834967936, 'test_kendall_p_value': 0.001235648583419327, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.012172697762000214, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_2': {'cluster size (%)': 33, 6: {'fit_time': array([1.60813141, 1.65254474, 1.58785009]), 'score_time': array([0.13916183, 0.1773982 , 0.13011932]), 'test_pearson_r': array([0.93290338, 0.9419318 , 0.87341986]), 'test_pearson_p': array([-1.83689199e-39, -1.42918346e-41, -5.56875524e-28]), 'test_spearman_r': array([0.92103573, 0.95429112, 0.85289012]), 'test_spearman_p': array([-1.45159938e-36, -7.94157749e-46, -1.97872652e-25]), 'test_kendall_r': array([0.81597806, 0.85985193, 0.75161277]), 'test_kendall_p': array([-6.28538363e-29, -1.52577831e-31, -1.58927853e-24]), 'test_rmse': array([-0.23716248, -0.22261836, -0.29532564]), 'test_mae': array([-0.11683381, -0.10733072, -0.13969371]), 'test_r2': array([0.86488302, 0.8848388 , 0.73949442]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([3.13374066, 2.93155551, 2.88106418]), 'score_time': array([0.11692381, 0.13007665, 0.12220407]), 'test_pearson_r': array([0.8584328 , 0.91528342, 0.96058549]), 'test_pearson_p': array([-2.26535623e-26, -6.37443922e-35, -1.79187862e-48]), 'test_spearman_r': array([0.84247078, 0.93290057, 0.95140182]), 'test_spearman_p': array([-1.49883426e-24, -5.13941842e-39, -9.82240623e-45]), 'test_kendall_r': array([0.72966107, 0.84891807, 0.83640239]), 'test_kendall_p': array([-1.85117409e-23, -7.45483602e-31, -6.03515818e-30]), 'test_rmse': array([-0.35340945, -0.26639228, -0.16835666]), 'test_mae': array([-0.1644751 , -0.10956543, -0.10517067]), 'test_r2': array([0.6773003 , 0.82851251, 0.92180532]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05920658006461146, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([8.24619603, 7.97465491, 8.66767955]), 'score_time': array([0.12539411, 0.12853622, 0.1207788 ]), 'test_pearson_r': array([0.97144434, 0.80987386, 0.90876359]), 'test_pearson_p': array([-6.97426098e-55, -3.70224590e-21, -1.25213940e-33]), 'test_spearman_r': array([0.97327373, 0.83658652, 0.91949928]), 'test_spearman_p': array([-4.34290834e-56, -1.14928284e-23, -8.15685685e-36]), 'test_kendall_r': array([0.88475095, 0.74911097, 0.80760012]), 'test_kendall_p': array([-1.01082083e-33, -2.68963464e-24, -6.23033294e-28]), 'test_rmse': array([-0.15528376, -0.37222485, -0.27627396]), 'test_mae': array([-0.09567929, -0.16407413, -0.12884316]), 'test_r2': array([0.94289822, 0.58527565, 0.8197631 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0022420809114951697, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.02372503, 1.00522971, 1.01621628]), 'score_time': array([0.11256337, 0.11319041, 0.11267972]), 'test_pearson_r': array([0.84726723, 0.86070121, 0.93756233]), 'test_pearson_p': array([-4.47326698e-25, -2.36653627e-26, -2.74989204e-40]), 'test_spearman_r': array([0.89391322, 0.87630622, 0.92364882]), 'test_spearman_p': array([-2.30048029e-31, -2.24752693e-28, -9.63121578e-37]), 'test_kendall_r': array([0.81653052, 0.78305098, 0.805533  ]), 'test_kendall_p': array([-8.53591896e-29, -1.73821411e-26, -5.31905345e-28]), 'test_rmse': array([-0.34177213, -0.35525307, -0.23199164]), 'test_mae': array([-0.12380733, -0.15147263, -0.12700006]), 'test_r2': array([0.65817389, 0.69078126, 0.87486166]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06942094706700487, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 306, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([0.73729157, 0.79950833, 0.76298857]), 'score_time': array([0.11389923, 0.11194038, 0.11128736]), 'test_pearson_r': array([0.9554554 , 0.83222415, 0.8934837 ]), 'test_pearson_p': array([-8.07408481e-47, -3.16076484e-23, -6.06200180e-31]), 'test_spearman_r': array([0.94043069, 0.83076299, 0.90630234]), 'test_spearman_p': array([-1.36806626e-41, -4.40702554e-23, -3.63752193e-33]), 'test_kendall_r': array([0.84174123, 0.75377025, 0.82615926]), 'test_kendall_p': array([-1.21321999e-30, -1.12695995e-24, -2.60744676e-29]), 'test_rmse': array([-0.18549012, -0.36829607, -0.28789519]), 'test_mae': array([-0.10424534, -0.15676856, -0.11705155]), 'test_r2': array([0.91262269, 0.65650591, 0.79013795]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 252, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.5612781 , 0.53778744, 0.62897801]), 'score_time': array([0.11205029, 0.11318707, 0.11100888]), 'test_pearson_r': array([0.89099491, 0.93643839, 0.83698375]), 'test_pearson_p': array([-6.84888229e-31, -5.68410412e-40, -1.04659509e-23]), 'test_spearman_r': array([0.89455912, 0.93718066, 0.85883243]), 'test_spearman_p': array([-1.79922969e-31, -3.52414735e-40, -3.97903560e-26]), 'test_kendall_r': array([0.77156638, 0.80993722, 0.76377929]), 'test_kendall_p': array([-5.28961536e-26, -3.45641335e-28, -4.09140866e-25]), 'test_rmse': array([-0.29100951, -0.23015498, -0.3777861 ]), 'test_mae': array([-0.15932236, -0.13467913, -0.17185453]), 'test_r2': array([0.76079402, 0.85501552, 0.69365083]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.048094379354093816, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 115, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.9385283 , 2.6310482 , 2.67192125]), 'score_time': array([0.16367435, 0.17839479, 0.19578767]), 'test_pearson_r': array([0.87648755, 0.79176929, 0.98787444]), 'test_pearson_p': array([-1.01534021e-28, -1.13156994e-19, -9.80615085e-70]), 'test_spearman_r': array([0.89352113, 0.82753578, 0.985069  ]), 'test_spearman_p': array([-2.66854419e-31, -9.08138791e-23, -5.79697331e-66]), 'test_kendall_r': array([0.8167984 , 0.74032528, 0.90064512]), 'test_kendall_p': array([-8.19162808e-29, -8.17487733e-24, -1.53158525e-34]), 'test_rmse': array([-0.32050782, -0.39494113, -0.10168096]), 'test_mae': array([-0.12177023, -0.16460376, -0.07431635]), 'test_r2': array([0.74032889, 0.54195175, 0.97460394]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 112, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_3': {'cluster size (%)': 25, 6: {'test_mad': 0.46478597195208315, 'test_ystd': 0.536848010783258, 'test_mae': 0.23413745259803595, 'test_rmse': 0.3518661209183148, 'test_r2': 0.5704119321284258, 'test_pearson_r': array([0.819647]), 'test_pearson_p_value': array([1.22049685e-16]), 'test_spearman_r': 0.8188535535933746, 'test_spearman_p_value': 1.380912465319961e-16, 'test_kendall_r': 0.6653494496181589, 'test_kendall_p_value': 1.3565843591080932e-14, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06651772472286016, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 136, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.46478597195208315, 'test_ystd': 0.536848010783258, 'test_mae': 0.23816243469515716, 'test_rmse': 0.35166968804010135, 'test_r2': 0.5708914421530891, 'test_pearson_r': array([0.810139]), 'test_pearson_p_value': array([5.15853179e-16]), 'test_spearman_r': 0.7969254674553173, 'test_spearman_p_value': 3.361311214125883e-15, 'test_kendall_r': 0.6334232213487917, 'test_kendall_p_value': 2.3955808358325855e-13, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07055362523271222, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 84, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.46478597195208315, 'test_ystd': 0.536848010783258, 'test_mae': 0.23130108419606363, 'test_rmse': 0.3433343551652412, 'test_r2': 0.5909919755815984, 'test_pearson_r': array([0.82089639]), 'test_pearson_p_value': array([1.00358795e-16]), 'test_spearman_r': 0.8105861482653679, 'test_spearman_p_value': 4.829230387877393e-16, 'test_kendall_r': 0.6490205509039121, 'test_kendall_p_value': 5.061133460995803e-14, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09978170646081941, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2934, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1180, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.46478597195208315, 'test_ystd': 0.536848010783258, 'test_mae': 0.23760060652690015, 'test_rmse': 0.34950661041186243, 'test_r2': 0.576153997017425, 'test_pearson_r': array([0.81599073]), 'test_pearson_p_value': array([2.14544585e-16]), 'test_spearman_r': 0.8022856612227836, 'test_spearman_p_value': 1.5984472452657774e-15, 'test_kendall_r': 0.6402055177665882, 'test_kendall_p_value': 1.0761610771136928e-13, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0632049595958689, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 736, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.46478597195208315, 'test_ystd': 0.536848010783258, 'test_mae': 0.2318159347732552, 'test_rmse': 0.34895851108147574, 'test_r2': 0.5774823126969829, 'test_pearson_r': array([0.81999198]), 'test_pearson_p_value': array([1.1564777e-16]), 'test_spearman_r': 0.8091339438344194, 'test_spearman_p_value': 5.979216041451536e-16, 'test_kendall_r': 0.6513461376478247, 'test_kendall_p_value': 4.2365003249235596e-14, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.005888966109219236, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1490, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.46478597195208315, 'test_ystd': 0.536848010783258, 'test_mae': 0.22955480873385345, 'test_rmse': 0.34239396413102047, 'test_r2': 0.5932294489189716, 'test_pearson_r': array([0.82436202]), 'test_pearson_p_value': array([5.78553964e-17]), 'test_spearman_r': 0.8112447252706203, 'test_spearman_p_value': 4.380722054745096e-16, 'test_kendall_r': 0.6513646837265907, 'test_kendall_p_value': 3.9005343880721784e-14, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 938, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.46478597195208315, 'test_ystd': 0.536848010783258, 'test_mae': 0.22987293176153575, 'test_rmse': 0.34730916865199235, 'test_r2': 0.5814669093967352, 'test_pearson_r': array([0.822345]), 'test_pearson_p_value': array([7.98354868e-17]), 'test_spearman_r': 0.8134432825251154, 'test_spearman_p_value': 3.1551623206255033e-16, 'test_kendall_r': 0.656355983985032, 'test_kendall_p_value': 2.4932600343843292e-14, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.055423350988957, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 14, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 616, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_3': {'cluster size (%)': 25, 6: {'fit_time': array([1.67903805, 1.59187984, 1.62321448, 1.59650064]), 'score_time': array([0.12129712, 0.12170959, 0.12274051, 0.12372994]), 'test_pearson_r': array([0.93863353, 0.79127192, 0.95858066, 0.97388639]), 'test_pearson_p': array([-8.00015912e-31, -4.36215587e-15, -4.53301726e-36, -1.23873611e-41]), 'test_spearman_r': array([0.91541617, 0.83216592, 0.94313724, 0.96190924]), 'test_spearman_p': array([-1.37558151e-26, -8.80101516e-18, -7.76397538e-32, -1.25535666e-36]), 'test_kendall_r': array([0.82364584, 0.77034264, 0.84921792, 0.85273801]), 'test_kendall_p': array([-4.15025497e-22, -1.31429842e-19, -2.12857499e-23, -2.99983454e-23]), 'test_rmse': array([-0.23254324, -0.42387818, -0.18317472, -0.13112974]), 'test_mae': array([-0.10962369, -0.14757673, -0.09366796, -0.08372831]), 'test_r2': array([0.87521932, 0.5768942 , 0.91409104, 0.94712339]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([3.06370473, 3.01509118, 2.90396547, 2.8966651 ]), 'score_time': array([0.11881232, 0.12335634, 0.1236558 , 0.12239432]), 'test_pearson_r': array([0.94503809, 0.84085206, 0.96663696, 0.93260542]), 'test_pearson_p': array([-2.73831694e-32, -1.89638794e-18, -5.62331541e-39, -3.90029128e-29]), 'test_spearman_r': array([0.92394619, 0.87505329, 0.94627325, 0.92495622]), 'test_spearman_p': array([-5.50998121e-28, -1.59680430e-21, -1.36356842e-32, -9.73949665e-28]), 'test_kendall_r': array([0.81563707, 0.81669316, 0.81927949, 0.80387892]), 'test_kendall_p': array([-1.06392641e-21, -9.05237240e-22, -6.15427547e-22, -7.25933290e-21]), 'test_rmse': array([-0.21678929, -0.38522306, -0.16055355, -0.2099153 ]), 'test_mae': array([-0.10900342, -0.1332432 , -0.09644983, -0.11915596]), 'test_r2': array([0.87821233, 0.67516341, 0.93051909, 0.86797883]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05920658006461146, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([8.66428566, 8.12362599, 9.01679039, 9.05714965]), 'score_time': array([0.12787771, 0.13665509, 0.12716436, 0.12878823]), 'test_pearson_r': array([0.97779376, 0.97632235, 0.86007296, 0.92574206]), 'test_pearson_p': array([-1.79331178e-44, -1.32376909e-43, -4.46464053e-20, -7.11129103e-28]), 'test_spearman_r': array([0.97676504, 0.9632819 , 0.89567898, 0.94012155]), 'test_spearman_p': array([-7.35341143e-44, -1.09384046e-37, -7.50006561e-24, -1.11687872e-30]), 'test_kendall_r': array([0.88803461, 0.85659397, 0.809068  , 0.85544738]), 'test_kendall_p': array([-2.00817923e-25, -8.11952292e-24, -2.06224070e-21, -3.03557380e-23]), 'test_rmse': array([-0.14900586, -0.1295052 , -0.3084215 , -0.26045784]), 'test_mae': array([-0.09176068, -0.08823539, -0.13278767, -0.10543995]), 'test_r2': array([0.94884732, 0.95271553, 0.70672132, 0.85144374]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0022420809114951697, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.17298245, 1.13600683, 1.23114085, 1.09630299]), 'score_time': array([0.1239717 , 0.12277389, 0.11966944, 0.11952853]), 'test_pearson_r': array([0.9838257 , 0.84129979, 0.86409924, 0.92638783]), 'test_pearson_p': array([-9.05262430e-49, -1.74779886e-18, -1.89673901e-20, -5.47745397e-28]), 'test_spearman_r': array([0.97426051, 0.85876953, 0.903388  , 0.92372329]), 'test_spearman_p': array([-1.78095948e-42, -5.85694518e-20, -7.52955332e-25, -1.58439605e-27]), 'test_kendall_r': array([0.88718465, 0.78149864, 0.83136718, 0.82165962]), 'test_kendall_p': array([-3.03731225e-25, -4.14642410e-20, -1.71440007e-22, -9.36083810e-22]), 'test_rmse': array([-0.10763538, -0.393762  , -0.31961642, -0.253283  ]), 'test_mae': array([-0.07007235, -0.15045545, -0.11632456, -0.12877496]), 'test_r2': array([0.96721044, 0.64483943, 0.71049985, 0.84864261]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06942094706700487, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 306, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([0.80788088, 0.86808848, 0.83319569, 0.82047963]), 'score_time': array([0.11827755, 0.13226104, 0.12434888, 0.11748004]), 'test_pearson_r': array([0.95113942, 0.89637552, 0.8718384 , 0.86055376]), 'test_pearson_p': array([-7.37696776e-34, -6.13928168e-24, -3.37950435e-21, -7.98708514e-20]), 'test_spearman_r': array([0.92059332, 0.9121327 , 0.82179476, 0.87833135]), 'test_spearman_p': array([-2.03702366e-27, -4.34036272e-26, -4.92441145e-17, -1.53399572e-21]), 'test_kendall_r': array([0.82134847, 0.83457744, 0.74493067, 0.81043541]), 'test_kendall_p': array([-5.74895053e-22, -9.96898093e-23, -2.46725753e-18, -3.36850853e-21]), 'test_rmse': array([-0.19219417, -0.29054084, -0.32495722, -0.32930436]), 'test_mae': array([-0.09988139, -0.12295477, -0.14106937, -0.12732436]), 'test_r2': array([0.90295454, 0.7917649 , 0.73666423, 0.71971771]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 252, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.64107704, 0.6611712 , 0.71937346, 0.72702026]), 'score_time': array([0.11568999, 0.11891389, 0.12290263, 0.12209296]), 'test_pearson_r': array([0.90604763, 0.98819809, 0.97041574, 0.77923649]), 'test_pearson_p': array([-3.25653816e-25, -4.71537719e-53, -1.34946882e-40, -3.36532041e-14]), 'test_spearman_r': array([0.91933775, 0.97687634, 0.96330056, 0.82082703]), 'test_spearman_p': array([-3.27521529e-27, -6.33173097e-44, -1.07677350e-37, -1.01458881e-16]), 'test_kendall_r': array([0.8020295 , 0.87587495, 0.85645558, 0.74745291]), 'test_kendall_p': array([-4.63953006e-21, -7.92724769e-25, -9.01041901e-24, -3.66695676e-18]), 'test_rmse': array([-0.26181851, -0.10001909, -0.15546319, -0.45212258]), 'test_mae': array([-0.14187609, -0.06781299, -0.09841554, -0.19406808]), 'test_r2': array([0.79545032, 0.97594227, 0.93047573, 0.56397745]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.048094379354093816, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 115, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.79024982, 2.80551934, 2.86412454, 2.70956373]), 'score_time': array([0.20292401, 0.13026285, 0.11952376, 0.11919594]), 'test_pearson_r': array([0.86052594, 0.85687934, 0.95346138, 0.96002893]), 'test_pearson_p': array([-4.06012416e-20, -8.64070740e-20, -1.64837617e-34, -5.43739778e-36]), 'test_spearman_r': array([0.87728679, 0.88530466, 0.94101321, 0.94786969]), 'test_spearman_p': array([-9.36953360e-22, -1.26426782e-22, -2.38651697e-31, -1.70859170e-32]), 'test_kendall_r': array([0.80766055, 0.79701478, 0.84404467, 0.8516129 ]), 'test_kendall_p': array([-3.18173561e-21, -7.20234256e-21, -4.17534056e-23, -2.72765350e-23]), 'test_rmse': array([-0.36394354, -0.32050287, -0.18435707, -0.17920188]), 'test_mae': array([-0.12978546, -0.13126191, -0.09392466, -0.09214596]), 'test_r2': array([0.69582001, 0.67998172, 0.90865253, 0.92145207]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 112, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'overall data shape': {'targets_shape': (259, 1), 'training_features_shape': (259, 522)}}
Trimer_scaler
Filename: (ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_log Rg (nm)/KM4 polymer_solvent HSP cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_log Rg (nm)/KM4 polymer_solvent HSP cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_predictions.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_log Rg (nm)/KM4 polymer_solvent HSP cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_ClusterTruth.json
Done Saving scores!
------------------------------ 
Plotted Comparitive Cluster Scores!
______________________________ 
Plotted Parity Plots!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c020n01>
Subject: Job 295234: <XGBR_log Rg (nm)_ECFP_Trimer_KM4 polymer_solvent HSP cluster_20250311> in cluster <Hazel> Done

Job <XGBR_log Rg (nm)_ECFP_Trimer_KM4 polymer_solvent HSP cluster_20250311> was submitted from host <c040n02> by user <sdehgha2> in cluster <Hazel> at Tue Mar 11 19:12:46 2025
Job was executed on host(s) <8*c020n01>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Wed Mar 12 17:03:07 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Wed Mar 12 17:03:07 2025
Terminated at Thu Mar 13 12:44:10 2025
Results reported at Thu Mar 13 12:44:10 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input



#BSUB -n 8
#BSUB -W 72:05
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "XGBR_log Rg (nm)_ECFP_Trimer_KM4 polymer_solvent HSP cluster_20250311"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_log Rg (nm)_ECFP_Trimer_3_count_KM4 polymer_solvent HSP cluster_20250311.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_log Rg (nm)_ECFP_Trimer_3_count_KM4 polymer_solvent HSP cluster_20250311.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../make_ood_prediction.py --target_features "log Rg (nm)"                                       --representation "ECFP"                                       --regressor_type "XGBR"                                       --radius "3"                                       --vector "count"                                       --oligomer_representation "Trimer"                                       --numerical_feats 'Mw (g/mol)' 'PDI' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" 'solvent dP' 'solvent dD' 'solvent dH'                                       --clustering_method "KM4 polymer_solvent HSP cluster" 



------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   171549.00 sec.
    Max Memory :                                 6 GB
    Average Memory :                             3.73 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               10.00 GB
    Max Swap :                                   1 GB
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   70863 sec.
    Turnaround time :                            149484 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_log Rg (nm)_ECFP_Trimer_3_count_KM4 polymer_solvent HSP cluster_20250311.err> for stderr output of this job.

