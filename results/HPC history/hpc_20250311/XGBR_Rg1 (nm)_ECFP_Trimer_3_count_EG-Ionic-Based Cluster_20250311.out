


-------------------------------------------------- 
OOD TEST ON ionic-EG



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01230392365801648), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 344), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06979640891616859), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 718), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09981773736241228), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1118), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006987170899657572), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 604), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006790028136556199), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 990), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0585024815243816), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 377), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09833949263552134), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 772), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0033128862830936676), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1717), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0140521706556793), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 301), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07785392658428184), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003557012591240448), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1509), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07592269263724673), ('regressor__regressor__max_depth', 221), ('regressor__regressor__n_estimators', 227), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0038013564843676117), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1408), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002462831282836302), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 641), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0659922761997342), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012884190399073006), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 941), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030175755341803503), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1044), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09179206628090139), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1777), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08789612372390584), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 851), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003986006602672576), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1149), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09142875911974674), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0024249259734503152), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.027935759011273018), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 145), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06963380840333412), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 729), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03191616669721422), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 186), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014538077718185273), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002415072273236963), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04609078151077008), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 178), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0778792625521031), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 135), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09668444650345559), ('regressor__regressor__max_depth', 13), ('regressor__regressor__n_estimators', 143), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03091554039652946), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 130), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09125129433504907), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 963), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004664017447798385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 261), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03978763772444338), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 583), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013953757051049982), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1011), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04716608387963197), ('regressor__regressor__max_depth', 149), ('regressor__regressor__n_estimators', 123), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00823007270911254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 615), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04857846939710113), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 267), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06268557413452477), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 252), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002183437566034332), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06612451013508984), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 193), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07937370579692231), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011693582337431922), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017463376130982033), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 394), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05708375039430823), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 74), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007904941135285724), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05694259057348198), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1700), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08322004736048987), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0230006481273428), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 291), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06678639058063013), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052629883546321456), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0027506333059973014), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1055), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08456944634357325), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 60), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08764357902797004), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1419), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00670315752979371), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 118), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020940186074374827), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 612), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029299815296515142), ('regressor__regressor__max_depth', 43), ('regressor__regressor__n_estimators', 574), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05225400716467375), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 345), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08064687686284065), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 52), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002922641992768343), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])


{'CO_ionic-EG': {'cluster size (%)': 6, 6: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.60060458183287, 'test_rmse': 180.81039049457237, 'test_r2': -0.8853841169556051, 'test_pearson_r': array([-0.84774007]), 'test_pearson_p_value': array([3.36775348e-05]), 'test_spearman_r': -0.6764989853094172, 'test_spearman_p_value': 0.004006132590041414, 'test_kendall_r': -0.478722430236683, 'test_kendall_p_value': 0.013685838772958933, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.006790028136556199, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 990, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.41579751968382, 'test_rmse': 180.24910499751724, 'test_r2': -0.8736967772476678, 'test_pearson_r': array([-0.84526158]), 'test_pearson_p_value': array([3.74470866e-05]), 'test_spearman_r': -0.6744613040487055, 'test_spearman_p_value': 0.004160546791390076, 'test_kendall_r': -0.46742635244280273, 'test_kendall_p_value': 0.015679264187725396, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07592269263724673, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 221, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 227, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 143.11892943382261, 'test_rmse': 179.77056696586325, 'test_r2': -0.8637611390919666, 'test_pearson_r': array([-0.84891703]), 'test_pearson_p_value': array([3.20020428e-05]), 'test_spearman_r': -0.6749855647606265, 'test_spearman_p_value': 0.004120369677665702, 'test_kendall_r': -0.478722430236683, 'test_kendall_p_value': 0.013685838772958933, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.98510651588438, 'test_rmse': 181.08446170055535, 'test_r2': -0.8911041546686591, 'test_pearson_r': array([-0.84672087]), 'test_pearson_p_value': array([3.51872033e-05]), 'test_spearman_r': -0.6744613040487055, 'test_spearman_p_value': 0.004160546791390076, 'test_kendall_r': -0.46742635244280273, 'test_kendall_p_value': 0.015679264187725396, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04609078151077008, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 178, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.33148531913756, 'test_rmse': 180.4563943182571, 'test_r2': -0.8780088171190457, 'test_pearson_r': array([-0.84737892]), 'test_pearson_p_value': array([3.42061433e-05]), 'test_spearman_r': -0.6764989853094172, 'test_spearman_p_value': 0.004006132590041414, 'test_kendall_r': -0.478722430236683, 'test_kendall_p_value': 0.013685838772958933, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.00823007270911254, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 615, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 144.53226952552794, 'test_rmse': 179.91857868559, 'test_r2': -0.8668314086943347, 'test_pearson_r': array([-0.84258777]), 'test_pearson_p_value': array([4.19034421e-05]), 'test_spearman_r': -0.6704978586824799, 'test_spearman_p_value': 0.0044745750001737306, 'test_kendall_r': -0.4651960393438625, 'test_kendall_p_value': 0.017350154937630362, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05708375039430823, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 74, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 124.73343749999998, 'test_ystd': 131.68110494082853, 'test_mae': 143.2285418987274, 'test_rmse': 179.990563020735, 'test_r2': -0.8683255234389147, 'test_pearson_r': array([-0.84800064]), 'test_pearson_p_value': array([3.33004116e-05]), 'test_spearman_r': -0.6653878335906511, 'test_spearman_p_value': 0.004907203046131562, 'test_kendall_r': -0.44944841581038725, 'test_kendall_p_value': 0.020159684267826914, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 118, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_ionic-EG': {'cluster size (%)': 6, 6: {'fit_time': array([1.48981667, 1.66124964, 2.05254579, 2.0637641 , 2.28533077,
       1.69103146, 2.06849146, 1.48031378, 1.63410592, 1.66997242,
       2.06526566, 2.06963134, 1.98502421, 2.26712823, 1.94338465,
       2.18779087]), 'score_time': array([0.13041711, 0.13923311, 0.13908243, 0.13603711, 0.13287139,
       0.15316439, 0.14438128, 0.13298249, 0.14146066, 0.21925354,
       0.13484502, 0.14326167, 0.13688254, 0.13457894, 0.1376307 ,
       0.13639021]), 'test_pearson_r': array([0.95829217, 0.99766967, 0.99452135, 0.74861182, 0.9967288 ,
       0.16846722, 0.97498748, 0.99625652, 0.99592421, 0.98607539,
       0.99589628, 0.99770192, 0.99402527, 0.78166182, 0.99749038,
       0.90191267]), 'test_pearson_p': array([-1.45757284e-09, -6.56319855e-19, -3.95919683e-16, -8.48722224e-04,
       -1.06551140e-16, -5.32831469e-01, -1.53737763e-10, -2.73521701e-16,
       -4.95643318e-16, -2.62361415e-12, -5.19875800e-16, -9.02139850e-18,
       -7.17376512e-15, -3.48185753e-04, -1.67006137e-17, -1.80113247e-06]), 'test_spearman_r': array([0.68137255, 0.97240975, 0.99141179, 0.87941176, 0.89117647,
       0.70294118, 0.98529412, 0.90588235, 0.97866104, 0.87058824,
       0.9757177 , 0.98454773, 0.9757177 , 0.86598032, 0.97201873,
       0.93529412]), 'test_spearman_p': array([-2.59660314e-03, -6.84697631e-11, -1.14272617e-14, -7.18727304e-06,
       -3.61864891e-06, -2.38695267e-03, -3.83671954e-12, -1.36351336e-06,
       -5.10643005e-11, -1.14989348e-05, -1.25183504e-10, -5.41517846e-12,
       -1.25183504e-10, -1.45036150e-05, -3.34448567e-10, -1.07201672e-07]), 'test_kendall_r': array([0.63235294, 0.92251551, 0.96298938, 0.75      , 0.76666667,
       0.68333333, 0.95      , 0.83333333, 0.91214188, 0.73333333,
       0.91214188, 0.92887842, 0.91214188, 0.72271459, 0.90759507,
       0.8       ]), 'test_kendall_p': array([-1.94890902e-04, -2.55733743e-07, -8.13306630e-08, -8.91848950e-06,
       -4.72451181e-06, -8.26619198e-05, -7.63760478e-11, -2.44193725e-07,
       -8.99518934e-07, -1.62687222e-05, -8.99518934e-07, -5.65704076e-07,
       -8.99518934e-07, -1.04538557e-04, -1.10296350e-06, -1.17934846e-06]), 'test_rmse': array([ -21.98042841,   -6.95825018,  -31.60401976,  -64.62069353,
        -18.66944157, -195.38766876,  -11.88095766,   -8.02400531,
         -7.77966948,  -33.41124256,   -5.84933457,   -6.1974835 ,
        -16.51264938,  -30.11646554,   -6.16040494,  -26.61792829]), 'test_mae': array([-11.9707832 ,  -4.78566173, -12.92690479, -22.44975229,
       -13.23447255, -59.72022949,  -8.03431744,  -5.57175558,
        -5.1700617 , -16.66626744,  -3.82927368,  -4.12486041,
       -11.23206087, -15.24776369,  -4.42743986, -13.53434748]), 'test_r2': array([ 0.89765769,  0.98839955,  0.98530439,  0.32776626,  0.99109911,
       -4.93452061,  0.94991765,  0.98575463,  0.99022221,  0.96945771,
        0.99054611,  0.99520742,  0.97517805,  0.07802955,  0.99280907,
        0.79727684]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0140521706556793, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 301, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([6.72022939, 5.49557304, 6.1822865 , 6.70848608, 4.91076756,
       5.23502016, 5.97701192, 5.16259146, 6.06172872, 6.4311707 ,
       6.86303568, 4.82545209, 6.8817966 , 5.77405334, 6.74132323,
       6.28588963]), 'score_time': array([0.15007019, 0.13669086, 0.14238191, 0.14871883, 0.13664031,
       0.18356085, 0.15418935, 0.1369555 , 0.14828873, 0.12835002,
       0.19765425, 0.14181519, 0.13295865, 0.14889383, 0.13617063,
       0.19313025]), 'test_pearson_r': array([0.98643717, 0.98461857, 0.64475913, 0.99961004, 0.24661225,
       0.98498939, 0.98984013, 0.98878393, 0.83797269, 0.95933348,
       0.88429126, 0.99489276, 0.99538659, 0.96090799, 0.97666815,
       0.98238549]), 'test_pearson_p': array([-3.46797661e-13, -8.86434100e-13, -5.20048042e-03, -3.67341553e-23,
       -3.57173182e-01, -4.42549049e-12, -2.91707518e-13, -5.81309538e-13,
       -5.06382242e-05, -4.42845637e-09, -5.45546102e-06, -2.39780283e-15,
       -1.17821751e-15, -3.37313163e-09, -9.48980245e-11, -1.34672368e-11]), 'test_spearman_r': array([0.82771322, 0.77225306, 0.8887565 , 0.85935199, 0.66666685,
       0.91979422, 0.91470588, 0.98160439, 0.87858743, 0.98527353,
       0.90427197, 0.98823529, 0.98823529, 0.94411765, 0.87481685,
       0.96688768]), 'test_spearman_p': array([-4.11025792e-05, -2.80387118e-04, -1.86072399e-06, -1.99634802e-05,
       -4.79590355e-03, -4.62206235e-07, -7.01180219e-07, -1.82090718e-11,
       -7.52120583e-06, -3.87426958e-12, -1.52871825e-06, -8.10888105e-13,
       -8.10888105e-13, -3.93392920e-08, -9.22022553e-06, -1.07216639e-09]), 'test_kendall_r': array([0.68635154, 0.60223464, 0.80605994, 0.77310924, 0.6778302 ,
       0.84519568, 0.76666667, 0.92887842, 0.74477639, 0.9412097 ,
       0.72271459, 0.95      , 0.95      , 0.81666667, 0.77313654,
       0.87866878]), 'test_kendall_p': array([-1.25989639e-04, -8.22570773e-04, -7.95010666e-06, -3.31810562e-05,
       -2.61704221e-04, -5.31661458e-06, -4.72451181e-06, -5.65704076e-07,
       -6.04438410e-05, -4.35438108e-07, -1.04538557e-04, -7.63760478e-11,
       -7.63760478e-11, -5.50848432e-07, -3.31759538e-05, -2.22140114e-06]), 'test_rmse': array([  -6.90783225,  -20.61928792,  -61.08492627,  -25.22468834,
       -189.5060911 ,  -33.95454511,  -12.01002722,  -32.91239423,
        -18.38189662,  -15.51909308,  -25.65584317,  -41.14005985,
        -10.60253807,  -23.87599546,  -19.22775855,  -14.2233536 ]), 'test_mae': array([ -5.65642893, -14.19912343, -19.39540203, -10.12105102,
       -55.16012625, -18.09525838,  -8.96596261, -17.52849266,
        -9.44151246, -10.16535546, -13.7623154 , -18.83309741,
        -6.12689309, -15.66453745, -12.41799634, -10.1996631 ]), 'test_r2': array([ 0.96662945,  0.93776645, -0.0680587 ,  0.98557914, -3.13943853,
        0.96900043,  0.97636255,  0.97049305,  0.48444455,  0.87663281,
        0.68136933,  0.96241386,  0.97403764,  0.92036559,  0.93560521,
        0.96248872]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0030175755341803503, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1044, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.19589424, 1.22837925, 1.5997653 , 1.30828857, 1.43427563,
       1.20378041, 1.18802643, 1.24690843, 1.46722269, 1.17704558,
       1.24730253, 1.26545119, 1.24869227, 1.26314926, 1.22106409,
       1.27826762]), 'score_time': array([0.13831234, 0.17262435, 0.17530584, 0.15355015, 0.13279748,
       0.12958026, 0.13464284, 0.13431549, 0.19460678, 0.13539791,
       0.21394062, 0.15756178, 0.13376594, 0.19634414, 0.1357522 ,
       0.19147396]), 'test_pearson_r': array([0.99492624, 0.995539  , 0.8863687 , 0.99781172, 0.99788024,
       0.99696131, 0.75295034, 0.98296853, 0.06681795, 0.98358274,
       0.99548228, 0.9764003 , 0.97871255, 0.99192547, 0.989543  ,
       0.9940809 ]), 'test_pearson_p': array([-2.22861518e-16, -8.50295573e-17, -2.16641475e-06, -6.40564768e-18,
       -5.12768478e-18, -6.36320187e-17, -7.60903807e-04, -1.06565984e-11,
       -8.05786580e-01, -8.25400559e-12, -1.01769649e-15, -1.02718840e-10,
       -5.02146360e-11, -5.87404070e-14, -3.56649343e-13, -6.72000945e-15]), 'test_spearman_r': array([0.99938707, 0.97486223, 0.93317001, 0.97941176, 0.94705882,
       0.95588235, 0.90588235, 0.98454773, 0.63823529, 0.75791043,
       0.96983102, 0.97058824, 0.94922763, 0.89447103, 0.89117647,
       0.98232802]), 'test_spearman_p': array([-2.94591538e-23, -3.43059266e-11, -4.64827006e-08, -3.98200979e-11,
       -2.71573117e-08, -7.76027446e-09, -1.36351336e-06, -5.41517846e-12,
       -7.80113863e-03, -6.69783553e-04, -5.63193822e-10, -4.72340113e-10,
       -2.03820935e-08, -2.94450849e-06, -3.61864891e-06, -1.37757701e-11]), 'test_kendall_r': array([0.99631675, 0.90775526, 0.80443352, 0.91666667, 0.81666667,
       0.85      , 0.81666667, 0.92887842, 0.6       , 0.69456675,
       0.89540533, 0.9       , 0.87866878, 0.76282144, 0.85      ,
       0.92440239]), 'test_kendall_p': array([-2.61058988e-08, -3.95736275e-07, -6.99598360e-06, -1.38948965e-09,
       -5.50848432e-07, -1.02027025e-07, -5.50848432e-07, -5.65704076e-07,
       -7.73831095e-04, -1.83536177e-04, -1.41912826e-06, -4.72556483e-09,
       -2.22140114e-06, -4.67457603e-05, -1.02027025e-07, -6.95749778e-07]), 'test_rmse': array([  -8.23932355,  -18.26579964,  -31.79318578,  -28.75411284,
        -13.54329429,  -16.46686254,  -64.92155556,  -13.51121094,
       -198.47894376,  -17.47343805,  -10.56062678,  -10.40931723,
        -18.89213785,   -9.74816702,   -7.69716911,   -9.34616771]), 'test_mae': array([ -5.769375  ,  -9.28970913, -13.87282759, -14.71154973,
        -7.74851723,  -9.88902691, -21.919043  ,  -5.65256881,
       -57.72081614, -10.65482498,  -6.79234542,  -5.75170816,
       -11.48538097,  -5.78505171,  -4.91378396,  -5.32134748]), 'test_r2': array([  0.9866567 ,   0.98988806,   0.78349352,   0.98181989,
         0.99561218,   0.99249096,   0.41453079,   0.95804702,
       -18.36231509,   0.96097   ,   0.98760749,   0.94267919,
         0.95300003,   0.9761624 ,   0.97408496,   0.98516525]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03191616669721422, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 186, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.69174862, 1.78549552, 1.83219838, 1.78439283, 1.78243876,
       2.41979504, 2.17583847, 2.27617049, 2.10266924, 2.31617308,
       1.84223914, 2.36107469, 1.82415581, 2.321141  , 1.95172763,
       2.31948376]), 'score_time': array([0.13134646, 0.1375041 , 0.13980436, 0.15874815, 0.1325984 ,
       0.12906194, 0.12883329, 0.13785195, 0.12688684, 0.13328314,
       0.20913577, 0.15112448, 0.1301105 , 0.12708998, 0.12673831,
       0.13058066]), 'test_pearson_r': array([ 0.98897487,  0.99560854,  0.97854999,  0.99802451, -0.08753051,
        0.99390567,  0.99566625,  0.98794613,  0.9956862 ,  0.80195263,
        0.99586086,  0.99600619,  0.6576409 ,  0.99802994,  0.98566236,
        0.99761166]), 'test_pearson_p': array([-7.38759366e-14, -7.55928961e-17, -1.05502239e-11, -3.13191413e-18,
       -7.47195002e-01, -8.23878886e-15, -7.61100802e-16, -9.60389233e-13,
       -7.36946032e-16, -1.86426179e-04, -5.52059217e-16, -4.30027140e-16,
       -5.62633506e-03, -3.07214922e-18, -3.21580278e-12, -1.18110121e-17]), 'test_spearman_r': array([0.85828221, 0.98039216, 0.96995726, 0.98669374, 0.5802651 ,
       0.97058824, 0.9757177 , 0.96460597, 0.97126251, 0.81089058,
       0.98749107, 0.99117647, 0.69117647, 0.96764706, 0.92058824,
       0.98160439]), 'test_spearman_p': array([-1.04305506e-05, -5.40869607e-12, -1.28761744e-10, -1.91214071e-12,
       -1.84484633e-02, -4.72340113e-10, -1.25183504e-10, -1.69905595e-09,
       -4.02278911e-10, -1.38406226e-04, -1.24331763e-12, -1.09082915e-13,
       -3.02471880e-03, -9.13289481e-10, -4.32041043e-07, -1.82090718e-11]), 'test_kendall_r': array([0.81481481, 0.92647059, 0.87823476, 0.94048016, 0.5210084 ,
       0.9       , 0.91214188, 0.86926796, 0.90302594, 0.74477639,
       0.94561497, 0.95      , 0.6       , 0.88333333, 0.8       ,
       0.92887842]), 'test_kendall_p': array([-5.65567745e-06, -1.08016188e-10, -9.29113866e-07, -5.83620144e-07,
       -5.15718988e-03, -4.72556483e-09, -8.99518934e-07, -3.24532792e-06,
       -1.35084085e-06, -6.04438410e-05, -3.52984089e-07, -7.63760478e-11,
       -7.73831095e-04, -1.43717927e-08, -1.17934846e-06, -5.65704076e-07]), 'test_rmse': array([ -11.44852473,   -6.6129593 ,  -19.37523599,   -3.86410851,
       -277.81188206,   -8.71369969,  -28.78563596,  -14.25924175,
         -6.49003369,  -32.83053609,   -8.54452215,   -6.93722846,
        -67.97663933,  -13.4310592 ,  -17.23327984,  -17.00981929]), 'test_mae': array([  -5.90972764,   -4.60494515,  -10.80817448,   -2.21141862,
       -106.00561275,   -4.32553318,  -16.45836394,   -7.34926206,
         -4.50405553,  -14.08537311,   -6.63276248,   -4.24521153,
        -28.78963688,   -7.36802448,  -12.35311133,  -10.86505069]), 'test_r2': array([  0.97285207,   0.9873931 ,   0.95725366,   0.99141727,
       -58.62058468,   0.9877482 ,   0.9883352 ,   0.96996087,
         0.99122517,   0.17989178,   0.98200757,   0.99177473,
        -0.08461579,   0.99528922,   0.95474927,   0.99317126]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09125129433504907, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 963, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.68333459, 2.8858242 , 3.01788473, 3.03250003, 2.59097147,
       3.35213614, 3.10780358, 3.16472387, 2.9443047 , 3.21932292,
       2.75037837, 2.90741396, 2.67828083, 3.20083213, 2.47296572,
       2.26918936]), 'score_time': array([0.15195322, 0.14385891, 0.14525652, 0.1362102 , 0.13853288,
       0.13241124, 0.12637973, 0.13538027, 0.18405199, 0.13398194,
       0.13145876, 0.13951492, 0.1850884 , 0.13201666, 0.13383174,
       0.12865329]), 'test_pearson_r': array([0.99806258, 0.97383992, 0.98624875, 0.99593086, 0.98818437,
       0.9868399 , 0.98963461, 0.26013714, 0.48486672, 0.99631474,
       0.98888284, 0.98774409, 0.89560662, 0.98715292, 0.98902246,
       0.99484667]), 'test_pearson_p': array([-1.64491219e-19, -4.61238026e-11, -3.84396206e-13, -4.90023058e-16,
       -8.35668188e-13, -1.77054983e-12, -3.35425418e-13, -3.30536650e-01,
       -5.69683416e-02, -2.45138561e-16, -5.46503678e-13, -1.07832723e-12,
       -2.73824957e-06, -1.49721884e-12, -5.00413583e-13, -2.55312694e-15]), 'test_spearman_r': array([0.99264706, 0.83602082, 0.82331288, 0.96688768, 0.97718937,
       0.96470588, 0.96176471, 0.74411765, 0.84411765, 0.94698085,
       0.961001  , 0.98235294, 0.84071162, 0.98160439, 0.84705882,
       0.96470588]), 'test_spearman_p': array([-3.57827382e-15, -2.91067062e-05, -4.89915735e-05, -1.07216639e-09,
       -8.11284121e-11, -1.66620775e-09, -2.89508013e-09, -9.48282786e-04,
       -3.93024274e-05, -2.74327867e-08, -3.31817876e-09, -1.36412383e-11,
       -4.52882807e-05, -1.82090718e-11, -3.46804648e-05, -1.66620775e-09]), 'test_kendall_r': array([0.95588235, 0.73702963, 0.77777778, 0.87866878, 0.91214188,
       0.88333333, 0.85      , 0.71666667, 0.71666667, 0.87394958,
       0.87866878, 0.91666667, 0.75111503, 0.91214188, 0.76666667,
       0.91666667]), 'test_kendall_p': array([-5.34739170e-12, -4.76443323e-05, -1.47387682e-05, -2.22140114e-06,
       -8.99518934e-07, -1.43717927e-08, -1.02027025e-07, -2.87624658e-05,
       -2.87624658e-05, -2.70782464e-06, -2.22140114e-06, -1.38948965e-09,
       -5.77113463e-05, -8.99518934e-07, -4.72451181e-06, -1.38948965e-09]), 'test_rmse': array([  -5.52810376,  -14.28037143,  -12.73639363,  -21.87397299,
        -16.64435748,   -7.42880766,  -14.85577244, -199.27005062,
        -66.50353436,  -26.003029  ,  -11.91778189,  -17.46209124,
        -31.40610731,  -13.96437418,   -6.00515071,  -20.51426587]), 'test_mae': array([ -3.39140667,  -7.97482342,  -6.51720485, -12.48400163,
       -10.53071204,  -5.1094433 ,  -8.48491099, -55.0213869 ,
       -26.46260389, -12.3396272 ,  -6.70259861,  -8.41130054,
       -13.78963364,  -9.12323221,  -3.86351283, -11.39041391]), 'test_r2': array([ 0.99447452,  0.94006388,  0.97057702,  0.9881752 ,  0.9698774 ,
        0.97380416,  0.97833707, -4.10592799, -2.31721736,  0.99063932,
        0.9762628 ,  0.96316551,  0.71880236,  0.9566013 ,  0.97604072,
        0.98829551]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05913781436124809, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2125, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.36527395, 0.43154573, 0.37482476, 0.42609644, 0.40909648,
       0.38302541, 0.36650157, 0.3665235 , 0.50934434, 0.47758293,
       0.4387939 , 0.44224119, 0.46948028, 0.4452529 , 0.41614509,
       0.43310118]), 'score_time': array([0.12888837, 0.13147116, 0.13716722, 0.13341141, 0.14474344,
       0.13007021, 0.13026619, 0.13127828, 0.12802529, 0.13019586,
       0.22213459, 0.14073944, 0.12492704, 0.12772536, 0.13228226,
       0.13069439]), 'test_pearson_r': array([0.97450847, 0.92015608, 0.99480845, 0.98836118, 0.9970048 ,
       0.97182262, 0.99664771, 0.69341808, 0.9959466 , 0.9962768 ,
       0.97301153, 0.99956345, 0.99517395, 0.87047501, 0.98215778,
       0.76925858]), 'test_pearson_p': array([-3.80576961e-11, -1.69869565e-07, -2.64629908e-16, -7.52315046e-13,
       -5.75310331e-17, -3.51022327e-10, -1.26445885e-16, -2.89365588e-03,
       -4.76927433e-16, -2.63330905e-16, -2.60404876e-10, -8.09299216e-23,
       -1.61426791e-15, -1.15659219e-05, -1.47253672e-11, -4.94603839e-04]), 'test_spearman_r': array([0.83232161, 0.95833333, 0.96932588, 0.99043441, 0.94256259,
       0.90294118, 0.97201767, 0.87564409, 0.87352941, 0.95581738,
       0.93823529, 0.99410462, 0.98305325, 0.8550407 , 0.83100197,
       0.67844021]), 'test_spearman_p': array([-3.40187898e-05, -1.44699119e-09, -1.50222538e-10, -1.91599035e-13,
       -4.74737472e-08, -1.67772437e-06, -3.34535840e-10, -8.82222352e-06,
       -9.86965167e-06, -7.83927032e-09, -7.80221977e-08, -6.53417850e-15,
       -1.02933426e-11, -2.43675207e-05, -6.66843678e-05, -3.86334348e-03]), 'test_kendall_r': array([0.75207105, 0.85294118, 0.9037285 , 0.96235152, 0.85714286,
       0.81666667, 0.90756303, 0.76151294, 0.75      , 0.88235294,
       0.81666667, 0.97054189, 0.91990493, 0.6778302 , 0.71196668,
       0.62762056]), 'test_kendall_p': array([-3.32635548e-05, -2.39403120e-08, -4.80224875e-07, -2.18526649e-07,
       -4.19268233e-06, -5.50848432e-07, -1.10319426e-06, -4.10999309e-05,
       -8.91848950e-06, -2.16973828e-06, -5.50848432e-07, -2.02597451e-07,
       -8.54700027e-07, -2.61704221e-04, -1.44750601e-04, -7.24551643e-04]), 'test_rmse': array([ -16.51605003,  -26.99938001,  -12.6281127 ,  -14.33366894,
         -6.68969968,  -15.29614853,  -39.23281508,  -63.38433204,
         -8.54653016,   -9.90176155,  -15.31561716,   -5.88887516,
        -11.27893783,  -32.60040844,  -18.71853301, -189.69476372]), 'test_mae': array([ -9.82379779, -14.79566531,  -8.7966608 ,  -6.83170295,
        -5.31671333,  -7.51179843, -19.32447146, -20.3760756 ,
        -6.08501456,  -7.84747153,  -8.82460139,  -4.32613537,
        -8.33386591, -21.06322125, -10.13783516, -72.95292586]), 'test_r2': array([0.94528615, 0.77878619, 0.9784966 , 0.95962657, 0.99108408,
       0.90380737, 0.96613957, 0.00246914, 0.98504534, 0.95711878,
       0.94070678, 0.99898252, 0.98605885, 0.72819465, 0.93792904,
       0.4990887 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06678639058063013, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.63838124, 1.47003841, 1.7967999 , 1.66574335, 1.70331216,
       1.67638826, 1.51247406, 1.42917037, 1.97539854, 2.01521802,
       1.62349057, 2.10151911, 1.94085813, 1.69312   , 2.17150474,
       2.21360111]), 'score_time': array([0.13316417, 0.13304496, 0.12937713, 0.13301539, 0.1343255 ,
       0.12719011, 0.13266778, 0.12834096, 0.14885688, 0.12981653,
       0.13628697, 0.13267183, 0.14239717, 0.1358242 , 0.1363914 ,
       0.14275742]), 'test_pearson_r': array([0.99580032, 0.99821435, 0.99927238, 0.98514571, 0.81899586,
       0.23970947, 0.99457647, 0.56789133, 0.96631873, 0.98298209,
       0.99440884, 0.99039893, 0.98719454, 0.99746185, 0.94068352,
       0.99772402]), 'test_pearson_p': array([-5.41093503e-17, -8.92568100e-20, -1.06600186e-22, -4.11448856e-12,
       -1.04221802e-04, -3.71216201e-01, -3.64854193e-15, -2.17452314e-02,
       -1.20613721e-09, -1.05977481e-11, -4.51306313e-15, -1.96610448e-13,
       -1.46375386e-12, -1.80746014e-17, -5.91730346e-08, -8.43187418e-18]), 'test_spearman_r': array([0.67075426, 0.89926561, 0.98404982, 0.97277436, 0.91096419,
       0.63723343, 0.99117647, 0.85882353, 0.80559734, 0.96470588,
       0.99705449, 0.98598457, 0.98235294, 0.98160439, 0.94411765,
       0.96764706]), 'test_spearman_p': array([-3.20626415e-03, -9.12283574e-07, -1.16198135e-12, -2.76678019e-10,
       -9.37408818e-07, -7.92927989e-03, -1.09082915e-13, -2.04643957e-05,
       -1.65403905e-04, -1.66620775e-09, -5.11806168e-17, -2.74510261e-12,
       -1.36412383e-11, -1.82090718e-11, -3.93392920e-08, -9.13289481e-10]), 'test_kendall_r': array([0.67159129, 0.82533014, 0.91854372, 0.89540533, 0.84519568,
       0.7113033 , 0.95      , 0.73333333, 0.72271459, 0.85      ,
       0.98742088, 0.94928891, 0.91666667, 0.91214188, 0.86666667,
       0.91666667]), 'test_kendall_p': array([-1.75630107e-04, -4.50366449e-06, -3.11133291e-07, -1.41912826e-06,
       -5.31661458e-06, -1.27728091e-04, -7.63760478e-11, -1.62687222e-05,
       -1.04538557e-04, -1.02027025e-07, -1.24121435e-07, -4.05106961e-07,
       -1.38948965e-09, -8.99518934e-07, -3.98309214e-08, -1.38948965e-09]), 'test_rmse': array([ -17.62820034,  -16.10441106,   -9.81836077,  -10.24201108,
        -29.90157257, -199.45508384,   -9.23878381,  -65.41122836,
        -16.20345331,  -16.01862873,  -10.12413104,  -14.55979455,
        -13.7369419 ,   -6.52903863,  -26.51671128,  -26.26071492]), 'test_mae': array([ -9.53257032,  -8.71668459,  -6.13737281,  -5.90376479,
       -10.08990356, -54.00978667,  -5.86655928, -23.44151636,
        -9.52448671,  -9.7279412 ,  -5.80204138,  -8.96336116,
        -7.44033863,  -4.65284931, -16.41232523, -12.04691087]), 'test_r2': array([ 0.99041737,  0.99344774,  0.99717177,  0.96849619,  0.5325204 ,
       -5.76310372,  0.98879627, -0.64191699,  0.92838526,  0.96481131,
        0.98375154,  0.97711889,  0.96342642,  0.99466078,  0.7945935 ,
        0.98525685]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05225400716467375, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 345, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'overall data shape': {'targets_shape': (259, 1), 'training_features_shape': (259, 522)}}
Trimer_scaler
Filename: (ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/EG-Ionic-Based Cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/EG-Ionic-Based Cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_predictions.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/EG-Ionic-Based Cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_ClusterTruth.json
Done Saving scores!
------------------------------ 
Plotted Comparitive Cluster Scores!
______________________________ 
Plotted Parity Plots!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c010n02>
Subject: Job 294628: <XGBR_Rg1 (nm)_ECFP_Trimer_EG-Ionic-Based Cluster_20250311> in cluster <Hazel> Done

Job <XGBR_Rg1 (nm)_ECFP_Trimer_EG-Ionic-Based Cluster_20250311> was submitted from host <c040n04> by user <sdehgha2> in cluster <Hazel> at Tue Mar 11 18:16:47 2025
Job was executed on host(s) <6*c010n02>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Tue Mar 11 23:44:40 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Tue Mar 11 23:44:40 2025
Terminated at Wed Mar 12 02:57:55 2025
Results reported at Wed Mar 12 02:57:55 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input



#BSUB -n 6
#BSUB -W 72:05
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "XGBR_Rg1 (nm)_ECFP_Trimer_EG-Ionic-Based Cluster_20250311"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_ECFP_Trimer_3_count_EG-Ionic-Based Cluster_20250311.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_ECFP_Trimer_3_count_EG-Ionic-Based Cluster_20250311.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../make_ood_prediction.py --target_features "Rg1 (nm)"                                       --representation "ECFP"                                       --regressor_type "XGBR"                                       --radius "3"                                       --vector "count"                                       --oligomer_representation "Trimer"                                       --numerical_feats 'Mw (g/mol)' 'PDI' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" 'solvent dP' 'solvent dD' 'solvent dH'                                       --clustering_method "EG-Ionic-Based Cluster" 



------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   43322.32 sec.
    Max Memory :                                 5 GB
    Average Memory :                             4.88 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               11.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   11617 sec.
    Turnaround time :                            31268 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_ECFP_Trimer_3_count_EG-Ionic-Based Cluster_20250311.err> for stderr output of this job.

