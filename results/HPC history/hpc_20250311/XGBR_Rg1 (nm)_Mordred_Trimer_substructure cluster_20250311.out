


-------------------------------------------------- 
OOD TEST ON Fluorene



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08659082738750183), ('regressor__regressor__max_depth', 2263), ('regressor__regressor__n_estimators', 801), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004167659106541271), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1262), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05805440677148317), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 474), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003160354578146245), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1858), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08772314892572997), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 370), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 7130), ('regressor__regressor__n_estimators', 216), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07928939409564152), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 286), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0031065465855619552), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1700), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004485491323363814), ('regressor__regressor__max_depth', 2895), ('regressor__regressor__n_estimators', 1344), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002947918381756515), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1734), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002759027925868233), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08536489107889092), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1247), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07841661049597118), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 80), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0718948039712906), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07613364391659043), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0157354055316696), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 981), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03686667975832582), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 176), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.033673456055860126), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03077491440139154), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 156), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 508), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02415183238202823), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08119339976107658), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 155), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0898729951970597), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012651500550344875), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05077447960151251), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1730), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06530171481761783), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 232), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05035302136082304), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 89), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01568582863900057), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 450), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.016418053052755257), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 288), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02763534308229849), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 765), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015316840832726394), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1945), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 55), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010555192646505515), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026301166479043493), ('regressor__regressor__max_depth', 113), ('regressor__regressor__n_estimators', 636), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON PPV



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007496031873116925), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 693), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008658129205123358), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 423), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008389018552269296), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 354), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06803295863123858), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 439), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 87), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003089392821436021), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1493), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0025702818227241603), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1973), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.060114278754681706), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 60), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 569), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003665970341378949), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.027364528220782454), ('regressor__regressor__max_depth', 33), ('regressor__regressor__n_estimators', 454), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029492714914815844), ('regressor__regressor__max_depth', 3570), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05791684077956251), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 272), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08155339523686439), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1453), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08168768874720397), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02382665581722379), ('regressor__regressor__max_depth', 504), ('regressor__regressor__n_estimators', 135), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02944932525704207), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 134), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 9945), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05831282716992101), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1429), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08233821084166902), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 54), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08146119523526342), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08642374936067904), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1019), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.024559681554898474), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 92), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015516007485498116), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 371), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07235564119236065), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 929), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07744705046820397), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07497659833566701), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 66), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004703565453051533), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 441), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07250985413037703), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 465), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018481109537585385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 523), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00736239370730636), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 495), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1479), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 66), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON Thiophene



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05462861446678443), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 166), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07796168979776112), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1139), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005340207395133577), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06192593620167947), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 215), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09400275106999642), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 796), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029330786913474753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1809), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003196328516196942), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06266720834190141), ('regressor__regressor__max_depth', 30), ('regressor__regressor__n_estimators', 1214), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 145), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 699), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.045854957353487345), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 674), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.098210234828325), ('regressor__regressor__max_depth', 2204), ('regressor__regressor__n_estimators', 377), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010583879857702784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003103364802325691), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1030), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 152), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004083210419514615), ('regressor__regressor__max_depth', 3472), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03122897317505091), ('regressor__regressor__max_depth', 164), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09965746729695084), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 309), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08453823003144605), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 267), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009808701769392981), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1415), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016847948521990551), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09768154299556174), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034480169905335485), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02606177236926204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 499), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0679610467879134), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 179), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007045507022150744), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1289), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 96), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06314018066167501), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07749698664724033), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1195), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03365123102547604), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003207011084878713), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003832515586935268), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06341224648676234), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1402), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0741273529110814), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1981), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07328347506995987), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 248), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02749021126791316), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 121), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032289231941088146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019868116386106624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 229), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07761418422755803), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603469875665443), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1285), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02030043142277838), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1559), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 140), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003468424611088656), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1036), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06449854041502759), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 162), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07257667227840495), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015547433667521406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 409), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06671545419215406), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052771448617136264), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06698469656325355), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01817462834845171), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1555), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08747229141799975), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 117), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026219363889902442), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 655), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007960364591531769), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021278854246264806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035979417425472074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017862792468689385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1424), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08239090700479507), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03312234296644987), ('regressor__regressor__max_depth', 17), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])


{'CO_Fluorene': {'cluster size (%)': 27, 6: {'test_mad': 74.764036897441, 'test_ystd': 84.30178657836092, 'test_mae': 195.58007465846106, 'test_rmse': 319.53745943940294, 'test_r2': -13.367129245795896, 'test_pearson_r': array([-0.33456441]), 'test_pearson_p_value': array([0.00434827]), 'test_spearman_r': -0.4960516606522229, 'test_spearman_p_value': 1.0871640893075512e-05, 'test_kendall_r': -0.38206424640558206, 'test_kendall_p_value': 3.8533302004103005e-06, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.004167659106541271, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1262, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 74.764036897441, 'test_ystd': 84.30178657836092, 'test_mae': 197.31579879868198, 'test_rmse': 322.4306042181709, 'test_r2': -13.628471741154494, 'test_pearson_r': array([-0.33553461]), 'test_pearson_p_value': array([0.00422962]), 'test_spearman_r': -0.4959960599863126, 'test_spearman_p_value': 1.0900219814574612e-05, 'test_kendall_r': -0.3815749495722704, 'test_kendall_p_value': 3.4248013366217184e-06, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 7130, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 216, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 74.764036897441, 'test_ystd': 84.30178657836092, 'test_mae': 197.393731532567, 'test_rmse': 322.5273907708865, 'test_r2': -13.637255348136362, 'test_pearson_r': array([-0.33482081]), 'test_pearson_p_value': array([0.00431663]), 'test_spearman_r': -0.47512877606555187, 'test_spearman_p_value': 2.8289924630550893e-05, 'test_kendall_r': -0.3543178566970662, 'test_kendall_p_value': 1.5966246373673486e-05, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08536489107889092, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1247, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 74.764036897441, 'test_ystd': 84.30178657836092, 'test_mae': 195.2459222487329, 'test_rmse': 318.5947678183214, 'test_r2': -13.282483181893049, 'test_pearson_r': array([-0.33483622]), 'test_pearson_p_value': array([0.00431474]), 'test_spearman_r': -0.5021731476925921, 'test_spearman_p_value': 8.119718710795298e-06, 'test_kendall_r': -0.3944952413696113, 'test_kendall_p_value': 1.8191935558321382e-06, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03077491440139154, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 156, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 74.764036897441, 'test_ystd': 84.30178657836092, 'test_mae': 197.00476320723416, 'test_rmse': 322.3239704627934, 'test_r2': -13.61879752962023, 'test_pearson_r': array([-0.33496919]), 'test_pearson_p_value': array([0.00429842]), 'test_spearman_r': -0.5043022448068779, 'test_spearman_p_value': 7.326218238311185e-06, 'test_kendall_r': -0.3960492229219838, 'test_kendall_p_value': 1.5753948128931569e-06, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 508, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 74.764036897441, 'test_ystd': 84.30178657836092, 'test_mae': 197.21440253351776, 'test_rmse': 322.413022217896, 'test_r2': -13.6268764162792, 'test_pearson_r': array([-0.33534426]), 'test_pearson_p_value': array([0.00425267]), 'test_spearman_r': -0.49470092106833324, 'test_spearman_p_value': 1.1586103574399847e-05, 'test_kendall_r': -0.375198225724498, 'test_kendall_p_value': 4.610918697580493e-06, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06530171481761783, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 232, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 74.764036897441, 'test_ystd': 84.30178657836092, 'test_mae': 197.07235607523313, 'test_rmse': 322.38461807872113, 'test_r2': -13.624299314835397, 'test_pearson_r': array([-0.33473963]), 'test_pearson_p_value': array([0.00432663]), 'test_spearman_r': -0.49670238664021776, 'test_spearman_p_value': 1.05423247236386e-05, 'test_kendall_r': -0.3823659463264969, 'test_kendall_p_value': 2.996654846356826e-06, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.010555192646505515, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_Fluorene': {'cluster size (%)': 25, 6: {'fit_time': array([16.65141344, 15.68269515, 16.0098021 , 15.96578193]), 'score_time': array([0.17681408, 0.16037178, 0.16370511, 0.16548824]), 'test_pearson_r': array([0.97196464, 0.73994775, 0.98951478, 0.96431548]), 'test_pearson_p': array([-2.53845528e-41, -1.89358047e-12, -1.15800281e-54, -1.72063223e-37]), 'test_spearman_r': array([0.86372634, 0.90478741, 0.93816612, 0.94167489]), 'test_spearman_p': array([-2.05558943e-20, -4.85926045e-25, -1.00881804e-30, -5.06085150e-31]), 'test_kendall_r': array([0.77314013, 0.82851792, 0.82032305, 0.81743891]), 'test_kendall_p': array([-1.27353917e-19, -2.05698321e-22, -7.51479357e-22, -1.89606592e-21]), 'test_rmse': array([-36.4624077 , -97.0872734 , -17.6886833 , -20.45896042]), 'test_mae': array([-13.87345752, -21.16511402,  -8.34469784, -11.00967451]), 'test_r2': array([0.94260248, 0.33026777, 0.97693276, 0.92757728]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([12.3453908 , 12.30030823, 10.15204072, 11.14176798]), 'score_time': array([0.15263081, 0.1517508 , 0.15686059, 0.16315174]), 'test_pearson_r': array([0.9180649 , 0.81120596, 0.97723631, 0.96194678]), 'test_pearson_p': array([-5.25938151e-27, -2.55638279e-16, -3.88347550e-44, -1.21824233e-36]), 'test_spearman_r': array([0.80874386, 0.83634123, 0.94394412, 0.92089447]), 'test_spearman_p': array([-3.69428921e-16, -4.25554761e-18, -5.01062965e-32, -4.69457974e-27]), 'test_kendall_r': array([0.64950682, 0.76399366, 0.81916273, 0.79422654]), 'test_kendall_p': array([-3.64747558e-14, -3.94197471e-19, -8.33340966e-22, -2.50833601e-20]), 'test_rmse': array([-49.27715338, -99.14878847, -28.65543164, -21.90433558]), 'test_mae': array([-21.47733772, -23.67946075, -14.11442406, -13.24224718]), 'test_r2': array([0.83064847, 0.55861469, 0.94125149, 0.91621316]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([2.30609012, 2.05199933, 2.31892896, 2.28834891]), 'score_time': array([0.15290713, 0.15613675, 0.14926767, 0.15258217]), 'test_pearson_r': array([0.98771795, 0.97596936, 0.52885409, 0.97429207]), 'test_pearson_p': array([-1.64420486e-52, -2.09875392e-43, -5.93377601e-06, -7.66967474e-42]), 'test_spearman_r': array([0.96073097, 0.95435323, 0.85306785, 0.94128713]), 'test_spearman_p': array([-8.73243841e-37, -9.08237733e-35, -1.86145961e-19, -6.17898086e-31]), 'test_kendall_r': array([0.87108175, 0.85053285, 0.78282437, 0.85359411]), 'test_kendall_p': array([-1.67047974e-24, -1.70789095e-23, -4.08816181e-20, -4.03355189e-23]), 'test_rmse': array([-25.64314811, -32.67176932, -98.74863685, -16.45727487]), 'test_mae': array([-12.66037519, -12.37974975, -21.33419137,  -9.35728409]), 'test_r2': array([ 0.97162048,  0.95221926, -0.84722605,  0.94900587]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.71285534, 1.7941792 , 1.90608001, 1.7199719 ]), 'score_time': array([0.1504283 , 0.15198874, 0.1515944 , 0.15301251]), 'test_pearson_r': array([0.96661862, 0.70472758, 0.94466947, 0.97126019]), 'test_pearson_p': array([-5.71994593e-39, -5.69041753e-11, -3.36124166e-32, -2.32440751e-40]), 'test_spearman_r': array([0.93506117, 0.86673442, 0.90286341, 0.9153206 ]), 'test_spearman_p': array([-4.50324265e-30, -1.06706526e-20, -8.85772737e-25, -3.56215567e-26]), 'test_kendall_r': array([0.83710078, 0.78795217, 0.82364699, 0.8047694 ]), 'test_kendall_p': array([-1.16145103e-22, -2.08402606e-20, -4.17122067e-22, -6.18990530e-21]), 'test_rmse': array([ -18.77079275, -139.44296887,  -22.71743527,  -37.4052884 ]), 'test_mae': array([ -9.8118669 , -33.61795854,  -9.41870454, -15.67456339]), 'test_r2': array([0.93151775, 0.17336716, 0.87678592, 0.93987622]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([1.84960914, 1.78125238, 1.89404917, 1.96482611]), 'score_time': array([0.15379953, 0.15415692, 0.16389656, 0.16061974]), 'test_pearson_r': array([0.99364056, 0.59423262, 0.96591062, 0.97761697]), 'test_pearson_p': array([-1.77750508e-61, -1.80383665e-07, -1.09619997e-38, -1.10003269e-43]), 'test_spearman_r': array([0.92318123, 0.92136722, 0.83495106, 0.90978409]), 'test_spearman_p': array([-7.46391181e-28, -1.51416486e-27, -5.43251310e-18, -2.33315356e-25]), 'test_kendall_r': array([0.83334121, 0.84737602, 0.75882503, 0.81949441]), 'test_kendall_p': array([-1.51044410e-22, -2.16883843e-23, -5.97728646e-19, -1.29797697e-21]), 'test_rmse': array([-14.1999113 , -98.40112538, -39.26575346, -23.83343205]), 'test_mae': array([ -7.45128871, -19.29239612, -15.45449995, -12.26840857]), 'test_r2': array([ 0.98583041, -0.30887008,  0.93287482,  0.95334561]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.70840788, 0.72794414, 0.76272106, 0.73585558]), 'score_time': array([0.15398312, 0.19564486, 0.15562582, 0.1529386 ]), 'test_pearson_r': array([0.94356845, 0.94923344, 0.99630546, 0.78520474]), 'test_pearson_p': array([-6.14881179e-32, -2.39250128e-33, -6.87736336e-69, -1.58481637e-14]), 'test_spearman_r': array([0.9330842 , 0.90355298, 0.95574335, 0.79749437]), 'test_spearman_p': array([-1.12380351e-29, -7.15314406e-25, -3.50124204e-35, -3.10960855e-15]), 'test_kendall_r': array([0.81113937, 0.747771  , 0.84969219, 0.70363418]), 'test_kendall_p': array([-2.09519829e-21, -1.75424942e-18, -2.34624038e-23, -3.13514724e-16]), 'test_rmse': array([ -24.95563124,  -40.02098291,  -10.15309996, -103.91604192]), 'test_mae': array([-14.5794426 , -15.19045616,  -6.90205636, -34.51199383]), 'test_r2': array([0.88216673, 0.89632578, 0.99114264, 0.55393417]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([10.35432529,  9.65241289, 10.79751277, 10.9795444 ]), 'score_time': array([0.1518867 , 0.18375754, 0.18679643, 0.19611931]), 'test_pearson_r': array([0.9773031 , 0.48479035, 0.9817462 , 0.99135019]), 'test_pearson_p': array([-3.54369681e-44, -4.26926380e-05, -3.96220664e-47, -2.13022106e-56]), 'test_spearman_r': array([0.79740654, 0.86975052, 0.95054378, 0.97904003]), 'test_spearman_p': array([-1.88442196e-15, -5.44070451e-21, -1.07084623e-33, -1.46588873e-44]), 'test_kendall_r': array([0.73833579, 0.78969035, 0.8672221 , 0.88806158]), 'test_kendall_p': array([-5.57009831e-18, -1.68611186e-20, -2.65665733e-24, -3.56593530e-25]), 'test_rmse': array([ -43.93065866, -104.21765927,  -15.62517065,  -19.52004052]), 'test_mae': array([-17.34701766, -24.82457318,  -8.81699799, -10.39372137]), 'test_r2': array([ 0.93318565, -1.35580183,  0.9636328 ,  0.97679567]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_PPV': {'cluster size (%)': 11, 6: {'test_mad': 75.88433673469387, 'test_ystd': 96.24480195014932, 'test_mae': 77.562794342041, 'test_rmse': 131.3354689174623, 'test_r2': -0.8621278339138483, 'test_pearson_r': array([-0.52476915]), 'test_pearson_p_value': array([0.00414372]), 'test_spearman_r': -0.12422710526753941, 'test_spearman_p_value': 0.528808897086577, 'test_kendall_r': 0.005481118551721062, 'test_kendall_p_value': 0.9682339881659282, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06803295863123858, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 439, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 75.88433673469387, 'test_ystd': 96.24480195014932, 'test_mae': 76.87037351880754, 'test_rmse': 130.6005842757809, 'test_r2': -0.8413471477193633, 'test_pearson_r': array([-0.50350726]), 'test_pearson_p_value': array([0.00630561]), 'test_spearman_r': -0.13003419181627243, 'test_spearman_p_value': 0.5095654578563763, 'test_kendall_r': -0.002833623086108256, 'test_kendall_p_value': 0.9839903839602104, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.060114278754681706, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 60, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 75.88433673469387, 'test_ystd': 96.24480195014932, 'test_mae': 77.24579122815813, 'test_rmse': 131.72510477605442, 'test_r2': -0.8731930554974365, 'test_pearson_r': array([-0.50817752]), 'test_pearson_p_value': array([0.00576308]), 'test_spearman_r': -0.12121396102089158, 'test_spearman_p_value': 0.5389289942306328, 'test_kendall_r': 0.013722082520274716, 'test_kendall_p_value': 0.9206795026243458, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05791684077956251, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 272, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 75.88433673469387, 'test_ystd': 96.24480195014932, 'test_mae': 77.44737509046281, 'test_rmse': 131.5277992298281, 'test_r2': -0.8675857024895772, 'test_pearson_r': array([-0.51279568]), 'test_pearson_p_value': array([0.00526605]), 'test_spearman_r': -0.13003419181627243, 'test_spearman_p_value': 0.5095654578563763, 'test_kendall_r': -0.002833623086108256, 'test_kendall_p_value': 0.9839903839602104, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08233821084166902, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 54, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 75.88433673469387, 'test_ystd': 96.24480195014932, 'test_mae': 77.15970148086546, 'test_rmse': 131.29067259846198, 'test_r2': -0.8608577695941779, 'test_pearson_r': array([-0.52259808]), 'test_pearson_p_value': array([0.00433055]), 'test_spearman_r': -0.1239688237713664, 'test_spearman_p_value': 0.5296727931457421, 'test_kendall_r': 0.008233249512164828, 'test_kendall_p_value': 0.9523573828480156, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07235564119236065, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 929, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 75.88433673469387, 'test_ystd': 96.24480195014932, 'test_mae': 76.7743067714146, 'test_rmse': 131.08433500025433, 'test_r2': -0.8550132843183675, 'test_pearson_r': array([-0.511638]), 'test_pearson_p_value': array([0.0053871]), 'test_spearman_r': -0.12062957770220077, 'test_spearman_p_value': 0.540902250595302, 'test_kendall_r': 0.013683591329389278, 'test_kendall_p_value': 0.9207105096296433, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07250985413037703, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 75.88433673469387, 'test_ystd': 96.24480195014932, 'test_mae': 77.4524986376081, 'test_rmse': 131.45099450580355, 'test_r2': -0.8654052125079765, 'test_pearson_r': array([-0.52059828]), 'test_pearson_p_value': array([0.00450894]), 'test_spearman_r': -0.11924151165469157, 'test_spearman_p_value': 0.5456028313862418, 'test_kendall_r': 0.01658369978468346, 'test_kendall_p_value': 0.9046782998965525, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 465, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_PPV': {'cluster size (%)': 11, 6: {'fit_time': array([19.08265305, 21.12790918, 18.07087612, 18.82014084, 20.42704439,
       19.02450347, 20.30800653, 19.40978384, 21.237041  ]), 'score_time': array([0.15908241, 0.15131521, 0.15768099, 0.16206741, 0.15955877,
       0.15968609, 0.15289807, 0.15863061, 0.16099858]), 'test_pearson_r': array([0.92988801, 0.99381287, 0.67995717, 0.98120075, 0.9854273 ,
       0.98695512, 0.99397814, 0.97666955, 0.93844623]), 'test_pearson_p': array([-3.05050474e-13, -2.60369902e-27, -4.96091410e-05, -7.93110867e-21,
       -2.61208950e-22, -5.90911367e-23, -1.80829816e-27, -6.75971620e-19,
       -1.63305171e-13]), 'test_spearman_r': array([0.77531412, 0.98311979, 0.7591133 , 0.97684729, 0.8432073 ,
       0.93966848, 0.98300077, 0.92743706, 0.98111145]), 'test_spearman_p': array([-7.84856158e-07, -1.87466960e-21, -1.80901229e-06, -1.28664077e-19,
       -9.38755559e-09, -4.25566836e-14, -2.05976257e-21, -1.30179085e-12,
       -4.44996266e-20]), 'test_kendall_r': array([0.72592593, 0.92574541, 0.67980296, 0.87684729, 0.74229403,
       0.83298246, 0.92345961, 0.80319433, 0.90185994]), 'test_kendall_p': array([-3.45209667e-08, -2.21157594e-12, -1.36805503e-08, -1.32074547e-16,
       -1.63110313e-08, -3.38701006e-10, -2.25090793e-12, -2.35626372e-09,
       -1.81924178e-11]), 'test_rmse': array([ -26.05088396,  -25.99936426, -150.98581017,  -15.32251161,
        -11.73466972,  -24.97742818,   -9.85954886,  -19.33764638,
        -21.03817502]), 'test_mae': array([-11.19231313, -10.3137005 , -43.98417011, -10.35180899,
        -6.24762771, -10.95788715,  -5.79979352, -11.73534669,
       -10.08029681]), 'test_r2': array([0.85902158, 0.98466686, 0.09309918, 0.96145322, 0.96617305,
       0.97180312, 0.98625356, 0.94915141, 0.87864152]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([16.82953548, 14.81224036, 14.67649293, 14.55094528, 14.25841355,
       13.73329711, 15.07060719, 16.19423032, 15.86484027]), 'score_time': array([0.1526475 , 0.15422106, 0.15862417, 0.15995288, 0.15881062,
       0.15713143, 0.15157032, 0.15589857, 0.15418458]), 'test_pearson_r': array([0.9915103 , 0.95400013, 0.4298664 , 0.98926228, 0.90595041,
       0.93520152, 0.99487743, 0.96908524, 0.98531992]), 'test_pearson_p': array([-1.83946369e-25, -1.19101844e-15, -1.99445253e-02, -4.32769380e-24,
       -1.39233066e-11, -1.08677048e-13, -2.04769063e-28, -2.51485144e-17,
       -1.71989116e-21]), 'test_spearman_r': array([0.9094947 , 0.87105533, 0.81236916, 0.82830042, 0.9431918 ,
       0.95717846, 0.9866809 , 0.92008758, 0.93727777]), 'test_spearman_p': array([-8.46949771e-12, -7.96453652e-10, -8.72969832e-08, -2.91379210e-08,
       -1.92889253e-14, -4.61674939e-16, -7.81257294e-23, -4.37359239e-12,
       -2.07139203e-13]), 'test_kendall_r': array([0.77115382, 0.75776924, 0.73918926, 0.72547983, 0.85644614,
       0.86509733, 0.92541895, 0.82539683, 0.81226834]), 'test_kendall_p': array([-5.72698450e-09, -1.01074145e-08, -2.00437659e-08, -4.15584922e-08,
       -8.26896095e-11, -7.62243596e-11, -2.72679031e-12, -2.76637189e-13,
       -1.61528885e-09]), 'test_rmse': array([ -12.41742046,  -48.59189308, -141.05033997,  -30.34461061,
        -22.67457038,  -16.83271775,  -30.73623557,  -20.50650232,
        -15.91151185]), 'test_mae': array([ -7.95144478, -18.16787144, -32.75750654, -16.64462038,
       -10.52185217, -10.45814773, -13.28241904, -12.56348519,
       -10.43312182]), 'test_r2': array([ 0.96576989,  0.90597261, -1.5435208 ,  0.97725755,  0.81653232,
        0.85661231,  0.96607617,  0.93456121,  0.9570515 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([2.5171814 , 3.24598312, 2.85587358, 2.86437821, 2.57510757,
       2.59191608, 2.67329311, 3.13570571, 2.60770512]), 'score_time': array([0.19790649, 0.15698314, 0.15679932, 0.20227957, 0.16144276,
       0.15139675, 0.15086246, 0.21366501, 0.15274501]), 'test_pearson_r': array([0.98051446, 0.98942097, 0.9970548 , 0.95242876, 0.97836351,
       0.40434199, 0.98856672, 0.98140399, 0.96087116]), 'test_pearson_p': array([-1.28175934e-20, -3.54296148e-24, -1.17960111e-31, -1.85694854e-15,
       -5.20264870e-20, -2.95902577e-02, -1.00572884e-23, -3.63868840e-20,
       -5.13607846e-16]), 'test_spearman_r': array([0.96500751, 0.9546575 , 0.96181328, 0.94482759, 0.98743536,
       0.70495459, 0.98188993, 0.90989138, 0.83559213]), 'test_spearman_p': array([-3.16727043e-17, -9.84517266e-16, -1.01073394e-16, -1.31293696e-14,
       -3.57131600e-23, -1.95708091e-05, -4.80966988e-21, -1.96423474e-11,
       -3.14693691e-08]), 'test_kendall_r': array([0.87763273, 0.85148776, 0.85926188, 0.86206897, 0.92839789,
       0.68650636, 0.91718801, 0.81193357, 0.80478726]), 'test_kendall_p': array([-2.67542616e-11, -1.06579960e-10, -6.57241970e-11, -1.01962005e-15,
       -1.71963527e-12, -1.98036759e-07, -3.33298396e-12, -2.17183886e-09,
       -2.10185420e-09]), 'test_rmse': array([ -14.22427564,  -33.7181171 ,  -12.23491302,  -47.63027681,
        -14.71299506, -146.54068927,  -11.16072911,  -15.1130433 ,
        -18.98260671]), 'test_mae': array([ -8.00422771, -16.62813651,  -7.20460982, -17.43071567,
        -7.19561271, -35.57343072,  -7.33674155,  -8.21855333,
        -8.21859308]), 'test_r2': array([ 0.95892952,  0.97483058,  0.99374453,  0.90412728,  0.93672818,
       -1.81459847,  0.97471407,  0.96237045,  0.9118865 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([2.03764582, 2.20043015, 2.04302287, 2.60110211, 2.24162483,
       2.04808807, 2.02633286, 2.33156252, 2.27020979]), 'score_time': array([0.15668893, 0.15699553, 0.15251565, 0.14940953, 0.15523195,
       0.1518712 , 0.19887233, 0.1878953 , 0.20477414]), 'test_pearson_r': array([0.98500192, 0.98173914, 0.02432973, 0.99563558, 0.9889189 ,
       0.91259323, 0.983178  , 0.94945266, 0.99516253]), 'test_pearson_p': array([-3.84233094e-22, -5.37459144e-21, -9.00306082e-01, -2.36654140e-29,
       -6.60604674e-24, -5.39219032e-12, -1.78987350e-21, -1.34297370e-14,
       -9.81730833e-28]), 'test_spearman_r': array([0.89478872, 0.97509322, 0.74411194, 0.98411135, 0.97178084,
       0.84130116, 0.98842082, 0.83591078, 0.97344652]), 'test_spearman_p': array([-5.91250472e-11, -3.41302998e-19, -3.70810777e-06, -8.32765994e-22,
       -1.80604481e-18, -1.09200859e-08, -1.19248927e-23, -3.07443410e-08,
       -3.56961433e-18]), 'test_kendall_r': array([0.84301671, 0.893325  , 0.67827395, 0.91492055, 0.87624836,
       0.76237857, 0.93333618, 0.7390735 , 0.88594476]), 'test_kendall_p': array([-1.55506992e-10, -1.34955879e-11, -2.90252276e-07, -3.39149921e-12,
       -3.01549009e-11, -7.40174103e-09, -1.31194095e-12, -3.52477623e-08,
       -4.07692648e-11]), 'test_rmse': array([ -13.49060597,  -15.38309669, -206.55675029,  -22.1960783 ,
        -11.90060897,  -27.12511636,  -14.66341493,  -50.84790258,
        -18.1125894 ]), 'test_mae': array([ -6.41875011,  -7.50575305, -60.47016702, -10.98869224,
        -6.76443542, -12.67943899,  -7.57291572, -18.90256664,
       -12.32264884]), 'test_r2': array([  0.95949551,   0.96361468, -23.20536804,   0.98900198,
         0.97634598,   0.76358274,   0.95241747,   0.89202057,
         0.98805809]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.68477154, 1.97270226, 1.93905187, 2.09231067, 2.05401587,
       2.22658682, 2.42084289, 2.23042703, 2.30619359]), 'score_time': array([0.15639901, 0.15854645, 0.15634584, 0.1537776 , 0.154562  ,
       0.14841747, 0.15474081, 0.15477157, 0.15441251]), 'test_pearson_r': array([0.98941729, 0.99068431, 0.99115235, 0.40637369, 0.79701434,
       0.99632416, 0.94843281, 0.9796558 , 0.99548028]), 'test_pearson_p': array([-3.55953976e-24, -6.41146909e-25, -3.20563547e-25, -2.87051375e-02,
       -2.28961991e-07, -2.33968204e-30, -5.38726619e-15, -1.15864673e-19,
       -4.06598615e-28]), 'test_spearman_r': array([0.88798538, 0.87777233, 0.9674797 , 0.8679803 , 0.90971795,
       0.94095913, 0.93632221, 0.9871339 , 0.91419188]), 'test_spearman_p': array([-1.32156335e-10, -4.03148125e-10, -1.19523120e-17, -1.07422909e-09,
       -8.20285158e-12, -3.20281201e-14, -8.64499501e-14, -3.12794610e-22,
       -1.06640155e-11]), 'test_kendall_r': array([0.80199003, 0.81930944, 0.87407674, 0.80788177, 0.80148026,
       0.83375717, 0.85573431, 0.92308017, 0.85562989]), 'test_kendall_p': array([-1.18243182e-09, -5.18884117e-10, -3.08005811e-11, -5.34037135e-13,
       -1.07778579e-09, -2.78854430e-10, -7.50543543e-11, -6.07183063e-12,
       -1.74104499e-10]), 'test_rmse': array([ -11.15436886,   -9.16991745,  -22.96467777, -148.21131906,
        -49.62756928,  -19.86895922,  -26.35608709,  -14.10176172,
        -15.46194732]), 'test_mae': array([ -5.90227046,  -5.25629712, -13.98681091, -32.3447861 ,
       -16.99376451,  -8.78877161, -11.38140581,  -9.47064766,
        -8.47032386]), 'test_r2': array([ 0.9747305 ,  0.98010065,  0.9801341 , -2.28654149,  0.50383275,
        0.99088817,  0.89875961,  0.95767483,  0.98945927]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.78861833, 0.82595468, 0.91130948, 0.81847072, 0.89138699,
       0.8116045 , 0.85513997, 1.19890976, 0.99719   ]), 'score_time': array([0.15403986, 0.15581107, 0.15842819, 0.15443301, 0.15488386,
       0.15299273, 0.1917491 , 0.15040278, 0.15139151]), 'test_pearson_r': array([0.97584381, 0.97986246, 0.98027917, 0.9965577 , 0.80833293,
       0.98055904, 0.99896457, 0.96019435, 0.7916191 ]), 'test_pearson_p': array([-2.26805785e-19, -1.99119405e-20, -1.50514729e-20, -9.65811607e-31,
       -1.13413462e-07, -1.24305285e-20, -8.86430561e-38, -6.39420375e-16,
       -5.25150883e-07]), 'test_spearman_r': array([0.90123732, 0.97732885, 0.95341397, 0.96119257, 0.87741783,
       0.96600148, 0.96795688, 0.90973861, 0.78608627]), 'test_spearman_p': array([-2.61813851e-11, -9.71526135e-20, -1.40813383e-15, -1.25191972e-16,
       -4.18309929e-10, -2.15916450e-17, -9.81767864e-18, -2.00619227e-11,
       -7.13672165e-07]), 'test_kendall_r': array([0.81303079, 0.90100114, 0.84511117, 0.86773861, 0.7589669 ,
       0.88641975, 0.89964552, 0.79467797, 0.67910959]), 'test_kendall_p': array([-8.61622161e-10, -8.33051895e-12, -1.52478515e-10, -4.47138000e-11,
       -8.32379388e-09, -1.62233858e-11, -9.36265605e-12, -3.74448894e-09,
       -4.57109039e-07]), 'test_rmse': array([ -15.35583409,  -17.92647683,  -13.16929725,  -29.45897582,
        -47.4776715 ,  -12.52391484,   -6.89343105,  -27.29686676,
       -143.44966768]), 'test_mae': array([-10.64245781, -10.09442236,  -6.70594464, -12.7563177 ,
       -14.20939014,  -8.13465682,  -5.38855318, -16.84380517,
       -45.09209738]), 'test_r2': array([0.94692603, 0.95135855, 0.95627066, 0.96930507, 0.52668079,
       0.95516068, 0.99765751, 0.91255399, 0.54559182]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([12.80325818, 14.1183393 , 11.70511031, 12.08346725, 10.88718128,
       13.19766879, 12.77371955, 11.77499604, 11.81195545]), 'score_time': array([0.21858096, 0.14986134, 0.1539216 , 0.1512804 , 0.26634359,
       0.14716887, 0.15165448, 0.20331883, 0.15536022]), 'test_pearson_r': array([0.99541815, 0.99840849, 0.90432419, 0.41139746, 0.76589938,
       0.98437627, 0.98674688, 0.98068629, 0.99677346]), 'test_pearson_p': array([-4.55614865e-29, -2.92780375e-35, -1.73766193e-11, -2.66085063e-02,
       -1.28536009e-06, -6.64685681e-22, -7.30879845e-23, -5.92914073e-20,
       -5.12199735e-30]), 'test_spearman_r': array([0.72364085, 0.97411907, 0.93977091, 0.82655827, 0.91462364,
       0.92212924, 0.98964779, 0.98289313, 0.98084291]), 'test_spearman_p': array([-9.15997006e-06, -5.69627108e-19, -4.16170039e-14, -3.30283250e-08,
       -3.97463966e-12, -1.20078557e-12, -2.64768377e-24, -1.23976363e-20,
       -5.33830212e-20]), 'test_kendall_r': array([0.68821203, 0.90460225, 0.85080213, 0.80987654, 0.78862854,
       0.83807746, 0.93929932, 0.90331205, 0.91534392]), 'test_kendall_p': array([-1.94175469e-07, -7.20502345e-12, -9.62859732e-11, -7.51686680e-10,
       -2.13776632e-09, -1.97736002e-10, -1.10779530e-12, -1.60263319e-11,
       -1.40459514e-18]), 'test_rmse': array([ -22.48752411,   -9.6475753 ,  -22.67764686, -148.39116003,
        -46.52005343,  -14.97206662,  -14.05023587,  -18.13115028,
        -21.6613875 ]), 'test_mae': array([-11.92680405,  -5.34538674,  -7.39622237, -33.4995783 ,
       -15.35825545,  -8.3928538 ,  -8.84951194,  -9.86733558,
        -9.83813236]), 'test_r2': array([ 0.98775112,  0.99574296,  0.79384948, -1.99290716,  0.34077005,
        0.96830612,  0.96971685,  0.9588668 ,  0.98359972]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_Thiophene': {'cluster size (%)': 62, 6: {'test_mad': 55.080311900000005, 'test_ystd': 130.77627309021264, 'test_mae': 99.78389154838945, 'test_rmse': 172.66128524949835, 'test_r2': -0.7431390242697067, 'test_pearson_r': array([-0.05587923]), 'test_pearson_p_value': array([0.48278569]), 'test_spearman_r': 0.04406955972874151, 'test_spearman_p_value': 0.5800313437300391, 'test_kendall_r': 0.05505520897635819, 'test_kendall_p_value': 0.3078912278426855, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.005340207395133577, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 55.080311900000005, 'test_ystd': 130.77627309021264, 'test_mae': 98.46497409510042, 'test_rmse': 172.0543187060211, 'test_r2': -0.7309050438042377, 'test_pearson_r': array([-0.05332946]), 'test_pearson_p_value': array([0.50301208]), 'test_spearman_r': 0.06268147974855122, 'test_spearman_p_value': 0.4310342594155975, 'test_kendall_r': 0.07058356506654315, 'test_kendall_p_value': 0.19225813953819948, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 145, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 55.080311900000005, 'test_ystd': 130.77627309021264, 'test_mae': 98.54956257509613, 'test_rmse': 172.00531085943996, 'test_r2': -0.7299191243771228, 'test_pearson_r': array([-0.05399198]), 'test_pearson_p_value': array([0.49771428]), 'test_spearman_r': 0.07408903373016625, 'test_spearman_p_value': 0.3518055625277481, 'test_kendall_r': 0.0849902651117652, 'test_kendall_p_value': 0.1155257789186001, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 55.080311900000005, 'test_ystd': 130.77627309021264, 'test_mae': 98.84405149387742, 'test_rmse': 172.04941034832498, 'test_r2': -0.7308062868538567, 'test_pearson_r': array([-0.05273566]), 'test_pearson_p_value': array([0.50778535]), 'test_spearman_r': 0.13178622768086304, 'test_spearman_p_value': 0.09668101318480832, 'test_kendall_r': 0.10621501640799261, 'test_kendall_p_value': 0.04961851133565102, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0679610467879134, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 179, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 55.080311900000005, 'test_ystd': 130.77627309021264, 'test_mae': 98.54978027510072, 'test_rmse': 172.00537625553082, 'test_r2': -0.7299204398012706, 'test_pearson_r': array([-0.05399199]), 'test_pearson_p_value': array([0.49771423]), 'test_spearman_r': 0.07408903373016625, 'test_spearman_p_value': 0.3518055625277481, 'test_kendall_r': 0.0849902651117652, 'test_kendall_p_value': 0.1155257789186001, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 150, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 55.080311900000005, 'test_ystd': 130.77627309021264, 'test_mae': 98.9861603872719, 'test_rmse': 172.23486399834522, 'test_r2': -0.7345396020534896, 'test_pearson_r': array([-0.05314401]), 'test_pearson_p_value': array([0.50450036]), 'test_spearman_r': 0.062022095916431284, 'test_spearman_p_value': 0.4359069104599541, 'test_kendall_r': 0.07701875413386908, 'test_kendall_p_value': 0.1545502021269002, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02030043142277838, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1559, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 55.080311900000005, 'test_ystd': 130.77627309021264, 'test_mae': 99.0615704910698, 'test_rmse': 172.34798378852423, 'test_r2': -0.7368187595315965, 'test_pearson_r': array([-0.05294939]), 'test_pearson_p_value': array([0.50606463]), 'test_spearman_r': 0.07942602249161235, 'test_spearman_p_value': 0.31810022943995886, 'test_kendall_r': 0.09268618739384453, 'test_kendall_p_value': 0.08595336027602557, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.026219363889902442, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 655, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_Thiophene': {'cluster size (%)': 50, 6: {'fit_time': array([12.01598978, 12.41000342]), 'score_time': array([0.1717248 , 0.15874171]), 'test_pearson_r': array([0.83635475, 0.97527762]), 'test_pearson_p': array([-3.21152790e-35, -3.92196488e-85]), 'test_spearman_r': array([0.82258036, 0.89585361]), 'test_spearman_p': array([-3.55452665e-33, -1.43593247e-46]), 'test_kendall_r': array([0.68902703, 0.79235487]), 'test_kendall_p': array([-5.18046939e-31, -5.25464327e-40]), 'test_rmse': array([-76.46414016, -21.96789921]), 'test_mae': array([-26.58359407, -10.49451643]), 'test_r2': array([0.68600122, 0.95034491]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003196328516196942, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1330, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([9.75336981, 7.31757498]), 'score_time': array([0.15378523, 0.15725946]), 'test_pearson_r': array([0.86405762, 0.95879145]), 'test_pearson_p': array([-5.67448386e-40, -2.88475365e-71]), 'test_spearman_r': array([0.77923735, 0.84796732]), 'test_spearman_p': array([-9.54748135e-28, -8.08316571e-37]), 'test_kendall_r': array([0.6826883, 0.7371687]), 'test_kendall_p': array([-3.90220068e-30, -1.31932505e-34]), 'test_rmse': array([-71.08191925, -29.29414833]), 'test_mae': array([-21.4246292 , -16.45411602]), 'test_r2': array([0.72747332, 0.91319051]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003103364802325691, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1030, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.53891253, 1.77118492]), 'score_time': array([0.15429807, 0.15467381]), 'test_pearson_r': array([0.28704158, 0.66915007]), 'test_pearson_p': array([-9.29191402e-04, -4.41193691e-18]), 'test_spearman_r': array([0.81363449, 0.85360946]), 'test_spearman_p': array([-6.10869341e-32, -8.82905377e-38]), 'test_kendall_r': array([0.7056164 , 0.75230318]), 'test_kendall_p': array([-1.58503377e-32, -2.42105583e-36]), 'test_rmse': array([-148.10983204,  -71.98528254]), 'test_mae': array([-40.05175132, -17.49003548]), 'test_r2': array([0.03808738, 0.0257032 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03252108800594495, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4466, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 153, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.30714726, 1.50515962]), 'score_time': array([0.15174198, 0.15646482]), 'test_pearson_r': array([0.74454761, 0.96420793]), 'test_pearson_p': array([-3.22468544e-24, -4.44245884e-75]), 'test_spearman_r': array([0.88739708, 0.87124445]), 'test_spearman_p': array([-7.12687801e-45, -4.55414726e-41]), 'test_kendall_r': array([0.7811597 , 0.75592519]), 'test_kendall_p': array([-2.07118330e-39, -8.75463799e-37]), 'test_rmse': array([-100.37369441,  -32.45115027]), 'test_mae': array([-23.57797138, -15.97189715]), 'test_r2': array([0.30299872, 0.92486989]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 147, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([1.35211039, 1.45970559]), 'score_time': array([0.15937924, 0.16252899]), 'test_pearson_r': array([0.80824607, 0.96435349]), 'test_pearson_p': array([-3.14994013e-31, -3.44528632e-75]), 'test_spearman_r': array([0.87938165, 0.81967161]), 'test_spearman_p': array([-4.46427450e-43, -1.59787064e-32]), 'test_kendall_r': array([0.77081481, 0.73316531]), 'test_kendall_p': array([-1.79026345e-38, -1.14817771e-34]), 'test_rmse': array([-72.04809824, -37.22257206]), 'test_mae': array([-17.01992577, -17.06797209]), 'test_r2': array([0.52025133, 0.9214781 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.56861329, 0.58674383]), 'score_time': array([0.14919209, 0.15112305]), 'test_pearson_r': array([0.92773526, 0.8344678 ]), 'test_pearson_p': array([-1.24121617e-56, -1.14352821e-34]), 'test_spearman_r': array([0.85970471, 0.8501441 ]), 'test_spearman_p': array([-3.69096379e-39, -3.47737139e-37]), 'test_kendall_r': array([0.70956393, 0.7340113 ]), 'test_kendall_p': array([-1.29270573e-32, -1.43600153e-34]), 'test_rmse': array([-38.87073551, -76.94253003]), 'test_mae': array([-19.30974921, -25.8249508 ]), 'test_r2': array([0.85426351, 0.67268717]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06671545419215406, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([7.65273738, 8.46835685]), 'score_time': array([0.15423608, 0.15949583]), 'test_pearson_r': array([0.941066  , 0.97006952]), 'test_pearson_p': array([-4.08727818e-62, -6.23684045e-80]), 'test_spearman_r': array([0.83916161, 0.94257073]), 'test_spearman_p': array([-1.16644487e-35, -2.46229069e-62]), 'test_kendall_r': array([0.77159315, 0.84307258]), 'test_kendall_p': array([-1.83662126e-38, -2.37836931e-45]), 'test_rmse': array([-51.37807281, -28.08620485]), 'test_mae': array([-17.61692014, -14.61736275]), 'test_r2': array([0.84293497, 0.93169213]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.017862792468689385, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1424, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'overall data shape': {'targets_shape': (259, 1), 'training_features_shape': (259, 532)}}
Trimer_scaler
Filename: (Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/substructure cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/substructure cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_predictions.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_Rg/substructure cluster/Trimer_scaler/(Mordred-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_ClusterTruth.json
Done Saving scores!
------------------------------ 
Plotted Comparitive Cluster Scores!
______________________________ 
Plotted Parity Plots!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c207n08>
Subject: Job 294642: <XGBR_Rg1 (nm)_Mordred_Trimer_substructure cluster_20250311> in cluster <Hazel> Done

Job <XGBR_Rg1 (nm)_Mordred_Trimer_substructure cluster_20250311> was submitted from host <c040n04> by user <sdehgha2> in cluster <Hazel> at Tue Mar 11 18:17:46 2025
Job was executed on host(s) <6*c207n08>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Wed Mar 12 05:18:13 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Wed Mar 12 05:18:13 2025
Terminated at Wed Mar 12 23:35:42 2025
Results reported at Wed Mar 12 23:35:42 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input



#BSUB -n 6
#BSUB -W 72:05
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "XGBR_Rg1 (nm)_Mordred_Trimer_substructure cluster_20250311"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_Mordred_Trimer_substructure cluster_20250311.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_Mordred_Trimer_substructure cluster_20250311.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../make_ood_prediction.py --target_features "Rg1 (nm)"                                       --representation "Mordred"                                       --regressor_type "XGBR"                                       --oligomer_representation "Trimer"                                       --numerical_feats 'Mw (g/mol)' 'PDI' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" 'solvent dP' 'solvent dD' 'solvent dH'                                       --clustering_method "substructure cluster" 



------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   265404.62 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.96 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   65872 sec.
    Turnaround time :                            105476 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_Rg1 (nm)_Mordred_Trimer_substructure cluster_20250311.err> for stderr output of this job.

