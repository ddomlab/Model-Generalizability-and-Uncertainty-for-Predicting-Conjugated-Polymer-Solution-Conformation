


-------------------------------------------------- 
OOD TEST ON 0



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 70), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02183075938796596), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 263), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04240351648993689), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 940), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05896795734907157), ('regressor__regressor__max_depth', 32), ('regressor__regressor__n_estimators', 1954), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03774462230484414), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 178), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07693173041362837), ('regressor__regressor__max_depth', 269), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02369369462560725), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 1409), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.041354209690102985), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06991692945397764), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 586), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 973), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05082576163662753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05920658006461146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03427544215886672), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0379946260355663), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1017), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1004), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005983945540393512), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09952395446340825), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 1177), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0031532326469052405), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06048574530226919), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 240), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 344), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022420809114951697), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1362), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06355099399872133), ('regressor__regressor__max_depth', 6794), ('regressor__regressor__n_estimators', 406), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.056104666379548376), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06318319540335329), ('regressor__regressor__max_depth', 7487), ('regressor__regressor__n_estimators', 113), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04372441737664393), ('regressor__regressor__max_depth', 8467), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 398), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06165697655748211), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002157166904588675), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1308), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06942094706700487), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00876824589538263), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 331), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0657128030943457), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 234), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.028721479202015617), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 767), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07574514668679698), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06601048918204891), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 830), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003733987964678198), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007822694349900915), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 538), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011195530108082438), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 271), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031061518378147693), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 252), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06807980783579724), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 158), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01501928611342293), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1566), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07970372134251465), ('regressor__regressor__max_depth', 9966), ('regressor__regressor__n_estimators', 563), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014265673145449258), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03507372269231158), ('regressor__regressor__max_depth', 5007), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06163281946791306), ('regressor__regressor__max_depth', 8857), ('regressor__regressor__n_estimators', 949), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 830), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029313474843246806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1452), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.048094379354093816), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03693499023328491), ('regressor__regressor__max_depth', 28), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06833497597532154), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1060), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0727880237480246), ('regressor__regressor__max_depth', 502), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 112), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008335258720839973), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 364), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 112), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015039363284612632), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1911), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05992734954599357), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 681), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0064346824732958744), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 530), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 1



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08003821489161483), ('regressor__regressor__max_depth', 15), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02077702865866855), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 256), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 86), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03774462230484414), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 178), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07295540054141984), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1266), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07814417360304036), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05189750422442214), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 130), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03245888976765927), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 298), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05082576163662753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05920658006461146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03427544215886672), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0379946260355663), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1017), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008207540536563186), ('regressor__regressor__max_depth', 5154), ('regressor__regressor__n_estimators', 723), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006362268997104255), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 778), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09969851783548223), ('regressor__regressor__max_depth', 4101), ('regressor__regressor__n_estimators', 157), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.016875898972295373), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06048574530226919), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 240), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 344), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022420809114951697), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02311154544616744), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09340383843146277), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1279), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07071193120825955), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 399), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016675223485212636), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 398), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06165697655748211), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002157166904588675), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1308), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06942094706700487), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00876824589538263), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 331), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01500479821750624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 338), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07548476214353407), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 53), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0049090568246609794), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1320), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04857748589731707), ('regressor__regressor__max_depth', 19), ('regressor__regressor__n_estimators', 61), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 923), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003733987964678198), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007822694349900915), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 538), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011195530108082438), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 271), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031061518378147693), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 252), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06194722596684716), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06587581549058445), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 739), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016377387767933821), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010848101336764738), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04330917222930057), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 561), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03507372269231158), ('regressor__regressor__max_depth', 5007), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06163281946791306), ('regressor__regressor__max_depth', 8857), ('regressor__regressor__n_estimators', 949), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 830), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029313474843246806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1452), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.048094379354093816), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029516297221135633), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020971644811115186), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007549846895777184), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1500), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029734593836406526), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1402), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008335258720839973), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 364), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 112), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015039363284612632), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1911), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05992734954599357), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 681), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0064346824732958744), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 530), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 2



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03285328121912152), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 863), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.058460987473928874), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 581), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04047283038703436), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 447), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01198271416278788), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 397), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03774462230484414), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 178), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06991692945397764), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 586), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06376320821096798), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 70), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1097), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 291), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05082576163662753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05920658006461146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03427544215886672), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0379946260355663), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1017), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 88), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09801185199939315), ('regressor__regressor__max_depth', 13), ('regressor__regressor__n_estimators', 411), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.047094901027800895), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1087), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 244), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006592666500899237), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1315), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06048574530226919), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 240), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 344), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022420809114951697), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 190), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06578450436243981), ('regressor__regressor__max_depth', 9623), ('regressor__regressor__n_estimators', 217), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007835754799175169), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1043), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 488), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 398), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06165697655748211), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002157166904588675), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1308), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06942094706700487), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00876824589538263), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 331), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02772536102508473), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1141), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01672756283106936), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1322), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 277), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009021523697728476), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 933), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.013888280189372569), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 359), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003733987964678198), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007822694349900915), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 538), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011195530108082438), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 271), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031061518378147693), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 252), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.024951411966683115), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 302), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.060303922353510814), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1363), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08166254105309577), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 172), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006106770530293233), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.043820758389319286), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 559), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03507372269231158), ('regressor__regressor__max_depth', 5007), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06163281946791306), ('regressor__regressor__max_depth', 8857), ('regressor__regressor__n_estimators', 949), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 830), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029313474843246806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1452), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.048094379354093816), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.060406274178706074), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1272), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 148), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08228537714780575), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 95), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 61), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007895374100183573), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1762), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008335258720839973), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 364), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 112), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015039363284612632), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1911), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05992734954599357), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 681), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0064346824732958744), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 530), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 3



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05120013943921796), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 101), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0311214788546359), ('regressor__regressor__max_depth', 6940), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008526017465755998), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1526), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004072561728392449), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 788), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02834257194768276), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 946), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03774462230484414), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 178), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029446963314920593), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 285), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 327), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 469), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034769668589043685), ('regressor__regressor__max_depth', 2287), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 65), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05082576163662753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05920658006461146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03427544215886672), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0379946260355663), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1017), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07917657726402197), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06048366138612082), ('regressor__regressor__max_depth', 7961), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009598161685839634), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1033), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08054709176695797), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06048574530226919), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 240), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 344), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022420809114951697), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06784407546724408), ('regressor__regressor__max_depth', 27), ('regressor__regressor__n_estimators', 238), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0523612971171559), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 651), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023067922915964633), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08830011560412436), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 398), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06165697655748211), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002157166904588675), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1308), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06942094706700487), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00876824589538263), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 331), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.061402574039705136), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05500622920762388), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 142), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05828711080207488), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05614059909560983), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003733987964678198), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007822694349900915), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 538), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011195530108082438), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 271), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031061518378147693), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 252), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06449854041502759), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 167), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.046358838729421974), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03270376627809467), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03507372269231158), ('regressor__regressor__max_depth', 5007), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06163281946791306), ('regressor__regressor__max_depth', 8857), ('regressor__regressor__n_estimators', 949), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 830), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029313474843246806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1452), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.048094379354093816), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04553289414065218), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 257), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.018596608299181056), ('regressor__regressor__max_depth', 15), ('regressor__regressor__n_estimators', 179), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 257), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008335258720839973), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 364), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 112), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015039363284612632), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1911), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05992734954599357), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 681), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0064346824732958744), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 530), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON 4



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015906048086203712), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 73), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07406806746824388), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 70), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08055203497973575), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 188), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03774462230484414), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 178), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00572326441431493), ('regressor__regressor__max_depth', 38), ('regressor__regressor__n_estimators', 1015), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06123726187041752), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 1208), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07693173041362837), ('regressor__regressor__max_depth', 269), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 122), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05082576163662753), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05920658006461146), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03427544215886672), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0379946260355663), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1017), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09844254371255078), ('regressor__regressor__max_depth', 7976), ('regressor__regressor__n_estimators', 395), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05864352715362021), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 341), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07352481813242628), ('regressor__regressor__max_depth', 1264), ('regressor__regressor__n_estimators', 1246), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1177), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06048574530226919), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 240), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 344), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1217), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022420809114951697), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052145048716816404), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 66), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0025650296597947687), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09939793013929618), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06576601063846017), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 126), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 398), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06165697655748211), ('regressor__regressor__max_depth', 37), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002157166904588675), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1308), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06942094706700487), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00876824589538263), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 331), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009817413732747296), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 390), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01380883777079042), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05082224681351969), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 490), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003733987964678198), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007822694349900915), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 538), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011195530108082438), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 271), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031061518378147693), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 252), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04428090186833984), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 582), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 417), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06330666612380065), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 102), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06449854041502759), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03507372269231158), ('regressor__regressor__max_depth', 5007), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06163281946791306), ('regressor__regressor__max_depth', 8857), ('regressor__regressor__n_estimators', 949), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 830), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029313474843246806), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1452), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.048094379354093816), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01938477983012238), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 397), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005057233576186908), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 175), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016293143957286428), ('regressor__regressor__max_depth', 307), ('regressor__regressor__n_estimators', 1539), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008335258720839973), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 364), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 112), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015039363284612632), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1911), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05992734954599357), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 681), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0064346824732958744), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 530), ('regressor__regressor__n_jobs', -2)])


{'CO_0': {'cluster size (%)': 34, 6: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.439135502158474, 'test_rmse': 0.6049838885332333, 'test_r2': -0.13184681766472672, 'test_pearson_r': array([0.10201498]), 'test_pearson_p_value': array([0.34145868]), 'test_spearman_r': -0.18502558532557065, 'test_spearman_p_value': 0.08258610984844826, 'test_kendall_r': -0.11654600676104564, 'test_kendall_p_value': 0.11146756586966755, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.43206620427016823, 'test_rmse': 0.6012547932449377, 'test_r2': -0.11793650895542007, 'test_pearson_r': array([0.13335419]), 'test_pearson_p_value': array([0.21281976]), 'test_spearman_r': -0.16048854227635717, 'test_spearman_p_value': 0.13299398289860584, 'test_kendall_r': -0.10772614217380762, 'test_kendall_p_value': 0.14220123721474048, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.041354209690102985, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.43821510413045156, 'test_rmse': 0.6075198809807906, 'test_r2': -0.14135573538201407, 'test_pearson_r': array([0.09647052]), 'test_pearson_p_value': array([0.36847408]), 'test_spearman_r': -0.17607987546474238, 'test_spearman_p_value': 0.09882540463053684, 'test_kendall_r': -0.11268594543528689, 'test_kendall_p_value': 0.1262508369314388, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0031532326469052405, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.43669268480503015, 'test_rmse': 0.6070919383218198, 'test_r2': -0.13974833850660628, 'test_pearson_r': array([0.10201241]), 'test_pearson_p_value': array([0.34147092]), 'test_spearman_r': -0.17436249303815562, 'test_spearman_p_value': 0.10221192361089959, 'test_kendall_r': -0.1040082066192401, 'test_kendall_p_value': 0.1602686997996402, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06318319540335329, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 7487, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 113, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.4364659301447389, 'test_rmse': 0.6033755018589401, 'test_r2': -0.12583664949982665, 'test_pearson_r': array([0.10623427]), 'test_pearson_p_value': array([0.32175803]), 'test_spearman_r': -0.1453749382694035, 'test_spearman_p_value': 0.17404838317742347, 'test_kendall_r': -0.07880013548535797, 'test_kendall_p_value': 0.28949003037614573, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.435953640117309, 'test_rmse': 0.6080477339128441, 'test_r2': -0.14333996576544128, 'test_pearson_r': array([0.10406752]), 'test_pearson_p_value': array([0.33178207]), 'test_spearman_r': -0.1389332271661798, 'test_spearman_p_value': 0.19412514714535778, 'test_kendall_r': -0.06618253079093339, 'test_kendall_p_value': 0.36676886686734844, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06807980783579724, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 158, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.4624078181205592, 'test_ystd': 0.568656466299265, 'test_mae': 0.436714002004405, 'test_rmse': 0.6065947549795083, 'test_r2': -0.13788228885131715, 'test_pearson_r': array([0.1001897]), 'test_pearson_p_value': array([0.3502114]), 'test_spearman_r': -0.1600284020725742, 'test_spearman_p_value': 0.1341240609438366, 'test_kendall_r': -0.07239759105443205, 'test_kendall_p_value': 0.32326023015979255, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06833497597532154, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1060, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_0': {'cluster size (%)': 33, 6: {'fit_time': array([1.54022241, 1.54180908, 1.53421164]), 'score_time': array([0.12721062, 0.12216949, 0.12432027]), 'test_pearson_r': array([0.93290338, 0.9419318 , 0.87341986]), 'test_pearson_p': array([-1.83689199e-39, -1.42918346e-41, -5.56875524e-28]), 'test_spearman_r': array([0.92103573, 0.95429112, 0.85289012]), 'test_spearman_p': array([-1.45159938e-36, -7.94157749e-46, -1.97872652e-25]), 'test_kendall_r': array([0.81597806, 0.85985193, 0.75161277]), 'test_kendall_p': array([-6.28538363e-29, -1.52577831e-31, -1.58927853e-24]), 'test_rmse': array([-0.23716248, -0.22261836, -0.29532564]), 'test_mae': array([-0.11683381, -0.10733072, -0.13969371]), 'test_r2': array([0.86488302, 0.8848388 , 0.73949442]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.90305471, 2.93085146, 2.87612009]), 'score_time': array([0.12434173, 0.12669325, 0.12175512]), 'test_pearson_r': array([0.8584328 , 0.91528342, 0.96058549]), 'test_pearson_p': array([-2.26535623e-26, -6.37443922e-35, -1.79187862e-48]), 'test_spearman_r': array([0.84247078, 0.93290057, 0.95140182]), 'test_spearman_p': array([-1.49883426e-24, -5.13941842e-39, -9.82240623e-45]), 'test_kendall_r': array([0.72966107, 0.84891807, 0.83640239]), 'test_kendall_p': array([-1.85117409e-23, -7.45483602e-31, -6.03515818e-30]), 'test_rmse': array([-0.35340945, -0.26639228, -0.16835666]), 'test_mae': array([-0.1644751 , -0.10956543, -0.10517067]), 'test_r2': array([0.6773003 , 0.82851251, 0.92180532]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05920658006461146, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([8.13897514, 7.82203507, 8.68011522]), 'score_time': array([0.12200809, 0.1249969 , 0.16230845]), 'test_pearson_r': array([0.97144434, 0.80987386, 0.90876359]), 'test_pearson_p': array([-6.97426098e-55, -3.70224590e-21, -1.25213940e-33]), 'test_spearman_r': array([0.97327373, 0.83658652, 0.91949928]), 'test_spearman_p': array([-4.34290834e-56, -1.14928284e-23, -8.15685685e-36]), 'test_kendall_r': array([0.88475095, 0.74911097, 0.80760012]), 'test_kendall_p': array([-1.01082083e-33, -2.68963464e-24, -6.23033294e-28]), 'test_rmse': array([-0.15528376, -0.37222485, -0.27627396]), 'test_mae': array([-0.09567929, -0.16407413, -0.12884316]), 'test_r2': array([0.94289822, 0.58527565, 0.8197631 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0022420809114951697, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.09175706, 1.07368612, 1.07284999]), 'score_time': array([0.12239146, 0.11994243, 0.12153363]), 'test_pearson_r': array([0.84726723, 0.86070121, 0.93756233]), 'test_pearson_p': array([-4.47326698e-25, -2.36653627e-26, -2.74989204e-40]), 'test_spearman_r': array([0.89391322, 0.87630622, 0.92364882]), 'test_spearman_p': array([-2.30048029e-31, -2.24752693e-28, -9.63121578e-37]), 'test_kendall_r': array([0.81653052, 0.78305098, 0.805533  ]), 'test_kendall_p': array([-8.53591896e-29, -1.73821411e-26, -5.31905345e-28]), 'test_rmse': array([-0.34177213, -0.35525307, -0.23199164]), 'test_mae': array([-0.12380733, -0.15147263, -0.12700006]), 'test_r2': array([0.65817389, 0.69078126, 0.87486166]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06942094706700487, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 306, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([0.87086868, 0.80874205, 0.80415678]), 'score_time': array([0.12900829, 0.12159204, 0.16322994]), 'test_pearson_r': array([0.9554554 , 0.83222415, 0.8934837 ]), 'test_pearson_p': array([-8.07408481e-47, -3.16076484e-23, -6.06200180e-31]), 'test_spearman_r': array([0.94043069, 0.83076299, 0.90630234]), 'test_spearman_p': array([-1.36806626e-41, -4.40702554e-23, -3.63752193e-33]), 'test_kendall_r': array([0.84174123, 0.75377025, 0.82615926]), 'test_kendall_p': array([-1.21321999e-30, -1.12695995e-24, -2.60744676e-29]), 'test_rmse': array([-0.18549012, -0.36829607, -0.28789519]), 'test_mae': array([-0.10424534, -0.15676856, -0.11705155]), 'test_r2': array([0.91262269, 0.65650591, 0.79013795]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 252, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.61648107, 0.59701872, 0.63595605]), 'score_time': array([0.11843777, 0.11978412, 0.11460614]), 'test_pearson_r': array([0.89099491, 0.93643839, 0.83698375]), 'test_pearson_p': array([-6.84888229e-31, -5.68410412e-40, -1.04659509e-23]), 'test_spearman_r': array([0.89455912, 0.93718066, 0.85883243]), 'test_spearman_p': array([-1.79922969e-31, -3.52414735e-40, -3.97903560e-26]), 'test_kendall_r': array([0.77156638, 0.80993722, 0.76377929]), 'test_kendall_p': array([-5.28961536e-26, -3.45641335e-28, -4.09140866e-25]), 'test_rmse': array([-0.29100951, -0.23015498, -0.3777861 ]), 'test_mae': array([-0.15932236, -0.13467913, -0.17185453]), 'test_r2': array([0.76079402, 0.85501552, 0.69365083]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.048094379354093816, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 115, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.62573886, 2.57243204, 2.56984329]), 'score_time': array([0.11576438, 0.11760449, 0.11530876]), 'test_pearson_r': array([0.87648755, 0.79176929, 0.98787444]), 'test_pearson_p': array([-1.01534021e-28, -1.13156994e-19, -9.80615085e-70]), 'test_spearman_r': array([0.89352113, 0.82753578, 0.985069  ]), 'test_spearman_p': array([-2.66854419e-31, -9.08138791e-23, -5.79697331e-66]), 'test_kendall_r': array([0.8167984 , 0.74032528, 0.90064512]), 'test_kendall_p': array([-8.19162808e-29, -8.17487733e-24, -1.53158525e-34]), 'test_rmse': array([-0.32050782, -0.39494113, -0.10168096]), 'test_mae': array([-0.12177023, -0.16460376, -0.07431635]), 'test_r2': array([0.74032889, 0.54195175, 0.97460394]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 112, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_1': {'cluster size (%)': 6, 6: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7659001967516459, 'test_rmse': 0.8541582568760603, 'test_r2': 0.11809622401302278, 'test_pearson_r': array([0.49551172]), 'test_pearson_p_value': array([0.05096527]), 'test_spearman_r': 0.4592812613648528, 'test_spearman_p_value': 0.07351102811378721, 'test_kendall_r': 0.27230002934486813, 'test_kendall_p_value': 0.16210617956889972, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 86, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7731184570696867, 'test_rmse': 0.8684735938968585, 'test_r2': 0.08828783090183667, 'test_pearson_r': array([0.51814786]), 'test_pearson_p_value': array([0.03977626]), 'test_spearman_r': 0.47140749928867726, 'test_spearman_p_value': 0.06528601922464779, 'test_kendall_r': 0.290453364634526, 'test_kendall_p_value': 0.135902572360324, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03245888976765927, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 298, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7764606459644354, 'test_rmse': 0.8750747974112564, 'test_r2': 0.07437544412460606, 'test_pearson_r': array([0.50636479]), 'test_pearson_p_value': array([0.04534197]), 'test_spearman_r': 0.47140749928867726, 'test_spearman_p_value': 0.06528601922464779, 'test_kendall_r': 0.290453364634526, 'test_kendall_p_value': 0.135902572360324, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.09969851783548223, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 4101, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 157, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7397988869455374, 'test_rmse': 0.8351845809809333, 'test_r2': 0.1568410565315198, 'test_pearson_r': array([0.52883059]), 'test_pearson_p_value': array([0.03518951]), 'test_spearman_r': 0.4592812613648528, 'test_spearman_p_value': 0.07351102811378721, 'test_kendall_r': 0.27230002934486813, 'test_kendall_p_value': 0.16210617956889972, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07071193120825955, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 399, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7600934228506602, 'test_rmse': 0.8497322095522883, 'test_r2': 0.12721218045468596, 'test_pearson_r': array([0.51061034]), 'test_pearson_p_value': array([0.04327345]), 'test_spearman_r': 0.47140749928867726, 'test_spearman_p_value': 0.06528601922464779, 'test_kendall_r': 0.290453364634526, 'test_kendall_p_value': 0.135902572360324, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 923, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7389232686367548, 'test_rmse': 0.8348728969843602, 'test_r2': 0.15747025902877043, 'test_pearson_r': array([0.53189957]), 'test_pearson_p_value': array([0.03394903]), 'test_spearman_r': 0.47140749928867726, 'test_spearman_p_value': 0.06528601922464779, 'test_kendall_r': 0.290453364634526, 'test_kendall_p_value': 0.135902572360324, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06587581549058445, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 739, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.8669253953438698, 'test_ystd': 0.9095524381766688, 'test_mae': 0.7600934228506602, 'test_rmse': 0.8497322095522883, 'test_r2': 0.12721218045468596, 'test_pearson_r': array([0.51061034]), 'test_pearson_p_value': array([0.04327345]), 'test_spearman_r': 0.47140749928867726, 'test_spearman_p_value': 0.06528601922464779, 'test_kendall_r': 0.290453364634526, 'test_kendall_p_value': 0.135902572360324, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_1': {'cluster size (%)': 6, 6: {'fit_time': array([1.71973896, 1.69788241, 1.7911582 , 1.78913116, 1.72111702,
       1.67274833, 1.70532894, 1.69354367, 1.77181602, 1.71873593,
       1.73302603, 1.80911398, 1.78508496, 1.69594121, 1.75426412,
       1.74124479]), 'score_time': array([0.1164763 , 0.12650156, 0.12739205, 0.11553645, 0.12304688,
       0.1162858 , 0.11590886, 0.11342168, 0.11520267, 0.11482763,
       0.11684942, 0.19039607, 0.11283207, 0.11486959, 0.13357854,
       0.11851096]), 'test_pearson_r': array([0.88561561, 0.99201513, 0.99569466, 0.93770395, 0.96634145,
       0.70066927, 0.99265409, 0.85140044, 0.97557342, 0.91330312,
       0.99146917, 0.96211477, 0.95413021, 0.94842342, 0.98617768,
       0.98246967]), 'test_pearson_p': array([-2.27129885e-06, -6.62876824e-15, -6.51742674e-17, -8.27252366e-08,
       -1.20052553e-09, -2.50074812e-03, -3.03577549e-14, -2.86947896e-05,
       -1.30434188e-10, -7.83004372e-07, -8.62050322e-14, -2.71709043e-09,
       -1.01447995e-08, -2.27032635e-08, -2.49231573e-12, -1.30260526e-11]), 'test_spearman_r': array([0.88235294, 0.97854096, 0.9889578 , 0.87352941, 0.91764706,
       0.71764706, 0.99411765, 0.81470588, 0.97647059, 0.87352941,
       0.98749107, 0.9256809 , 0.91096419, 0.89411765, 0.97790975,
       0.9506993 ]), 'test_spearman_p': array([-2.77727034e-06, -1.05833145e-11, -7.47344211e-14, -9.86965167e-06,
       -5.52865496e-07, -1.74753506e-03, -6.43399749e-15, -1.21309506e-04,
       -1.00615044e-10, -9.86965167e-06, -1.24331763e-12, -2.75438509e-07,
       -9.37408818e-07, -3.01130993e-06, -6.49300516e-11, -1.66548390e-08]), 'test_kendall_r': array([0.82352941, 0.90775526, 0.94817416, 0.78333333, 0.81666667,
       0.71666667, 0.96666667, 0.75      , 0.9       , 0.75      ,
       0.94561497, 0.82845913, 0.81172259, 0.76666667, 0.92440239,
       0.84519568]), 'test_kendall_p': array([-1.25716600e-07, -3.95736275e-07, -1.28042376e-07, -2.41022656e-06,
       -5.50848432e-07, -2.87624658e-05, -1.29045888e-11, -8.91848950e-06,
       -4.72556483e-09, -8.91848950e-06, -3.52984089e-07, -8.12917002e-06,
       -1.23329686e-05, -4.72451181e-06, -6.95749778e-07, -5.31661458e-06]), 'test_rmse': array([-0.28227498, -0.08786633, -0.07572808, -0.24443198, -0.12105623,
       -0.54058479, -0.08394281, -0.39136143, -0.15397529, -0.25051725,
       -0.0773884 , -0.17627519, -0.20542781, -0.1901674 , -0.09959023,
       -0.09304055]), 'test_mae': array([-0.11926446, -0.0519349 , -0.04579798, -0.13867301, -0.08972663,
       -0.18916243, -0.06255345, -0.15699975, -0.08158208, -0.10848588,
       -0.05040916, -0.1010544 , -0.09931312, -0.12404622, -0.05748015,
       -0.06873625]), 'test_r2': array([0.76312612, 0.97961316, 0.98961686, 0.86208922, 0.93156808,
       0.34364155, 0.97866186, 0.68914062, 0.9505299 , 0.81696296,
       0.98243762, 0.91813357, 0.90405332, 0.84738157, 0.96469045,
       0.96306745]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([3.08630848, 3.19137406, 3.02275181, 3.07955813, 3.08138943,
       3.07660913, 3.0988183 , 3.1340301 , 3.2462697 , 3.23387599,
       3.1004951 , 3.08651996, 3.06255054, 3.0105896 , 3.09453845,
       3.09937048]), 'score_time': array([0.11582589, 0.12776971, 0.11690068, 0.11452127, 0.13357997,
       0.11827278, 0.12260151, 0.12699556, 0.13047004, 0.14128089,
       0.13132071, 0.11558008, 0.11301422, 0.11433053, 0.1138649 ,
       0.11620736]), 'test_pearson_r': array([0.98834617, 0.90460705, 0.98608291, 0.99296723, 0.65681915,
       0.93634602, 0.82980415, 0.99456733, 0.99167397, 0.97948501,
       0.92961449, 0.98953408, 0.99070777, 0.9753904 , 0.98387706,
       0.95457813]), 'test_pearson_p': array([-1.11776994e-13, -6.16021850e-07, -4.20357377e-13, -2.23971291e-14,
       -5.70730231e-03, -9.58528626e-08, -6.98281655e-05, -3.69175498e-15,
       -7.27603534e-14, -3.88464408e-11, -1.90249123e-07, -3.58776044e-13,
       -1.56517529e-13, -1.37364243e-10, -7.27789347e-12, -9.48269457e-09]), 'test_spearman_r': array([0.92581256, 0.87798913, 0.96560488, 0.97277436, 0.66176471,
       0.9256809 , 0.89411765, 0.99117647, 0.96394434, 0.98307606,
       0.89330414, 0.97647059, 0.99117647, 0.95588235, 0.98969179,
       0.94411765]), 'test_spearman_p': array([-9.95522543e-08, -3.60194970e-06, -3.50731305e-10, -2.76678019e-10,
       -5.23375330e-03, -2.75438509e-07, -3.01130993e-06, -1.09082915e-13,
       -1.93084048e-09, -1.01973765e-11, -3.16996646e-06, -1.00615044e-10,
       -1.09082915e-13, -7.76027446e-09, -3.22732424e-13, -3.93392920e-08]), 'test_kendall_r': array([0.80443352, 0.78967327, 0.88481339, 0.91214188, 0.68333333,
       0.84519568, 0.8       , 0.96666667, 0.87866878, 0.92887842,
       0.72803985, 0.93333333, 0.96666667, 0.85      , 0.95801702,
       0.83333333]), 'test_kendall_p': array([-6.99598360e-06, -1.02725536e-05, -8.77713838e-07, -8.99518934e-07,
       -8.26619198e-05, -5.31661458e-06, -1.17934846e-06, -1.29045888e-11,
       -2.22140114e-06, -5.65704076e-07, -8.82060896e-05, -3.55879882e-10,
       -1.29045888e-11, -1.02027025e-07, -2.70381998e-07, -2.44193725e-07]), 'test_rmse': array([-0.08000049, -0.28520517, -0.1003589 , -0.09546522, -0.53076827,
       -0.25064048, -0.40417635, -0.07738518, -0.06685105, -0.12703838,
       -0.22508588, -0.09993048, -0.07891238, -0.14363358, -0.11682788,
       -0.1621152 ]), 'test_mae': array([-0.0529346 , -0.1254295 , -0.07380889, -0.05268127, -0.18884963,
       -0.1113885 , -0.18850801, -0.0504538 , -0.05604831, -0.08887263,
       -0.15564863, -0.07106036, -0.04932995, -0.10202866, -0.05904095,
       -0.10948483]), 'test_r2': array([0.97589759, 0.8054638 , 0.97032467, 0.98077936, 0.2408648 ,
       0.86701241, 0.65964913, 0.98849456, 0.98027718, 0.94776898,
       0.86065464, 0.9783814 , 0.98073235, 0.94151984, 0.96521064,
       0.89539652]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05920658006461146, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([9.49085307, 9.54504228, 9.23524904, 9.71506357, 9.76418972,
       9.71026254, 9.31999135, 9.50744295, 9.61491489, 9.82433057,
       9.81852651, 9.85819578, 9.69131279, 9.9572022 , 9.9412632 ,
       9.70821095]), 'score_time': array([0.18366146, 0.13361025, 0.17072916, 0.11657453, 0.12665987,
       0.11953902, 0.12847447, 0.12019372, 0.18248153, 0.13030648,
       0.12106037, 0.13840175, 0.11684275, 0.11674547, 0.1919992 ,
       0.11790967]), 'test_pearson_r': array([0.9232223 , 0.99681141, 0.92811997, 0.97820513, 0.98717045,
       0.98379443, 0.95613661, 0.98441788, 0.54423752, 0.95572344,
       0.9837905 , 0.97526   , 0.91680409, 0.98978866, 0.81657933,
       0.99450634]), 'test_pearson_p': array([-1.27793410e-07, -6.87712309e-18, -7.90854287e-08, -5.91371820e-11,
       -1.48304575e-12, -7.54140623e-12, -7.45763769e-09, -5.73989700e-12,
       -2.92935860e-02, -7.95468564e-09, -7.55413089e-12, -1.42491715e-10,
       -5.92359968e-07, -3.02169291e-13, -1.13581169e-04, -3.99114435e-15]), 'test_spearman_r': array([0.90619269, 0.99202962, 0.92892157, 0.93235294, 0.95      ,
       0.95294118, 0.94039761, 0.98160439, 0.67352941, 0.91685087,
       0.97277436, 0.96764706, 0.95217097, 0.94760793, 0.85588235,
       0.97938251]), 'test_spearman_p': array([-5.45823921e-07, -6.53940522e-15, -7.28779911e-08, -1.45175444e-07,
       -1.83461727e-08, -1.20965793e-08, -6.11516412e-08, -1.82090718e-11,
       -4.23273925e-03, -5.90106916e-07, -2.76678019e-10, -9.13289481e-10,
       -1.35244908e-08, -2.52830943e-08, -2.34491569e-05, -4.02148125e-11]), 'test_kendall_r': array([0.84871427, 0.952036  , 0.79411765, 0.85      , 0.83333333,
       0.83333333, 0.86193223, 0.91214188, 0.7       , 0.81172259,
       0.89540533, 0.88333333, 0.89540533, 0.84757938, 0.8       ,
       0.90759507]), 'test_kendall_p': array([-2.12480839e-06, -1.04704970e-07, -5.45407093e-07, -1.02027025e-07,
       -2.44193725e-07, -2.44193725e-07, -3.45008795e-06, -8.99518934e-07,
       -4.94106357e-05, -1.23329686e-05, -1.41912826e-06, -1.43717927e-08,
       -1.41912826e-06, -6.07683023e-06, -1.17934846e-06, -1.10296350e-06]), 'test_rmse': array([-0.25888289, -0.05910988, -0.25192854, -0.12541429, -0.11603107,
       -0.11664218, -0.16053838, -0.09770462, -0.54315812, -0.19499837,
       -0.11836553, -0.14320737, -0.28345954, -0.09686343, -0.37775763,
       -0.07130396]), 'test_mae': array([-0.12774968, -0.04296467, -0.13626813, -0.08291909, -0.07054789,
       -0.08478578, -0.0956648 , -0.06706257, -0.20394379, -0.12303349,
       -0.07392459, -0.08738963, -0.10466228, -0.06160884, -0.15299155,
       -0.05079618]), 'test_r2': array([ 0.84374615,  0.99222118,  0.8427275 ,  0.95141074,  0.97056725,
        0.96604033,  0.91160793,  0.96040981, -0.18486374,  0.88029314,
        0.96341244,  0.93667211,  0.83433876,  0.97827787,  0.63538352,
        0.98822805]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0022420809114951697, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.29982519, 1.28286958, 1.33834982, 1.28711987, 1.26875186,
       1.32138276, 1.26643443, 1.34572649, 1.28888774, 1.29743886,
       1.28886342, 1.30163479, 1.28424096, 1.27361631, 1.26120448,
       1.34445024]), 'score_time': array([0.11809659, 0.11693835, 0.11842108, 0.11397529, 0.11499405,
       0.11718059, 0.11711788, 0.12510014, 0.11727405, 0.12158918,
       0.12036777, 0.11906576, 0.11743045, 0.16052008, 0.11386371,
       0.11511731]), 'test_pearson_r': array([0.99416645, 0.99227687, 0.9822661 , 0.99752585, 0.40613645,
       0.98979228, 0.97888539, 0.98265542, 0.95694907, 0.72127664,
       0.99275351, 0.99547417, 0.83838012, 0.97074572, 0.97925246,
       0.97682182]), 'test_pearson_p': array([-6.33301475e-16, -5.16655717e-15, -2.56007337e-12, -1.51180254e-17,
       -1.18538835e-01, -3.01423044e-13, -4.74508688e-11, -1.20959741e-11,
       -6.55701783e-09, -1.61342031e-03, -2.76031605e-14, -1.03052674e-15,
       -4.98105122e-05, -4.55108440e-10, -4.20098254e-11, -9.06453504e-11]), 'test_spearman_r': array([0.99079755, 0.99264706, 0.96995726, 0.98965678, 0.59499264,
       0.96470588, 0.97058824, 0.96460597, 0.96241945, 0.81089058,
       0.98749107, 0.99411765, 0.86764706, 0.97058824, 0.92352941,
       0.97058824]), 'test_spearman_p': array([-1.91505662e-14, -3.57827382e-15, -1.28761744e-10, -3.30454141e-13,
       -1.50450364e-02, -1.66620775e-09, -4.72340113e-10, -1.69905595e-09,
       -2.56986058e-09, -1.38406226e-04, -1.24331763e-12, -6.43399749e-15,
       -1.33486813e-05, -4.72340113e-10, -3.34390001e-07, -4.72340113e-10]), 'test_kendall_r': array([0.94814815, 0.95588235, 0.87823476, 0.9575798 , 0.55462185,
       0.86666667, 0.9       , 0.86926796, 0.88614695, 0.74477639,
       0.94561497, 0.96666667, 0.75      , 0.88333333, 0.8       ,
       0.9       ]), 'test_kendall_p': array([-1.28065488e-07, -5.34739170e-12, -9.29113866e-07, -3.62993104e-07,
       -2.90607252e-03, -3.98309214e-08, -4.72556483e-09, -3.24532792e-06,
       -2.11823604e-06, -6.04438410e-05, -3.52984089e-07, -1.29045888e-11,
       -8.91848950e-06, -1.43717927e-08, -1.17934846e-06, -4.72556483e-09]), 'test_rmse': array([-0.0699877 , -0.05887332, -0.1217783 , -0.04777797, -0.75345777,
       -0.08974659, -0.17261497, -0.11687985, -0.16374127, -0.43654225,
       -0.07926776, -0.06382634, -0.30443521, -0.1863279 , -0.12355277,
       -0.15969693]), 'test_mae': array([-0.05669017, -0.03859845, -0.07804154, -0.03309118, -0.33002658,
       -0.06353472, -0.10392366, -0.07793633, -0.09497748, -0.19568205,
       -0.06273661, -0.04489683, -0.13954738, -0.09990712, -0.08054097,
       -0.09450817]), 'test_r2': array([ 0.98828446,  0.98451709,  0.9588998 ,  0.99223548, -1.35728805,
        0.97966123,  0.95214051,  0.96087511,  0.90717197,  0.37146543,
        0.97696519,  0.99075773,  0.65346214,  0.92608388,  0.95063738,
        0.9531975 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06942094706700487, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 306, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([0.9939878 , 0.92968869, 0.93427753, 0.8946383 , 0.89120412,
       0.9199841 , 0.92245269, 1.01947665, 1.02745557, 0.93636394,
       0.96278095, 0.91200686, 0.90104532, 0.93333817, 0.87679219,
       0.94067907]), 'score_time': array([0.11756086, 0.11792397, 0.11712313, 0.11329913, 0.11762691,
       0.12137437, 0.11614418, 0.12213111, 0.11533546, 0.16518426,
       0.11992455, 0.11771393, 0.11888981, 0.11404061, 0.12322831,
       0.12017226]), 'test_pearson_r': array([0.9754865 , 0.8772001 , 0.99435095, 0.98949393, 0.96614144,
       0.9773043 , 0.97416074, 0.65090978, 0.92662723, 0.96581762,
       0.99603632, 0.99357538, 0.87467516, 0.98955861, 0.81892491,
       0.99760808]), 'test_pearson_p': array([-2.84606381e-11, -3.77137644e-06, -4.97919530e-16, -3.68482043e-13,
       -1.25069755e-09, -7.83338982e-11, -1.92613033e-10, -6.31734277e-03,
       -2.52451295e-07, -1.33571675e-09, -4.07855669e-16, -1.19107163e-14,
       -9.28989194e-06, -3.52953764e-13, -1.04487125e-04, -1.19355086e-17]), 'test_spearman_r': array([0.93382353, 0.85821606, 0.99263804, 0.96983102, 0.98749107,
       0.96764706, 0.97058824, 0.75294118, 0.92058824, 0.93961708,
       0.97866104, 0.97941176, 0.84179567, 0.94334095, 0.85588235,
       0.99117647]), 'test_spearman_p': array([-4.32632699e-08, -1.04650126e-05, -3.61124062e-15, -5.63193822e-10,
       -1.24331763e-12, -9.13289481e-10, -4.72340113e-10, -7.61081073e-04,
       -4.32041043e-07, -6.68419289e-08, -5.10643005e-11, -3.98200979e-11,
       -4.33057196e-05, -4.32397330e-08, -2.34491569e-05, -1.09082915e-13]), 'test_kendall_r': array([0.83823529, 0.75207105, 0.95555556, 0.87866878, 0.94561497,
       0.88333333, 0.88333333, 0.73333333, 0.78333333, 0.84033613,
       0.91214188, 0.9       , 0.74477639, 0.84519568, 0.8       ,
       0.96666667]), 'test_kendall_p': array([-5.63431609e-08, -3.32635548e-05, -1.02150953e-07, -2.22140114e-06,
       -3.52984089e-07, -1.43717927e-08, -1.43717927e-08, -1.62687222e-05,
       -2.41022656e-06, -6.44110257e-06, -8.99518934e-07, -4.72556483e-09,
       -6.04438410e-05, -5.31661458e-06, -1.17934846e-06, -1.29045888e-11]), 'test_rmse': array([-0.13734351, -0.30620015, -0.06685049, -0.10297298, -0.1899322 ,
       -0.1139919 , -0.16538107, -0.54062694, -0.18164192, -0.20143804,
       -0.06513719, -0.06801006, -0.26161411, -0.09149059, -0.36089705,
       -0.04272205]), 'test_mae': array([-0.08429047, -0.14170929, -0.05455119, -0.07955661, -0.09346073,
       -0.07834949, -0.10606467, -0.17977871, -0.11954267, -0.09324773,
       -0.04617886, -0.05134562, -0.1329215 , -0.0726719 , -0.15480466,
       -0.0329845 ]), 'test_r2': array([0.94895163, 0.7344536 , 0.98770367, 0.96850495, 0.92632055,
       0.95377261, 0.9462025 , 0.15499787, 0.83097067, 0.926253  ,
       0.9917159 , 0.98688354, 0.71115795, 0.97750476, 0.6204597 ,
       0.99491191]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 252, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.70602798, 0.69967532, 0.7200408 , 0.8065865 , 0.73313117,
       0.73334122, 0.72144461, 0.70602608, 0.76887393, 0.70179939,
       0.71656394, 0.72759795, 0.83479428, 0.72856069, 0.74488091,
       0.70610666]), 'score_time': array([0.11479998, 0.11820745, 0.11562657, 0.12258911, 0.11576295,
       0.11872244, 0.11367059, 0.1137898 , 0.19396448, 0.1130693 ,
       0.11730862, 0.11471009, 0.11851716, 0.11494946, 0.16692829,
       0.11703634]), 'test_pearson_r': array([0.80499959, 0.95418492, 0.9846897 , 0.99471774, 0.99559768,
       0.98692409, 0.96683927, 0.99824817, 0.97679954, 0.96752137,
       0.98598557, 0.99468827, 0.98950476, 0.86332718, 0.99020078,
       0.73607804]), 'test_pearson_p': array([-9.69838388e-05, -2.91308957e-09, -8.56323175e-13, -3.03423884e-15,
       -8.49347852e-16, -1.69314519e-12, -1.08304649e-09, -1.35137695e-18,
       -9.12516684e-11, -9.38103338e-10, -2.74373819e-12, -3.15449128e-15,
       -3.65843163e-13, -1.65148186e-05, -2.26717766e-13, -1.15018284e-03]), 'test_spearman_r': array([0.78378615, 0.92647059, 0.97177987, 0.99043441, 0.98454773,
       0.97352941, 0.97866104, 0.98529412, 0.93156758, 0.9757177 ,
       0.97647059, 0.99115475, 0.98674628, 0.92352941, 0.96755583,
       0.70787363]), 'test_spearman_p': array([-1.96906132e-04, -9.32988232e-08, -8.09524658e-11, -1.91599035e-13,
       -5.41517846e-12, -2.27689766e-10, -5.10643005e-11, -3.83671954e-12,
       -1.57059247e-07, -1.25183504e-10, -1.00615044e-10, -1.10969762e-13,
       -1.86016303e-12, -3.34390001e-07, -9.31243359e-10, -2.15429806e-03]), 'test_kendall_r': array([0.69149282, 0.79411765, 0.9037285 , 0.96235152, 0.92887842,
       0.91666667, 0.92887842, 0.91666667, 0.81172259, 0.91214188,
       0.91666667, 0.9536629 , 0.9412097 , 0.8       , 0.88614695,
       0.6778302 ]), 'test_kendall_p': array([-1.21595108e-04, -5.45407093e-07, -4.80224875e-07, -2.18526649e-07,
       -5.65704076e-07, -1.38948965e-09, -5.65704076e-07, -1.38948965e-09,
       -1.23329686e-05, -8.99518934e-07, -1.38948965e-09, -3.28081900e-07,
       -4.35438108e-07, -1.17934846e-06, -2.08474693e-06, -2.61704221e-04]), 'test_rmse': array([-0.29170502, -0.14833778, -0.12779878, -0.06864322, -0.06025637,
       -0.096778  , -0.1849573 , -0.04472681, -0.10776719, -0.18982619,
       -0.08719458, -0.07678615, -0.11315661, -0.3847719 , -0.10263143,
       -0.55062869]), 'test_mae': array([-0.12226355, -0.10728663, -0.0719785 , -0.04691439, -0.04272746,
       -0.06117038, -0.0908097 , -0.03365842, -0.07627946, -0.13878189,
       -0.06341595, -0.04752755, -0.07077484, -0.20428302, -0.08272437,
       -0.22200161]), 'test_r2': array([0.64247086, 0.88533537, 0.96828063, 0.98747851, 0.99043579,
       0.96733089, 0.93365937, 0.99493258, 0.95358451, 0.87256284,
       0.97108124, 0.98857986, 0.97006856, 0.71232798, 0.97093874,
       0.4341877 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.048094379354093816, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 115, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.74570632, 2.80980659, 2.77615905, 2.75822592, 2.94255376,
       3.13582325, 2.83048773, 2.79695654, 2.82869506, 2.8159678 ,
       2.80602026, 2.77202725, 2.76058316, 2.78305411, 2.83249044,
       2.85727096]), 'score_time': array([0.11526823, 0.12011218, 0.1142292 , 0.11611366, 0.11704969,
       0.12370944, 0.12048817, 0.1219182 , 0.1146636 , 0.11699033,
       0.11736059, 0.11485028, 0.15887308, 0.11404109, 0.11467099,
       0.1177063 ]), 'test_pearson_r': array([0.99062553, 0.73366241, 0.98443916, 0.94169463, 0.91138495,
       0.54477404, 0.99310667, 0.92838744, 0.85385137, 0.96888566,
       0.9836152 , 0.99413074, 0.99073109, 0.97536598, 0.96525859,
       0.99638336]), 'test_pearson_p': array([-2.19932341e-14, -8.02164726e-04, -9.66482278e-13, -5.26061247e-08,
       -9.07874880e-07, -2.91028318e-02, -1.94746629e-14, -2.14005269e-07,
       -2.57165338e-05, -6.97214992e-10, -8.14111097e-12, -6.33460762e-15,
       -1.53798660e-13, -1.38312278e-10, -1.49411599e-09, -2.14953304e-16]), 'test_spearman_r': array([0.94297994, 0.73218894, 0.95950992, 0.90802085, 0.8903608 ,
       0.64017677, 0.99411765, 0.94411765, 0.79970632, 0.92941176,
       0.99410462, 0.98598457, 0.97941176, 0.9757177 , 0.94411765,
       0.96764706]), 'test_spearman_p': array([-1.45460594e-08, -8.32107073e-04, -1.17126395e-09, -1.16766988e-06,
       -3.80430564e-06, -7.55749602e-03, -6.43399749e-15, -3.93392920e-08,
       -2.00453108e-04, -1.94011895e-07, -6.53417850e-15, -2.74510261e-12,
       -3.98200979e-11, -1.25183504e-10, -3.93392920e-08, -9.13289481e-10]), 'test_kendall_r': array([0.84871427, 0.75097607, 0.85928283, 0.79498604, 0.84519568,
       0.7113033 , 0.96666667, 0.85      , 0.70590728, 0.8       ,
       0.97054189, 0.94928891, 0.9       , 0.91214188, 0.86666667,
       0.91666667]), 'test_kendall_p': array([-2.12480839e-06, -3.00010062e-05, -1.69737286e-06, -1.85653874e-05,
       -5.31661458e-06, -1.27728091e-04, -1.29045888e-11, -1.02027025e-07,
       -1.50901721e-04, -1.17934846e-06, -2.02597451e-07, -4.05106961e-07,
       -4.72556483e-09, -8.99518934e-07, -3.98309214e-08, -1.38948965e-09]), 'test_rmse': array([-0.08892991, -0.54556855, -0.11967608, -0.20580567, -0.24700025,
       -0.54490447, -0.07508176, -0.21086011, -0.31166248, -0.16104127,
       -0.11958685, -0.08374408, -0.08809358, -0.12963438, -0.15816608,
       -0.06265044]), 'test_mae': array([-0.05994136, -0.17731673, -0.07773784, -0.1203319 , -0.09603559,
       -0.18890638, -0.05906493, -0.12119297, -0.15544874, -0.09754702,
       -0.06615468, -0.06447785, -0.07123057, -0.06023101, -0.11895097,
       -0.04734816]), 'test_r2': array([ 0.9792216 ,  0.45303161,  0.96551039,  0.88309987,  0.80688562,
       -0.12389479,  0.98558571,  0.83643609,  0.72025529,  0.91061392,
        0.9662189 ,  0.98228861,  0.98144262,  0.94137615,  0.9265017 ,
        0.99178541]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 112, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_2': {'cluster size (%)': 22, 6: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.706905385820913, 'test_rmse': 0.8575203742467667, 'test_r2': -0.58629524431171, 'test_pearson_r': array([0.54252513]), 'test_pearson_p_value': array([1.08600753e-05]), 'test_spearman_r': 0.2530542999767252, 'test_spearman_p_value': 0.05529215171290153, 'test_kendall_r': 0.1494656037589311, 'test_kendall_p_value': 0.10242124313256218, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.01198271416278788, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 37, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 397, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.7508148841507334, 'test_rmse': 0.9046328675353983, 'test_r2': -0.7653867093185331, 'test_pearson_r': array([0.5240941]), 'test_pearson_p_value': array([2.4179833e-05]), 'test_spearman_r': 0.25929544673201416, 'test_spearman_p_value': 0.04935561240748671, 'test_kendall_r': 0.14682185184900887, 'test_kendall_p_value': 0.10826766186371788, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06991692945397764, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 25, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 586, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.7556186208127759, 'test_rmse': 0.9098420851089563, 'test_r2': -0.7857767739233334, 'test_pearson_r': array([0.5204481]), 'test_pearson_p_value': array([2.81740164e-05]), 'test_spearman_r': 0.27727789865010194, 'test_spearman_p_value': 0.03509782955942952, 'test_kendall_r': 0.17661492396934445, 'test_kendall_p_value': 0.060306191107921917, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 88, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.7202793701659874, 'test_rmse': 0.8726781146698322, 'test_r2': -0.6428703691826831, 'test_pearson_r': array([0.54310098]), 'test_pearson_p_value': array([1.05837587e-05]), 'test_spearman_r': 0.2907299031485358, 'test_spearman_p_value': 0.026828965805601006, 'test_kendall_r': 0.18569758488683924, 'test_kendall_p_value': 0.04238438525013917, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.007835754799175169, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1043, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.7396834587946906, 'test_rmse': 0.8933847320857402, 'test_r2': -0.7217582774743856, 'test_pearson_r': array([0.52773879]), 'test_pearson_p_value': array([2.07164003e-05]), 'test_spearman_r': 0.25413547499135747, 'test_spearman_p_value': 0.05422419515859551, 'test_kendall_r': 0.14490764853927093, 'test_kendall_p_value': 0.11399111967082576, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02772536102508473, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1141, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.7321943263245925, 'test_rmse': 0.884554375469552, 'test_r2': -0.6878902227273078, 'test_pearson_r': array([0.53442803]), 'test_pearson_p_value': array([1.55259533e-05]), 'test_spearman_r': 0.2602945459735025, 'test_spearman_p_value': 0.048455476545139986, 'test_kendall_r': 0.16422763869808477, 'test_kendall_p_value': 0.07272806035510608, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.024951411966683115, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 302, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.5651059475372511, 'test_ystd': 0.680851559158884, 'test_mae': 0.7497955738161002, 'test_rmse': 0.9027420706994744, 'test_r2': -0.7580146596922288, 'test_pearson_r': array([0.5243131]), 'test_pearson_p_value': array([2.39574609e-05]), 'test_spearman_r': 0.2997708060588049, 'test_spearman_p_value': 0.022246008211717776, 'test_kendall_r': 0.19191730005333096, 'test_kendall_p_value': 0.041219959421055545, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 61, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_2': {'cluster size (%)': 25, 6: {'fit_time': array([1.60838199, 1.61243224, 1.55899692, 1.56449652]), 'score_time': array([0.11965108, 0.11528897, 0.12386107, 0.12044406]), 'test_pearson_r': array([0.93863353, 0.79127192, 0.95858066, 0.97388639]), 'test_pearson_p': array([-8.00015912e-31, -4.36215587e-15, -4.53301726e-36, -1.23873611e-41]), 'test_spearman_r': array([0.91541617, 0.83216592, 0.94313724, 0.96190924]), 'test_spearman_p': array([-1.37558151e-26, -8.80101516e-18, -7.76397538e-32, -1.25535666e-36]), 'test_kendall_r': array([0.82364584, 0.77034264, 0.84921792, 0.85273801]), 'test_kendall_p': array([-4.15025497e-22, -1.31429842e-19, -2.12857499e-23, -2.99983454e-23]), 'test_rmse': array([-0.23254324, -0.42387818, -0.18317472, -0.13112974]), 'test_mae': array([-0.10962369, -0.14757673, -0.09366796, -0.08372831]), 'test_r2': array([0.87521932, 0.5768942 , 0.91409104, 0.94712339]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.97664809, 2.87573195, 2.84619546, 2.82964039]), 'score_time': array([0.12141633, 0.11857557, 0.11567831, 0.15781116]), 'test_pearson_r': array([0.94503809, 0.84085206, 0.96663696, 0.93260542]), 'test_pearson_p': array([-2.73831694e-32, -1.89638794e-18, -5.62331541e-39, -3.90029128e-29]), 'test_spearman_r': array([0.92394619, 0.87505329, 0.94627325, 0.92495622]), 'test_spearman_p': array([-5.50998121e-28, -1.59680430e-21, -1.36356842e-32, -9.73949665e-28]), 'test_kendall_r': array([0.81563707, 0.81669316, 0.81927949, 0.80387892]), 'test_kendall_p': array([-1.06392641e-21, -9.05237240e-22, -6.15427547e-22, -7.25933290e-21]), 'test_rmse': array([-0.21678929, -0.38522306, -0.16055355, -0.2099153 ]), 'test_mae': array([-0.10900342, -0.1332432 , -0.09644983, -0.11915596]), 'test_r2': array([0.87821233, 0.67516341, 0.93051909, 0.86797883]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05920658006461146, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([8.02826023, 8.0985086 , 8.53068924, 8.8226459 ]), 'score_time': array([0.11737013, 0.12947822, 0.1614995 , 0.11670804]), 'test_pearson_r': array([0.97779376, 0.97632235, 0.86007296, 0.92574206]), 'test_pearson_p': array([-1.79331178e-44, -1.32376909e-43, -4.46464053e-20, -7.11129103e-28]), 'test_spearman_r': array([0.97676504, 0.9632819 , 0.89567898, 0.94012155]), 'test_spearman_p': array([-7.35341143e-44, -1.09384046e-37, -7.50006561e-24, -1.11687872e-30]), 'test_kendall_r': array([0.88803461, 0.85659397, 0.809068  , 0.85544738]), 'test_kendall_p': array([-2.00817923e-25, -8.11952292e-24, -2.06224070e-21, -3.03557380e-23]), 'test_rmse': array([-0.14900586, -0.1295052 , -0.3084215 , -0.26045784]), 'test_mae': array([-0.09176068, -0.08823539, -0.13278767, -0.10543995]), 'test_r2': array([0.94884732, 0.95271553, 0.70672132, 0.85144374]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0022420809114951697, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.13205171, 1.11413193, 1.21149802, 1.12909079]), 'score_time': array([0.11503839, 0.11493087, 0.12587833, 0.11624813]), 'test_pearson_r': array([0.9838257 , 0.84129979, 0.86409924, 0.92638783]), 'test_pearson_p': array([-9.05262430e-49, -1.74779886e-18, -1.89673901e-20, -5.47745397e-28]), 'test_spearman_r': array([0.97426051, 0.85876953, 0.903388  , 0.92372329]), 'test_spearman_p': array([-1.78095948e-42, -5.85694518e-20, -7.52955332e-25, -1.58439605e-27]), 'test_kendall_r': array([0.88718465, 0.78149864, 0.83136718, 0.82165962]), 'test_kendall_p': array([-3.03731225e-25, -4.14642410e-20, -1.71440007e-22, -9.36083810e-22]), 'test_rmse': array([-0.10763538, -0.393762  , -0.31961642, -0.253283  ]), 'test_mae': array([-0.07007235, -0.15045545, -0.11632456, -0.12877496]), 'test_r2': array([0.96721044, 0.64483943, 0.71049985, 0.84864261]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06942094706700487, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 306, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([0.80201578, 0.79015136, 0.81208563, 0.85432577]), 'score_time': array([0.15861678, 0.11638212, 0.11303997, 0.11371708]), 'test_pearson_r': array([0.95113942, 0.89637552, 0.8718384 , 0.86055376]), 'test_pearson_p': array([-7.37696776e-34, -6.13928168e-24, -3.37950435e-21, -7.98708514e-20]), 'test_spearman_r': array([0.92059332, 0.9121327 , 0.82179476, 0.87833135]), 'test_spearman_p': array([-2.03702366e-27, -4.34036272e-26, -4.92441145e-17, -1.53399572e-21]), 'test_kendall_r': array([0.82134847, 0.83457744, 0.74493067, 0.81043541]), 'test_kendall_p': array([-5.74895053e-22, -9.96898093e-23, -2.46725753e-18, -3.36850853e-21]), 'test_rmse': array([-0.19219417, -0.29054084, -0.32495722, -0.32930436]), 'test_mae': array([-0.09988139, -0.12295477, -0.14106937, -0.12732436]), 'test_r2': array([0.90295454, 0.7917649 , 0.73666423, 0.71971771]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 252, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.59468746, 0.61796427, 0.66198397, 0.61854029]), 'score_time': array([0.10890698, 0.10919571, 0.10669971, 0.10846853]), 'test_pearson_r': array([0.90604763, 0.98819809, 0.97041574, 0.77923649]), 'test_pearson_p': array([-3.25653816e-25, -4.71537719e-53, -1.34946882e-40, -3.36532041e-14]), 'test_spearman_r': array([0.91933775, 0.97687634, 0.96330056, 0.82082703]), 'test_spearman_p': array([-3.27521529e-27, -6.33173097e-44, -1.07677350e-37, -1.01458881e-16]), 'test_kendall_r': array([0.8020295 , 0.87587495, 0.85645558, 0.74745291]), 'test_kendall_p': array([-4.63953006e-21, -7.92724769e-25, -9.01041901e-24, -3.66695676e-18]), 'test_rmse': array([-0.26181851, -0.10001909, -0.15546319, -0.45212258]), 'test_mae': array([-0.14187609, -0.06781299, -0.09841554, -0.19406808]), 'test_r2': array([0.79545032, 0.97594227, 0.93047573, 0.56397745]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.048094379354093816, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 115, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.6317184 , 2.67301869, 2.6359067 , 2.66729689]), 'score_time': array([0.11313725, 0.122545  , 0.15545464, 0.1125493 ]), 'test_pearson_r': array([0.86052594, 0.85687934, 0.95346138, 0.96002893]), 'test_pearson_p': array([-4.06012416e-20, -8.64070740e-20, -1.64837617e-34, -5.43739778e-36]), 'test_spearman_r': array([0.87728679, 0.88530466, 0.94101321, 0.94786969]), 'test_spearman_p': array([-9.36953360e-22, -1.26426782e-22, -2.38651697e-31, -1.70859170e-32]), 'test_kendall_r': array([0.80766055, 0.79701478, 0.84404467, 0.8516129 ]), 'test_kendall_p': array([-3.18173561e-21, -7.20234256e-21, -4.17534056e-23, -2.72765350e-23]), 'test_rmse': array([-0.36394354, -0.32050287, -0.18435707, -0.17920188]), 'test_mae': array([-0.12978546, -0.13126191, -0.09392466, -0.09214596]), 'test_r2': array([0.69582001, 0.67998172, 0.90865253, 0.92145207]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 112, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_3': {'cluster size (%)': 7, 6: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.3154997974168861, 'test_rmse': 0.3633179406579545, 'test_r2': -1.0527793378682277, 'test_pearson_r': array([-0.11935954]), 'test_pearson_p_value': array([0.62647001]), 'test_spearman_r': -0.2405618964003512, 'test_spearman_p_value': 0.32116480409555315, 'test_kendall_r': -0.18235294117647058, 'test_kendall_p_value': 0.27753264283082124, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.008526017465755998, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1526, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.3200273097664666, 'test_rmse': 0.3662333236274453, 'test_r2': -1.0858558727896819, 'test_pearson_r': array([-0.11668973]), 'test_pearson_p_value': array([0.63426058]), 'test_spearman_r': -0.228270412642669, 'test_spearman_p_value': 0.3472433220231751, 'test_kendall_r': -0.17058823529411762, 'test_kendall_p_value': 0.3097141340718601, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 65, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.3237116422627081, 'test_rmse': 0.36712245840762053, 'test_r2': -1.0959961750186782, 'test_pearson_r': array([-0.12846101]), 'test_pearson_p_value': array([0.60019901]), 'test_spearman_r': -0.23364077791151563, 'test_spearman_p_value': 0.3357025025865469, 'test_kendall_r': -0.1651924591363567, 'test_kendall_p_value': 0.32639925201971265, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.31767281336272224, 'test_rmse': 0.36319181626303976, 'test_r2': -1.0513543566939374, 'test_pearson_r': array([-0.13898274]), 'test_pearson_p_value': array([0.57040875]), 'test_spearman_r': -0.24934152765583842, 'test_spearman_p_value': 0.3032707704886487, 'test_kendall_r': -0.1941176470588235, 'test_kendall_p_value': 0.24770756693318663, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06784407546724408, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 27, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 238, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.3207167786521895, 'test_rmse': 0.36613636745044137, 'test_r2': -1.0847516049460917, 'test_pearson_r': array([-0.15323513]), 'test_pearson_p_value': array([0.53111338]), 'test_spearman_r': -0.24769435853777225, 'test_spearman_p_value': 0.30658109151032176, 'test_kendall_r': -0.18879138187012193, 'test_kendall_p_value': 0.26203622612465316, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05500622920762388, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 142, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.3192751054235743, 'test_rmse': 0.3656038063173404, 'test_r2': -1.0786912934514503, 'test_pearson_r': array([-0.11450568]), 'test_pearson_p_value': array([0.64066124]), 'test_spearman_r': -0.228270412642669, 'test_spearman_p_value': 0.3472433220231751, 'test_kendall_r': -0.17058823529411762, 'test_kendall_p_value': 0.3097141340718601, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 167, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.21051737654786742, 'test_ystd': 0.2535804160369793, 'test_mae': 0.3192752873745952, 'test_rmse': 0.36560399388715464, 'test_r2': -1.078693426360534, 'test_pearson_r': array([-0.11450555]), 'test_pearson_p_value': array([0.64066162]), 'test_spearman_r': -0.228270412642669, 'test_spearman_p_value': 0.3472433220231751, 'test_kendall_r': -0.17058823529411762, 'test_kendall_p_value': 0.3097141340718601, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 257, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_3': {'cluster size (%)': 7, 6: {'fit_time': array([1.65550232, 1.70449567, 1.67882681, 1.67947412, 1.72832966,
       1.7281549 , 1.69420052, 1.67977643, 1.68126202, 1.65551615,
       1.76200414, 1.73822284, 1.75490785, 1.65414238]), 'score_time': array([0.11614847, 0.11574674, 0.15819335, 0.11391068, 0.129282  ,
       0.12840199, 0.11297536, 0.1144793 , 0.11574554, 0.11459327,
       0.12607861, 0.11978078, 0.11941361, 0.18522239]), 'test_pearson_r': array([0.89922446, 0.99439865, 0.98813854, 0.98068747, 0.60485717,
       0.99315127, 0.86880341, 0.97545673, 0.93758411, 0.95068608,
       0.99066589, 0.93640919, 0.98255175, 0.98146302]), 'test_pearson_p': array([-1.65049307e-07, -4.91366231e-18, -2.83096781e-15, -1.73966771e-13,
       -6.07691210e-03, -2.70256735e-17, -1.39599027e-06, -6.13011096e-12,
       -9.51194549e-09, -1.50584976e-09, -2.81376230e-15, -1.10010260e-08,
       -4.08972606e-13, -6.61467135e-13]), 'test_spearman_r': array([0.89298246, 0.9833187 , 0.94912281, 0.95087719, 0.71403509,
       0.98245614, 0.86666667, 0.96797572, 0.94372754, 0.93188854,
       0.99122367, 0.87145081, 0.98243854, 0.96491228]), 'test_spearman_p': array([-2.69128335e-07, -5.05416645e-14, -5.88308946e-10, -4.39213996e-10,
       -5.95020140e-04, -7.73558991e-14, -1.58937749e-06, -5.03056755e-11,
       -4.23430894e-09, -1.87828793e-08, -1.72171485e-15, -2.48583141e-06,
       -4.30535934e-13, -1.03472876e-10]), 'test_kendall_r': array([0.8245614 , 0.92352941, 0.87134503, 0.87134503, 0.68421053,
       0.91812865, 0.78947368, 0.88817712, 0.86557842, 0.83006536,
       0.9573822 , 0.73443018, 0.92765165, 0.86928105]), 'test_kendall_p': array([-1.17067315e-08, -3.80976840e-08, -4.58322529e-10, -4.58322529e-10,
       -1.01712688e-05, -7.20796807e-12, -8.90628326e-08, -3.04174616e-07,
       -5.63141283e-07, -2.71335027e-08, -3.12802418e-08, -2.18253405e-05,
       -8.87180979e-08, -2.15825858e-09]), 'test_rmse': array([-0.26775094, -0.07872972, -0.13013342, -0.13257544, -0.49424313,
       -0.08019299, -0.35865887, -0.14381716, -0.2300049 , -0.18607002,
       -0.08862483, -0.21948083, -0.11529669, -0.0917978 ]), 'test_mae': array([-0.11045805, -0.04738939, -0.07935642, -0.07840201, -0.19448379,
       -0.05647862, -0.14421342, -0.06937123, -0.09467064, -0.10995095,
       -0.05682805, -0.13920211, -0.07171893, -0.06725507]), 'test_r2': array([0.79242217, 0.9862506 , 0.96446972, 0.96170111, 0.13479639,
       0.98416118, 0.72286144, 0.95033753, 0.86888653, 0.89572799,
       0.97952458, 0.85439494, 0.96086296, 0.95962928]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([3.04429507, 3.08214569, 3.03156471, 3.03998733, 3.05916905,
       3.03021431, 3.08865142, 3.03584409, 3.03646374, 2.98195815,
       3.15664101, 3.08354998, 3.03131294, 3.06448746]), 'score_time': array([0.11440873, 0.11483526, 0.1156373 , 0.15805101, 0.11411214,
       0.11675882, 0.11632156, 0.11504769, 0.11383677, 0.11575794,
       0.18433404, 0.1383884 , 0.11430383, 0.13707495]), 'test_pearson_r': array([0.98980473, 0.9173125 , 0.98847584, 0.96398259, 0.74810018,
       0.84702759, 0.9939845 , 0.98985822, 0.96084076, 0.98901782,
       0.99099549, 0.95834243, 0.98322244, 0.96146677]), 'test_pearson_p': array([-7.86298512e-16, -3.27136028e-08, -2.21786257e-15, -3.28522062e-11,
       -2.30177684e-04, -4.76486821e-06, -8.99752123e-18, -5.45153989e-15,
       -2.45851600e-10, -1.02795594e-14, -2.11265884e-15, -4.00053216e-10,
       -2.99517441e-13, -2.16542005e-10]), 'test_spearman_r': array([0.9499561 , 0.89074164, 0.95610184, 0.92631579, 0.73979823,
       0.92280702, 0.99122807, 0.97263823, 0.93395253, 0.95818288,
       0.98709358, 0.9504644 , 0.9876161 , 0.94579259]), 'test_spearman_p': array([-5.12723828e-10, -3.18448548e-07, -1.71919507e-10, -1.26686179e-08,
       -2.93937089e-04, -1.85857755e-08, -2.20085178e-16, -1.44981731e-11,
       -1.47814823e-08, -4.12268255e-10, -3.71793251e-14, -1.55976502e-09,
       -2.67561271e-14, -3.16038098e-09]), 'test_kendall_r': array([0.84117647, 0.77419688, 0.86470588, 0.80116959, 0.69208509,
       0.83625731, 0.95321637, 0.89180807, 0.83006536, 0.87869325,
       0.93115255, 0.85620915, 0.94771242, 0.83934877]), 'test_kendall_p': array([-5.46983525e-07, -3.82034206e-06, -2.61645931e-07, -4.67377304e-08,
       -3.61461714e-05, -5.55516932e-09, -1.16815227e-13, -2.53540670e-07,
       -2.71335027e-08, -3.78914056e-07, -7.34599652e-08, -5.28843419e-09,
       -1.81026609e-12, -1.22329014e-06]), 'test_rmse': array([-0.07337785, -0.26807853, -0.09791766, -0.16917986, -0.5230414 ,
       -0.37564675, -0.07540849, -0.07851991, -0.16754254, -0.09460319,
       -0.10095872, -0.15202363, -0.1155869 , -0.15637536]), 'test_mae': array([-0.04753599, -0.12212314, -0.06566907, -0.08165658, -0.20843072,
       -0.17500121, -0.0501297 , -0.06098699, -0.11407916, -0.06034236,
       -0.07074649, -0.11214658, -0.06662309, -0.10429414]), 'test_r2': array([0.97873995, 0.83472333, 0.97644491, 0.91644368, 0.45447764,
       0.68421999, 0.98751156, 0.97420897, 0.92208343, 0.97634306,
       0.97556802, 0.91592983, 0.96666512, 0.91314186]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05920658006461146, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([ 9.44903684, 10.02462626,  9.13219547,  9.50161529,  9.33832622,
        9.44158602,  9.53774166,  9.31849623,  9.80821204,  9.69268417,
        9.26508093,  9.48674154,  9.93767285, 10.00657511]), 'score_time': array([0.11898899, 0.12679601, 0.11833525, 0.12129784, 0.12476373,
       0.1289711 , 0.13870835, 0.12638545, 0.12112689, 0.1269567 ,
       0.12260342, 0.12624526, 0.13450146, 0.12543559]), 'test_pearson_r': array([0.93015526, 0.94311042, 0.98980426, 0.98700386, 0.95646783,
       0.97556235, 0.98534031, 0.43358453, 0.98298797, 0.97156465,
       0.99021563, 0.90467684, 0.83642127, 0.994418  ]), 'test_pearson_p': array([-8.14608127e-09, -1.48927936e-09, -7.86605561e-16, -6.13084888e-15,
       -1.60310795e-10, -1.26415951e-12, -1.69715158e-14, -7.22413904e-02,
       -3.34442024e-13, -1.96589653e-11, -4.09596483e-15, -2.53249758e-07,
       -1.52196590e-05, -4.65698640e-17]), 'test_spearman_r': array([0.91355867, 0.93111023, 0.98903037, 0.96972366, 0.93725327,
       0.94866179, 0.9837649 , 0.58853906, 0.97004184, 0.95665635,
       0.98915862, 0.88716784, 0.84726522, 0.98553772]), 'test_spearman_p': array([-4.70927404e-08, -7.27043428e-09, -1.46115981e-15, -7.65719604e-12,
       -3.35715126e-09, -6.34189344e-10, -4.01991254e-14, -1.01868397e-02,
       -2.96982597e-11, -5.46578066e-10, -9.27540331e-15, -9.21970008e-07,
       -9.11494735e-06, -9.19675963e-14]), 'test_kendall_r': array([0.85630867, 0.86803892, 0.93842046, 0.90322969, 0.80938764,
       0.84457841, 0.9266902 , 0.56393746, 0.9013353 , 0.86928105,
       0.94426737, 0.81074309, 0.75163399, 0.92765165]), 'test_kendall_p': array([-3.20420144e-07, -2.20656528e-07, -2.12970819e-08, -7.00361385e-08,
       -1.35872010e-06, -4.63085373e-07, -3.18217344e-08, -1.11482317e-03,
       -2.02850566e-07, -2.15825858e-09, -4.80698932e-08, -3.48443378e-06,
       -1.44239308e-06, -8.87180979e-08]), 'test_rmse': array([-0.24325796, -0.22344908, -0.11363378, -0.11229195, -0.14286445,
       -0.15210669, -0.09312606, -0.53551089, -0.12870619, -0.14430697,
       -0.09898329, -0.29787737, -0.37318102, -0.06825213]), 'test_mae': array([-0.11261276, -0.08575774, -0.0873456 , -0.06929071, -0.09571044,
       -0.0954907 , -0.06390301, -0.23275665, -0.08567809, -0.0878868 ,
       -0.05906935, -0.12221879, -0.15285043, -0.0496345 ]), 'test_r2': array([ 0.8577763 ,  0.88206775,  0.97542067,  0.97100902,  0.90162916,
        0.94924082,  0.96792311, -0.49996552,  0.96232166,  0.93451191,
        0.97957735,  0.79630665,  0.68187864,  0.98806962]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0022420809114951697, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.26474094, 1.33066559, 1.27640247, 1.26669335, 1.28605819,
       1.32677507, 1.29882479, 1.2781086 , 1.31236434, 1.29728246,
       1.28905344, 1.35142827, 1.34118748, 1.42914677]), 'score_time': array([0.11232138, 0.1264782 , 0.15614223, 0.11334443, 0.12538028,
       0.11437845, 0.12547565, 0.11846304, 0.11727881, 0.11415219,
       0.12338328, 0.13966966, 0.13037729, 0.1215446 ]), 'test_pearson_r': array([0.99410304, 0.99265459, 0.98044011, 0.44397142, 0.96451723,
       0.97727815, 0.98817614, 0.96690134, 0.74356895, 0.97782428,
       0.99409808, 0.9071196 , 0.97119389, 0.97965713]), 'test_pearson_p': array([-7.60014712e-18, -4.89217204e-17, -1.93679511e-13, -5.68818383e-02,
       -2.89833555e-11, -6.84846057e-13, -2.75594059e-15, -6.52821770e-11,
       -4.04756972e-04, -2.74321832e-12, -7.26608418e-17, -2.07389643e-07,
       -2.17802500e-11, -1.38367887e-12]), 'test_spearman_r': array([0.99165935, 0.98947368, 0.96621334, 0.68616858, 0.94736842,
       0.93859649, 0.97715441, 0.96177737, 0.81156438, 0.92363261,
       0.9876161 , 0.85964912, 0.94840041, 0.97936017]), 'test_spearman_p': array([-1.43585872e-16, -1.03053958e-15, -1.92238776e-11, -1.17908358e-03,
       -7.80082922e-10, -2.80606429e-09, -7.16901319e-13, -2.03165199e-10,
       -4.34228742e-05, -4.56845669e-08, -2.67561271e-14, -4.82799743e-06,
       -2.14803595e-09, -1.55232323e-12]), 'test_kendall_r': array([0.94705882, 0.94152047, 0.90322969, 0.64072027, 0.84795322,
       0.8245614 , 0.89679028, 0.87501894, 0.73443018, 0.84313725,
       0.93464052, 0.77777778, 0.85620915, 0.92156863]), 'test_kendall_p': array([-1.70481486e-08, -5.27929196e-13, -7.00361385e-08, -1.77476468e-04,
       -2.53233265e-09, -1.17067315e-08, -9.83316810e-08, -4.53574602e-07,
       -2.18253405e-05, -1.22726897e-08, -7.81116540e-12, -4.36097754e-07,
       -5.28843419e-09, -2.92550870e-11]), 'test_rmse': array([-0.07025277, -0.06456943, -0.12075412, -0.69957007, -0.15934538,
       -0.15937319, -0.10583855, -0.15122623, -0.43537131, -0.12583683,
       -0.06167493, -0.34694251, -0.13921712, -0.14772977]), 'test_mae': array([-0.05669361, -0.03985334, -0.07756197, -0.25892561, -0.10140599,
       -0.10402849, -0.07066297, -0.08641971, -0.1929281 , -0.07224591,
       -0.04568889, -0.19254528, -0.08576687, -0.09100553]), 'test_r2': array([ 0.98816141,  0.98519899,  0.95987999, -0.85232494,  0.92385695,
        0.95283977,  0.97457623,  0.92562615,  0.45765311,  0.95372108,
        0.98323524,  0.7653393 ,  0.94148433,  0.95845161]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06942094706700487, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 306, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([0.93617415, 0.92651796, 0.91403961, 0.93195558, 0.89897346,
       0.91466212, 0.94581366, 0.93834114, 0.89746714, 0.96016765,
       0.93340063, 0.92077684, 0.87770104, 1.01703143]), 'score_time': array([0.11259699, 0.12197661, 0.15658355, 0.11236238, 0.1135006 ,
       0.11486506, 0.12165213, 0.1555233 , 0.1183064 , 0.1343658 ,
       0.12810755, 0.11831784, 0.11514258, 0.17892575]), 'test_pearson_r': array([0.97608255, 0.89724191, 0.98757993, 0.97974573, 0.97394966,
       0.98156228, 0.64989489, 0.90516319, 0.99436913, 0.99368434,
       0.90144583, 0.9788481 , 0.84789075, 0.99662481]), 'test_pearson_p': array([-1.05472336e-12, -1.93426292e-07, -4.17828751e-15, -2.59919685e-13,
       -2.16438652e-12, -1.17660061e-13, -2.59553961e-03, -2.43478625e-07,
       -4.99258802e-17, -1.24780338e-16, -3.27202120e-07, -1.88551685e-12,
       -8.83886943e-06, -8.37838834e-19]), 'test_spearman_r': array([0.9122807 , 0.91212795, 0.97233211, 0.97849944, 0.98596491,
       0.98070175, 0.75438596, 0.89669421, 0.95041322, 0.96231298,
       0.85493042, 0.98142415, 0.89680083, 0.99380805]), 'test_spearman_p': array([-5.31127364e-08, -5.38754051e-08, -3.59198212e-12, -4.29972653e-13,
       -1.17464029e-14, -1.72884140e-13, -1.90096285e-04, -4.69587755e-07,
       -1.57244679e-09, -1.81783414e-10, -6.19280424e-06, -6.72563970e-13,
       -4.65886148e-07, -1.06556886e-16]), 'test_kendall_r': array([0.8245614 , 0.8023913 , 0.87905987, 0.90322969, 0.92982456,
       0.89473684, 0.71929825, 0.75657895, 0.83552632, 0.8524636 ,
       0.81311912, 0.90849673, 0.83006536, 0.97385621]), 'test_kendall_p': array([-1.17067315e-08, -1.85371850e-06, -1.76609611e-07, -7.00361385e-08,
       -2.06767062e-12, -6.63913300e-11, -2.51270610e-06, -1.28773955e-05,
       -1.45468681e-06, -8.32299419e-07, -2.59896801e-06, -9.76656516e-11,
       -2.71335027e-08, -5.31053037e-14]), 'test_rmse': array([-0.13290269, -0.28394907, -0.07756113, -0.12422265, -0.14452677,
       -0.13989553, -0.50324968, -0.20921455, -0.08052353, -0.07892921,
       -0.22977259, -0.12452043, -0.34707865, -0.05868893]), 'test_mae': array([-0.07623014, -0.1275377 , -0.06571779, -0.08086067, -0.07484187,
       -0.08939646, -0.17150872, -0.1369239 , -0.05149271, -0.05884807,
       -0.09287388, -0.09193208, -0.13529315, -0.04139717]), 'test_r2': array([0.95023573, 0.78876631, 0.97529807, 0.95002385, 0.94620692,
       0.95947519, 0.17899618, 0.79045787, 0.98827279, 0.98653258,
       0.77848384, 0.95686024, 0.68741477, 0.99163718]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 252, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.74822664, 0.70794535, 0.72243261, 0.77119875, 0.70234299,
       0.72101116, 0.83467436, 0.78213811, 0.72761917, 0.73187757,
       0.74539876, 0.81745672, 0.72166681, 0.78884363]), 'score_time': array([0.11948514, 0.1163168 , 0.11201549, 0.11047363, 0.11952615,
       0.11246848, 0.13711643, 0.10964346, 0.15187383, 0.11258507,
       0.11837482, 0.13299584, 0.11416769, 0.12471962]), 'test_pearson_r': array([0.81705157, 0.9461623 , 0.9986706 , 0.99224629, 0.98676419,
       0.96652992, 0.99834927, 0.9489898 , 0.96681323, 0.99472709,
       0.97814161, 0.86822068, 0.99163929, 0.76334847]), 'test_pearson_p': array([-1.95756472e-05, -9.41855876e-10, -2.44472578e-23, -7.73749941e-17,
       -7.15530843e-15, -1.77646512e-11, -1.53793205e-22, -1.96309462e-09,
       -6.66668718e-11, -2.95533974e-17, -2.44690721e-12, -2.99975658e-06,
       -1.16941348e-15, -2.28029836e-04]), 'test_spearman_r': array([0.81546699, 0.92807018, 0.99209871, 0.98242682, 0.98947368,
       0.97368421, 0.9877193 , 0.8488631 , 0.97316821, 0.97470328,
       0.98502853, 0.87764596, 0.97624019, 0.76716582]), 'test_spearman_p': array([-2.09437609e-05, -1.03850543e-08, -9.07791577e-17, -7.84537518e-14,
       -1.03053958e-15, -2.35705500e-12, -3.79790244e-15, -8.42395626e-06,
       -1.24188235e-11, -7.78922481e-12, -1.21105572e-13, -1.70877825e-06,
       -4.74047396e-12, -2.02857391e-04]), 'test_kendall_r': array([0.7197922 , 0.75438596, 0.95884012, 0.9321899 , 0.94152047,
       0.90643275, 0.91812865, 0.68441938, 0.89542484, 0.89180807,
       0.94426737, 0.77377465, 0.9013353 , 0.73443018]), 'test_kendall_p': array([-1.88707169e-05, -5.24238695e-07, -1.13214749e-08, -3.02184546e-08,
       -5.27929196e-13, -2.27996852e-11, -7.20796807e-12, -8.95515357e-05,
       -2.96242626e-10, -2.53540670e-07, -4.80698932e-08, -7.72097590e-06,
       -2.02850566e-07, -2.18253405e-05]), 'test_rmse': array([-0.2809697 , -0.16497216, -0.047657  , -0.0736982 , -0.09294426,
       -0.18574964, -0.04283729, -0.13351829, -0.16708434, -0.07195114,
       -0.13827768, -0.35934563, -0.09921375, -0.51537996]), 'test_mae': array([-0.12682503, -0.11139025, -0.03760778, -0.04916538, -0.06072092,
       -0.09047092, -0.03318847, -0.0969702 , -0.11074396, -0.05341841,
       -0.07417952, -0.15804827, -0.08210519, -0.19217985]), 'test_r2': array([0.65817105, 0.87167855, 0.99594816, 0.9837595 , 0.96773957,
       0.93336678, 0.99572955, 0.88942365, 0.91481748, 0.98916296,
       0.95002479, 0.72856538, 0.97473369, 0.49443188]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.048094379354093816, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 115, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.7745142 , 2.8568821 , 2.84806609, 2.79741883, 2.87013865,
       2.8114717 , 2.7669394 , 2.74492598, 2.92844796, 2.79191995,
       2.90550637, 2.88506055, 2.83889866, 2.97257638]), 'score_time': array([0.11413145, 0.12464905, 0.11457157, 0.11860538, 0.14691639,
       0.11415267, 0.11606884, 0.11426854, 0.11647463, 0.11286163,
       0.1384728 , 0.12117314, 0.11691403, 0.17238235]), 'test_pearson_r': array([0.99043645, 0.84553421, 0.98450574, 0.96713312, 0.47181688,
       0.99479876, 0.93750736, 0.88838758, 0.98225831, 0.99273101,
       0.99085533, 0.95661185, 0.96263781, 0.99674863]), 'test_pearson_p': array([-4.57497108e-16, -5.14743960e-06, -2.70950392e-14, -1.52515149e-11,
       -4.14021315e-02, -2.62063941e-18, -3.24617555e-09, -8.48556929e-07,
       -4.66917091e-13, -3.83083617e-16, -2.38948989e-15, -5.51005388e-10,
       -1.69794913e-10, -6.21553222e-19]), 'test_spearman_r': array([0.9521721 , 0.78734744, 0.96706276, 0.96972366, 0.57017544,
       0.99298246, 0.92584476, 0.84297566, 0.94579259, 0.98913937,
       0.98089843, 0.98555212, 0.9504644 , 0.97729618]), 'test_spearman_p': array([-3.51549176e-10, -6.30985397e-05, -1.55275433e-11, -7.65719604e-12,
       -1.08054541e-02, -3.32215984e-17, -1.33519389e-08, -1.12150301e-05,
       -3.16038098e-09, -9.40746531e-15, -8.39423191e-13, -9.12417033e-14,
       -1.55976502e-09, -3.30605345e-12]), 'test_kendall_r': array([0.85630867, 0.75519181, 0.89679028, 0.86803892, 0.61403509,
       0.95321637, 0.8211179 , 0.7697535 , 0.82623395, 0.94710295,
       0.93115255, 0.93464052, 0.84313725, 0.93464052]), 'test_kendall_p': array([-3.20420144e-07, -7.18153512e-06, -9.95204999e-08, -2.20656528e-07,
       -1.11108349e-04, -1.16815227e-13, -9.53596222e-07, -9.07720685e-06,
       -1.78800684e-06, -5.48777592e-08, -7.34599652e-08, -7.81116540e-12,
       -1.22726897e-08, -7.81116540e-12]), 'test_rmse': array([-0.09052276, -0.38019572, -0.12469511, -0.14406842, -0.54606875,
       -0.06715707, -0.19305887, -0.28519209, -0.10315937, -0.080362  ,
       -0.0942653 , -0.20237751, -0.14872458, -0.0592439 ]), 'test_mae': array([-0.06601206, -0.13694234, -0.0679269 , -0.08428782, -0.21493615,
       -0.04994336, -0.12174555, -0.13001234, -0.07469624, -0.05785005,
       -0.07594235, -0.09769248, -0.11170637, -0.04423954]), 'test_r2': array([ 0.97917926,  0.6906838 ,  0.96578977,  0.92978261, -0.31585833,
        0.98947557,  0.85682102,  0.78373918,  0.96219104,  0.9829817 ,
        0.9796369 ,  0.91105774,  0.92066441,  0.99277174]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 112, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'CO_4': {'cluster size (%)': 30, 6: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5427119442734049, 'test_rmse': 0.7377741034206722, 'test_r2': -1.6094067654575506, 'test_pearson_r': array([-0.05283919]), 'test_pearson_p_value': array([0.64810432]), 'test_spearman_r': -0.10617857868128741, 'test_spearman_p_value': 0.3580561298806759, 'test_kendall_r': -0.045854817825674035, 'test_kendall_p_value': 0.5583024298302666, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5424818137260474, 'test_rmse': 0.7311698289530255, 'test_r2': -1.562899018211001, 'test_pearson_r': array([-0.05409275]), 'test_pearson_p_value': array([0.64032779]), 'test_spearman_r': -0.12176511701376651, 'test_spearman_p_value': 0.2914529904377266, 'test_kendall_r': -0.05251781582880905, 'test_kendall_p_value': 0.505969015455301, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5429403205207665, 'test_rmse': 0.7316512153287484, 'test_r2': -1.5662748435151421, 'test_pearson_r': array([-0.05757533]), 'test_pearson_p_value': array([0.61892761]), 'test_spearman_r': -0.12184520035649725, 'test_spearman_p_value': 0.29113338161566815, 'test_kendall_r': -0.05246232947857955, 'test_kendall_p_value': 0.5060184442344218, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5435537282861869, 'test_rmse': 0.7347413821006059, 'test_r2': -1.5879982109444941, 'test_pearson_r': array([-0.05635687]), 'test_pearson_p_value': array([0.62638019]), 'test_spearman_r': -0.12109255183253985, 'test_spearman_p_value': 0.29414628437936075, 'test_kendall_r': -0.05962215959254613, 'test_kendall_p_value': 0.4488270776483966, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 58, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5429403205207665, 'test_rmse': 0.7316512153287484, 'test_r2': -1.5662748435151421, 'test_pearson_r': array([-0.05757533]), 'test_pearson_p_value': array([0.61892761]), 'test_spearman_r': -0.12184520035649725, 'test_spearman_p_value': 0.29113338161566815, 'test_kendall_r': -0.05246232947857955, 'test_kendall_p_value': 0.5060184442344218, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5429403205207665, 'test_rmse': 0.7316512153287484, 'test_r2': -1.5662748435151421, 'test_pearson_r': array([-0.05757533]), 'test_pearson_p_value': array([0.61892761]), 'test_spearman_r': -0.12184520035649725, 'test_spearman_p_value': 0.29113338161566815, 'test_kendall_r': -0.05246232947857955, 'test_kendall_p_value': 0.5060184442344218, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.37607391491969017, 'test_ystd': 0.4567226133030462, 'test_mae': 0.5429403205207665, 'test_rmse': 0.7316512153287484, 'test_r2': -1.5662748435151421, 'test_pearson_r': array([-0.05757533]), 'test_pearson_p_value': array([0.61892761]), 'test_spearman_r': -0.12184520035649725, 'test_spearman_p_value': 0.29113338161566815, 'test_kendall_r': -0.05246232947857955, 'test_kendall_p_value': 0.5060184442344218, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'ID_4': {'cluster size (%)': 33, 6: {'fit_time': array([1.50433993, 1.52748132, 1.52857208]), 'score_time': array([0.19419813, 0.16931295, 0.1653738 ]), 'test_pearson_r': array([0.93290338, 0.9419318 , 0.87341986]), 'test_pearson_p': array([-1.83689199e-39, -1.42918346e-41, -5.56875524e-28]), 'test_spearman_r': array([0.92103573, 0.95429112, 0.85289012]), 'test_spearman_p': array([-1.45159938e-36, -7.94157749e-46, -1.97872652e-25]), 'test_kendall_r': array([0.81597806, 0.85985193, 0.75161277]), 'test_kendall_p': array([-6.28538363e-29, -1.52577831e-31, -1.58927853e-24]), 'test_rmse': array([-0.23716248, -0.22261836, -0.29532564]), 'test_mae': array([-0.11683381, -0.10733072, -0.13969371]), 'test_r2': array([0.86488302, 0.8848388 , 0.73949442]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.81926751, 2.85871649, 2.74413681]), 'score_time': array([0.11738372, 0.12276173, 0.11510277]), 'test_pearson_r': array([0.8584328 , 0.91528342, 0.96058549]), 'test_pearson_p': array([-2.26535623e-26, -6.37443922e-35, -1.79187862e-48]), 'test_spearman_r': array([0.84247078, 0.93290057, 0.95140182]), 'test_spearman_p': array([-1.49883426e-24, -5.13941842e-39, -9.82240623e-45]), 'test_kendall_r': array([0.72966107, 0.84891807, 0.83640239]), 'test_kendall_p': array([-1.85117409e-23, -7.45483602e-31, -6.03515818e-30]), 'test_rmse': array([-0.35340945, -0.26639228, -0.16835666]), 'test_mae': array([-0.1644751 , -0.10956543, -0.10517067]), 'test_r2': array([0.6773003 , 0.82851251, 0.92180532]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05920658006461146, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([7.83142042, 7.50122285, 8.35955572]), 'score_time': array([0.12397456, 0.12345099, 0.11734986]), 'test_pearson_r': array([0.97144434, 0.80987386, 0.90876359]), 'test_pearson_p': array([-6.97426098e-55, -3.70224590e-21, -1.25213940e-33]), 'test_spearman_r': array([0.97327373, 0.83658652, 0.91949928]), 'test_spearman_p': array([-4.34290834e-56, -1.14928284e-23, -8.15685685e-36]), 'test_kendall_r': array([0.88475095, 0.74911097, 0.80760012]), 'test_kendall_p': array([-1.01082083e-33, -2.68963464e-24, -6.23033294e-28]), 'test_rmse': array([-0.15528376, -0.37222485, -0.27627396]), 'test_mae': array([-0.09567929, -0.16407413, -0.12884316]), 'test_r2': array([0.94289822, 0.58527565, 0.8197631 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0022420809114951697, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.07797146, 1.06228518, 1.04426837]), 'score_time': array([0.11943626, 0.11653161, 0.11451864]), 'test_pearson_r': array([0.84726723, 0.86070121, 0.93756233]), 'test_pearson_p': array([-4.47326698e-25, -2.36653627e-26, -2.74989204e-40]), 'test_spearman_r': array([0.89391322, 0.87630622, 0.92364882]), 'test_spearman_p': array([-2.30048029e-31, -2.24752693e-28, -9.63121578e-37]), 'test_kendall_r': array([0.81653052, 0.78305098, 0.805533  ]), 'test_kendall_p': array([-8.53591896e-29, -1.73821411e-26, -5.31905345e-28]), 'test_rmse': array([-0.34177213, -0.35525307, -0.23199164]), 'test_mae': array([-0.12380733, -0.15147263, -0.12700006]), 'test_r2': array([0.65817389, 0.69078126, 0.87486166]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06942094706700487, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 306, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([0.79172325, 0.8337059 , 0.86403203]), 'score_time': array([0.16332865, 0.12377119, 0.11977744]), 'test_pearson_r': array([0.9554554 , 0.83222415, 0.8934837 ]), 'test_pearson_p': array([-8.07408481e-47, -3.16076484e-23, -6.06200180e-31]), 'test_spearman_r': array([0.94043069, 0.83076299, 0.90630234]), 'test_spearman_p': array([-1.36806626e-41, -4.40702554e-23, -3.63752193e-33]), 'test_kendall_r': array([0.84174123, 0.75377025, 0.82615926]), 'test_kendall_p': array([-1.21321999e-30, -1.12695995e-24, -2.60744676e-29]), 'test_rmse': array([-0.18549012, -0.36829607, -0.28789519]), 'test_mae': array([-0.10424534, -0.15676856, -0.11705155]), 'test_r2': array([0.91262269, 0.65650591, 0.79013795]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 252, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([0.59141541, 0.62359858, 0.62171268]), 'score_time': array([0.12487555, 0.12636638, 0.12017202]), 'test_pearson_r': array([0.89099491, 0.93643839, 0.83698375]), 'test_pearson_p': array([-6.84888229e-31, -5.68410412e-40, -1.04659509e-23]), 'test_spearman_r': array([0.89455912, 0.93718066, 0.85883243]), 'test_spearman_p': array([-1.79922969e-31, -3.52414735e-40, -3.97903560e-26]), 'test_kendall_r': array([0.77156638, 0.80993722, 0.76377929]), 'test_kendall_p': array([-5.28961536e-26, -3.45641335e-28, -4.09140866e-25]), 'test_rmse': array([-0.29100951, -0.23015498, -0.3777861 ]), 'test_mae': array([-0.15932236, -0.13467913, -0.17185453]), 'test_r2': array([0.76079402, 0.85501552, 0.69365083]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.048094379354093816, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 115, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.6167295 , 2.62373543, 2.60551429]), 'score_time': array([0.11606908, 0.12135696, 0.11637473]), 'test_pearson_r': array([0.87648755, 0.79176929, 0.98787444]), 'test_pearson_p': array([-1.01534021e-28, -1.13156994e-19, -9.80615085e-70]), 'test_spearman_r': array([0.89352113, 0.82753578, 0.985069  ]), 'test_spearman_p': array([-2.66854419e-31, -9.08138791e-23, -5.79697331e-66]), 'test_kendall_r': array([0.8167984 , 0.74032528, 0.90064512]), 'test_kendall_p': array([-8.19162808e-29, -8.17487733e-24, -1.53158525e-34]), 'test_rmse': array([-0.32050782, -0.39494113, -0.10168096]), 'test_mae': array([-0.12177023, -0.16460376, -0.07431635]), 'test_r2': array([0.74032889, 0.54195175, 0.97460394]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 112, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}}, 'overall data shape': {'targets_shape': (259, 1), 'training_features_shape': (259, 522)}}
Trimer_scaler
Filename: (ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_log Rg (nm)/KM5 polymer_solvent HSP and polysize cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_log Rg (nm)/KM5 polymer_solvent HSP and polysize cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_predictions.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/OOD_target_log Rg (nm)/KM5 polymer_solvent HSP and polysize cluster/Trimer_scaler/(ECFP3.count.512-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard_ClusterTruth.json
Done Saving scores!
------------------------------ 
Plotted Comparitive Cluster Scores!
______________________________ 
Plotted Parity Plots!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c020n02>
Subject: Job 295233: <XGBR_log Rg (nm)_ECFP_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311> in cluster <Hazel> Done

Job <XGBR_log Rg (nm)_ECFP_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311> was submitted from host <c040n02> by user <sdehgha2> in cluster <Hazel> at Tue Mar 11 19:12:46 2025
Job was executed on host(s) <8*c020n02>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Wed Mar 12 17:03:07 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Wed Mar 12 17:03:07 2025
Terminated at Thu Mar 13 07:37:41 2025
Results reported at Thu Mar 13 07:37:41 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input



#BSUB -n 8
#BSUB -W 72:05
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "XGBR_log Rg (nm)_ECFP_Trimer_KM5 polymer_solvent HSP and polysize cluster_20250311"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_log Rg (nm)_ECFP_Trimer_3_count_KM5 polymer_solvent HSP and polysize cluster_20250311.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_log Rg (nm)_ECFP_Trimer_3_count_KM5 polymer_solvent HSP and polysize cluster_20250311.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../make_ood_prediction.py --target_features "log Rg (nm)"                                       --representation "ECFP"                                       --regressor_type "XGBR"                                       --radius "3"                                       --vector "count"                                       --oligomer_representation "Trimer"                                       --numerical_feats 'Mw (g/mol)' 'PDI' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" 'solvent dP' 'solvent dD' 'solvent dH'                                       --clustering_method "KM5 polymer_solvent HSP and polysize cluster" 



------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   206715.09 sec.
    Max Memory :                                 6 GB
    Average Memory :                             5.79 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               10.00 GB
    Max Swap :                                   2 GB
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   52475 sec.
    Turnaround time :                            131095 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250311/XGBR_log Rg (nm)_ECFP_Trimer_3_count_KM5 polymer_solvent HSP and polysize cluster_20250311.err> for stderr output of this job.

