


-------------------------------------------------- 
OOD TEST ON DPPDTT



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 66), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 529), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04494141046178844), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 509), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010442049399135196), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1061), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004866083656078861), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 1446), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031432895244259365), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021563374205135397), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06982727477085576), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1145), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 810), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07040437995586354), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 118), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007120458339658644), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 788), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05307526794966453), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03897794765782249), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 304), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003101460525233387), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004238198955723145), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1208), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07341428081539447), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 355), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 13), ('regressor__regressor__n_estimators', 995), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 56), ('regressor__regressor__n_estimators', 168), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002899304540049985), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1477), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07045920741450169), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 365), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0959800994832278), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04786776304179686), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 396), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00222861887490647), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 841), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014681265110093596), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022879770453922633), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022961115506906285), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07206558114101085), ('regressor__regressor__max_depth', 9561), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05562895413064195), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 234), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05215431669222614), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06028438922578745), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 99), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.027066000180772876), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 404), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03728663411105223), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06276235085298243), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03073602888273684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 483), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04750303463515404), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 480), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025301890501015077), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 172), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770052924189587), ('regressor__regressor__max_depth', 549), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07284648458108575), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 297), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06179465952282426), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06679278116419729), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 254), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1343), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06618871407432367), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1305), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029277433369518636), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1642), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014283609484266872), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 899), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0555620846263425), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1052), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019914124408403323), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 349), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.030928487992931655), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 285), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 154), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01193846495860444), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 287), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06586578321325254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1231), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0049011873831238985), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05617045774903145), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 710), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON MBL-PPV



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054168422644288), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06338639950834661), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 999), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08420620799427943), ('regressor__regressor__max_depth', 44), ('regressor__regressor__n_estimators', 80), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 435), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05451812156627793), ('regressor__regressor__max_depth', 15), ('regressor__regressor__n_estimators', 1226), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004866083656078861), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 1446), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031432895244259365), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021563374205135397), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1181), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002720071706043383), ('regressor__regressor__max_depth', 1461), ('regressor__regressor__n_estimators', 1066), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0730707048162671), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 686), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05307526794966453), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03897794765782249), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 304), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003101460525233387), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004238198955723145), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1208), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09970009638858762), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 299), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05912088366048898), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.046337299226824946), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 230), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07045920741450169), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 365), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0959800994832278), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04786776304179686), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06056686735896652), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 133), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02256825001011882), ('regressor__regressor__max_depth', 522), ('regressor__regressor__n_estimators', 132), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0345503406258735), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 95), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035329127612135566), ('regressor__regressor__max_depth', 366), ('regressor__regressor__n_estimators', 164), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0686974249048903), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 194), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022961115506906285), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07206558114101085), ('regressor__regressor__max_depth', 9561), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05562895413064195), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 234), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05215431669222614), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 421), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008154585005342186), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 581), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02808287184621455), ('regressor__regressor__max_depth', 236), ('regressor__regressor__n_estimators', 102), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02758995223597283), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 156), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03073602888273684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 483), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04750303463515404), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 480), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025301890501015077), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 172), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770052924189587), ('regressor__regressor__max_depth', 549), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06807115994721644), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 418), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06449854041502759), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009517318254446277), ('regressor__regressor__max_depth', 4748), ('regressor__regressor__n_estimators', 306), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04762311975107657), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 645), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1343), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06618871407432367), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1305), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029277433369518636), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1642), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05548680669877189), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 433), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07323602320841366), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 66), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08691570105115372), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 207), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07560779670583023), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026912744354702037), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 277), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01193846495860444), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 287), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06586578321325254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1231), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0049011873831238985), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05617045774903145), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 710), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON MEH-PPV



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05944158031888009), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07953877988854295), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1587), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06123173789268905), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 80), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08957543625401528), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 1010), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.051583874941570594), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004866083656078861), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 1446), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031432895244259365), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021563374205135397), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05534062881781631), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07693173041362837), ('regressor__regressor__max_depth', 269), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 104), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.040067327355428034), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 99), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07693173041362837), ('regressor__regressor__max_depth', 269), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05307526794966453), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03897794765782249), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 304), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003101460525233387), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004238198955723145), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1208), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 60), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05115439841077615), ('regressor__regressor__max_depth', 8317), ('regressor__regressor__n_estimators', 733), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04313587726372334), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 99), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026130484661874794), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07045920741450169), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 365), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0959800994832278), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04786776304179686), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009708548134788669), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0697239924512357), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 420), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03232731580710158), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 410), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022961115506906285), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07206558114101085), ('regressor__regressor__max_depth', 9561), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05562895413064195), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 234), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05215431669222614), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014798641065097335), ('regressor__regressor__max_depth', 41), ('regressor__regressor__n_estimators', 720), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 235), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03073602888273684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 483), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04750303463515404), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 480), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025301890501015077), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 172), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770052924189587), ('regressor__regressor__max_depth', 549), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.035589362848611875), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 295), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06449854041502759), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08419552421842763), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1343), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06618871407432367), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1305), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029277433369518636), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1642), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09755850821019131), ('regressor__regressor__max_depth', 9731), ('regressor__regressor__n_estimators', 1471), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.048971140228945005), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 690), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 205), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023238699472127827), ('regressor__regressor__max_depth', 250), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01193846495860444), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 287), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06586578321325254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1231), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0049011873831238985), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05617045774903145), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 710), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON P3(4MP)T



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 236), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06757251967855372), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 119), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0998931981741248), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004012062709244376), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004866083656078861), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 1446), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031432895244259365), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021563374205135397), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06957490189968894), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 822), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011322479619077858), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1080), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 192), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0038816420649909478), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05307526794966453), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03897794765782249), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 304), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003101460525233387), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004238198955723145), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1208), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.051087178109190695), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 235), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05995264635277555), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 138), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.059815623596138026), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 323), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0026429236418846975), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07045920741450169), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 365), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0959800994832278), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04786776304179686), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06792476736201467), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011104439047745357), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 390), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05576524683130239), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 80), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010153026741866614), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008890946302118282), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1006), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022961115506906285), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07206558114101085), ('regressor__regressor__max_depth', 9561), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05562895413064195), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 234), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05215431669222614), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.020081807191485453), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02281847650309257), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007276202192557101), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 438), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005162070939512264), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03073602888273684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 483), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04750303463515404), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 480), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025301890501015077), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 172), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770052924189587), ('regressor__regressor__max_depth', 549), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.023897382708672803), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 560), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04724894897926896), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 627), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004461135522580157), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 813), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 69), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1343), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06618871407432367), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1305), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029277433369518636), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1642), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04198144717756793), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 470), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0980295968457423), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 464), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029485896440322994), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 280), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1525), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01193846495860444), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 287), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06586578321325254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1231), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0049011873831238985), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05617045774903145), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 710), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON P3DDT



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06073574522924932), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006977530915521485), ('regressor__regressor__max_depth', 1173), ('regressor__regressor__n_estimators', 1992), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08560620050589926), ('regressor__regressor__max_depth', 28), ('regressor__regressor__n_estimators', 693), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007991487692226311), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1307), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004866083656078861), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 1446), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031432895244259365), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021563374205135397), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.080623744102566), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 76), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05621170962538143), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0215565262643757), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 263), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.016863736280254185), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029883581436771455), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 615), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05307526794966453), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03897794765782249), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 304), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003101460525233387), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004238198955723145), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1208), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.018863514879080744), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 593), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06085120220226599), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07173943576532521), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 165), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005726386027978289), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03252108800594495), ('regressor__regressor__max_depth', 4466), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07045920741450169), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 365), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0959800994832278), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04786776304179686), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005349055995808477), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1211), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002147248274463946), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1254), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08342930875468879), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1346), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004923247701737467), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1445), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022961115506906285), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07206558114101085), ('regressor__regressor__max_depth', 9561), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05562895413064195), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 234), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05215431669222614), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 687), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03478959020683297), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 143), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025711455859465385), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03073602888273684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 483), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04750303463515404), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 480), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025301890501015077), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 172), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770052924189587), ('regressor__regressor__max_depth', 549), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0054932153099903624), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 846), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07191430182376055), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 195), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08881308669348457), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 60), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.059205928316857816), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1521), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 567), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1343), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06618871407432367), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1305), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029277433369518636), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1642), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08683676771156115), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 130), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07959893116692056), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 66), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1306), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06062984245473728), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1017), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01193846495860444), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 287), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06586578321325254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1231), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0049011873831238985), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05617045774903145), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 710), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON P3EHT



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08879188946228632), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 72), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.036867678393115215), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 574), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015778290236563717), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09586041708309316), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 198), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011811999568085011), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004866083656078861), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 1446), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031432895244259365), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021563374205135397), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07763925476534628), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 70), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01763086144760758), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 419), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004030190951794684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05307526794966453), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03897794765782249), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 304), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003101460525233387), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004238198955723145), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1208), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 257), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006504250426414354), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1584), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06645083650590196), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 858), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002593061262119465), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0477745908838267), ('regressor__regressor__max_depth', 4958), ('regressor__regressor__n_estimators', 672), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07045920741450169), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 365), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0959800994832278), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04786776304179686), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06750714725465827), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 533), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014074744191597545), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 353), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03601967858841674), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 89), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 84), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007720372304436934), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1889), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022961115506906285), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07206558114101085), ('regressor__regressor__max_depth', 9561), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05562895413064195), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 234), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05215431669222614), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0723633287628948), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 598), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021318021874068096), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0036967698445977905), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03073602888273684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 483), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04750303463515404), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 480), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025301890501015077), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 172), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770052924189587), ('regressor__regressor__max_depth', 549), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06991409834707613), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012398217926728862), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002543030855230258), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1510), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022053511853156243), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1343), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06618871407432367), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1305), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029277433369518636), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1642), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07089808389256491), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 135), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.016828491827005826), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 391), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017347914143161725), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 308), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07411404569767845), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 134), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01193846495860444), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 287), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06586578321325254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1231), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0049011873831238985), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05617045774903145), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 710), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON P3EOT



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1624), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06716790973375672), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 437), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0347274046454804), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 217), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0983744156587676), ('regressor__regressor__max_depth', 3175), ('regressor__regressor__n_estimators', 1026), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004866083656078861), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 1446), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004866083656078861), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 1446), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031432895244259365), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021563374205135397), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034769668589043685), ('regressor__regressor__max_depth', 2287), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 210), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029797991703429073), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05307526794966453), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03897794765782249), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 304), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003101460525233387), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004238198955723145), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1208), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06148176191201415), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 137), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022571570784210033), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021714936157880304), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07045920741450169), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 365), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0959800994832278), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04786776304179686), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011152533012044354), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1316), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015153541157800274), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1314), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07433614140076082), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.055587348567603244), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006089319712635417), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022961115506906285), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07206558114101085), ('regressor__regressor__max_depth', 9561), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05562895413064195), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 234), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05215431669222614), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07310532166986229), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 617), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.036175345763781175), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 143), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07521266737417473), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 243), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03073602888273684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 483), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04750303463515404), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 480), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025301890501015077), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 172), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770052924189587), ('regressor__regressor__max_depth', 549), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 60), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 3112), ('regressor__regressor__n_estimators', 265), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0026401548169232595), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1582), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002693835777963991), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1479), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004384516361048555), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1135), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1343), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06618871407432367), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1305), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029277433369518636), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1642), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0647892553555576), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0727880237480246), ('regressor__regressor__max_depth', 502), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025110050741759458), ('regressor__regressor__max_depth', 19), ('regressor__regressor__n_estimators', 849), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04938559518107501), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 260), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0676333196555775), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 358), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01193846495860444), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 287), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06586578321325254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1231), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0049011873831238985), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05617045774903145), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 710), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON P3OT



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06174261929305842), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 258), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.050107484969400734), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 232), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.043923250363361116), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 204), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.049575122853857526), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 181), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004866083656078861), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 1446), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031432895244259365), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021563374205135397), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0032009225187528694), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1387), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 999), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 81), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0922066390828013), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 393), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05307526794966453), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03897794765782249), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 304), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003101460525233387), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004238198955723145), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1208), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014712975971010449), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 949), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06413242936484953), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04621632243814567), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 92), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 674), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08759133117991862), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07045920741450169), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 365), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0959800994832278), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04786776304179686), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 338), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01298928353610528), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 423), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020774896282194054), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03325884144276033), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 432), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009457742543756956), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022961115506906285), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07206558114101085), ('regressor__regressor__max_depth', 9561), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05562895413064195), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 234), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05215431669222614), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07012830360137061), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 532), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008766667669503627), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0770538992958912), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 332), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004775900144253944), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06727254817971835), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 64), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03073602888273684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 483), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04750303463515404), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 480), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025301890501015077), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 172), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770052924189587), ('regressor__regressor__max_depth', 549), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0379783262289468), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 201), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009206128878468998), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1339), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.054219416977239115), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 691), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1343), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06618871407432367), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1305), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029277433369518636), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1642), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1183), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06449783053541763), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1207), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04674894144683445), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01193846495860444), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 287), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06586578321325254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1231), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0049011873831238985), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05617045774903145), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 710), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON P7DPF



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07684940721159128), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 144), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 673), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08188934462720603), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 239), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0027735328342524566), ('regressor__regressor__max_depth', 171), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004866083656078861), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 1446), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031432895244259365), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021563374205135397), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.049136048644352066), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011856675578279312), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004035689252798995), ('regressor__regressor__max_depth', 8005), ('regressor__regressor__n_estimators', 1062), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08086762506969984), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 68), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03028249645693748), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05307526794966453), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03897794765782249), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 304), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003101460525233387), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004238198955723145), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1208), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07520495243213862), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1360), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07352481813242628), ('regressor__regressor__max_depth', 1264), ('regressor__regressor__n_estimators', 1246), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06653771342972334), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.056807170156263465), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1127), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0028255804537578953), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1346), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07045920741450169), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 365), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0959800994832278), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04786776304179686), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07248337630792247), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 406), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04751760611971619), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010161970578227233), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06681291808526543), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 171), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003357192846861841), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022961115506906285), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07206558114101085), ('regressor__regressor__max_depth', 9561), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05562895413064195), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 234), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05215431669222614), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07467407076374206), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 654), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 406), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017730686329708884), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 178), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0037725288559993233), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 86), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03073602888273684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 483), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04750303463515404), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 480), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025301890501015077), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 172), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770052924189587), ('regressor__regressor__max_depth', 549), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011193657846529426), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 532), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03213852485169173), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1192), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06534654337748008), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 341), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04785803545764381), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 70), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 71), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1343), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06618871407432367), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1305), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029277433369518636), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1642), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06556478290354344), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 134), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01954658524074211), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011735119717520552), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05895098799799757), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 400), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007352559278238526), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1260), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01193846495860444), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 287), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06586578321325254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1231), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0049011873831238985), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05617045774903145), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 710), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON PBTTT-C14



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06070286485834513), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1503), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0642468786364765), ('regressor__regressor__max_depth', 51), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06817781072643907), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 68), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052960375410332564), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.047847701737290735), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1096), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004866083656078861), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 1446), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031432895244259365), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021563374205135397), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007054662930336105), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1666), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003300055942924796), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1693), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07785287403283954), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 86), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07693173041362837), ('regressor__regressor__max_depth', 269), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05307526794966453), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03897794765782249), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 304), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003101460525233387), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004238198955723145), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1208), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 101), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020160887940951387), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05130457792230482), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0975016665681674), ('regressor__regressor__max_depth', 14), ('regressor__regressor__n_estimators', 156), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07045920741450169), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 365), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0959800994832278), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04786776304179686), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 90), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007273787433845581), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 1154), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 447), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06488294260471365), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 174), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009105680771768737), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 492), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022961115506906285), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07206558114101085), ('regressor__regressor__max_depth', 9561), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05562895413064195), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 234), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05215431669222614), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770052924189587), ('regressor__regressor__max_depth', 549), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05635802720263038), ('regressor__regressor__max_depth', 16), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06632110013028887), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 290), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03073602888273684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 483), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04750303463515404), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 480), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025301890501015077), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 172), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770052924189587), ('regressor__regressor__max_depth', 549), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 3111), ('regressor__regressor__n_estimators', 262), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019728489426541315), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 522), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04218102786594297), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 199), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06777620989807252), ('regressor__regressor__max_depth', 7432), ('regressor__regressor__n_estimators', 686), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010756946351347), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1267), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1343), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06618871407432367), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1305), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029277433369518636), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1642), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.030549631684078208), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 1379), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06944698031500307), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1244), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0027494796612464864), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05078487552542388), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002544674426476699), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01193846495860444), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 287), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06586578321325254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1231), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0049011873831238985), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05617045774903145), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 710), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON PFO



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 936), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07580815375356535), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014148228105829865), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1392), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04328379631844565), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 442), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07965954688861472), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 133), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004866083656078861), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 1446), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031432895244259365), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021563374205135397), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0829230411790203), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 81), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09926560655949428), ('regressor__regressor__max_depth', 5183), ('regressor__regressor__n_estimators', 74), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.042986726511434044), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 956), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05307526794966453), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03897794765782249), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 304), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003101460525233387), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004238198955723145), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1208), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09543943377576625), ('regressor__regressor__max_depth', 4505), ('regressor__regressor__n_estimators', 1948), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.020959029823426165), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 73), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07352481813242628), ('regressor__regressor__max_depth', 1264), ('regressor__regressor__n_estimators', 1246), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08308944078445366), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07045920741450169), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 365), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0959800994832278), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04786776304179686), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07318237430577129), ('regressor__regressor__max_depth', 12), ('regressor__regressor__n_estimators', 420), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.061482503564799174), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06767935825048389), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 625), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0654128725506301), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 394), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022961115506906285), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07206558114101085), ('regressor__regressor__max_depth', 9561), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05562895413064195), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 234), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05215431669222614), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06852541996542266), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 217), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014067712992849073), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07810260521278026), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05078133262081427), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 141), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 155), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03073602888273684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 483), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04750303463515404), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 480), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025301890501015077), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 172), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770052924189587), ('regressor__regressor__max_depth', 549), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0354545840967627), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 296), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04700897687555461), ('regressor__regressor__max_depth', 6719), ('regressor__regressor__n_estimators', 130), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06924331430165374), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 156), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06141706769546402), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1353), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1343), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06618871407432367), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1305), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029277433369518636), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1642), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 112), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03425519828017914), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 166), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05571025126810194), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 571), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04115799461252383), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1047), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01193846495860444), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 287), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06586578321325254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1231), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0049011873831238985), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05617045774903145), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 710), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON PPFOH



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1413), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05792632611063446), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 437), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07974079746665132), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 73), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004866083656078861), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 1446), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031432895244259365), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021563374205135397), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05062924773908284), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034769668589043685), ('regressor__regressor__max_depth', 2287), ('regressor__regressor__n_estimators', 1119), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010070624944445567), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 360), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07871044570656775), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1388), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017050427000035458), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 754), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05307526794966453), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03897794765782249), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 304), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003101460525233387), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004238198955723145), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1208), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 508), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07352481813242628), ('regressor__regressor__max_depth', 1264), ('regressor__regressor__n_estimators', 1246), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06307139295001246), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 719), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07045920741450169), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 365), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0959800994832278), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04786776304179686), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06774188478195048), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 446), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0024322269600283966), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02275223925408148), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1024), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.021955995236068043), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022961115506906285), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07206558114101085), ('regressor__regressor__max_depth', 9561), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05562895413064195), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 234), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05215431669222614), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032585288141947236), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 153), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0035059519319398423), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 927), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0322523548622412), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 798), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 248), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03073602888273684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 483), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04750303463515404), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 480), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025301890501015077), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 172), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770052924189587), ('regressor__regressor__max_depth', 549), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06399849112759502), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 361), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.028229825307618573), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1239), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00700951800230468), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06232659688981066), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.027480789058768457), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1134), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1343), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06618871407432367), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1305), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029277433369518636), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1642), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.056783010545821064), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022546124862567857), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1929), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 262), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 75), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07603745216888781), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 595), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01193846495860444), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 287), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06586578321325254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1231), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0049011873831238985), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05617045774903145), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 710), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OOD TEST ON rr-P3HT



-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 194), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 129), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07289948420345638), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 147), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05338560575403169), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1373), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0499840076009124), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 731), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004866083656078861), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 1446), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031432895244259365), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021563374205135397), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08646479880356304), ('regressor__regressor__max_depth', 2326), ('regressor__regressor__n_estimators', 847), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09895164043430502), ('regressor__regressor__max_depth', 697), ('regressor__regressor__n_estimators', 225), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06564038904543787), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1143), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006458867195030569), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1267), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07544745038565957), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05307526794966453), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03897794765782249), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 304), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003101460525233387), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004238198955723145), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1208), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 90), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.060258855720141384), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1485), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021048098895895357), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1623), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07045920741450169), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 365), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0959800994832278), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 484), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04786776304179686), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 125), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012424474587191382), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 529), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.040478414774375575), ('regressor__regressor__max_depth', 77), ('regressor__regressor__n_estimators', 224), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.045145196137571515), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 96), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 558), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.08024897469325626), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1358), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022961115506906285), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07206558114101085), ('regressor__regressor__max_depth', 9561), ('regressor__regressor__n_estimators', 78), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05562895413064195), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 234), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05215431669222614), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05913781436124809), ('regressor__regressor__max_depth', 2125), ('regressor__regressor__n_estimators', 1123), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.040278632524721567), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026658930153756533), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 467), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.053608020830441076), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 426), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03073602888273684), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 483), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04750303463515404), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 480), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025301890501015077), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 172), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03770052924189587), ('regressor__regressor__max_depth', 549), ('regressor__regressor__n_estimators', 220), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 110), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03183032191073841), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 130), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004086151207018664), ('regressor__regressor__max_depth', 9842), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04467723209793772), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 120), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 107), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1343), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06618871407432367), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1305), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0029277433369518636), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1642), ('regressor__regressor__n_jobs', -2)])





-------------------------------------------------- 
OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 231), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010521546017160871), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 399), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05997184526532777), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1091), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07188721073892466), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])




Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 66), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01193846495860444), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 287), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06586578321325254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1231), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0049011873831238985), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05617045774903145), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 710), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.1), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])


Filename: (MACCS-Xn-Mw-PDI-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_XGBR_Standard
{'CO_DPPDTT': {'cluster size (%)': 1, 6: {'test_mad': 0.0023139317, 'test_ystd': 0.002653922, 'test_mae': 0.20970068299961456, 'test_rmse': 0.22624274167936853, 'test_r2': -6.111437983652975, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 529, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.006254554, 'test_ystd': 0.0067129596, 'test_mae': 0.18406500343672802, 'test_rmse': 0.2007712927191167, 'test_r2': -4.6003007146252, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07040437995586354, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 118, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.009823759, 'test_ystd': 0.010539649, 'test_mae': 0.22601713661543896, 'test_rmse': 0.24257408109405323, 'test_r2': -7.175172150964103, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 56, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 168, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.0027115345, 'test_ystd': 0.00303565, 'test_mae': 0.28248304053338735, 'test_rmse': 0.29469198562818266, 'test_r2': -11.065484526523674, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.014681265110093596, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.009816806, 'test_ystd': 0.011108486, 'test_mae': 0.18908939683628448, 'test_rmse': 0.20777100937732762, 'test_r2': -4.997607158835477, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.027066000180772876, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 404, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.009355426, 'test_ystd': 0.009922984, 'test_mae': 0.22990316077264517, 'test_rmse': 0.24661309336409942, 'test_r2': -7.44968226587959, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.006480376, 'test_ystd': 0.0071443566, 'test_mae': 0.2778480641463634, 'test_rmse': 0.2898529410277082, 'test_r2': -10.67249078210895, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.019914124408403323, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 349, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_mad_mean': 0.006679483789152333, 'test_mad_std': 0.002974001600446523, 'test_ystd_mean': 0.0073025724517979795, 'test_ystd_std': 0.0032075681676676437, 'test_mae_mean': 0.22844378362006598, 'test_mae_std': 0.03632903272272242, 'test_rmse_mean': 0.24407387784140805, 'test_rmse_std': 0.03417930456056215, 'test_r2_mean': -7.4388822260842815, 'test_r2_std': 2.374194761287038}}, 'ID_DPPDTT': {'cluster size (%)': 1, 6: {'fit_time': array([12.4485178 , 11.81039834, 12.84411168,  7.12447166,  7.22621608,
       13.35934711, 13.75528526, 12.92550611, 13.12318873,  7.34694982,
       13.7279737 , 13.30863452, 13.37009335,  7.18670535,  6.8905251 ,
       13.4419632 , 13.70690918, 12.99549437,  6.88074064, 13.85199499,
        6.66100907,  6.68028212,  7.00155425,  7.02658033,  7.21710992,
        7.18383884, 13.27265024, 13.15699697, 13.49929857, 13.79212379,
       12.11802149, 10.66998911, 13.66144824, 12.88274717, 13.57033205,
       14.1687789 ,  6.87763762,  6.79017377, 13.19687867, 12.96812701,
       12.16215253, 12.7995522 ,  8.17919016,  7.06092262,  7.01778007,
        7.17073941,  6.74796867,  6.74147654,  7.12641168,  7.13134122,
        7.11056757,  6.98973727, 11.96602654, 12.86353016, 12.06844926,
       13.94735336, 12.40993762, 13.26889658, 13.76989031, 13.95356679,
       12.06848526, 13.8755374 , 13.86886525, 12.85311031, 12.49378181,
        6.7135148 ,  6.73595643, 13.25242853,  7.042799  ,  7.10007262,
        7.01487756,  7.05087066,  6.67911983,  6.73656344,  7.29504728,
        7.10143828,  7.01009703,  8.94754696,  7.09870076,  7.40794063,
        7.7001245 ,  7.34896064,  7.20541024,  7.11650014,  7.60472226,
        6.38027024]), 'score_time': array([0.17026401, 0.16977358, 0.17179132, 0.08497   , 0.08432126,
       0.16785073, 0.24188185, 0.17181396, 0.17524481, 0.08226347,
       0.22003579, 0.16149497, 0.16898346, 0.07941151, 0.08118486,
       0.16968012, 0.1680181 , 0.19636822, 0.08151555, 0.10729694,
       0.08136654, 0.08202577, 0.08326864, 0.07925534, 0.08058381,
       0.08248639, 0.16694665, 0.17839074, 0.17013669, 0.16019797,
       0.16706467, 0.17958117, 0.16162515, 0.16625857, 0.1608727 ,
       0.16586709, 0.08104777, 0.08179903, 0.15861082, 0.17647123,
       0.17460585, 0.18512869, 0.08100963, 0.08159518, 0.08009362,
       0.08081555, 0.07929897, 0.07921958, 0.0785017 , 0.07835817,
       0.08006835, 0.07950425, 0.18165278, 0.16458631, 0.17110586,
       0.1724391 , 0.17176366, 0.15453815, 0.07572293, 0.16436791,
       0.07365084, 0.1674006 , 0.07847714, 0.16782594, 0.16342831,
       0.07836699, 0.0793438 , 0.07283306, 0.07964849, 0.07797885,
       0.07878399, 0.07967329, 0.08051777, 0.08333421, 0.0817008 ,
       0.07839131, 0.07917643, 0.0933516 , 0.08338833, 0.07234073,
       0.07427955, 0.0787034 , 0.07157993, 0.0720408 , 0.07136273,
       0.07310224]), 'test_pearson_r': array([ 0.99211041,  0.99799925,  0.99987596,  0.99585519,  0.30942039,
        0.84471014,  0.98158434,  0.99987724,  0.99916267,  0.99573054,
        0.99856857,  0.98402803,  0.99974015,  0.99973117,  0.97960704,
        0.99342426,  0.99994326,  0.99994598,  0.99877193,  0.86309001,
        0.97442196,  0.99419019,  0.86827863,  0.99869132,  0.99863166,
        0.39935189, -0.50350858, -0.72893075,  0.99724895,  0.99414316,
        0.99982759,  0.95309492,  0.9995782 ,  0.99076421,  0.95806348,
        0.99999982,  0.9998329 ,  0.99717675,  0.94437682,  0.99792731,
        0.85692945,  0.75582619,  0.55617572,  0.99933867,  0.99103353,
        0.99988585,  0.99441284,  0.57614796,  0.99996935,  0.76384021,
        0.99848338,  0.21627112,  0.98737401,  0.99968158,  0.9999805 ,
        0.99999   ,  0.9996479 ,  0.99848841,  0.99884674,  0.99994961,
        0.99977622,  0.94621837,  0.99371148,  0.99978511,  0.99955669,
        0.98456958,  0.99906604,  0.99546764,  0.97362578,  0.96844438,
        0.98035305,  0.99434   ,  0.99269336,  0.39532785,  0.96721879,
        0.9990907 ,  0.99976327,  0.50248639,  0.99967005,  0.99875237,
        0.99336789,  0.99976922,  0.98113456,  0.99117605,  0.99208604,
        0.9992177 ]), 'test_spearman_r': array([ 1.       ,  1.       ,  1.       ,  1.       ,  0.5      ,
        0.5      ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  0.5      ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        0.5      , -0.5      , -0.5      ,  1.       ,  0.5      ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        0.5      ,  0.5      ,  0.5      ,  1.       ,  1.       ,
        1.       ,  1.       ,  0.5      ,  1.       ,  0.5      ,
        1.       ,  0.5      ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  0.5      ,  1.       ,  1.       ,  1.       ,
        0.5      ,  1.       ,  1.       ,  1.       ,  1.       ,
        0.5      ,  1.       ,  1.       ,  0.5      ,  0.5      ,
        1.       ,  1.       ,  0.5      ,  0.8660254,  1.       ,
        1.       ,  1.       ,  1.       ,  0.5      ,  1.       ,
        1.       ]), 'test_rmse': array([-0.11965989, -0.07293638, -0.05916423, -0.07390296, -0.65443477,
       -0.35833954, -0.15238856, -0.03273061, -0.03587019, -0.08545156,
       -0.03748014, -0.1943485 , -0.05525032, -0.04083425, -0.1040106 ,
       -0.10872261, -0.07040709, -0.06173769, -0.03080174, -0.03885909,
       -0.17988819, -0.31295928, -0.11908995, -0.08109981, -0.0688422 ,
       -0.12109381, -0.2844437 , -0.90616659, -0.07767373, -0.10413215,
       -0.08694124, -0.23715253, -0.03042744, -0.10534401, -0.02291021,
       -0.03092937, -0.03947071, -0.11310489, -0.12998041, -0.08281812,
       -0.08546882, -0.83444451, -0.1940036 , -0.04853203, -0.09230142,
       -0.03233574, -0.06995722, -0.32711645, -0.0260421 , -0.1033514 ,
       -0.04022371, -0.55589608, -0.09029745, -0.09276959, -0.05877605,
       -0.02241222, -0.08868089, -0.0947638 , -0.09210265, -0.06372729,
       -0.02590642, -0.22294236, -0.15210741, -0.0472602 , -0.03146311,
       -0.05726577, -0.06565106, -0.10427015, -0.29928768, -0.13860721,
       -0.17062691, -0.05228044, -0.07237223, -0.43035532, -0.19521367,
       -0.05123995, -0.04219818, -0.16644108, -0.12838647, -0.03740648,
       -0.05141457, -0.12685784, -0.08804308, -0.10685835, -0.04678654,
       -0.06725144]), 'test_mae': array([-0.08833583, -0.04916612, -0.04468989, -0.05417188, -0.45945142,
       -0.24208634, -0.10373214, -0.02940508, -0.02837932, -0.06104235,
       -0.03273128, -0.12764653, -0.04640894, -0.03866667, -0.07414251,
       -0.09419849, -0.06084011, -0.06088447, -0.02537579, -0.03142601,
       -0.11438836, -0.21347268, -0.08017372, -0.07653317, -0.0623424 ,
       -0.11564974, -0.19328229, -0.54544366, -0.05798944, -0.09533417,
       -0.06593767, -0.14790682, -0.0197105 , -0.10530868, -0.01844567,
       -0.02808281, -0.03513004, -0.08193929, -0.10396507, -0.0643002 ,
       -0.08383921, -0.55545504, -0.14444814, -0.0442447 , -0.07752179,
       -0.02774431, -0.04596428, -0.21959578, -0.02278097, -0.06961319,
       -0.0342428 , -0.35989259, -0.08482175, -0.0667835 , -0.05298199,
       -0.02122199, -0.0620495 , -0.06739017, -0.08311788, -0.06352506,
       -0.01976576, -0.18697572, -0.12522603, -0.04168285, -0.02812858,
       -0.05230389, -0.05124509, -0.07639578, -0.24001984, -0.10055828,
       -0.14361669, -0.04259555, -0.05547592, -0.28541909, -0.13955598,
       -0.0399592 , -0.04082561, -0.10839741, -0.08467806, -0.03023411,
       -0.03887204, -0.10043223, -0.08276682, -0.08531118, -0.03049039,
       -0.06585787]), 'test_r2': array([ 9.25211856e-01,  9.86370207e-01,  9.83847072e-01,  9.31118136e-01,
       -9.14573916e-01,  6.31806932e-01,  9.48286357e-01,  9.96804779e-01,
        9.94911020e-01,  9.81478857e-01,  9.96154847e-01,  9.52502121e-01,
        9.91781924e-01,  9.93577296e-01,  9.35514681e-01,  9.71447834e-01,
        9.94586765e-01,  9.88223539e-01,  9.92175725e-01,  5.06385585e-01,
        9.19529512e-01,  8.09710630e-01,  6.04230253e-01,  9.91841828e-01,
        9.53265005e-01, -5.76492805e+00, -5.05607726e+00, -2.29804808e+01,
        9.86877654e-01,  9.65802696e-01,  9.49633178e-01,  8.60981162e-01,
        9.98132857e-01,  9.78805062e-01,  7.52218290e-01,  9.95862848e-01,
        9.96060624e-01,  9.60963289e-01,  5.22247139e-01,  9.49716310e-01,
       -6.16684600e+00, -7.74511258e-02,  4.43960404e-02,  9.91793480e-01,
        9.61346927e-01,  9.97562658e-01,  9.77998941e-01,  1.40648939e-01,
        9.98074837e-01, -4.68884190e-01,  9.84331493e-01, -5.30288232e+00,
        9.65105627e-01,  9.52085557e-01,  8.61911617e-01,  9.99057686e-01,
        5.73869488e-01,  9.70227655e-01,  9.75833134e-01,  9.90009443e-01,
        9.97947703e-01,  8.90858718e-01,  8.97934154e-01,  9.93859423e-01,
        9.94832346e-01,  9.66073988e-01,  9.92206868e-01,  9.82948581e-01,
        6.59213013e-01,  2.08574011e-01,  8.66542351e-01,  9.39402147e-01,
        9.82927312e-01, -1.59196556e+00,  8.38959854e-01,  9.96414947e-01,
        9.59165383e-01, -7.45857941e-04,  6.91086891e-01,  9.80298932e-01,
        9.66991804e-01,  9.47398677e-01,  9.59788250e-01,  8.83028399e-01,
        9.57096911e-01,  9.85762118e-01]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0021563374205135397, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.15328789, 1.72823262, 2.1295383 , 1.19189906, 1.20223355,
       2.52059841, 1.37626863, 1.29236197, 1.20871806, 1.2051425 ,
       1.94109678, 1.15945196, 2.00732636, 2.45597172, 1.21228886,
       1.92226362, 1.90565014, 2.50863457, 1.30797195, 2.69535017,
       2.37803221, 1.15338016, 1.26113796, 1.21398544, 1.2021873 ,
       1.16419029, 1.21751666, 1.22306943, 2.40517449, 1.71220112,
       1.76110601, 2.27046347, 2.21605682, 2.38795352, 2.46435809,
       1.17028809, 1.15500855, 1.15477419, 1.21790361, 1.20518517,
       2.31756949, 1.19648695, 1.22395825, 2.49780273, 2.22089481,
       1.23786974, 2.00937176, 2.00673795, 1.15592813, 1.20704603,
       2.38399315, 1.32424212, 1.27962875, 1.2011745 , 1.28956008,
       1.6865387 , 1.3229413 , 1.34530044, 1.93983555, 2.46020889,
       2.05081058, 1.30540752, 1.79865336, 2.21579599, 1.53626227,
       1.32175279, 2.19827151, 1.82196808, 1.29541063, 1.25628972,
       1.21541739, 1.49126863, 1.70411015, 1.60875225, 1.40485716,
       1.05770016, 1.73209548, 1.29077315, 1.57677531, 1.42809629,
       1.40165234, 1.26659584, 1.14031267, 1.19237733, 1.23675823,
       1.12587786]), 'score_time': array([0.1591053 , 0.16570187, 0.16279793, 0.07551193, 0.07726717,
       0.16486931, 0.17143369, 0.0828228 , 0.07513356, 0.07704377,
       0.07536602, 0.07434678, 0.20145726, 0.16696858, 0.07730412,
       0.16855288, 0.16031194, 0.16344786, 0.07809281, 0.1813345 ,
       0.15316367, 0.07564473, 0.08993578, 0.07536125, 0.07537174,
       0.07777262, 0.07705474, 0.07466388, 0.15328169, 0.08882213,
       0.16014194, 0.09299612, 0.1838479 , 0.08020687, 0.15991378,
       0.07416248, 0.07509446, 0.07647967, 0.07455349, 0.0752666 ,
       0.07423377, 0.07538605, 0.07687068, 0.18767476, 0.16084218,
       0.07566118, 0.0734179 , 0.19082761, 0.07250834, 0.07467437,
       0.19449139, 0.0759182 , 0.07653332, 0.08801603, 0.12179947,
       0.07229519, 0.07559395, 0.13672495, 0.07431173, 0.16281414,
       0.07505512, 0.07561493, 0.1614852 , 0.07761478, 0.07525134,
       0.07655597, 0.07461119, 0.09648442, 0.07690787, 0.07722044,
       0.07664871, 0.07423639, 0.07231069, 0.07688284, 0.07518935,
       0.10121632, 0.07143927, 0.07864928, 0.07399821, 0.07232571,
       0.07337761, 0.07488823, 0.07704353, 0.07394648, 0.0746057 ,
       0.07255459]), 'test_pearson_r': array([ 0.97856603,  0.99410271,  0.9934404 ,  0.99999778,  0.99848424,
        0.99954432,  0.99754159,  0.99399166,  0.9977687 ,  0.73250627,
        0.99723386,  0.99907641, -0.54607052,  0.94566513,  0.99939328,
        0.99400198,  0.99987313,  0.99354621,  0.99998586,  0.92588858,
        0.99823635,  0.99371057,  0.31459918,  0.99937602,  0.99521121,
        0.99989846, -0.15529179,  0.99983709,  0.99875134,  0.39694971,
        0.99929643,  0.99987263,  0.92321852,  0.9958954 ,  0.99408057,
        0.90327534,  0.99953945, -0.25626292,  0.99995888,  0.99820772,
        0.99895506,  0.99985755,  0.9860973 ,  0.98610391,  0.99960215,
        0.99478692,  0.98419691,  0.94414559,  0.99988896,  0.99040605,
        0.99181419,  0.99721601,  0.99983485,  0.99737323,  0.9294117 ,
        0.98546291,  0.99900224,  0.98286887,  0.97871388,  0.99741304,
        0.98213118,  0.96835718,  0.9967615 ,  0.9992422 ,  0.99823148,
        0.99284936,  0.99864624,  0.99992002,  0.99915378,  0.98372448,
        0.79221225,  0.7968675 ,  0.99820013,  0.98993389,  0.99399689,
        0.98276521,  0.99990255,  0.99952078,  0.93531294,  0.99573311,
        0.99001307,  0.97217559,  0.99979697,  0.94534745,  0.95731839,
        0.99733773]), 'test_spearman_r': array([ 0.8      ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  0.5      ,  1.       ,  1.       ,
        0.5      ,  1.       , -0.5      ,  0.5      ,  1.       ,
        0.8660254,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       , -0.5      ,  1.       ,  1.       ,
        1.       ,  0.5      ,  1.       ,  1.       ,  0.5      ,
        1.       ,  0.5      ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       , -0.5      ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  0.5      ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  0.5      ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  0.5      ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        0.5      ]), 'test_rmse': array([-0.12049766, -0.03448118, -0.05262823, -0.01297694, -0.05695933,
       -0.02812058, -0.05378968, -0.04160158, -0.10358534, -0.64667372,
       -0.07940949, -0.03635397, -0.18504373, -0.23631676, -0.03497989,
       -0.0738846 , -0.05763686, -0.0778173 , -0.0171699 , -0.18857557,
       -0.07526004, -0.08130684, -0.4318443 , -0.02678633, -0.04251409,
       -0.02645603, -0.89935405, -0.23467938, -0.03847124, -0.60126717,
       -0.04134895, -0.01608198, -0.20513779, -0.06232918, -0.05170502,
       -0.34642275, -0.01323943, -0.83102928, -0.01549003, -0.09647695,
       -0.04687538, -0.00945579, -0.09540979, -0.06201394, -0.07209511,
       -0.05317863, -0.08924061, -0.32575075, -0.13183752, -0.12398211,
       -0.15944533, -0.05877371, -0.06717979, -0.06396456, -0.26202907,
       -0.12780151, -0.04689672, -0.12066148, -0.11958011, -0.09040089,
       -0.03822925, -0.11885643, -0.06982011, -0.16381541, -0.04981772,
       -0.10000941, -0.03112043, -0.02497076, -0.13308662, -0.05245407,
       -0.27582464, -0.19767759, -0.03119553, -0.0684762 , -0.09803794,
       -0.08954277, -0.0448114 , -0.04123106, -0.23599936, -0.0399058 ,
       -0.09003329, -0.19193417, -0.0344247 , -0.11306846, -0.08457434,
       -0.11302522]), 'test_mae': array([-0.10018052, -0.02484861, -0.04089071, -0.0105992 , -0.04474844,
       -0.02563341, -0.0480894 , -0.03851487, -0.08745917, -0.38728467,
       -0.07499566, -0.03527098, -0.15175889, -0.20186344, -0.02742397,
       -0.06120677, -0.04043687, -0.06932429, -0.0162361 , -0.1339635 ,
       -0.04574492, -0.05790473, -0.32144282, -0.02077879, -0.03774264,
       -0.02053999, -0.54462688, -0.18609266, -0.03711359, -0.46025486,
       -0.03071337, -0.01385403, -0.16756793, -0.0461385 , -0.04041214,
       -0.28769074, -0.01066307, -0.48264991, -0.01252897, -0.05877969,
       -0.04021279, -0.00845507, -0.07800653, -0.06196413, -0.06540789,
       -0.04691721, -0.07139638, -0.20028827, -0.11113764, -0.09210456,
       -0.1556432 , -0.03803681, -0.05933782, -0.05000141, -0.21295729,
       -0.10735432, -0.03661165, -0.08931048, -0.09582873, -0.07169136,
       -0.03274039, -0.07688836, -0.042759  , -0.16095911, -0.04280366,
       -0.08615647, -0.02209025, -0.01743217, -0.10735294, -0.04557013,
       -0.20310623, -0.17008426, -0.02524019, -0.06768844, -0.06604901,
       -0.07001458, -0.04043554, -0.03546532, -0.15649809, -0.03158925,
       -0.07637534, -0.14950785, -0.03052093, -0.10839004, -0.06335968,
       -0.09636919]), 'test_r2': array([ 9.42940052e-01,  9.82131660e-01,  9.73215245e-01,  9.99671204e-01,
        9.76608631e-01,  9.90303005e-01,  9.95013051e-01,  9.77141929e-01,
        9.70281369e-01,  2.81378571e-01,  9.63461889e-01,  9.96626426e-01,
       -5.12437133e+00,  1.83240652e-01,  9.95292429e-01,  9.61050380e-01,
        9.96562961e-01,  9.07462852e-01,  9.99202169e-01,  6.69377857e-01,
        9.91008120e-01,  9.64535995e-01, -7.87508371e+01,  9.98661867e-01,
        9.86862617e-01,  9.96437544e-01, -6.29466059e-01,  4.48746586e-01,
        9.94783877e-01, -2.68245623e-01,  9.97912746e-01,  9.91788739e-01,
       -3.11358015e+00,  9.83911603e-01,  9.52104178e-01,  5.98800549e-01,
        9.98842649e-01, -1.12376856e+00,  9.99693540e-01,  9.69326999e-01,
        9.94220157e-01,  9.99704056e-01,  8.98225911e-01,  9.25632457e-01,
        9.66971208e-01,  9.85850530e-01,  9.00046241e-01,  3.44693644e-01,
        8.93366360e-01,  9.34719479e-01,  6.53947890e-01,  9.89456511e-01,
        9.90073289e-01,  9.87661255e-01,  8.33922095e-01,  9.56623921e-01,
        9.94560452e-01,  9.34667732e-01,  9.52675284e-01,  9.91202954e-01,
        9.06894342e-01,  2.71230399e-01,  9.90569781e-01,  9.50306859e-01,
        9.94162798e-01,  8.94164399e-01,  9.93917443e-01,  9.98888741e-01,
        9.50378683e-01,  7.60850627e-01,  5.40265828e-02,  2.48650689e-02,
        9.93127752e-01,  9.73721809e-01,  9.79470316e-01,  9.60882010e-01,
        9.87658891e-01,  9.93581571e-01,  7.75008839e-01,  9.53008444e-01,
        9.78150337e-01,  5.15148565e-01,  9.95522799e-01,  7.21591733e-01,
        9.03477945e-01,  9.70545300e-01]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03897794765782249, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 304, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([0.58560205, 0.89508057, 0.43931508, 0.46276402, 0.59962964,
       0.85222197, 0.86920333, 0.44003344, 0.43629479, 0.47162652,
       0.49885035, 0.75674891, 0.97824502, 0.4615345 , 0.93452907,
       0.74701595, 0.62758136, 0.5681355 , 0.98789787, 0.81439376,
       0.75745487, 0.55557537, 0.62050605, 0.52366161, 0.53975534,
       0.56527567, 0.82066417, 0.61837983, 0.48397446, 0.58882403,
       0.64672065, 0.47545624, 0.53228474, 0.5469985 , 0.81548405,
       0.60787964, 1.0329349 , 1.01467609, 0.52611804, 0.90486789,
       0.47468352, 0.61269069, 0.5618372 , 0.48593187, 0.53215504,
       0.60097384, 0.47328591, 0.74154186, 0.48469949, 0.92778373,
       0.55590129, 0.50986242, 0.90123343, 1.04703164, 0.43592095,
       0.47057557, 0.66014838, 0.47114015, 0.52376032, 0.5151062 ,
       0.50831723, 0.6741333 , 0.77840567, 0.51797795, 0.620502  ,
       0.84326816, 0.50026464, 0.57445216, 0.84271836, 0.88176012,
       0.86012316, 0.66525292, 0.67604017, 0.71775651, 0.45941663,
       0.43740916, 0.45959496, 0.45850158, 0.68484855, 0.45133877,
       0.65169978, 0.44600701, 0.43777633, 0.51354361, 0.5499146 ,
       0.5342567 ]), 'score_time': array([0.09813237, 0.15892982, 0.08700752, 0.16868854, 0.09218431,
       0.07510042, 0.16802239, 0.07341194, 0.07571292, 0.0744729 ,
       0.09593868, 0.0879364 , 0.15994596, 0.10714769, 0.12457824,
       0.15755987, 0.07463002, 0.10260272, 0.13855815, 0.07043219,
       0.07191205, 0.07754445, 0.15545702, 0.07693148, 0.10730124,
       0.11308908, 0.07514095, 0.07284236, 0.07691026, 0.07628846,
       0.19515347, 0.15907121, 0.09440422, 0.07140326, 0.07264709,
       0.11795068, 0.15772033, 0.07335567, 0.07263875, 0.07277632,
       0.15875721, 0.16873145, 0.08726668, 0.07238817, 0.07286739,
       0.07094765, 0.07305408, 0.15758085, 0.1103065 , 0.16073251,
       0.15539002, 0.0736177 , 0.13804436, 0.15361142, 0.15301061,
       0.09860182, 0.09285092, 0.11941123, 0.07111669, 0.07676625,
       0.07148695, 0.07824874, 0.1553719 , 0.08332705, 0.07365179,
       0.07343292, 0.07188845, 0.16789556, 0.07312083, 0.07481837,
       0.07766771, 0.08521819, 0.07509446, 0.07329154, 0.0742116 ,
       0.07145166, 0.07421803, 0.08386493, 0.07397628, 0.0771513 ,
       0.07882428, 0.0821116 , 0.07384181, 0.1304338 , 0.07141805,
       0.07111144]), 'test_pearson_r': array([ 0.99993862,  0.99180388,  0.99982463,  0.99801575,  0.99669757,
        0.99977444,  0.99752303,  0.99865776,  0.9993862 ,  0.99970016,
        0.99808197,  0.20194725,  0.9791986 ,  0.99877129,  0.97369673,
        0.99338928,  0.99899953,  0.99917408,  0.9964437 ,  0.97511669,
        0.99968852,  0.63643944,  0.98889536,  0.9999076 ,  0.99832171,
        0.91460214,  0.95097749,  0.9817493 ,  0.99737917,  0.99995583,
        0.95437793,  0.99817843,  0.99862759,  0.99182393,  0.99613251,
        0.97985885,  0.94574713,  0.9989098 ,  0.98645269,  0.99721761,
        0.99982793,  0.99060375,  0.99452212,  0.99937011,  0.87172426,
        0.99494306,  0.99606782,  0.99873835, -0.48287823,  0.84007561,
        0.98179439,  0.99957438,  0.99118269,  0.99836011,  0.96666191,
        0.99998617,  0.9941429 ,  0.99789236,  0.83514497,  0.99999973,
        0.99992708,  0.60045425,  0.9999604 ,  0.92741164,  0.99856877,
        0.99999556,  0.99611466,  0.99949834,  0.99651133,  0.23244866,
        0.98675252,  0.99436009,  0.99999653,  0.99999882,  0.95557625,
        0.99231002,  0.99979535,  0.99828423,  0.18058804,  0.97766543,
        0.30354474,  0.82795765,  0.99309139,  0.9978814 ,  0.99983809,
        0.99580042]), 'test_spearman_r': array([ 1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  0.5      ,  1.       ,  1.       ,  1.       ,
        1.       ,  0.5      ,  1.       ,  1.       ,  0.5      ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  0.5      ,  1.       ,  1.       ,  1.       ,
        0.5      ,  0.5      ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  0.5      ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  0.5      ,
        1.       ,  1.       ,  1.       , -0.5      ,  0.5      ,
        1.       ,  0.8660254,  1.       ,  1.       ,  0.5      ,
        1.       ,  1.       ,  1.       ,  0.5      ,  1.       ,
        1.       ,  0.5      ,  1.       ,  0.5      ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       , -0.5      ,
        1.       ,  1.       ,  1.       ,  1.       ,  0.5      ,
        1.       ,  1.       ,  1.       ,  0.5      ,  1.       ,
        0.5      ,  0.5      ,  1.       ,  0.8660254,  1.       ,
        1.       ]), 'test_rmse': array([-0.08179428, -0.0856847 , -0.04253181, -0.06708772, -0.26354664,
       -0.03564621, -0.1244478 , -0.01762089, -0.03226076, -0.01706234,
       -0.04042214, -0.5426814 , -0.14782125, -0.06738272, -0.13726259,
       -0.12997237, -0.08989187, -0.04714743, -0.04736781, -0.07123584,
       -0.02094782, -0.28156612, -0.04011606, -0.07850254, -0.05323014,
       -0.21642675, -0.1149558 , -0.13311384, -0.17971405, -0.16325937,
       -0.06309189, -0.09707037, -0.01678268, -0.10163187, -0.09538067,
       -0.17630594, -0.33376909, -0.02969687, -0.04284341, -0.06136074,
       -0.12918404, -0.08412007, -0.06042267, -0.02111303, -0.26762642,
       -0.07379401, -0.0918016 , -0.072527  , -0.90563262, -0.09012538,
       -0.09470636, -0.07989207, -0.11262697, -0.04739953, -0.19074112,
       -0.01719996, -0.09119153, -0.06496913, -0.26515797, -0.05689346,
       -0.06561917, -0.27609442, -0.00917895, -0.20804432, -0.07423083,
       -0.07356374, -0.02885184, -0.06685214, -0.03553908, -0.64511453,
       -0.25555549, -0.06625425, -0.03103677, -0.03455074, -0.23237427,
       -0.14424559, -0.04987136, -0.03466522, -0.8394833 , -0.13375686,
       -0.12483147, -0.05892551, -0.1098538 , -0.09842594, -0.01312553,
       -0.05175584]), 'test_mae': array([-0.06211229, -0.06622777, -0.03816471, -0.05482825, -0.17061131,
       -0.02334848, -0.10218493, -0.0144803 , -0.02803286, -0.01277826,
       -0.03398247, -0.32270978, -0.14176333, -0.05703242, -0.11439669,
       -0.10586659, -0.07629331, -0.04154761, -0.03930169, -0.06952089,
       -0.01421102, -0.22042563, -0.03804042, -0.04991311, -0.04617044,
       -0.13928352, -0.0954078 , -0.11472601, -0.12307688, -0.13349301,
       -0.04694589, -0.07744148, -0.01388722, -0.06458699, -0.06686186,
       -0.16196093, -0.27086848, -0.02442453, -0.03734335, -0.03757602,
       -0.09833705, -0.05915788, -0.05122496, -0.0181976 , -0.20613262,
       -0.06013135, -0.05627345, -0.06337075, -0.55334378, -0.07411395,
       -0.07573273, -0.07642068, -0.09010074, -0.04093987, -0.14216964,
       -0.01599808, -0.07094408, -0.04373632, -0.24382299, -0.05640851,
       -0.0490138 , -0.18208342, -0.00635006, -0.15735924, -0.06750012,
       -0.06022009, -0.02555372, -0.05814198, -0.03512479, -0.39325769,
       -0.16933559, -0.05549566, -0.0206947 , -0.03406822, -0.16861057,
       -0.12206567, -0.04034996, -0.02996967, -0.49358867, -0.10314963,
       -0.08746412, -0.05276871, -0.10217351, -0.06406203, -0.01148508,
       -0.04285146]), 'test_r2': array([  0.95076529,   0.95898388,   0.99515754,   0.98676609,
         0.91764376,   0.9963652 ,   0.94708507,   0.99632484,
         0.99317781,   0.99930217,   0.98420489,  -0.71792128,
         0.94911292,   0.98781433,   0.40561078,   0.73333465,
         0.98887248,   0.99730672,   0.99277654,   0.89547433,
         0.99864589,  -1.92364946,   0.9753859 ,   0.97569808,
         0.99272311,   0.76436702,   0.74334465,   0.79870368,
         0.84064893,   0.91046535,   0.89486402,   0.99183355,
         0.97394929,   0.97578749,   0.97360119,   0.86570626,
         0.39622933,   0.99089034,   0.96770842,   0.9905312 ,
         0.86238395,   0.96048711,   0.98582507,   0.99867929,
         0.26260056,   0.94168661,   0.9771535 ,   0.92939563,
        -4.46686   , -12.17568034,   0.95583075,   0.98993483,
         0.93939976,   0.99516791,   0.90545536,   0.9994899 ,
         0.97692058,   0.99272322,  -0.970832  ,   0.93791985,
         0.98798962,  -0.15237402,   0.99978513,   0.61840675,
         0.99110271,   0.99075145,   0.96402071,   0.98877631,
         0.99014688,  -1.49319714,   0.81524511,   0.97955017,
         0.99836751,   0.99745536,   0.85663308,   0.96589938,
         0.9899494 ,   0.98943699,  -0.51664473,   0.93978189,
        -0.22667113,   0.58576143,   0.98332581,  -2.32517248,
         0.99964648,   0.97305514]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04786776304179686, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 125, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.00690079, 1.01455235, 0.66985512, 1.34423327, 1.25111222,
       1.23269987, 0.69386077, 0.64128065, 1.14710522, 0.67691779,
       1.09598947, 1.03737092, 1.0681138 , 1.43106103, 0.85334706,
       1.05875921, 1.01053095, 1.3730998 , 1.34008288, 1.5309875 ,
       0.5560348 , 0.61537123, 0.74928498, 1.02910995, 1.77379656,
       1.29133964, 0.58614087, 1.04077911, 0.80604506, 1.05001187,
       0.8118732 , 1.28078675, 0.85939884, 0.7421155 , 0.73879719,
       0.95534968, 0.5349288 , 0.82239079, 1.21352077, 1.08983159,
       1.38129234, 1.02027488, 0.81216931, 1.31962752, 1.13556576,
       0.54273033, 0.74007201, 0.57782674, 1.03951979, 1.17192483,
       0.61826444, 1.19762588, 1.19267631, 1.26823378, 0.84725881,
       1.4053247 , 0.58737445, 0.52806711, 1.17402816, 0.55798054,
       1.06649709, 1.5671351 , 1.4080019 , 1.37032008, 0.5478344 ,
       1.61136746, 0.56660771, 1.29817295, 0.53760839, 1.18331265,
       0.56865668, 1.33764768, 1.22979331, 1.07020497, 1.10293126,
       0.93123627, 1.05471849, 1.05268836, 0.53430867, 0.52165937,
       0.9446559 , 0.54909468, 0.57108736, 0.80798578, 0.85609722,
       0.54545045]), 'score_time': array([0.15426493, 0.14457679, 0.0851016 , 0.09275699, 0.15963888,
       0.22724104, 0.1602335 , 0.08388376, 0.15842915, 0.08155107,
       0.08441329, 0.1457715 , 0.16139531, 0.16574359, 0.1666646 ,
       0.16671515, 0.14294934, 0.1475873 , 0.34852386, 0.37183881,
       0.11910725, 0.09673476, 0.15898323, 0.16580224, 0.17450404,
       0.23753166, 0.08022475, 0.15049195, 0.26322508, 0.15611649,
       0.0715518 , 0.25375652, 0.08176565, 0.07898808, 0.16265464,
       0.15652251, 0.07357383, 0.15137482, 0.24666739, 0.25512099,
       0.23408794, 0.15826344, 0.07570744, 0.23924208, 0.11113572,
       0.07731628, 0.2374053 , 0.07790732, 0.23987222, 0.08885908,
       0.14715886, 0.22487617, 0.16806889, 0.23857379, 0.18592167,
       0.07293415, 0.07250094, 0.1648159 , 0.16501212, 0.07548022,
       0.16210413, 0.20632267, 0.1538651 , 0.1678071 , 0.1169157 ,
       0.1238153 , 0.15200901, 0.13157439, 0.0721128 , 0.17835689,
       0.07487655, 0.07564211, 0.0827651 , 0.12727404, 0.0904963 ,
       0.10536242, 0.07459927, 0.11394048, 0.13850641, 0.07298994,
       0.07136774, 0.07570291, 0.07832098, 0.07130814, 0.07090807,
       0.07182193]), 'test_pearson_r': array([ 0.99890065,  0.99997512,  0.99225055,  0.99885075,  0.99645187,
        0.9972342 ,  0.99647688,  0.99994406,  0.9999909 ,  0.99870815,
        0.92155462,  0.95440545,  0.99984605,  0.80806709,  0.83138168,
        0.99350675,  0.99995474,  0.99557875,  0.99985627,  0.99984591,
        0.99829165,  0.99989862, -0.99999757,  0.9999991 ,  0.98928611,
        0.99972459,  0.92400648,  0.93655003,  0.97886641,  0.99935619,
        0.99811679,  0.99760198,  0.99986508,  0.99792911,  0.98339116,
        0.99935805,  0.99995897,  0.99896196,  0.8350523 ,  0.98930781,
        0.99603852,  0.99951534,  0.99998014,  0.99999969,  0.99987002,
        0.99911138,  0.99283685,  0.92118626,  0.97622007,  0.99999463,
        0.99967033,  0.43206434,  0.95690559,  0.99772362,  0.99969519,
        0.99755216,  0.92134519,  0.99965223,  0.98570849,  0.99700649,
        0.99472538, -0.75857515,  0.99852822,  0.99743062,  0.998288  ,
        0.95015775,  0.99192092,  0.99732585,  0.26863147,  0.99919253,
        0.93160512,  0.99996913,  0.99862672,  0.94622389,  0.9980304 ,
        0.99824722,  0.99397797,  0.99962271,  0.94517443,  0.97660486,
        0.99953867,  0.99956579,  0.99872244,  0.99865736,  0.99878094,
        0.99983949]), 'test_spearman_r': array([ 1.       ,  1.       ,  0.8660254,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        0.5      ,  1.       ,  1.       ,  1.       ,  0.5      ,
        1.       ,  1.       ,  1.       ,  0.8660254,  1.       ,
        1.       ,  1.       , -0.8660254,  0.8660254,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        0.5      ,  1.       ,  1.       ,  0.5      ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  0.5      ,  0.5      ,  1.       ,
        1.       ,  0.5      ,  0.5      ,  1.       ,  1.       ,
        1.       ,  0.5      ,  1.       ,  1.       ,  1.       ,
        1.       , -0.5      ,  1.       ,  1.       ,  1.       ,
        1.       ,  0.5      ,  1.       , -0.5      ,  1.       ,
        1.       ,  1.       ,  1.       ,  0.5      ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ]), 'test_rmse': array([-0.02854113, -0.08648975, -0.0842066 , -0.08773288, -0.07223138,
       -0.06766693, -0.09757387, -0.02319725, -0.00343414, -0.03362425,
       -0.28456619, -0.03766127, -0.03547257, -0.18178159, -0.27028203,
       -0.08666964, -0.08845141, -0.04130404, -0.00889247, -0.02678735,
       -0.03222475, -0.0170507 , -1.3015202 , -0.01368442, -0.12432972,
       -0.10359508, -0.25752662, -0.11271033, -0.10671661, -0.01747811,
       -0.06913316, -0.06487949, -0.13813839, -0.13515478, -0.07274297,
       -0.30336103, -0.05779901, -0.05952774, -0.09888128, -0.14637639,
       -0.10413992, -0.0336836 , -0.04058557, -0.04102141, -0.02388592,
       -0.11615005, -0.06574112, -0.21390943, -0.18533159, -0.02925182,
       -0.03692696, -1.0064121 , -0.15797258, -0.11893494, -0.0164255 ,
       -0.09195204, -0.09684651, -0.0344613 , -0.11624124, -0.06154552,
       -0.11079014, -0.32723014, -0.03850708, -0.02786782, -0.04353717,
       -0.08135732, -0.04613199, -0.10862711, -0.66907344, -0.13851876,
       -0.11364822, -0.03611167, -0.05001552, -0.38102661, -0.19496144,
       -0.08276258, -0.12010834, -0.0303367 , -0.22244835, -0.06693315,
       -0.06114059, -0.09934083, -0.05422082, -0.26010142, -0.13774792,
       -0.03436644]), 'test_mae': array([-0.02044885, -0.0768706 , -0.06927921, -0.08019496, -0.06417624,
       -0.05472286, -0.08373813, -0.02130519, -0.00287138, -0.02853751,
       -0.24562325, -0.02301921, -0.02829585, -0.13210324, -0.21835955,
       -0.0646544 , -0.0544286 , -0.03977046, -0.00874428, -0.0221495 ,
       -0.02543953, -0.01357152, -1.06898708, -0.00876355, -0.09173625,
       -0.08419503, -0.19850067, -0.08172428, -0.08900482, -0.01428778,
       -0.04873185, -0.05186599, -0.12462476, -0.11711748, -0.06265999,
       -0.26064977, -0.03480121, -0.04287629, -0.0680883 , -0.12112466,
       -0.08168119, -0.02458355, -0.03542328, -0.03724085, -0.01826214,
       -0.0956696 , -0.05980688, -0.18133022, -0.12166703, -0.02510527,
       -0.02848256, -0.8440368 , -0.13341073, -0.08658703, -0.01345201,
       -0.07985875, -0.08829627, -0.02951567, -0.0884511 , -0.04756452,
       -0.08419457, -0.20262155, -0.03437923, -0.01791137, -0.0313666 ,
       -0.06842472, -0.038817  , -0.09580038, -0.47468361, -0.12269982,
       -0.09374732, -0.02912857, -0.04933873, -0.24105836, -0.12336371,
       -0.06665227, -0.10167281, -0.0254631 , -0.1530478 , -0.05592036,
       -0.05257275, -0.08416051, -0.03173696, -0.18446771, -0.12904809,
       -0.03270928]), 'test_r2': array([  0.99585842,   0.96709374,  -0.25659787,   0.98720198,
         0.98067823,   0.98863544,   0.96652867,   0.99695696,
         0.99995128,   0.99291106,   0.32890889,   0.83320331,
         0.99760796,  -0.46825767,   0.11084878,   0.98137235,
         0.99106416,   0.86827165,   0.97089092,   0.97833361,
         0.99385896,   0.99792952, -17.64646797,   0.99958193,
         0.90243291,   0.91512408,   0.79542579,   0.85242672,
         0.93672408,   0.99777468,   0.99251258,   0.98663836,
         0.87895317,   0.98200227,   0.96175696,   0.88564913,
         0.98460038,   0.99510329,   0.42379753,   0.91435553,
         0.94833997,   0.99719293,   0.99501252,   0.98828028,
         0.97690807,   0.74152513,   0.94106662,   0.82542595,
         0.90383448,   0.99776509,   0.99524129,  -2.61259751,
         0.756098  ,   0.94835851,   0.99889332,   0.64588587,
         0.68508368,   0.99699871,   0.96245237,   0.99227104,
         0.97371547, -87.78840849,   0.9928839 ,   0.98955258,
         0.99292706,   0.8906186 ,   0.94323654,   0.84706598,
        -2.73565429,   0.94382503,   0.49206244,   0.99664649,
         0.99376704,   0.81386017,   0.61617365,   0.9781978 ,
         0.94582782,   0.99768644,   0.81119157,   0.94703975,
         0.98894853,   0.99028032,   0.98086493,   0.86057027,
         0.93710333,   0.99649429]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 234, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.70547009, 2.58701539, 2.21351552, 1.83929515, 0.97808456,
       0.87767196, 1.4370575 , 2.92312908, 2.16523361, 2.428509  ,
       2.88875818, 2.65375638, 1.50922513, 1.25165701, 2.83261967,
       2.86703396, 0.92763901, 2.71568513, 2.8139081 , 2.32159567,
       1.96046162, 2.08730912, 0.90860271, 0.9201076 , 0.91229534,
       1.83334923, 2.04093075, 0.99762464, 0.89053154, 2.03151226,
       0.92952752, 0.94970012, 0.92417455, 2.28051424, 1.86505008,
       1.96726394, 2.27177668, 2.49381733, 1.74669409, 2.82995343,
       2.05456805, 2.38810325, 1.94753313, 1.77413869, 2.07845807,
       1.57218862, 0.96203303, 0.93666959, 0.92506719, 2.20131731,
       0.96427441, 2.59869885, 0.93241334, 2.05049276, 0.92541456,
       2.18212557, 1.014081  , 2.70454025, 2.467067  , 0.97034407,
       1.47000146, 1.59564281, 2.2784574 , 2.26688194, 0.98942161,
       1.37736177, 2.00931692, 1.82454085, 0.90222478, 2.18625355,
       1.84377265, 0.9169817 , 1.34373045, 2.00730896, 1.84504414,
       0.91983032, 0.89084983, 1.45029712, 1.36391449, 0.9245038 ,
       1.36142325, 1.35637355, 1.37743473, 1.52136421, 0.88185334,
       0.91559005]), 'score_time': array([0.23761153, 0.07191801, 0.16481566, 0.06924415, 0.14819026,
       0.07227087, 0.06853414, 0.23978853, 0.08621264, 0.15916181,
       0.22750378, 0.18029737, 0.08954644, 0.0759387 , 0.25315499,
       0.22868776, 0.10108399, 0.25376844, 0.16863918, 0.07380581,
       0.24863744, 0.07243395, 0.07431793, 0.07444263, 0.07567263,
       0.08196115, 0.14816833, 0.12598324, 0.0732975 , 0.16020846,
       0.0773797 , 0.10383916, 0.07412767, 0.24878407, 0.24296451,
       0.16035986, 0.21992159, 0.15112638, 0.07300663, 0.15174127,
       0.15506792, 0.07121563, 0.11984158, 0.07933736, 0.155514  ,
       0.07856631, 0.07231927, 0.0797255 , 0.07131672, 0.17793274,
       0.09775615, 0.23765993, 0.07197738, 0.2214694 , 0.07180476,
       0.15807581, 0.13955021, 0.18201947, 0.16890788, 0.09506345,
       0.0778985 , 0.16464615, 0.13485289, 0.16937661, 0.06995893,
       0.07474113, 0.08100796, 0.15469456, 0.07191586, 0.07273126,
       0.07175636, 0.19391656, 0.0728631 , 0.08321452, 0.06821656,
       0.06874347, 0.07189965, 0.06864405, 0.07424736, 0.07523179,
       0.07055473, 0.10341477, 0.08218813, 0.06837034, 0.07291675,
       0.06911492]), 'test_pearson_r': array([-0.31647244,  0.99912379,  0.99360071,  0.99632357,  0.98628839,
        0.99033914, -0.96731093,  0.99994172,  0.98997796,  0.99999454,
        0.99045602,  0.99347552,  0.99771299,  0.99999716,  0.9874277 ,
        0.9994683 ,  0.93918702,  0.9933368 ,  0.99761968,  0.98884901,
        0.9779653 ,  0.99896123,  0.99044957,  0.88358968,  0.99995787,
        0.90617074,  0.99928406,  0.98867157,  0.91054861,  0.99983481,
        0.99136785,  0.94837987,  0.99046662,  0.97508604,  0.9975152 ,
        0.99765371,  0.98111463,  0.95581332, -0.16143189,  0.99922691,
        0.99241601,  0.96754037,  0.99666052,  0.9986429 ,  0.96188328,
        0.9989546 ,  0.61240224,  0.96032197, -0.06087848,  0.99307313,
        0.98633298,  0.99878941,  0.99923255,  0.99771792,  0.99999367,
        0.99655224,  0.79677325,  0.99720616,  0.99798958,  0.99688472,
        0.98688575,  0.99394887,  0.99849614,  0.9855994 ,  0.99998621,
        0.99988148, -0.71389987,  0.99973016,  0.99564892,  0.99973862,
        0.99985242,  0.99862023,  0.97560476,  0.98426305,  1.        ,
        0.98155057,  0.9954204 ,  0.99659628, -0.62268157,  0.9841158 ,
        0.98309638,  0.99171904,  0.99982055,  0.99911004,  0.99493445,
        0.99990589]), 'test_spearman_r': array([-0.4      ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       , -0.5      ,  1.       ,  1.       ,  1.       ,
        0.5      ,  1.       ,  1.       ,  1.       ,  0.5      ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  0.5      ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  0.5      ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       , -0.5      ,  1.       ,
        1.       ,  0.5      ,  1.       ,  0.5      ,  1.       ,
        0.5      ,  0.5      ,  0.5      ,  0.5      ,  1.       ,
        1.       ,  1.       ,  0.8660254,  1.       ,  1.       ,
        1.       ,  0.5      ,  1.       ,  0.5      ,  1.       ,
        1.       ,  0.5      ,  1.       ,  1.       ,  1.       ,
        1.       , -0.5      ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        0.5      ,  0.5      ,  1.       , -0.5      ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ]), 'test_rmse': array([-0.24329132, -0.06558988, -0.05795499, -0.06589948, -0.08688163,
       -0.04780009, -0.64831966, -0.01121138, -0.12479464, -0.06519347,
       -0.12572234, -0.05126734, -0.04361713, -0.02467217, -0.09956572,
       -0.00198985, -0.07888251, -0.05002663, -0.04658213, -0.10743997,
       -0.15531432, -0.08672737, -0.04069818, -0.23888872, -0.01001096,
       -0.26823889, -0.05884075, -0.04114641, -0.16521899, -0.01596036,
       -0.12939232, -0.20826876, -0.29636624, -0.13225314, -0.08272899,
       -0.09830999, -0.13279173, -0.25590388, -0.89232016, -0.0866846 ,
       -0.09139551, -0.07749553, -0.06762417, -0.01697347, -0.16858792,
       -0.13679396, -0.28901811, -0.18454104, -0.24271477, -0.02730793,
       -0.12093731, -0.0889462 , -0.03319658, -0.03594578, -0.0220325 ,
       -0.06444765, -0.34457872, -0.10854572, -0.04907478, -0.09298477,
       -0.08219069, -0.06032454, -0.05308992, -0.08596709, -0.02857452,
       -0.0659272 , -0.55134206, -0.07938132, -0.19955383, -0.12365458,
       -0.0796021 , -0.04998832, -0.08679736, -0.16784677, -0.02447026,
       -0.1543326 , -0.13795439, -0.04220038, -0.8299275 , -0.01892331,
       -0.13022237, -0.01232636, -0.02605959, -0.06419733, -0.07646689,
       -0.05921732]), 'test_mae': array([-0.1611349 , -0.03838474, -0.04822391, -0.05463273, -0.08115729,
       -0.03238145, -0.38625717, -0.00862684, -0.11260158, -0.06437671,
       -0.10401036, -0.04742427, -0.04263006, -0.0202303 , -0.09541556,
       -0.00178248, -0.06957037, -0.04981207, -0.04564593, -0.07638202,
       -0.14853861, -0.05775539, -0.03473914, -0.17875345, -0.00930442,
       -0.17637896, -0.05209018, -0.03481065, -0.10900978, -0.01515769,
       -0.10628899, -0.13072218, -0.21550626, -0.11007241, -0.07328841,
       -0.08336978, -0.10636503, -0.15276815, -0.52355584, -0.06846526,
       -0.06275803, -0.05920329, -0.05857371, -0.01607081, -0.13093447,
       -0.1142597 , -0.24710606, -0.12744448, -0.15845687, -0.02079475,
       -0.092225  , -0.06169075, -0.02841673, -0.03189657, -0.01554374,
       -0.04688645, -0.23032047, -0.07706305, -0.04365833, -0.05940595,
       -0.06633346, -0.04317989, -0.04413614, -0.06392442, -0.02486635,
       -0.05217262, -0.33718929, -0.07695692, -0.16502938, -0.08959488,
       -0.06341798, -0.04417989, -0.07430579, -0.12459154, -0.02334875,
       -0.14138898, -0.11584124, -0.0373565 , -0.53380939, -0.01595994,
       -0.12546633, -0.01124224, -0.02035237, -0.04103778, -0.07249896,
       -0.05812361]), 'test_r2': array([ -9.77658247,   0.97271129,   0.98069028,   0.99136363,
         0.90939037,   0.87401231, -77.14996319,   0.99967533,
         0.94255599,   0.96667577,   0.93590012,   0.98631311,
         0.9836306 ,   0.99447506,   0.58964416,   0.99873371,
         0.87970383,   0.96942185,   0.98494481,   0.95516167,
         0.75755644,   0.98287689,   0.97949305,  -2.36392671,
         0.99971129,   0.63541956,   0.99254994,   0.89108687,
        -0.19644426,   0.99621618,   0.91928318,   0.83041244,
         0.64121908,   0.93750605,   0.96130818,   0.98590714,
         0.89539718,   0.86798107,  -3.83873861,   0.98978595,
         0.95860073,   0.85453194,   0.98615049,   0.99682805,
         0.66624475,   0.92699516,  -0.65564042,   0.85015015,
        -4.43544197,   0.96331267,   0.93310523,   0.97438454,
         0.99734481,   0.99539008,   0.99935694,   0.98323221,
         0.48431207,   0.79461939,   0.99579025,   0.98483999,
         0.9726336 ,   0.95896069,   0.99357595,   0.95248264,
         0.99558713,   0.9877611 ,  -4.43909186,   0.96128649,
         0.89398722,   0.93244548,   0.99049277,   0.9869124 ,
         0.86229381,   0.91213102,   0.99839117,   0.92396757,
         0.87544418,   0.99099345,  -3.35166847,   0.93245268,
         0.92957135,   0.983473  ,   0.99896174,   0.96194122,
         0.94698406,   0.96714029]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03770052924189587, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 549, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 220, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([ 9.43213296, 12.18810463, 10.3441875 , 13.05699205, 12.2664547 ,
        6.70824981, 13.15612793, 11.87920308, 10.78704977,  6.56795073,
       11.55534863, 12.20261168, 10.30781245,  7.20818353, 13.56451774,
        7.8605144 ,  7.24683332, 11.2184639 , 11.56157947, 11.67022657,
        6.74295378,  7.15387654,  6.59721494,  6.00568414,  6.53822541,
       12.89235806, 11.70961714, 12.32517624, 12.42177415, 12.76208591,
       10.646631  , 13.146173  , 10.71982503, 13.27520156, 11.39551592,
       11.27625465, 11.43566036, 13.09362006, 10.93088603,  5.70276022,
        6.35339999, 10.69038248,  6.12528324,  6.05824566,  6.83050132,
        8.33324075,  7.5639081 ,  8.3543787 ,  8.0664947 ,  8.45059824,
        9.96888781, 11.47483873, 11.39849997,  9.73310471, 10.74249768,
       10.98019171, 11.04530644, 11.69674993, 10.65600562, 11.19039059,
       10.00882363, 11.56137156, 11.39283371, 11.66086078,  9.68065643,
        9.52497029,  8.46695662, 10.06446433,  9.56693029,  7.60644197,
        8.40555859,  7.48310018,  9.18298531,  9.33165073,  9.26532006,
        6.75088501,  8.38302803,  8.32030606,  8.1101594 ,  8.7072711 ,
        8.75173712,  5.5288651 ,  7.41582346,  7.26884079,  7.4966445 ,
        7.33561277]), 'score_time': array([0.17503428, 0.17899632, 0.25986886, 0.24841666, 0.1968987 ,
       0.14771891, 0.18179083, 0.17285991, 0.16492176, 0.17362881,
       0.15782166, 0.25024891, 0.07469988, 0.20122838, 0.31971335,
       0.18943   , 0.08591437, 0.27735686, 0.19500065, 0.249403  ,
       0.07725072, 0.081213  , 0.07824612, 0.0798471 , 0.07962584,
       0.18154097, 0.20522499, 0.07304597, 0.17557979, 0.18705559,
       0.16087198, 0.19933248, 0.18165541, 0.15706754, 0.19498324,
       0.17526317, 0.16790032, 0.25332689, 0.15364957, 0.07522082,
       0.16834259, 0.18911123, 0.07456231, 0.07609034, 0.07337689,
       0.16477752, 0.10374904, 0.17195249, 0.0753541 , 0.07445288,
       0.18678379, 0.16704917, 0.15984058, 0.0776999 , 0.17090321,
       0.20764327, 0.17469716, 0.17779446, 0.21722579, 0.24691248,
       0.19121599, 0.16713166, 0.16778255, 0.182513  , 0.16583657,
       0.17630005, 0.07421327, 0.07522225, 0.07485938, 0.07919431,
       0.0769906 , 0.08447456, 0.07308602, 0.07055879, 0.07209349,
       0.07873511, 0.07253051, 0.08005428, 0.09189248, 0.07395434,
       0.11699343, 0.07935524, 0.14374876, 0.07497096, 0.07289124,
       0.07606816]), 'test_pearson_r': array([ 0.9965462 ,  0.99969612,  0.55046534,  0.96722776,  0.98125631,
        0.99796404,  0.88875285,  0.99829066,  0.99892306,  0.98775409,
        0.98506409,  0.9957111 ,  0.84527038,  0.99964921,  0.99862375,
        0.99997075,  0.99979827,  0.99999178,  0.99949964,  0.99676872,
        0.99994811,  0.65036216,  0.92977315,  0.99999106,  0.99849509,
        0.99711909,  0.99451568,  0.9974735 ,  0.93050702,  0.99995953,
        0.99713781,  0.95765526,  0.99970813,  0.97948836,  0.99461102,
        0.99943953,  0.99679978,  0.99695752,  0.99995076,  0.99949425,
        0.99995947,  0.91579456,  0.97077584,  0.98277778,  0.94391127,
        0.99974827,  0.99400167,  0.98482523,  0.99219519,  0.98181626,
        0.99784411,  0.99898992,  0.99203816,  0.86720716,  0.98747278,
        0.99951302,  0.9669108 ,  0.99997438,  0.74434145,  0.99962592,
        0.99461648,  0.99848965,  0.99895993,  0.99943865,  0.99914241,
        0.98270963,  0.99920565,  0.98185045,  0.99995309,  0.99983724,
        0.9605606 ,  0.99973921, -0.71863384,  0.87983133,  0.99783777,
        0.99495592,  0.99265837,  0.99296399,  0.99237282,  0.98794624,
        0.99966222,  0.99843105,  0.98105678, -0.63968989,  0.81564664,
        0.99743416]), 'test_spearman_r': array([ 1.       ,  1.       ,  0.5      ,  1.       ,  0.8660254,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        0.5      ,  1.       ,  0.5      ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  0.5      ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  0.5      ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  0.5      ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  0.5      ,  0.5      ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  0.5      ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  0.8660254,
        1.       ,  1.       , -0.5      ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        0.5      ,  1.       ,  1.       , -0.5      ,  1.       ,
        1.       ]), 'test_rmse': array([-0.04687059, -0.06444415, -0.6425065 , -0.22874412, -0.05186697,
       -0.14403875, -0.1009882 , -0.09027331, -0.02740179, -0.10229198,
       -0.15568379, -0.11199443, -0.28605469, -0.03781272, -0.06991368,
       -0.03583537, -0.06004011, -0.03196895, -0.05683308, -0.05794451,
       -0.09121903, -0.10301125, -0.19680509, -0.01051778, -0.11128311,
       -0.05521264, -0.04865651, -0.10546924, -0.16204389, -0.06562067,
       -0.09629549, -0.02205564, -0.04150191, -0.09605445, -0.12282173,
       -0.0387971 , -0.06647781, -0.06853987, -0.01239164, -0.04103507,
       -0.02940558, -0.10084059, -0.19205372, -0.04512731, -0.05860908,
       -0.02481679, -0.04868499, -0.18591897, -0.03795907, -0.1674249 ,
       -0.03952385, -0.30599974, -0.1114515 , -0.08996066, -0.11901821,
       -0.03397265, -0.16129327, -0.03150123, -0.38388315, -0.03966005,
       -0.14452564, -0.0743662 , -0.02962268, -0.04891533, -0.04666508,
       -0.10049763, -0.08294773, -0.35334662, -0.00745839, -0.03804446,
       -0.20513921, -0.05734994, -0.86042727, -0.2792686 , -0.07624373,
       -0.12701374, -0.10413186, -0.09732229, -0.07542457, -0.11188086,
       -0.06131169, -0.05057835, -0.2522545 , -0.90046675, -0.55630712,
       -0.10503415]), 'test_mae': array([-0.04274735, -0.05479207, -0.39772802, -0.14291779, -0.05161515,
       -0.10952233, -0.09806808, -0.08315714, -0.02370602, -0.06439549,
       -0.13459951, -0.07267341, -0.16941038, -0.02919004, -0.05413548,
       -0.03540497, -0.05367142, -0.03003495, -0.04742765, -0.03757576,
       -0.07140589, -0.07308486, -0.1207725 , -0.01000622, -0.0975048 ,
       -0.04911682, -0.04164305, -0.09057013, -0.11841382, -0.04557172,
       -0.07843642, -0.01471631, -0.03466842, -0.07865772, -0.09977485,
       -0.03558775, -0.05065348, -0.0568878 , -0.00898168, -0.03468629,
       -0.02591222, -0.09401511, -0.16246705, -0.0376685 , -0.05307969,
       -0.02406321, -0.04385899, -0.11991318, -0.03587697, -0.10588483,
       -0.03834053, -0.26700248, -0.09411734, -0.06177092, -0.09578086,
       -0.03079815, -0.14950299, -0.02471974, -0.22766416, -0.03744197,
       -0.1185192 , -0.0453076 , -0.0289946 , -0.04801861, -0.04078463,
       -0.06627482, -0.07355501, -0.24802114, -0.00708326, -0.03559968,
       -0.15439856, -0.05574224, -0.620796  , -0.21362567, -0.06834376,
       -0.11061047, -0.09729858, -0.07963304, -0.05746897, -0.09080773,
       -0.054639  , -0.04599809, -0.17773209, -0.56908095, -0.37223   ,
       -0.0921029 ]), 'test_r2': array([ 0.98956031,  0.97768337,  0.02571626,  0.70959874, -3.5885689 ,
        0.88325311,  0.75966431,  0.91571127,  0.99705941,  0.96089052,
        0.84792635,  0.91977662, -1.17537073,  0.99727459,  0.99119325,
        0.99754177,  0.99283382,  0.99340226,  0.99526893,  0.99040709,
        0.95089756, -0.05623949,  0.71785429,  0.99921698,  0.95883221,
        0.98992375,  0.96931221,  0.97747704,  0.76098505,  0.9618411 ,
        0.95937486,  0.82658132,  0.99583255,  0.81534124,  0.93208031,
        0.98368249,  0.99275882,  0.96052754,  0.99971061,  0.99660095,
        0.99633186,  0.67463593,  0.75000574,  0.95422769,  0.39352378,
        0.99880329,  0.97578622,  0.6233899 ,  0.97839211,  0.66824553,
        0.99395562,  0.79471226,  0.94106479, -5.43141431,  0.93044536,
        0.99251634,  0.89073827,  0.9963613 ,  0.33502682,  0.99474085,
        0.95976486,  0.9937824 ,  0.99742627,  0.9916953 ,  0.98736032,
        0.93272823,  0.98967129,  0.66783433,  0.99989921,  0.99534241,
        0.89619218,  0.98686563, -3.7407497 ,  0.70624448,  0.58514716,
        0.95941352,  0.96659975,  0.97115113,  0.9732111 ,  0.95089582,
        0.9896617 ,  0.99405047,  0.83893443, -2.68060191,  0.55237669,
        0.98486153]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0029277433369518636, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1642, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.82647133, 2.51282668, 2.86732292, 2.60112357, 3.34978008,
       1.90956879, 2.90083218, 1.13318706, 1.13964581, 1.14220381,
       2.08029413, 1.16686273, 3.13927412, 2.00049281, 3.70443964,
       2.74653792, 3.22504854, 3.59083533, 3.01257777, 2.14179611,
       1.26170254, 1.33332229, 1.85316777, 1.46193027, 1.12181425,
       2.45422101, 2.45699978, 2.77062702, 1.21168613, 2.20154691,
       2.44352698, 2.9850204 , 1.43233156, 2.49648762, 2.84518218,
       3.16685915, 2.07969522, 1.57576823, 1.08983755, 3.51967263,
       3.0518961 , 3.18230581, 3.48623586, 2.82097793, 1.33645701,
       2.68889427, 1.16454101, 1.18433332, 2.66030622, 3.30491161,
       1.16582561, 2.45790386, 1.12739182, 2.61886048, 2.435956  ,
       3.23957253, 1.0980463 , 2.87412429, 1.13628888, 3.21857309,
       2.01144123, 1.09643078, 3.13816023, 1.23298979, 2.84419036,
       1.19449306, 1.79927278, 3.06842422, 1.85643625, 1.79856348,
       2.94994736, 2.4867177 , 1.61756563, 1.67206836, 2.35142565,
       1.2023375 , 1.86980844, 1.34780216, 2.25418329, 1.81291747,
       1.57976484, 1.58538175, 1.69024062, 1.13562441, 1.66577792,
       1.58805346]), 'score_time': array([0.21793294, 0.23869729, 0.16110253, 0.15533638, 0.17501283,
       0.12624145, 0.26356769, 0.15300941, 0.07882476, 0.08723545,
       0.16090846, 0.07521009, 0.34878492, 0.08003378, 0.2662797 ,
       0.23883581, 0.23853612, 0.18096519, 0.23737359, 0.20990658,
       0.08391976, 0.24242282, 0.07307076, 0.08023214, 0.07364845,
       0.16293216, 0.23651862, 0.16914845, 0.07702374, 0.08166885,
       0.2404263 , 0.23344326, 0.16847062, 0.16512632, 0.15862846,
       0.23262978, 0.15783954, 0.1739614 , 0.07272911, 0.23029685,
       0.16461062, 0.25418878, 0.22885323, 0.21436644, 0.08108091,
       0.15691304, 0.07190275, 0.07570362, 0.25961256, 0.17592907,
       0.08276439, 0.07545161, 0.07321692, 0.20579195, 0.18981099,
       0.23596263, 0.07543564, 0.24135232, 0.07445526, 0.20574307,
       0.16600204, 0.16525531, 0.07163668, 0.07677817, 0.15270853,
       0.11277127, 0.11212349, 0.16139269, 0.07605791, 0.26160502,
       0.07339835, 0.08422375, 0.0733335 , 0.07427645, 0.08118939,
       0.07516932, 0.13377571, 0.07290316, 0.07433343, 0.07396102,
       0.08796716, 0.07665181, 0.11501288, 0.07680416, 0.11834764,
       0.07839274]), 'test_pearson_r': array([ 0.99181004,  0.98981175,  0.99987992,  0.99982633,  0.99934099,
        0.99895777,  0.99912223,  0.99823468,  0.9976804 , -0.82971765,
        0.99992396,  0.70456386,  0.99992465,  0.99686943,  0.99982897,
        0.99979116,  0.96299644,  0.99983502,  0.95061502,  0.96044968,
        0.97158556,  0.99718216,  0.99817021,  0.95414886,  0.99621866,
       -0.99115431,  0.99873143,  0.99994675,  0.99539141,  0.96373539,
       -0.6281631 ,  0.99981303,  0.9998908 ,  0.99731571,  0.99718376,
        0.95623232,  0.99897609,  0.99626328,  0.93927278,  0.66804871,
        0.44022438,  0.997191  ,  0.95728584,  0.99902862,  0.96788181,
        0.94287719,  0.84643883,  0.98663292,  0.91702428,  0.99510387,
        0.99117047,  0.79076129,  0.99721065,  0.99991486,  0.9988504 ,
        0.99426782,  0.99680293,  0.99997505,  0.99774996,  0.99363012,
        0.98384   ,  0.99999878,  0.99321061,  0.99857534,  0.99999241,
        0.99493966,  0.99393795,  0.98990742,  0.94656497,  0.94486102,
        0.98041842,  0.99532751,  0.99776613,  0.99931347,  0.99985758,
        0.97965159,  0.99852538,  0.9810848 ,  0.9940751 ,  0.94229751,
        0.9999933 ,  0.99866779,  0.99999788,  0.97014635,  0.94929642,
        0.99999311]), 'test_spearman_r': array([ 1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  0.8660254,  1.       , -0.5      ,
        1.       ,  0.5      ,  0.5      ,  1.       ,  1.       ,
        1.       ,  1.       ,  0.8660254,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  0.5      ,  1.       ,
       -0.5      ,  1.       ,  1.       ,  1.       ,  1.       ,
       -0.5      ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  0.5      ,
        0.5      ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  0.5      ,  1.       ,  1.       ,  1.       ,
        0.5      ,  0.5      ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  0.5      ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  0.5      ,
        1.       ,  0.5      ,  1.       ,  0.5      ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ]), 'test_rmse': array([-0.09710112, -0.10982794, -0.05669355, -0.03237316, -0.06620179,
       -0.09289572, -0.12013641, -0.01701643, -0.05380662, -0.82754695,
       -0.01764921, -0.26728384, -0.02802245, -0.13032474, -0.03006903,
       -0.02994557, -0.1137348 , -0.01975583, -0.20923344, -0.10957044,
       -0.27022434, -0.03883196, -0.08104961, -0.19162159, -0.08738404,
       -0.55223852, -0.040328  , -0.01748613, -0.08416992, -0.16893006,
       -0.90335147, -0.05212335, -0.01936323, -0.07340282, -0.0709958 ,
       -0.0877483 , -0.03478028, -0.06254796, -0.29513484, -0.15096399,
       -0.25050267, -0.05209759, -0.12204783, -0.08700523, -0.19026123,
       -0.26388767, -0.32685593, -0.19151315, -0.62507544, -0.03041257,
       -0.11998727, -0.1626201 , -0.09659649, -0.04088291, -0.02921283,
       -0.2264278 , -0.11294664, -0.04504028, -0.07599419, -0.05985973,
       -0.09977718, -0.04508329, -0.10754008, -0.07842673, -0.05375012,
       -0.05160097, -0.08920578, -0.11208186, -0.09434372, -0.15521937,
       -0.04101795, -0.05861492, -0.05895719, -0.02681148, -0.04215438,
       -0.0909421 , -0.12185416, -0.2318512 , -0.11507551, -0.19183118,
       -0.0078492 , -0.04628255, -0.07916086, -0.07566904, -0.09887963,
       -0.02083756]), 'test_mae': array([-0.07790284, -0.08130652, -0.03972863, -0.02393773, -0.05168991,
       -0.07478353, -0.09538783, -0.01350386, -0.0428433 , -0.49892099,
       -0.01404858, -0.19017318, -0.02418561, -0.10409032, -0.02420192,
       -0.02602312, -0.08304408, -0.01870474, -0.17114201, -0.08964665,
       -0.19384389, -0.03697983, -0.0790434 , -0.11812683, -0.05127149,
       -0.35520917, -0.02746164, -0.01226377, -0.06715322, -0.14549635,
       -0.5427808 , -0.03674453, -0.01609146, -0.07174372, -0.05597044,
       -0.07387793, -0.02701261, -0.04287025, -0.19696696, -0.12138735,
       -0.15256753, -0.04830797, -0.09973854, -0.07870499, -0.1424983 ,
       -0.17228419, -0.22144795, -0.14944446, -0.36498035, -0.021356  ,
       -0.0997532 , -0.14508306, -0.07121565, -0.03826982, -0.0255506 ,
       -0.14112408, -0.08616145, -0.02785418, -0.05911728, -0.05734483,
       -0.07474488, -0.0365326 , -0.07745267, -0.06643493, -0.04713714,
       -0.04327308, -0.06816574, -0.10221909, -0.07726768, -0.13184321,
       -0.03704461, -0.03882017, -0.03697945, -0.02283632, -0.03496354,
       -0.08247093, -0.11248758, -0.15603481, -0.0897002 , -0.15381516,
       -0.00752402, -0.04614851, -0.07881684, -0.05701387, -0.07189725,
       -0.0188194 ]), 'test_r2': array([ 0.95431626,  0.95696283,  0.99655447,  0.97723488,  0.94165665,
        0.97583317,  0.76207629,  0.95968288,  0.99490342, -2.05350586,
        0.99931389,  0.3951781 ,  0.99506206,  0.95217596,  0.99901727,
        0.99726004,  0.90757943,  0.99907952,  0.8391599 ,  0.87454918,
        0.91423387,  0.99383689,  0.95294531,  0.75529131,  0.88319546,
       -0.71770869,  0.99506492,  0.99331404,  0.96723158,  0.44125039,
       -3.5687178 ,  0.9868143 ,  0.99943773,  0.93755632,  0.97056578,
        0.80137677,  0.9977178 ,  0.98888819,  0.77959552,  0.04590571,
       -3.18696104,  0.97751265,  0.86367958,  0.97760224,  0.91747054,
        0.83851213,  0.64118584,  0.60471808,  0.39831049,  0.9806809 ,
        0.94224764, -0.26211025,  0.96583416,  0.99309299,  0.99450931,
        0.81260163,  0.97876235,  0.99521786,  0.98463088,  0.97872558,
        0.93933723,  0.85902813,  0.97526095,  0.98819721,  0.99147485,
        0.96554338,  0.98091267,  0.9634305 ,  0.89208353,  0.88972654,
        0.96006972,  0.95110082,  0.99262658,  0.99821732,  0.97872901,
        0.93814464,  0.97966472, -6.92733681,  0.84980037,  0.77920507,
        0.99983175,  0.99681538,  0.96188792,  0.91393904,  0.33791314,
        0.99876646]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05617045774903145, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 710, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_pearson_r_mean': 0.9114816066514041, 'test_pearson_r_std': 0.2974241401530542, 'test_spearman_r_mean': 0.8694788695043668, 'test_spearman_r_std': 0.3135688638281624, 'test_rmse_mean': 0.12865171024017558, 'test_rmse_std': 0.16138897972401636, 'test_mae_mean': 0.09596794945056439, 'test_mae_std': 0.10799802116985835, 'test_r2_mean': 0.13591387805150765, 'test_r2_std': 6.0206678336386785}}, 'CO_MBL-PPV': {'cluster size (%)': 2, 6: {'test_mad': 1.1920929e-07, 'test_ystd': 1.1920929e-07, 'test_mae': 1.2014008538989314, 'test_rmse': 1.2014714738090886, 'test_r2': -8505.855801170777, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06338639950834661, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 999, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 1.1920929e-07, 'test_ystd': 1.1920929e-07, 'test_mae': 1.2765918748645075, 'test_rmse': 1.2766583354985706, 'test_r2': -9603.870497232932, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 69, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.0, 'test_ystd': 0.0, 'test_mae': 1.2801232116488703, 'test_rmse': 1.2801894889547096, 'test_r2': -9657.076865455729, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.0, 'test_ystd': 0.0, 'test_mae': 1.1930382030276545, 'test_rmse': 1.1931093179216048, 'test_r2': -8387.85365742759, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06056686735896652, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 133, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.0, 'test_ystd': 0.0, 'test_mae': 1.2801232116488703, 'test_rmse': 1.2801894889547096, 'test_r2': -9657.076865455729, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 421, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.0, 'test_ystd': 0.0, 'test_mae': 1.0721361415652522, 'test_rmse': 1.0722152753427499, 'test_r2': -6773.9504547691095, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06807115994721644, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 418, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 1.1920929e-07, 'test_ystd': 1.1920929e-07, 'test_mae': 1.249021627214361, 'test_rmse': 1.2490895547866503, 'test_r2': -9193.524972665347, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08691570105115372, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 207, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_mad_mean': 5.108969552176339e-08, 'test_mad_std': 5.899329892461222e-08, 'test_ystd_mean': 5.108969552176339e-08, 'test_ystd_std': 5.899329892461222e-08, 'test_mae_mean': 1.221776446266921, 'test_mae_std': 0.06988663610070071, 'test_rmse_mean': 1.221846133609726, 'test_rmse_std': 0.06988235091182636, 'test_r2_mean': -8825.601302025316, 'test_r2_std': 972.9854922941977}}, 'ID_MBL-PPV': {'cluster size (%)': 2, 6: {'fit_time': array([14.9410553 , 16.01222682, 17.30286622, 15.86353636, 14.28302073,
       15.4182148 , 15.00782013,  8.54452205,  6.64038992,  7.73423147,
        6.79390407, 15.46956301, 10.56209588, 17.54123545, 17.44627595,
       13.84142566, 14.74671316, 17.0200572 , 15.3947463 , 17.86602259,
        9.19185734,  9.13084507, 11.07478356,  8.78899646,  8.36296558,
       12.45347762, 13.5316627 , 12.43880081, 12.77830267,  9.86544895,
        8.1115129 , 12.1052978 , 12.41882825, 12.07498598,  8.1338141 ,
        7.67499661, 12.03628206, 11.38893986, 11.30555964,  7.67228389,
        9.76953554, 11.99407506,  9.87034369]), 'score_time': array([0.16855431, 0.17670941, 0.16911221, 0.07509875, 0.07649779,
       0.17334247, 0.23274708, 0.10564661, 0.07523131, 0.08481073,
       0.08729768, 0.20209932, 0.18220806, 0.25180221, 0.29102063,
       0.25696874, 0.31430888, 0.18282652, 0.08166385, 0.16771388,
       0.14646792, 0.07322359, 0.16072202, 0.15918875, 0.07856607,
       0.07845831, 0.07612848, 0.14740634, 0.07264066, 0.08390093,
       0.08362007, 0.07356071, 0.08271003, 0.07264209, 0.07188225,
       0.07336855, 0.07888722, 0.07290053, 0.07121253, 0.07260847,
       0.0809958 , 0.0710752 , 0.0783639 ]), 'test_pearson_r': array([ 0.9920029 ,  0.99756262,  0.64613918,  0.98598065,  0.99690163,
        0.98750936,  0.99924531,  0.99253569,  0.99967724,  0.99339852,
        0.94374459,  0.99029646,  0.90838766, -0.46862216,  0.99514854,
        0.96397844,  0.99501139,  0.99824948,  0.99640387,  0.99266112,
        0.56181042,  0.96722552,  0.99375964,  0.88364591,  0.99177772,
        0.50578593,  0.99197604,  0.99716794,  0.9743328 ,  0.99276536,
        0.96832099,  0.97641297,  0.9898337 ,  0.99695771,  0.91648505,
        0.99035752,  0.81360236,  0.98228633,  0.90451038,  0.9889737 ,
        0.99454745,  0.9811945 ,  0.99461044]), 'test_spearman_r': array([ 1.        ,  1.        ,  0.6       ,  1.        ,  0.94285714,
        1.        ,  1.        ,  1.        ,  1.        ,  0.94285714,
        0.88571429,  1.        ,  0.82857143, -0.2       ,  0.88571429,
        1.        ,  0.94285714,  1.        ,  1.        ,  1.        ,
        0.37142857,  0.88571429,  0.94285714,  0.81167945,  0.81167945,
        0.6       ,  0.94285714,  0.98561076,  1.        ,  1.        ,
        0.82857143,  0.82857143,  0.94285714,  1.        ,  1.        ,
        0.82857143,  0.82857143,  0.94285714,  0.82857143,  0.98561076,
        1.        ,  0.82857143,  0.94285714]), 'test_rmse': array([-0.07817692, -0.06641851, -0.50482657, -0.11262153, -0.06574503,
       -0.13424498, -0.053869  , -0.10403682, -0.07179983, -0.03165356,
       -0.28440067, -0.10107091, -0.1014454 , -0.66768012, -0.09413163,
       -0.178136  , -0.07976321, -0.02934871, -0.08458741, -0.12341384,
       -0.592147  , -0.14035456, -0.0695408 , -0.22254931, -0.07527064,
       -0.39609702, -0.0940857 , -0.04488465, -0.09245423, -0.08082343,
       -0.16356879, -0.12129202, -0.06468817, -0.0846121 , -0.27447624,
       -0.10324932, -0.30840066, -0.14366976, -0.12100868, -0.09803948,
       -0.10074388, -0.08984238, -0.05810418]), 'test_mae': array([-0.0587429 , -0.04717257, -0.32786013, -0.06610787, -0.04430214,
       -0.0811734 , -0.04530598, -0.08166907, -0.06698427, -0.02618065,
       -0.17994244, -0.07249262, -0.09121938, -0.36737399, -0.07824274,
       -0.10537465, -0.06495862, -0.02546826, -0.05797329, -0.09275996,
       -0.31373219, -0.09523719, -0.05280178, -0.11157148, -0.04584476,
       -0.19791818, -0.07775998, -0.03540493, -0.06433252, -0.07587334,
       -0.10488003, -0.08671569, -0.04737572, -0.06137917, -0.18975143,
       -0.08502472, -0.17389457, -0.09162837, -0.07796944, -0.06501729,
       -0.07042724, -0.07796602, -0.04825451]), 'test_r2': array([ 0.9782129 ,  0.97327852,  0.17354237,  0.96804441,  0.98706657,
        0.97051163,  0.99116124,  0.9729034 ,  0.99173386,  0.98655277,
        0.82884086,  0.97588167,  0.80627891, -3.23320017,  0.97759403,
        0.89318581,  0.98855223,  0.99533715,  0.98022122,  0.97093536,
        0.06066781,  0.91837114,  0.98649838,  0.75607288,  0.9736621 ,
       -0.73516004,  0.97914895,  0.99411068,  0.94840455,  0.98278361,
        0.93605484,  0.9501676 ,  0.97383887,  0.98877944,  0.77978289,
        0.93305019,  0.57577389,  0.95740977,  0.78137261,  0.97564267,
        0.94783347,  0.94820046,  0.9821889 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0021563374205135397, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.49958873, 3.11068177, 3.08785892, 3.15731502, 2.34378505,
       3.07416105, 2.90645528, 3.16435051, 3.52358508, 3.70323682,
       1.52349067, 3.30307317, 3.30457973, 3.07873344, 2.81784678,
       3.20688987, 3.50376654, 3.26597071, 3.55466628, 3.3659761 ,
       3.48848081, 3.5193615 , 3.35079336, 3.50295806, 3.66972184,
       3.46874332, 3.13933277, 3.25597596, 3.43519998, 3.53227925,
       2.76572847, 3.14450741, 3.24848533, 3.3169086 , 3.39791679,
       3.31446433, 3.18486023, 2.97821116, 3.13346076, 3.06116128,
       1.87239242, 1.11047602, 1.52473378]), 'score_time': array([0.24029446, 0.24063706, 0.24025011, 0.22406101, 0.23917437,
       0.24333119, 0.25466084, 0.15800238, 0.23373675, 0.23756957,
       0.1717062 , 0.24246144, 0.15034628, 0.23896241, 0.23897576,
       0.24113631, 0.2439692 , 0.22575617, 0.24341369, 0.23874259,
       0.25281549, 0.24117756, 0.23887467, 0.23984051, 0.15114045,
       0.18356228, 0.24566293, 0.19499731, 0.07663012, 0.12586498,
       0.07069421, 0.07598281, 0.15685916, 0.06851888, 0.06989503,
       0.07106519, 0.07457662, 0.07175875, 0.07064295, 0.06872201,
       0.0721004 , 0.069314  , 0.07395601]), 'test_pearson_r': array([0.98907495, 0.99817856, 0.99494742, 0.99757873, 0.80036218,
       0.99360334, 0.92554482, 0.99617024, 0.99749125, 0.97318236,
       0.99675763, 0.9045779 , 0.99759745, 0.5304395 , 0.81635696,
       0.99894535, 0.92393685, 0.96100515, 0.42584509, 0.99753587,
       0.99879116, 0.997112  , 0.99586168, 0.8721986 , 0.97872489,
       0.98436452, 0.99654416, 0.96781911, 0.98854238, 0.99369067,
       0.99246848, 0.98954105, 0.99068   , 0.999272  , 0.99231081,
       0.8053344 , 0.99437064, 0.98747103, 0.99717393, 0.95326856,
       0.95934348, 0.98289827, 0.98514795]), 'test_spearman_r': array([0.96428571, 1.        , 0.94285714, 0.94285714, 0.82857143,
       0.88571429, 0.77142857, 0.89864511, 1.        , 0.98561076,
       1.        , 0.82857143, 1.        , 0.42857143, 0.82857143,
       0.94285714, 0.82857143, 1.        , 0.65714286, 1.        ,
       1.        , 1.        , 1.        , 0.82857143, 0.94285714,
       1.        , 1.        , 0.94285714, 0.82857143, 0.94285714,
       1.        , 0.82857143, 0.94285714, 1.        , 1.        ,
       0.88571429, 1.        , 1.        , 1.        , 0.94285714,
       1.        , 1.        , 0.94285714]), 'test_rmse': array([-0.08053437, -0.03667548, -0.04628892, -0.04709187, -0.46415602,
       -0.0631275 , -0.20286402, -0.05671074, -0.05929826, -0.13433074,
       -0.07458262, -0.3141889 , -0.0360194 , -0.65733587, -0.4274967 ,
       -0.03267531, -0.14922278, -0.23419471, -0.5880723 , -0.06905115,
       -0.05394929, -0.08130985, -0.05291649, -0.23122032, -0.12837087,
       -0.12125883, -0.06521272, -0.18325188, -0.08894479, -0.097315  ,
       -0.08101143, -0.12403768, -0.0809224 , -0.02824381, -0.07840562,
       -0.23999869, -0.05307753, -0.10997855, -0.04369246, -0.1671861 ,
       -0.14897969, -0.08541818, -0.1287241 ]), 'test_mae': array([-0.05065631, -0.02139845, -0.03491248, -0.0418963 , -0.24038665,
       -0.05283221, -0.17234392, -0.04305702, -0.04412855, -0.07574889,
       -0.04875035, -0.17638725, -0.02970159, -0.36142161, -0.25093446,
       -0.02428042, -0.10537123, -0.1579529 , -0.24568844, -0.03633442,
       -0.0397958 , -0.07099697, -0.04649371, -0.12996982, -0.1041906 ,
       -0.09852674, -0.05271509, -0.14948395, -0.05763427, -0.07543021,
       -0.04902241, -0.09955673, -0.06643356, -0.01939846, -0.05905895,
       -0.18481577, -0.04691899, -0.07597017, -0.03942382, -0.08559061,
       -0.1114519 , -0.07132549, -0.09254546]), 'test_r2': array([ 0.97618619,  0.99567533,  0.9806021 ,  0.99486923,  0.59717153,
        0.98631212,  0.81965549,  0.98571719,  0.99441689,  0.92684302,
        0.98713288,  0.76661464,  0.99479426, -0.1692854 ,  0.58048672,
        0.99749092,  0.83223726,  0.91323561, -0.01683249,  0.99187058,
        0.99172616,  0.98285967,  0.98442417,  0.70286258,  0.91891166,
        0.93535715,  0.98971544,  0.91505383,  0.97538788,  0.98468541,
        0.9571352 ,  0.97290094,  0.9748119 ,  0.99780899,  0.96935339,
        0.49182565,  0.98853376,  0.96616945,  0.99328896,  0.87601074,
        0.90111458,  0.95302251,  0.93478495]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03897794765782249, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 304, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.25507903, 1.24557996, 1.3376596 , 1.34064221, 0.82142735,
       0.57124496, 1.40820289, 1.01334667, 1.45485544, 1.41316175,
       1.37972164, 1.22178268, 1.36170268, 1.40521383, 1.48648858,
       1.48379493, 1.42126703, 1.40207553, 1.47274709, 1.22149205,
       1.17224336, 0.99165869, 0.89888453, 1.50973654, 1.38188457,
       1.40611291, 1.42101121, 1.44147778, 1.44023395, 1.37465596,
       1.18902302, 1.38551545, 1.42841268, 1.41031718, 1.39462757,
       1.44764161, 1.40594363, 1.43838549, 1.42098594, 1.15944767,
       1.13622761, 1.11380982, 1.15471649]), 'score_time': array([0.23785639, 0.24588108, 0.22950339, 0.22921872, 0.155725  ,
       0.16132998, 0.24190736, 0.06935167, 0.24574184, 0.23437357,
       0.21593642, 0.24983263, 0.23012137, 0.21711779, 0.23428583,
       0.24230361, 0.2201643 , 0.23264837, 0.24556899, 0.23258591,
       0.24888253, 0.14980674, 0.14688778, 0.21846962, 0.23854351,
       0.24131799, 0.2024157 , 0.18964243, 0.20398808, 0.18311501,
       0.16851068, 0.19274783, 0.15644431, 0.11289215, 0.07262778,
       0.07562351, 0.11719155, 0.06976724, 0.07069039, 0.07659912,
       0.0701344 , 0.07113075, 0.0724802 ]), 'test_pearson_r': array([ 0.98087662,  0.99849484,  0.99352851,  0.98904634,  0.9994771 ,
        0.78969412,  0.98908333,  0.98636366,  0.99831589,  0.99121424,
        0.91909815,  0.99731672,  0.9729599 ,  0.9375864 ,  0.96800843,
        0.99563252,  0.98904911,  0.9667328 ,  0.85030811,  0.9955727 ,
        0.98972697,  0.9973808 ,  0.90212226,  0.99624089, -0.48038981,
        0.99632931,  0.99425758,  0.98334558,  0.99076387,  0.75625924,
        0.94189453,  0.9723253 ,  0.99640599,  0.9992049 ,  0.77711648,
        0.95392501,  0.99981529,  0.9889811 ,  0.99869633,  0.62911088,
        0.9666605 ,  0.98958472,  0.99849373]), 'test_spearman_r': array([1.        , 0.94285714, 1.        , 0.88571429, 1.        ,
       0.82857143, 0.94285714, 0.94285714, 1.        , 1.        ,
       0.88571429, 1.        , 0.94285714, 0.840668  , 0.82857143,
       0.94285714, 1.        , 1.        , 0.88571429, 0.94285714,
       1.        , 1.        , 0.88571429, 1.        , 0.02857143,
       0.98561076, 1.        , 0.94285714, 0.94285714, 0.71428571,
       0.94285714, 0.88571429, 0.82857143, 1.        , 0.65714286,
       0.88571429, 1.        , 0.94285714, 1.        , 0.82857143,
       0.88571429, 0.81167945, 1.        ]), 'test_rmse': array([-0.11149055, -0.05732618, -0.19748527, -0.11332591, -0.02410126,
       -0.39038474, -0.11894826, -0.13656778, -0.0776292 , -0.05979261,
       -0.19732731, -0.06182308, -0.16485583, -0.11172529, -0.16810163,
       -0.08149846, -0.09225267, -0.14186727, -0.21890525, -0.05443805,
       -0.10841968, -0.04134918, -0.17797664, -0.08297544, -0.65068155,
       -0.07283425, -0.08174753, -0.13567195, -0.09456154, -0.18806738,
       -0.1974754 , -0.14481743, -0.07069626, -0.04620869, -0.4584782 ,
       -0.17971951, -0.03486871, -0.13137318, -0.04362628, -0.60256148,
       -0.08873833, -0.10357368, -0.03766819]), 'test_mae': array([-0.07824896, -0.04620896, -0.11017591, -0.07049803, -0.01925199,
       -0.18209535, -0.10405638, -0.1124385 , -0.06242413, -0.05350277,
       -0.11691202, -0.04422748, -0.09488071, -0.0805063 , -0.12522847,
       -0.06019865, -0.06045598, -0.11604226, -0.13571282, -0.03757225,
       -0.07847589, -0.03303617, -0.12471145, -0.06025305, -0.33092433,
       -0.06583913, -0.05906674, -0.0812243 , -0.06402733, -0.14775777,
       -0.11538086, -0.08002114, -0.061025  , -0.03805461, -0.21749043,
       -0.11159755, -0.02891215, -0.10770502, -0.03597359, -0.30942277,
       -0.06664882, -0.08276646, -0.02780091]), 'test_r2': array([ 0.95274172,  0.99099585,  0.93538855,  0.96414037,  0.99802586,
        0.38391559,  0.9734049 ,  0.92584946,  0.99295549,  0.98026338,
        0.78794474,  0.98415828,  0.93161197,  0.82113913,  0.89381144,
        0.9894842 ,  0.97348925,  0.93093201,  0.66526942,  0.99017617,
        0.92730554,  0.99444664,  0.79170636,  0.96894891, -4.23658382,
        0.9878092 ,  0.98046996,  0.96234458,  0.98121252,  0.43624603,
        0.81634063,  0.91710089,  0.99243758,  0.99263984,  0.50094975,
        0.89986644,  0.99770682,  0.96715131,  0.99110149,  0.25602681,
        0.92265173,  0.9728977 ,  0.99575729]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04786776304179686, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 125, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([0.92371941, 1.03535914, 1.53089046, 0.8600533 , 1.48644328,
       0.62904406, 0.5474031 , 0.54979277, 0.5832262 , 1.85784221,
       1.27814722, 1.75150514, 1.83007431, 1.63570428, 1.73824692,
       1.6288178 , 1.23307729, 1.28997278, 1.6944263 , 1.17122221,
       0.53977513, 0.52422047, 0.54666424, 0.54167628, 1.00446391,
       1.12786245, 0.69610953, 0.52064729, 1.1041801 , 0.58711505,
       0.563241  , 0.64731312, 0.85975623, 0.98112702, 1.02065921,
       0.936836  , 0.80443597, 0.52826023, 0.72705173, 0.53260565,
       0.51992965, 0.78601146, 0.61454582]), 'score_time': array([0.20714808, 0.26564407, 0.24108219, 0.07070875, 0.17578459,
       0.07656121, 0.079     , 0.08022594, 0.07951045, 0.25566912,
       0.14387083, 0.3393724 , 0.2407403 , 0.23878551, 0.23522639,
       0.40080357, 0.15175223, 0.19404411, 0.23830056, 0.2403152 ,
       0.07468557, 0.08124232, 0.07430482, 0.07419753, 0.15453458,
       0.16611528, 0.08346009, 0.07633877, 0.09032989, 0.07863331,
       0.16483235, 0.07739544, 0.07163596, 0.07311487, 0.07128859,
       0.07095981, 0.07158041, 0.0752213 , 0.07100201, 0.07702374,
       0.08145761, 0.07408762, 0.070292  ]), 'test_pearson_r': array([0.99257328, 0.9982608 , 0.99571976, 0.99811185, 0.99886934,
       0.97735259, 0.97501236, 0.95364997, 0.99707037, 0.99982146,
       0.99807532, 0.29692606, 0.99244294, 0.92801928, 0.98192616,
       0.99599644, 0.99827369, 0.98827898, 0.99884728, 0.98456205,
       0.98445762, 0.99688168, 0.9937344 , 0.93664399, 0.98361177,
       0.46574399, 0.96552943, 0.98807318, 0.98892317, 0.98889364,
       0.90755726, 0.99805515, 0.98883102, 0.98253126, 0.76862515,
       0.99521821, 0.96459801, 0.95848215, 0.99288188, 0.91481482,
       0.99661109, 0.97746599, 0.9902333 ]), 'test_spearman_r': array([0.96428571, 0.92763366, 1.        , 1.        , 1.        ,
       0.94285714, 1.        , 0.94285714, 1.        , 0.94112395,
       1.        , 0.5       , 1.        , 0.94285714, 0.94285714,
       1.        , 1.        , 0.82857143, 1.        , 0.94285714,
       0.82857143, 1.        , 1.        , 0.77142857, 0.92763366,
       0.6       , 0.82857143, 1.        , 0.94285714, 1.        ,
       0.65714286, 1.        , 0.94285714, 0.88571429, 0.65714286,
       1.        , 0.82857143, 1.        , 0.88571429, 0.94285714,
       1.        , 1.        , 1.        ]), 'test_rmse': array([-0.06099104, -0.07916483, -0.06881562, -0.06008947, -0.02396897,
       -0.19658239, -0.12755831, -0.19667755, -0.06982086, -0.02103582,
       -0.03861362, -0.91502548, -0.11991675, -0.19293854, -0.09677345,
       -0.06257386, -0.11269346, -0.21921177, -0.04714844, -0.12633365,
       -0.11508164, -0.03983914, -0.08625939, -0.15687887, -0.13330908,
       -0.71118406, -0.15090461, -0.06823777, -0.07594055, -0.10997564,
       -0.24338367, -0.03748024, -0.06268198, -0.08315345, -0.48370359,
       -0.08427153, -0.2304274 , -0.14939136, -0.08727271, -0.18146449,
       -0.07710396, -0.1562711 , -0.1048942 ]), 'test_mae': array([-0.0468248 , -0.06784585, -0.05783818, -0.04317105, -0.01579559,
       -0.13077807, -0.07993477, -0.13559754, -0.04754296, -0.01703594,
       -0.02857313, -0.5356809 , -0.0924896 , -0.13320791, -0.07309316,
       -0.04795866, -0.09926911, -0.157282  , -0.03138133, -0.09689268,
       -0.06867094, -0.03560735, -0.05843919, -0.11720564, -0.07533451,
       -0.43581246, -0.11694678, -0.05049204, -0.05949751, -0.07975299,
       -0.14550368, -0.02887647, -0.04754455, -0.06735932, -0.2980248 ,
       -0.06145773, -0.12846011, -0.09505674, -0.06363142, -0.11296806,
       -0.06453591, -0.09344157, -0.08405765]), 'test_r2': array([ 0.98255194,  0.9894881 ,  0.98738785,  0.98548907,  0.99748577,
        0.82492017,  0.94535504,  0.84205335,  0.98903372,  0.98650723,
        0.99361524, -1.93305995,  0.9003143 ,  0.81853358,  0.94343355,
        0.99198806,  0.98458301,  0.91276802,  0.99578555,  0.95763175,
        0.95959162,  0.99337006,  0.97708579,  0.85406561,  0.95198931,
       -0.55447104,  0.88188297,  0.9653455 ,  0.97572926,  0.97163806,
        0.80904045,  0.99443961,  0.97625159,  0.89604469,  0.40913114,
        0.98376165,  0.91169828,  0.89462007,  0.97790512,  0.81064505,
        0.99126106,  0.92741402,  0.97248558]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 234, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([1.8035152 , 2.0633924 , 0.99822307, 2.10444832, 2.8239007 ,
       0.97836614, 3.10808277, 1.98453689, 1.01251554, 3.17809486,
       2.53833914, 2.1988337 , 2.01385188, 1.00855756, 2.71230841,
       3.03704119, 2.42581177, 2.32716131, 3.09479046, 2.59214306,
       1.66943812, 1.20799661, 1.5913949 , 1.02509403, 1.59851313,
       2.40152788, 2.03075719, 1.04005837, 1.63498688, 2.10876179,
       2.14230061, 1.84605479, 1.80747914, 1.86411953, 1.99040246,
       1.18186474, 0.99160957, 1.85856748, 1.89901352, 1.7471242 ,
       1.21241474, 1.13550329, 1.50562143]), 'score_time': array([0.15599155, 0.25087285, 0.07960534, 0.18357468, 0.24107289,
       0.08134675, 0.1985867 , 0.162256  , 0.07941031, 0.24030995,
       0.23740077, 0.08069849, 0.15983152, 0.07771087, 0.23765707,
       0.3738122 , 0.25320101, 0.23832345, 0.24850416, 0.25131869,
       0.14784813, 0.16717601, 0.17077398, 0.07598901, 0.17032337,
       0.07091045, 0.07845449, 0.07597446, 0.07555032, 0.12534738,
       0.07695508, 0.07526374, 0.07165289, 0.07124424, 0.07744408,
       0.07884741, 0.08024883, 0.07369351, 0.07023001, 0.07399321,
       0.07415199, 0.11724138, 0.07336831]), 'test_pearson_r': array([ 0.9789909 ,  0.99631579,  0.98098657,  0.7060946 ,  0.97233756,
        0.99330218,  0.99843974,  0.92479514,  0.96151549,  0.99021659,
        0.9883573 ,  0.95664119,  0.96759727,  0.99847793,  0.92036881,
        0.96706797,  0.92618274,  0.99809053,  0.94714711,  0.69008493,
        0.9506281 ,  0.99644233,  0.89776545,  0.82383859,  0.48663955,
        0.97560566,  0.99593816,  0.99863981,  0.84003096,  0.99672426,
        0.99297311,  0.99419185,  0.99966666,  0.54680084,  0.95799687,
        0.99583423,  0.98371941,  0.98784479,  0.98964099, -0.67340405,
        0.97732328,  0.99832164,  0.99705111]), 'test_spearman_r': array([0.75      , 0.98561076, 1.        , 0.40583972, 1.        ,
       0.88571429, 1.        , 0.88571429, 0.98561076, 1.        ,
       1.        , 1.        , 0.94285714, 0.94285714, 0.94285714,
       1.        , 0.94285714, 1.        , 0.94285714, 0.82857143,
       0.77142857, 0.94285714, 0.71428571, 0.77142857, 0.57977104,
       0.88571429, 0.92763366, 1.        , 0.77142857, 0.92763366,
       0.77142857, 0.94285714, 1.        , 0.40583972, 0.94285714,
       1.        , 0.94285714, 0.82857143, 1.        , 0.14285714,
       1.        , 1.        , 1.        ]), 'test_rmse': array([-0.15493195, -0.05977397, -0.09293511, -0.45832076, -0.1171579 ,
       -0.09723272, -0.03678377, -0.07087493, -0.08164686, -0.08290589,
       -0.12668968, -0.17183638, -0.22391895, -0.04707518, -0.11717124,
       -0.15282231, -0.24295479, -0.08584272, -0.2005181 , -0.62785149,
       -0.13269343, -0.04910035, -0.19799376, -0.24167333, -0.16347081,
       -0.11548971, -0.06610581, -0.04700728, -0.24273975, -0.07413087,
       -0.07217177, -0.07197241, -0.05129518, -0.39432231, -0.16486259,
       -0.07219581, -0.10403756, -0.10901598, -0.07844355, -0.58792905,
       -0.08989453, -0.04187618, -0.06457883]), 'test_mae': array([-0.09467221, -0.05006341, -0.06834586, -0.19652804, -0.10100421,
       -0.07625029, -0.03186252, -0.0488435 , -0.0721457 , -0.0613729 ,
       -0.10371696, -0.10643044, -0.10823593, -0.03990358, -0.06261386,
       -0.11697612, -0.1669488 , -0.07106507, -0.12908378, -0.29410608,
       -0.08425216, -0.03675051, -0.17083177, -0.18663052, -0.08685794,
       -0.08193431, -0.04776504, -0.03007929, -0.1504561 , -0.0510279 ,
       -0.05582565, -0.0547126 , -0.03976548, -0.20790063, -0.12842087,
       -0.05668166, -0.08708001, -0.07618318, -0.06455774, -0.27344829,
       -0.06788988, -0.02945115, -0.06178667]), 'test_r2': array([ 0.94446624,  0.99113071,  0.94850877,  0.25501813,  0.93300296,
        0.97244353,  0.99585847,  0.83110787,  0.90757189,  0.96861125,
        0.94532075,  0.89910749,  0.90396919,  0.99401398,  0.71973961,
        0.92520749,  0.8430495 ,  0.98831676,  0.88427105,  0.31344339,
        0.87935289,  0.98883475,  0.78724647,  0.58625545, -0.42912948,
        0.94957632,  0.99095608,  0.99561242,  0.67966782,  0.9910171 ,
        0.98311074,  0.98363134,  0.99052361, -0.41140002,  0.91314381,
        0.98819919,  0.96507938,  0.96656929,  0.96659649, -2.39028265,
        0.93736976,  0.99549605,  0.97317371]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03770052924189587, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 549, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 220, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([13.06052995, 12.97235727, 12.77602172, 14.15409255, 13.49814606,
        5.09543633,  8.62532949,  5.1638341 ,  5.6670506 ,  9.61731935,
       12.40219498,  5.09378886, 14.81058502, 12.59903383, 11.3104229 ,
       12.10225487, 13.71770883,  9.90276313, 12.21101832, 10.49560118,
        5.57686615,  6.3344574 , 12.98690844,  5.62924266,  6.02958608,
       10.95630383, 10.56785202,  8.94113708,  5.7809782 ,  6.08396459,
        9.69917941,  6.29624629,  8.43779898,  9.19857979,  8.66326261,
        5.88287473,  9.04082823,  8.42974567,  8.96978378,  8.82934427,
        7.6659379 ,  7.27228808,  4.91200495]), 'score_time': array([0.1831665 , 0.16881609, 0.16530204, 0.26732302, 0.17252684,
       0.18180585, 0.08874321, 0.08014894, 0.08919072, 0.17730474,
       0.16942525, 0.0874114 , 0.24120164, 0.08101177, 0.17249346,
       0.16856408, 0.09881997, 0.24571037, 0.25477457, 0.24277711,
       0.07840157, 0.07767463, 0.07627583, 0.08264661, 0.1778028 ,
       0.0714469 , 0.07236123, 0.07866549, 0.0738287 , 0.07627344,
       0.08114934, 0.07618213, 0.07404542, 0.08873153, 0.07271433,
       0.08855271, 0.07413387, 0.07224989, 0.07309985, 0.07789063,
       0.08314276, 0.07532787, 0.07562089]), 'test_pearson_r': array([0.99644531, 0.54311244, 0.98153327, 0.97006182, 0.99079747,
       0.98495702, 0.94937312, 0.998113  , 0.99884743, 0.99781375,
       0.98171304, 0.97771688, 0.99147159, 0.99604126, 0.95562508,
       0.9935727 , 0.9917702 , 0.98640921, 0.9973083 , 0.99915874,
       0.99336124, 0.98765275, 0.99743831, 0.91502197, 0.95030284,
       0.97382925, 0.97536518, 0.98187232, 0.98315812, 0.87336506,
       0.99228241, 0.99837792, 0.99064188, 0.95890084, 0.99935204,
       0.96855771, 0.53247213, 0.98808943, 0.99128183, 0.98945317,
       0.99015826, 0.37359729, 0.93326259]), 'test_spearman_r': array([1.        , 0.37142857, 0.98561076, 1.        , 1.        ,
       0.77142857, 0.94285714, 1.        , 1.        , 1.        ,
       0.82857143, 0.94285714, 0.98561076, 0.94285714, 0.94285714,
       1.        , 0.94285714, 1.        , 0.82857143, 1.        ,
       1.        , 0.94285714, 0.94285714, 0.94285714, 0.98561076,
       1.        , 1.        , 1.        , 0.94285714, 0.65714286,
       1.        , 1.        , 1.        , 1.        , 0.98561076,
       0.94285714, 0.6       , 0.94285714, 1.        , 1.        ,
       0.94285714, 0.37142857, 0.81167945]), 'test_rmse': array([-0.05279675, -0.48198359, -0.10844378, -0.09027879, -0.07702404,
       -0.13486083, -0.23767268, -0.05473627, -0.05067629, -0.0580146 ,
       -0.0976251 , -0.14405324, -0.08643022, -0.0819357 , -0.1242127 ,
       -0.06325369, -0.0714385 , -0.09127772, -0.06778746, -0.03265621,
       -0.06593583, -0.12957405, -0.04482049, -0.1361834 , -0.16121094,
       -0.26556185, -0.09897255, -0.08513585, -0.1166924 , -0.2715341 ,
       -0.11410089, -0.03768236, -0.07853718, -0.26042455, -0.02963056,
       -0.14953892, -0.61626282, -0.10110019, -0.10333426, -0.09324578,
       -0.10012746, -0.65241515, -0.33504718]), 'test_mae': array([-0.04432738, -0.2665758 , -0.07987698, -0.0864048 , -0.04582643,
       -0.10224362, -0.112206  , -0.0428826 , -0.04276592, -0.04227146,
       -0.07320183, -0.06777396, -0.07304769, -0.06690034, -0.08172331,
       -0.04212324, -0.05512417, -0.06784009, -0.05437636, -0.02238564,
       -0.05540603, -0.09438817, -0.03829549, -0.08392526, -0.12202544,
       -0.18320551, -0.07818267, -0.05988476, -0.08786896, -0.12972711,
       -0.08127177, -0.03505583, -0.05271471, -0.1627622 , -0.02278149,
       -0.10250955, -0.37363929, -0.08403861, -0.09058654, -0.06999931,
       -0.07880288, -0.3522123 , -0.18878106]), 'test_r2': array([ 0.98876474,  0.23171649,  0.88140522,  0.92108291,  0.97739588,
        0.8926992 ,  0.88300456,  0.99502116,  0.99221147,  0.99381028,
        0.94145591,  0.9447653 ,  0.9809714 ,  0.979193  ,  0.88640697,
        0.98334612,  0.9785891 ,  0.96825972,  0.99099273,  0.99792183,
        0.98649077,  0.94987885,  0.9925085 ,  0.81886665,  0.65618844,
        0.84422515,  0.90824947,  0.95954411,  0.95260564,  0.71776865,
        0.98291125,  0.99585533,  0.97327722,  0.8745869 ,  0.99808848,
        0.93255928,  0.08100095,  0.9581988 ,  0.96740087,  0.96672319,
        0.97708501, -0.31830652,  0.84275817]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0029277433369518636, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1642, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([2.75453854, 2.57164264, 3.44911718, 3.07498693, 3.12907219,
       2.43878746, 1.09481907, 1.16116047, 2.54274106, 3.52450514,
       1.30774856, 3.16192412, 2.06079817, 1.48008633, 2.90976167,
       3.37367368, 3.27373624, 2.60304713, 2.43577957, 2.67950249,
       1.08909249, 1.21120501, 1.09900331, 1.59739518, 1.10685539,
       1.09209538, 2.39879584, 2.41355014, 1.24499226, 2.37950206,
       2.29316783, 1.85329366, 2.27893877, 2.25732708, 1.96883154,
       1.14873004, 1.79262877, 1.4872427 , 1.09534717, 1.62247992,
       1.98931479, 1.09181976, 1.41799951]), 'score_time': array([0.18961883, 0.16072845, 0.23765087, 0.16204   , 0.23685932,
       0.15549159, 0.08039546, 0.07603765, 0.24959779, 0.21862125,
       0.08763623, 0.25536394, 0.10960412, 0.0803473 , 0.15309334,
       0.22143722, 0.16566563, 0.16862845, 0.15161061, 0.07774925,
       0.07496047, 0.08014083, 0.07186961, 0.27865458, 0.07506514,
       0.0757215 , 0.07282495, 0.08586693, 0.07327294, 0.07251048,
       0.08818102, 0.12781453, 0.07162237, 0.07478142, 0.07318091,
       0.10402155, 0.06865215, 0.08036637, 0.0879972 , 0.07269573,
       0.07074738, 0.08087492, 0.07712865]), 'test_pearson_r': array([0.98209077, 0.99894206, 0.99696568, 0.98776673, 0.59526311,
       0.89819611, 0.9960196 , 0.99979923, 0.98856978, 0.95249697,
       0.96989778, 0.94943248, 0.86356395, 0.99891802, 0.95580908,
       0.30920727, 0.99609844, 0.97099937, 0.99738215, 0.84398796,
       0.96227158, 0.96807649, 0.93992153, 0.82652822, 0.78978156,
       0.965336  , 0.9937031 , 0.97005218, 0.99445117, 0.99550401,
       0.98872171, 0.99494382, 0.99942348, 0.98882333, 0.97039907,
       0.98692047, 0.99828854, 0.98857102, 0.95405873, 0.93903463,
       0.99860478, 0.9893379 , 0.99635651]), 'test_spearman_r': array([0.92857143, 0.94285714, 1.        , 0.98561076, 0.42857143,
       0.65714286, 0.94285714, 1.        , 0.98561076, 0.94285714,
       0.94285714, 0.94285714, 0.82857143, 1.        , 0.94285714,
       0.14285714, 1.        , 1.        , 1.        , 0.71428571,
       0.94285714, 0.94285714, 0.98561076, 0.77142857, 0.65714286,
       0.71428571, 0.94285714, 1.        , 1.        , 1.        ,
       0.94112395, 0.98561076, 1.        , 1.        , 0.94285714,
       0.94285714, 1.        , 0.77142857, 0.94285714, 0.82857143,
       1.        , 0.94285714, 0.94285714]), 'test_rmse': array([-0.09917906, -0.0399295 , -0.08504837, -0.09164042, -0.84725741,
       -0.29813789, -0.09424134, -0.02916584, -0.08732842, -0.16694508,
       -0.20338684, -0.14908648, -0.39632948, -0.0311702 , -0.13436651,
       -0.63110689, -0.06332277, -0.08115746, -0.05216806, -0.33236443,
       -0.17596547, -0.14175061, -0.23344415, -0.26656152, -0.45359777,
       -0.14396472, -0.0726521 , -0.15030083, -0.09098103, -0.06989398,
       -0.07801998, -0.10705822, -0.04912425, -0.10145263, -0.12064856,
       -0.07257926, -0.04336324, -0.07564122, -0.1981215 , -0.15518772,
       -0.05268173, -0.0756411 , -0.07102531]), 'test_mae': array([-0.07424351, -0.02958961, -0.06603531, -0.05709883, -0.3770733 ,
       -0.14710244, -0.06249029, -0.02442748, -0.05311169, -0.12960799,
       -0.11763811, -0.098244  , -0.19692792, -0.02086978, -0.10681489,
       -0.28661374, -0.05084681, -0.06480746, -0.03594958, -0.21660023,
       -0.09683001, -0.10992826, -0.16144433, -0.1867798 , -0.19917629,
       -0.12347831, -0.05348284, -0.07858188, -0.05207911, -0.05895979,
       -0.05702922, -0.08035639, -0.0429856 , -0.08529446, -0.09933681,
       -0.04970341, -0.0263204 , -0.06003056, -0.15912565, -0.12027264,
       -0.04150763, -0.06967244, -0.04363826]), 'test_r2': array([ 0.96252614,  0.99777171,  0.96654464,  0.94882147,  0.16884541,
        0.78516137,  0.96578945,  0.99863824,  0.97346192,  0.84943857,
        0.92505047,  0.86297438,  0.63983265,  0.99607643,  0.90634768,
       -1.0445386 ,  0.9913831 ,  0.93764591,  0.99388182,  0.48772843,
        0.90139735,  0.9213407 ,  0.88117644,  0.67518148,  0.54091395,
        0.89460455,  0.98049537,  0.93281891,  0.98428286,  0.98389378,
        0.96663064,  0.97702587,  0.99175545,  0.97316916,  0.93723236,
        0.95237032,  0.99574357,  0.95310742,  0.90632985,  0.81167432,
        0.99599214,  0.97307159,  0.98906963]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05617045774903145, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 710, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_pearson_r_mean': 0.9300823581675257, 'test_pearson_r_std': 0.18811038587431253, 'test_spearman_r_mean': 0.903716991910663, 'test_spearman_r_std': 0.16144272143729524, 'test_rmse_mean': 0.1502427272755521, 'test_rmse_std': 0.14639105760426033, 'test_mae_mean': 0.09680774334980673, 'test_mae_std': 0.07535791076321566, 'test_r2_mean': 0.8148775741109697, 'test_r2_std': 0.5259261171731048}}, 'CO_MEH-PPV': {'cluster size (%)': 7, 6: {'test_mad': 0.061499745, 'test_ystd': 0.070293516, 'test_mae': 0.3464024250913069, 'test_rmse': 0.4101968465437356, 'test_r2': -1.1852591819531257, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07953877988854295, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1587, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.065603815, 'test_ystd': 0.075470455, 'test_mae': 0.34165081994523544, 'test_rmse': 0.4050551881479274, 'test_r2': -1.1308197694428812, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05534062881781631, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.046128042, 'test_ystd': 0.05611977, 'test_mae': 0.3472596590924666, 'test_rmse': 0.4069725006721744, 'test_r2': -1.1510398120526544, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04313587726372334, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 99, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.048319586, 'test_ystd': 0.058803637, 'test_mae': 0.34280693205011187, 'test_rmse': 0.4061082926890821, 'test_r2': -1.141914025742818, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.009708548134788669, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.058607347, 'test_ystd': 0.06866587, 'test_mae': 0.3511471160985845, 'test_rmse': 0.41408604125309534, 'test_r2': -1.2268937716664507, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.052582473, 'test_ystd': 0.06021403, 'test_mae': 0.3503129736380419, 'test_rmse': 0.41374295081335305, 'test_r2': -1.2232051206570111, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08419552421842763, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 67, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.06338185, 'test_ystd': 0.07677807, 'test_mae': 0.34791874621745944, 'test_rmse': 0.41270506854654215, 'test_r2': -1.2120652036861146, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 205, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_mad_mean': 0.056588979704039435, 'test_mad_std': 0.007065671207662461, 'test_ystd_mean': 0.06662076392344066, 'test_ystd_std': 0.007667966979067795, 'test_mae_mean': 0.34678552459045814, 'test_mae_std': 0.003280168281200972, 'test_rmse_mean': 0.40983812695227284, 'test_rmse_std': 0.003518125319736963, 'test_r2_mean': -1.1815995550287222, 'test_r2_std': 0.03743864222016474}}, 'ID_MEH-PPV': {'cluster size (%)': 7, 6: {'fit_time': array([ 6.07010913, 10.21797156,  8.9938693 ,  9.69024849,  8.37512779,
        9.36246777,  9.6905942 ,  8.85127831,  6.06990552,  9.08851624,
        6.24144721,  9.14861369,  9.60626841,  6.31184626,  9.42092991]), 'score_time': array([0.08304548, 0.07648611, 0.07842636, 0.07663035, 0.07604742,
       0.15424705, 0.0751617 , 0.07980657, 0.07975316, 0.08255649,
       0.07546258, 0.07487512, 0.07449079, 0.07712531, 0.07749438]), 'test_pearson_r': array([0.86547594, 0.99507046, 0.98624472, 0.96528599, 0.79006234,
       0.96362163, 0.99394788, 0.86083436, 0.86079763, 0.99308723,
       0.97663944, 0.97310352, 0.97434187, 0.99094474, 0.98013434]), 'test_spearman_r': array([0.83281734, 0.98657025, 0.97936017, 0.96491228, 0.74264706,
       0.92647059, 0.98712465, 0.83823529, 0.90128772, 0.98467217,
       0.94607843, 0.9644179 , 0.94297994, 0.97668785, 0.96382605]), 'test_rmse': array([-0.30161658, -0.07621042, -0.11198939, -0.16263824, -0.40303497,
       -0.16492143, -0.07993344, -0.3747571 , -0.27010966, -0.08211959,
       -0.12782765, -0.15784109, -0.14989709, -0.08913445, -0.09684519]), 'test_mae': array([-0.15348537, -0.04485179, -0.07911628, -0.08728477, -0.1825629 ,
       -0.08398647, -0.06568707, -0.171928  , -0.12321775, -0.06212207,
       -0.08350935, -0.09043171, -0.10342802, -0.05543281, -0.07094498]), 'test_r2': array([0.72746827, 0.9876584 , 0.97155806, 0.92843415, 0.59339264,
       0.91361302, 0.98552716, 0.70479329, 0.67340169, 0.98477771,
       0.95326027, 0.93898486, 0.93399151, 0.97616689, 0.95751001]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0021563374205135397, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([1.70614004, 1.81914759, 1.83226752, 1.19563556, 1.16720366,
       1.21762896, 1.97384429, 1.18339849, 1.18050861, 1.7587781 ,
       1.71668983, 1.99864531, 1.82931471, 1.76964617, 1.16643095]), 'score_time': array([0.083287  , 0.07413936, 0.07372379, 0.07355857, 0.07346964,
       0.07669544, 0.07593536, 0.07910228, 0.08726811, 0.07220244,
       0.07067728, 0.07905006, 0.07482719, 0.07350707, 0.07170153]), 'test_pearson_r': array([0.98777995, 0.91352513, 0.98640809, 0.9330126 , 0.80125817,
       0.91978695, 0.74273719, 0.99590074, 0.95804753, 0.96764737,
       0.99563171, 0.99159491, 0.97591174, 0.98287173, 0.94690161]), 'test_spearman_r': array([0.97883338, 0.81775953, 0.94318182, 0.9044916 , 0.79411765,
       0.92392638, 0.7622549 , 0.98957713, 0.90196078, 0.89460784,
       0.995089  , 0.99264706, 0.9754902 , 0.99202962, 0.92336008]), 'test_rmse': array([-0.08712569, -0.28767244, -0.11009916, -0.21829914, -0.39782759,
       -0.24403868, -0.52076508, -0.06047414, -0.17055963, -0.1637591 ,
       -0.07571611, -0.08155349, -0.13807719, -0.11966825, -0.18723531]), 'test_mae': array([-0.04726473, -0.14317701, -0.08273013, -0.10966539, -0.17066966,
       -0.10661836, -0.20510094, -0.04952863, -0.11427667, -0.10747473,
       -0.05153679, -0.05590604, -0.10075194, -0.06418474, -0.12389797]), 'test_r2': array([0.96992757, 0.82004027, 0.97085988, 0.83560229, 0.58648498,
       0.83162425, 0.51859505, 0.98752606, 0.89162427, 0.93240405,
       0.98887938, 0.98011631, 0.93910048, 0.96212954, 0.86692032]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03897794765782249, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 304, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([0.45848417, 0.46050239, 0.74948215, 0.73043203, 0.58042407,
       0.77358699, 0.44451642, 0.50498176, 0.48307753, 0.83020067,
       0.86842132, 0.78750253, 0.77047181, 0.75230932, 0.48069763]), 'score_time': array([0.07063055, 0.07258797, 0.07202315, 0.07223296, 0.0726018 ,
       0.07527852, 0.10127068, 0.07762074, 0.076092  , 0.07348776,
       0.07288122, 0.07633662, 0.07410669, 0.07220173, 0.07423568]), 'test_pearson_r': array([0.98044658, 0.9931741 , 0.95023802, 0.97538991, 0.97897899,
       0.98948884, 0.90939041, 0.97864234, 0.74264681, 0.98552586,
       0.96952237, 0.99616052, 0.90141895, 0.83018533, 0.99432619]), 'test_spearman_r': array([0.97470328, 0.99328872, 0.95459236, 0.9504644 , 0.94788491,
       0.98529412, 0.86764706, 0.97794118, 0.74555501, 0.94969397,
       0.96078431, 0.98957713, 0.85222709, 0.84068627, 0.98527682]), 'test_rmse': array([-0.14169112, -0.07966173, -0.2462231 , -0.1252165 , -0.15149227,
       -0.10425024, -0.20862583, -0.1127425 , -0.39636755, -0.10988787,
       -0.1602403 , -0.06113918, -0.29549679, -0.37461297, -0.06858247]), 'test_mae': array([-0.08426441, -0.04372792, -0.13569981, -0.0717703 , -0.10152306,
       -0.07462029, -0.11567483, -0.07666552, -0.16509116, -0.07357243,
       -0.10126967, -0.04942546, -0.13693211, -0.15326172, -0.04729102]), 'test_r2': array([0.95406911, 0.98458285, 0.89323381, 0.94819906, 0.93893123,
       0.97672955, 0.81168583, 0.95246904, 0.39629947, 0.9694932 ,
       0.91750219, 0.99222873, 0.78264434, 0.65729141, 0.98847562]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04786776304179686, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 125, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([0.53825641, 0.51017594, 0.70400882, 0.84095836, 0.73484659,
       0.9646523 , 0.55187058, 0.83581114, 0.56973147, 0.84084702,
       0.52603984, 0.96835494, 0.9503696 , 0.80835152, 0.62770963]), 'score_time': array([0.10636473, 0.07318807, 0.07296681, 0.07094598, 0.09511852,
       0.07471871, 0.07745361, 0.08113194, 0.08882284, 0.07441497,
       0.07509255, 0.07527256, 0.07314539, 0.07279348, 0.07560802]), 'test_pearson_r': array([0.9932386 , 0.97976464, 0.97027019, 0.57037208, 0.96705286,
       0.99331726, 0.97119371, 0.99573656, 0.76946281, 0.97589778,
       0.98112506, 0.87518324, 0.9451139 , 0.98248465, 0.98352964]), 'test_spearman_r': array([0.99018595, 0.97936017, 0.97263823, 0.76668402, 0.94607843,
       0.9877451 , 0.93627451, 0.99019608, 0.80858957, 0.94233129,
       0.94052746, 0.875     , 0.92892157, 0.94362745, 0.9754902 ]), 'test_rmse': array([-0.07841798, -0.1025997 , -0.15435572, -0.53050763, -0.13293009,
       -0.09541501, -0.17553972, -0.05399797, -0.42549781, -0.11871931,
       -0.12011819, -0.28563941, -0.26253586, -0.1219636 , -0.13356158]), 'test_mae': array([-0.06019283, -0.0521451 , -0.09502304, -0.1980614 , -0.0912642 ,
       -0.07168491, -0.11444019, -0.0408392 , -0.19846412, -0.09596254,
       -0.08458265, -0.1225928 , -0.13858871, -0.07929366, -0.08659438]), 'test_r2': array([ 0.9860229 ,  0.95745589,  0.93687577, -0.23184896,  0.92877695,
        0.98305697,  0.93741633,  0.99098622,  0.49843266,  0.93874875,
        0.96211929,  0.72843757,  0.86498408,  0.95828677,  0.96547564]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 234, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([1.24037337, 1.60583043, 1.59034514, 1.38200903, 0.95859694,
       0.94840527, 1.55334949, 0.98397231, 0.95756698, 1.54604363,
       1.44486356, 1.62683249, 1.56080294, 1.08814025, 1.38222528]), 'score_time': array([0.1663487 , 0.07416296, 0.07880306, 0.07884717, 0.07670212,
       0.11043024, 0.07826471, 0.07924461, 0.07925224, 0.07458639,
       0.07401419, 0.07425451, 0.07244325, 0.07737136, 0.07307744]), 'test_pearson_r': array([0.97726102, 0.88924828, 0.97150506, 0.9879688 , 0.97042301,
       0.96051138, 0.87171155, 0.8951928 , 0.93569639, 0.99504608,
       0.98835585, 0.88847918, 0.98988591, 0.83477866, 0.9970658 ]), 'test_spearman_r': array([0.921012  , 0.82262517, 0.78346264, 0.95454545, 0.98221968,
       0.96873102, 0.91176471, 0.82843137, 0.83835422, 0.95278988,
       0.93742402, 0.84242812, 0.98221968, 0.85294118, 0.98529412]), 'test_rmse': array([-0.12889458, -0.27857337, -0.15243714, -0.090877  , -0.16714548,
       -0.15613221, -0.37135994, -0.18754184, -0.15358661, -0.07732483,
       -0.10656051, -0.25413794, -0.08744111, -0.3580026 , -0.05579873]), 'test_mae': array([-0.07778475, -0.12428741, -0.09747739, -0.06255508, -0.09204635,
       -0.10401422, -0.16941267, -0.12844119, -0.10057132, -0.05289254,
       -0.08491888, -0.12317535, -0.06753793, -0.14834561, -0.04204122]), 'test_r2': array([0.95348745, 0.77286632, 0.92979161, 0.9717017 , 0.93521769,
       0.9218016 , 0.73504164, 0.79299123, 0.87244167, 0.98988408,
       0.97542549, 0.73270627, 0.97974747, 0.65689562, 0.99276562]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03770052924189587, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 549, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 220, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([7.10420036, 6.69796705, 7.76838875, 7.92000389, 7.85385156,
       6.11702442, 4.62675071, 4.93214583, 5.80146742, 6.42831993,
       6.87683439, 7.56326866, 7.52155089, 5.97703958, 7.67433882]), 'score_time': array([0.07844734, 0.07855058, 0.08061481, 0.07498169, 0.07909489,
       0.07897639, 0.08960032, 0.09104371, 0.0802362 , 0.09189296,
       0.07968593, 0.07739949, 0.07835054, 0.0921669 , 0.07738018]), 'test_pearson_r': array([0.80633494, 0.96552858, 0.99072263, 0.98600918, 0.98400405,
       0.98755468, 0.9977915 , 0.97717989, 0.94127006, 0.98625247,
       0.98127672, 0.98911797, 0.85560554, 0.98565502, 0.79515121]), 'test_spearman_r': array([0.81592729, 0.93546734, 0.97417407, 0.98709358, 0.9797672 ,
       0.97058824, 0.98217745, 0.91911765, 0.89270403, 0.98039216,
       0.89435159, 0.9944821 , 0.89189458, 0.95769485, 0.74678126]), 'test_rmse': array([-0.28430208, -0.1273572 , -0.10551061, -0.10359731, -0.10323348,
       -0.08176762, -0.04932251, -0.12857357, -0.19783386, -0.09619598,
       -0.13510805, -0.11083511, -0.38280267, -0.13014386, -0.49176588]), 'test_mae': array([-0.12541791, -0.0969353 , -0.06210488, -0.06161489, -0.07317986,
       -0.05920241, -0.03728353, -0.09648831, -0.13379712, -0.07270094,
       -0.07093338, -0.07452278, -0.18783914, -0.10259516, -0.21017826]), 'test_r2': array([0.64411898, 0.91434983, 0.97846955, 0.97189417, 0.96537372,
       0.96993814, 0.995098  , 0.95215085, 0.82595337, 0.9709371 ,
       0.96260669, 0.96770521, 0.69808327, 0.95561708, 0.55453374]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0029277433369518636, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1642, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.77823257, 1.41828775, 1.52299547, 1.80716944, 1.14285493,
       1.63397503, 1.12678218, 1.38431239, 1.24804068, 1.58939648,
       1.86510444, 1.38430524, 1.63435388, 1.78312302, 1.92304325]), 'score_time': array([0.07285261, 0.08048463, 0.07187366, 0.07106113, 0.07977343,
       0.07307792, 0.08382797, 0.07267714, 0.07926536, 0.08312392,
       0.07196164, 0.0770309 , 0.09027314, 0.07820415, 0.07640171]), 'test_pearson_r': array([0.98801738, 0.80007649, 0.98776038, 0.94604988, 0.91528721,
       0.78995092, 0.9321222 , 0.91909756, 0.84383611, 0.98854887,
       0.99309841, 0.99059506, 0.99285388, 0.96049576, 0.99593976]), 'test_spearman_r': array([0.98502853, 0.77663041, 0.97624019, 0.95611784, 0.93137255,
       0.76960784, 0.95588235, 0.87921537, 0.81862745, 0.98034694,
       0.99017498, 0.96568627, 0.99509804, 0.93137255, 0.97058824]), 'test_rmse': array([-0.10068931, -0.4576894 , -0.10037628, -0.18294977, -0.24640389,
       -0.3844725 , -0.24513949, -0.23957452, -0.29411596, -0.0959089 ,
       -0.07482908, -0.08856467, -0.06661891, -0.15563384, -0.06568719]), 'test_mae': array([-0.06203029, -0.16424433, -0.06853698, -0.11389066, -0.10500978,
       -0.14193719, -0.13670549, -0.15569338, -0.14647472, -0.05743803,
       -0.05691034, -0.07498692, -0.04177888, -0.11008091, -0.05002846]), 'test_r2': array([0.97383428, 0.59354691, 0.97542519, 0.88849686, 0.81347837,
       0.55501462, 0.8286876 , 0.83205267, 0.69636975, 0.97722564,
       0.98389706, 0.98082352, 0.98565307, 0.91798419, 0.99128909]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05617045774903145, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 710, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_pearson_r_mean': 0.9411828555685194, 'test_pearson_r_std': 0.07435296318500333, 'test_spearman_r_mean': 0.9243383569990418, 'test_spearman_r_std': 0.07014703395822482, 'test_rmse_mean': 0.17992947328334982, 'test_rmse_std': 0.11457904737903789, 'test_mae_mean': 0.09883175851499365, 'test_mae_std': 0.041814545161894465, 'test_r2_mean': 0.8706172273817225, 'test_r2_std': 0.1728831375657989}}, 'CO_P3(4MP)T': {'cluster size (%)': 2, 6: {'test_mad': 0.019627333, 'test_ystd': 0.023001643, 'test_mae': 0.017907071846954864, 'test_rmse': 0.02194634305680171, 'test_r2': -15.886828555286819, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.0069928616, 'test_ystd': 0.008250841, 'test_mae': 0.07995745776758431, 'test_rmse': 0.08073768265635657, 'test_r2': -227.54742211896007, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0038816420649909478, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.0076542944, 'test_ystd': 0.008838826, 'test_mae': 0.07693666456804513, 'test_rmse': 0.0774139061602266, 'test_r2': -209.11726071564152, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0026429236418846975, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.0055390894, 'test_ystd': 0.0063184863, 'test_mae': 0.03497512875662087, 'test_rmse': 0.03555763113819106, 'test_r2': -43.329150392307085, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06792476736201467, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.009062976, 'test_ystd': 0.010519979, 'test_mae': 0.07636095820532082, 'test_rmse': 0.0775366309487032, 'test_r2': -209.78398940792394, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.02281847650309257, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.01015456, 'test_ystd': 0.012115608, 'test_mae': 0.08140141008959054, 'test_rmse': 0.0826908422267083, 'test_r2': -238.73894929536544, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04724894897926896, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 627, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.008086234, 'test_ystd': 0.009461148, 'test_mae': 0.06320433555708169, 'test_rmse': 0.06395333363774258, 'test_r2': -142.4003270693621, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0980295968457423, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_mad_mean': 0.00958819261619023, 'test_mad_std': 0.004317866190144909, 'test_ystd_mean': 0.011215218608932835, 'test_ystd_std': 0.0050948627730221215, 'test_mae_mean': 0.06153471811302832, 'test_mae_std': 0.023307543427141995, 'test_rmse_mean': 0.06283376711781859, 'test_rmse_std': 0.022553526022502123, 'test_r2_mean': -155.25770393640673, 'test_r2_std': 84.67285236067437}}, 'ID_P3(4MP)T': {'cluster size (%)': 2, 6: {'fit_time': array([18.04068899, 17.47571754, 16.74019122, 18.0413661 , 16.01931238,
        6.56557488, 14.64423156,  6.83155704, 16.7006216 , 17.82602787,
        7.74681115, 18.65039325, 13.68356323,  7.44153929, 16.25080824,
       15.90532851, 16.69046164, 16.58816576, 17.13977742, 18.1444838 ,
        6.7117908 ,  7.35333586,  8.11190867,  9.28703403,  8.82597113,
        9.55074453,  9.79666662, 16.23625612, 10.82623506, 14.34232616,
       15.82937932, 16.13186383, 16.17562103, 15.43650842, 16.61621451,
       16.31598234,  9.8601594 , 14.53816867, 17.02424693, 14.6943779 ,
       13.22337151, 15.34707594, 17.33420157, 17.16863227,  7.3653276 ,
        8.22559667,  8.76225448,  8.09203792,  8.66328144,  7.62552309,
       11.95252514, 12.00261426, 12.32268262,  7.01115322,  9.4334116 ,
       11.63847208, 11.0399406 ,  9.89195061, 11.2483952 ,  7.2848959 ,
       11.69875121, 10.35385299,  8.24165726, 10.53858113,  9.65207267]), 'score_time': array([0.18580508, 0.14143014, 0.24035454, 0.15709257, 0.15942693,
       0.07993245, 0.22315097, 0.08994126, 0.16081357, 0.07528281,
       0.08614206, 0.16225934, 0.09304929, 0.08805013, 0.15854859,
       0.16889286, 0.20729375, 0.08079743, 0.21254921, 0.15243721,
       0.07738924, 0.08384418, 0.0812428 , 0.17740321, 0.07436609,
       0.07955241, 0.07806516, 0.28137851, 0.17215204, 0.27058554,
       0.17152071, 0.0773046 , 0.26604509, 0.15949845, 0.20800591,
       0.24178386, 0.07406402, 0.25037789, 0.16446066, 0.32945919,
       0.31317472, 0.25053239, 0.16465664, 0.24763751, 0.07427311,
       0.07744718, 0.17221379, 0.07728767, 0.07508135, 0.07649016,
       0.0755229 , 0.07266712, 0.07427716, 0.07762265, 0.09849215,
       0.0763464 , 0.0785265 , 0.12313104, 0.07675433, 0.07847667,
       0.07663083, 0.07168651, 0.10349083, 0.07305193, 0.08856201]), 'test_pearson_r': array([ 0.99211041,  0.99876493,  0.99625613,  0.40271529,  0.84347749,
        0.99992322,  0.9991262 ,  0.99584994,  0.99978049,  0.95211101,
        0.99717188,  0.99500194,  0.99414312,  0.99969498,  0.99449799,
        0.9820681 ,  0.95656786,  0.96274947,  0.99767735,  0.82833202,
       -0.90214787,  0.9963389 ,  0.97307988,  0.95496437,  0.99924831,
        0.9894412 ,  0.99944795,  0.99959998,  0.98905109,  0.99394627,
        0.99898585,  0.63788869,  0.99182407,  0.9920593 ,  0.99968404,
        0.99846144,  0.96952224,  0.9802756 ,  0.53609167,  0.98735519,
        0.99644691,  0.99877685,  0.98708016,  0.99712473,  0.996738  ,
        0.99849141,  0.92792486,  0.99954134,  0.99687366,  0.99557277,
        0.99971921,  0.95889254,  0.96100813,  0.99727225,  0.98510082,
        0.65553161,  0.97158256,  0.99977917,  0.64188648,  0.98511043,
        0.99682435,  0.99138333,  0.97604262,  0.99282728,  0.9992177 ]), 'test_spearman_r': array([ 1.       ,  1.       ,  1.       ,  0.8      ,  0.8      ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        0.8      ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  0.8      ,
       -0.8      ,  1.       ,  0.8      ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        0.8      ,  0.4      ,  0.8      ,  1.       ,  1.       ,
        1.       ,  1.       ,  0.8      ,  0.6      ,  1.       ,
        0.8      ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  0.4      ,  1.       ,  1.       ,  0.8      ,
        1.       ,  0.8      ,  1.       ,  1.       ,  0.8      ,
        0.8      ,  0.8      ,  1.       ,  0.6      ,  1.       ,
        1.       ,  1.       ,  1.       ,  0.9486833,  1.       ]), 'test_rmse': array([-0.11965989, -0.06362472, -0.08106068, -0.56665521, -0.33543246,
       -0.03199858, -0.03371395, -0.07768963, -0.03334623, -0.17962641,
       -0.04453838, -0.10279397, -0.09388067, -0.05602382, -0.022656  ,
       -0.15508694, -0.27226985, -0.11917557, -0.07398883, -0.1064696 ,
       -0.81702734, -0.06724075, -0.1177625 , -0.2041126 , -0.02883747,
       -0.09764196, -0.02683876, -0.03575474, -0.10573037, -0.11605741,
       -0.07535173, -0.74013346, -0.06506682, -0.08088347, -0.06737844,
       -0.04034512, -0.23284541, -0.09049688, -0.47773022, -0.09802475,
       -0.08397154, -0.0429251 , -0.07532465, -0.083942  , -0.08794974,
       -0.03215084, -0.24511112, -0.05759536, -0.03418753, -0.05016629,
       -0.05705969, -0.25696782, -0.14120048, -0.08697491, -0.08405164,
       -0.37671944, -0.17201434, -0.04091826, -0.14426698, -0.11018783,
       -0.05201816, -0.1144344 , -0.10471663, -0.04218077, -0.06725144]), 'test_mae': array([-0.08833583, -0.04087117, -0.06596839, -0.34441497, -0.24588384,
       -0.02839761, -0.02801745, -0.05785408, -0.02929538, -0.12212955,
       -0.04030148, -0.07719701, -0.08072904, -0.05439939, -0.01877107,
       -0.09282875, -0.16224945, -0.09763983, -0.0692875 , -0.10150365,
       -0.53379674, -0.04361026, -0.11078843, -0.11919298, -0.01826245,
       -0.09218445, -0.02221873, -0.03167906, -0.08111611, -0.08836947,
       -0.07035245, -0.49592442, -0.05663604, -0.0639479 , -0.05128102,
       -0.02610604, -0.13293775, -0.0589086 , -0.25977935, -0.09317969,
       -0.06292146, -0.03219813, -0.05076352, -0.06220465, -0.08152706,
       -0.02566377, -0.21486148, -0.05284555, -0.03114116, -0.04332713,
       -0.04440095, -0.21414077, -0.11463476, -0.06309529, -0.06956826,
       -0.22976155, -0.11278388, -0.03948838, -0.08743105, -0.05976417,
       -0.0421883 , -0.08761456, -0.09134988, -0.02860847, -0.06585787]), 'test_r2': array([ 0.92521186,  0.99148954,  0.947676  , -0.76166035,  0.57412859,
        0.99807082,  0.99526321,  0.97983101,  0.99877286,  0.88583912,
        0.99000146,  0.97592318,  0.98817304,  0.98857163,  0.98303519,
        0.94261347,  0.82015387,  0.90978977,  0.9796231 ,  0.23917549,
       -5.01042365,  0.98721133,  0.94194066,  0.88170807,  0.99802823,
        0.97726358,  0.99717838,  0.99572183,  0.97413508,  0.97442207,
        0.94040079, -0.12107673,  0.98140279,  0.96491774,  0.99357728,
        0.98879352,  0.89030138,  0.9320365 , -1.51429764,  0.96770281,
        0.95778678,  0.99627047,  0.95100408,  0.97561395,  0.97048056,
        0.99680199,  0.84851861,  0.98342276,  0.99270705,  0.99029298,
        0.99548662,  0.73933111,  0.90002972,  0.96450309,  0.96964168,
       -0.46121997,  0.89472197,  0.99352037,  0.25099532,  0.95439956,
        0.98927275,  0.9435546 ,  0.92692234,  0.9665589 ,  0.98576212]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0021563374205135397, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.99042106, 3.03625798, 1.23626137, 3.37089562, 1.22599173,
       1.82030129, 1.20570064, 3.40137506, 3.09299231, 3.32678962,
       2.67973137, 3.45557666, 1.35526419, 2.26818752, 3.80613494,
       2.21614647, 3.22692704, 3.48827219, 3.50230432, 3.65286231,
       1.19987965, 1.28830218, 1.17491341, 3.36794066, 1.60145092,
       1.91150689, 3.59648323, 1.20024323, 1.20961833, 1.20770121,
       3.13674808, 3.00347471, 3.23488927, 2.76041341, 2.19326854,
       2.73145008, 3.06904411, 3.32046866, 2.47836494, 3.39056492,
       1.6179893 , 2.51052237, 2.0319469 , 1.18739939, 1.21587229,
       2.922328  , 3.22933078, 1.24978614, 2.12392378, 1.39865422,
       1.66905212, 2.57360196, 1.21983624, 2.04963851, 1.79993677,
       1.97334075, 2.19600892, 2.13990092, 1.6711328 , 2.10449672,
       1.71488428, 1.37534761, 1.35221505, 1.45532441, 1.79127908]), 'score_time': array([0.07278371, 0.45669055, 0.12696385, 0.17787743, 0.07515836,
       0.08046484, 0.07602596, 0.1183238 , 0.42519855, 0.21236181,
       0.25129676, 0.22067022, 0.08994389, 0.08107138, 0.17095494,
       0.21060014, 0.11781669, 0.19513178, 0.31941962, 0.30056262,
       0.07653117, 0.08185601, 0.07704473, 0.25904155, 0.17222571,
       0.08357167, 0.16231871, 0.07859945, 0.07811856, 0.07452345,
       0.16155434, 0.24066925, 0.26938963, 0.08908868, 0.17037153,
       0.25486565, 0.16065359, 0.15633583, 0.17032695, 0.16485572,
       0.12364626, 0.26288462, 0.0915072 , 0.07247043, 0.07263899,
       0.1804738 , 0.25122523, 0.07874775, 0.0989747 , 0.10323   ,
       0.07530856, 0.0843606 , 0.07552981, 0.08833003, 0.0776155 ,
       0.07212734, 0.07680631, 0.07036734, 0.13078022, 0.08178926,
       0.07796955, 0.0746069 , 0.07372046, 0.07301664, 0.07081079]), 'test_pearson_r': array([0.97856603, 0.99209059, 0.99924497, 0.99891396, 0.99992198,
       0.99963715, 0.99283247, 0.71406184, 0.99256128, 0.85697889,
       0.94607057, 0.99925157, 0.99975883, 0.9986044 , 0.99808188,
       0.98643843, 0.97905081, 0.81209663, 0.99844854, 0.22210967,
       0.96359839, 0.98359173, 0.52369435, 0.9996803 , 0.93404189,
       0.99720574, 0.97659154, 0.97909794, 0.5883083 , 0.99477558,
       0.99824418, 0.99984697, 0.99913133, 0.99897427, 0.99318642,
       0.80985588, 0.99442962, 0.99263842, 0.9859873 , 0.99699241,
       0.99793336, 0.94892355, 0.99457922, 0.98055902, 0.99779461,
       0.99822234, 0.99192428, 0.99186444, 0.99438656, 0.98561234,
       0.99915713, 0.99958463, 0.99929034, 0.8961289 , 0.99532502,
       0.99145109, 0.99235197, 0.98854071, 0.99967583, 0.90221124,
       0.99202394, 0.94714237, 0.97250373, 0.98846311, 0.99733773]), 'test_spearman_r': array([0.8, 1. , 1. , 1. , 1. , 1. , 1. , 0.8, 1. , 0.4, 0.8, 0.8, 1. ,
       1. , 1. , 0.8, 0.8, 0.8, 1. , 0.4, 1. , 1. , 0.8, 1. , 1. , 1. ,
       1. , 1. , 0.4, 1. , 1. , 1. , 1. , 1. , 1. , 0.8, 0.8, 1. , 1. ,
       1. , 1. , 1. , 1. , 0.8, 1. , 1. , 1. , 1. , 1. , 1. , 1. , 1. ,
       1. , 1. , 1. , 1. , 1. , 1. , 1. , 1. , 1. , 1. , 1. , 1. , 0.5]), 'test_rmse': array([-0.12049766, -0.03206157, -0.04485509, -0.05406516, -0.04590675,
       -0.03294743, -0.09488827, -0.55658054, -0.07431045, -0.16466458,
       -0.20096743, -0.04019168, -0.07274788, -0.05820664, -0.03981967,
       -0.17255694, -0.11617099, -0.36176171, -0.03865751, -0.78878643,
       -0.17678534, -0.12823645, -0.52210909, -0.01974522, -0.17779993,
       -0.05380406, -0.24233921, -0.09323552, -1.03177868, -0.08467072,
       -0.04785946, -0.0094139 , -0.09337194, -0.07372487, -0.05466872,
       -0.2818843 , -0.11264467, -0.12600877, -0.1178924 , -0.07750925,
       -0.05928865, -0.24840272, -0.09371078, -0.13796939, -0.08630531,
       -0.03357092, -0.09853681, -0.10842673, -0.10898284, -0.08670115,
       -0.0344908 , -0.10177474, -0.2095981 , -0.17625325, -0.03660279,
       -0.06478429, -0.08710111, -0.08997171, -0.03470776, -0.20596861,
       -0.07710684, -0.16630912, -0.09189904, -0.07958228, -0.11302522]), 'test_mae': array([-0.10018052, -0.02465572, -0.03116669, -0.03612759, -0.03709844,
       -0.03136009, -0.08172301, -0.29637113, -0.06419344, -0.12082992,
       -0.1622793 , -0.03161211, -0.05673801, -0.04806314, -0.02951051,
       -0.11466295, -0.08958513, -0.20430255, -0.03463351, -0.40457757,
       -0.10731027, -0.08931527, -0.36376244, -0.01820579, -0.12648273,
       -0.03294445, -0.17600541, -0.05303575, -0.52256348, -0.05234802,
       -0.0342192 , -0.00873652, -0.08880569, -0.06811883, -0.04991721,
       -0.1785211 , -0.08652666, -0.10029424, -0.08548609, -0.07050937,
       -0.0453462 , -0.19739745, -0.06995891, -0.09892363, -0.07062382,
       -0.0282664 , -0.05584376, -0.09343378, -0.08194119, -0.06564428,
       -0.02740546, -0.07421117, -0.13632621, -0.15300711, -0.03108601,
       -0.05742205, -0.0597434 , -0.07089197, -0.02836572, -0.12846708,
       -0.05815561, -0.11251475, -0.07933787, -0.06299364, -0.09636919]), 'test_r2': array([ 0.94294005,  0.9795093 ,  0.98364005,  0.99140472,  0.98904171,
        0.99781329,  0.97892   ,  0.30384301,  0.98425588,  0.68972353,
        0.80017301,  0.99450418,  0.99358307,  0.9616793 ,  0.99452688,
        0.94306251,  0.90621951,  0.4422183 ,  0.99549085, -0.49372233,
        0.91432166,  0.92767185,  0.10129547,  0.99932018,  0.74870562,
        0.99170943,  0.9124084 ,  0.9291823 ,  0.10765467,  0.98063735,
        0.99488791,  0.99966265,  0.98132526,  0.97310983,  0.98085569,
        0.4072856 ,  0.89897314,  0.94954149,  0.93850594,  0.983872  ,
        0.99115676,  0.87166579,  0.9780391 ,  0.9221063 ,  0.99055204,
        0.99561099,  0.95740719,  0.97485047,  0.97120007,  0.93270026,
        0.99546995,  0.96814856,  0.81420114,  0.65295803,  0.98818499,
        0.9789304 ,  0.97857032,  0.96475773,  0.9949777 , -0.26509946,
        0.98253298,  0.80077736,  0.93088708,  0.96992379,  0.9705453 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03897794765782249, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 304, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.02015686, 1.3269875 , 1.14417505, 1.48639393, 1.1603961 ,
       1.20033264, 0.51315355, 0.52741861, 0.50293279, 1.53612041,
       0.75061107, 1.43172979, 0.88614297, 1.42296267, 1.49779129,
       0.75661755, 1.52525544, 1.31937432, 1.58963561, 0.662323  ,
       0.54872799, 0.80475378, 0.51332998, 0.5028882 , 0.49233079,
       0.76742196, 1.10116553, 0.54445028, 1.25121975, 1.26479602,
       0.86873341, 1.65212083, 0.48931026, 1.40147805, 1.33721781,
       0.47833204, 0.50615239, 1.348979  , 1.25545835, 1.26226211,
       1.44799662, 1.43679762, 1.4539752 , 1.06766844, 0.48602366,
       0.79708242, 1.44635701, 0.48946404, 1.01441717, 0.52340126,
       0.91137719, 0.49634218, 1.02216649, 0.50345373, 0.86107135,
       0.91753101, 0.48780704, 0.47741508, 0.67964625, 0.70050573,
       0.60773849, 0.6603353 , 0.64512467, 0.55502558, 0.5822742 ]), 'score_time': array([0.22597647, 0.1666317 , 0.0738585 , 0.23037338, 0.24431753,
       0.25203204, 0.0771544 , 0.11534405, 0.07907176, 0.23412275,
       0.46347928, 0.23882818, 0.07709122, 0.18563271, 0.22282267,
       0.07624292, 0.24922466, 0.23108983, 0.23036933, 0.0774579 ,
       0.07877994, 0.07498169, 0.1871419 , 0.07599568, 0.09389877,
       0.07708144, 0.17847896, 0.0740037 , 0.15461469, 0.16957974,
       0.16365623, 0.25026441, 0.1175673 , 0.16064334, 0.21604729,
       0.07714844, 0.11503935, 0.15230036, 0.24826813, 0.15878534,
       0.17683673, 0.15060401, 0.16256404, 0.31885695, 0.08737302,
       0.08962154, 0.07291651, 0.07480311, 0.08809137, 0.16382122,
       0.07552862, 0.17725039, 0.07127142, 0.10715556, 0.07658863,
       0.08208466, 0.07918215, 0.07321405, 0.07107759, 0.11741734,
       0.07602072, 0.07151318, 0.07788777, 0.07512045, 0.07039213]), 'test_pearson_r': array([ 0.99993862,  0.99787115,  0.99999653,  0.99049348,  0.99942654,
        0.98577894,  0.99960239,  0.99976929,  0.99953762,  0.76427517,
        0.99308634,  0.98434939,  0.99731107,  0.99861054,  0.99358748,
        0.99894318,  0.88469116,  0.99650867,  0.99558145,  0.94305279,
        0.94371564,  0.99584828,  0.99203174,  0.99908525,  0.98550953,
        0.99502677,  0.97217625,  0.93727485,  0.99589612,  0.99506633,
        0.99889783,  0.98998239,  0.99134533,  0.88102049,  0.99899144,
        0.99815644, -0.21875887,  0.92506751,  0.9984895 ,  0.99291806,
        0.99835578,  0.97369587,  0.99525411,  0.97186447,  0.94542416,
        0.99625877,  0.61561111,  0.97235278,  0.99848205,  0.99992607,
        0.99829587,  0.99833904,  0.66427773,  0.95053456,  0.99791009,
        0.99984815,  0.92120807,  0.97967843, -0.03262067,  0.97782424,
        0.9775691 ,  0.99628675,  0.99747471,  0.99510852,  0.99580042]), 'test_spearman_r': array([ 1.        ,  1.        ,  1.        ,  1.        ,  1.        ,
        0.8       ,  1.        ,  1.        ,  1.        ,  0.8       ,
        1.        ,  1.        ,  1.        ,  1.        ,  1.        ,
        1.        ,  0.8       ,  1.        ,  1.        ,  0.6       ,
        0.9486833 ,  1.        ,  1.        ,  0.8       ,  1.        ,
        1.        ,  1.        ,  0.8       ,  1.        ,  0.8       ,
        1.        ,  1.        ,  1.        ,  0.8       ,  1.        ,
        1.        , -0.2       ,  0.8       ,  1.        ,  1.        ,
        0.8       ,  1.        ,  1.        ,  1.        ,  0.8       ,
        1.        ,  0.4       ,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ,  0.4       ,  0.8       ,  1.        ,
        1.        ,  0.8       ,  0.8       , -0.2       ,  1.        ,
        0.8       ,  0.8       ,  0.31622777,  1.        ,  1.        ]), 'test_rmse': array([-0.08179428, -0.07090059, -0.04255304, -0.23116475, -0.0402532 ,
       -0.1259608 , -0.03416832, -0.01776443, -0.03567083, -0.48733012,
       -0.09754683, -0.12015269, -0.09044633, -0.04782285, -0.061075  ,
       -0.03649328, -0.24600045, -0.02747278, -0.08607136, -0.18619406,
       -0.11410759, -0.17042404, -0.1499585 , -0.0365276 , -0.08010264,
       -0.08137351, -0.11869582, -0.36399222, -0.03853666, -0.0628255 ,
       -0.1164159 , -0.07251932, -0.05409249, -0.21330736, -0.10173693,
       -0.03431157, -0.7813469 , -0.09925693, -0.05614051, -0.10421804,
       -0.04987374, -0.16380337, -0.09755727, -0.18673215, -0.15343491,
       -0.05864567, -0.23488822, -0.17954549, -0.06469366, -0.06444642,
       -0.05258946, -0.03396239, -0.56395996, -0.20510568, -0.05637671,
       -0.04823782, -0.30530407, -0.12176692, -0.73738234, -0.14052575,
       -0.09522707, -0.08307313, -0.07124807, -0.08489736, -0.05175584]), 'test_mae': array([-0.06211229, -0.0605393 , -0.0307564 , -0.14747876, -0.02969629,
       -0.08424276, -0.02798272, -0.01454154, -0.0289139 , -0.33955655,
       -0.08384848, -0.08526581, -0.07945651, -0.0436632 , -0.05203183,
       -0.02845993, -0.18284287, -0.02284977, -0.073117  , -0.1052109 ,
       -0.0861285 , -0.12784072, -0.12572375, -0.03436162, -0.04728478,
       -0.04856824, -0.10934191, -0.27225326, -0.03245664, -0.04452258,
       -0.07978558, -0.04854068, -0.04303419, -0.14930979, -0.08444234,
       -0.02739435, -0.45250031, -0.08575989, -0.05058898, -0.08481334,
       -0.04475187, -0.10432034, -0.06732631, -0.12178804, -0.12553819,
       -0.04653385, -0.13336569, -0.11929415, -0.05419939, -0.04983883,
       -0.04453534, -0.03108012, -0.32933896, -0.13277037, -0.04000431,
       -0.0446601 , -0.19362732, -0.08955743, -0.38633165, -0.08647241,
       -0.06704843, -0.07247573, -0.0505395 , -0.05021062, -0.04285146]), 'test_r2': array([ 0.95076529,  0.98428414,  0.99330213,  0.92226536,  0.99495921,
        0.93880082,  0.99744825,  0.99943971,  0.99608537,  0.26328906,
        0.98384748,  0.94301098,  0.98532516,  0.99650732,  0.98412153,
        0.99492458,  0.58908157,  0.98707436,  0.97581134,  0.84288621,
        0.80300453,  0.83267266,  0.90713486,  0.99760123,  0.90334475,
        0.98672504,  0.94323748,  0.08840152,  0.98855734,  0.98970865,
        0.89413499,  0.97378444,  0.98092044,  0.74609768,  0.97163883,
        0.9945107 , -2.32407072,  0.29760328,  0.99456317,  0.95629613,
        0.99397666,  0.92799519,  0.98303354,  0.9207383 ,  0.71562123,
        0.98907678, -0.04079737,  0.89822968,  0.9909996 ,  0.99451802,
        0.98331625,  0.99599885,  0.1791695 ,  0.85812123,  0.99301516,
        0.99542058,  0.79125965,  0.95552756, -1.18671226,  0.87522123,
        0.94606187,  0.97720602,  0.98983179,  0.98446599,  0.97305514]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04786776304179686, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 125, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([0.7109549 , 0.56131554, 0.56592607, 1.68045545, 0.72626734,
       0.77413654, 1.30446076, 0.56585002, 0.58806944, 2.0188117 ,
       1.3177731 , 1.42146254, 1.77250838, 1.5177381 , 1.26785517,
       1.89084506, 1.41661024, 1.49714971, 1.54253864, 1.32893896,
       0.53273606, 0.94634843, 0.55337358, 1.05953383, 0.55839849,
       1.09037018, 1.63252711, 0.67067933, 0.54073453, 0.56953549,
       1.36015868, 1.28391552, 1.41894984, 1.24689889, 0.57834697,
       1.28466177, 0.61762667, 1.32168341, 1.67746472, 1.39432836,
       0.74110794, 1.09047079, 0.73220158, 0.56094646, 1.48454905,
       0.931499  , 0.79537249, 1.45977163, 1.30019379, 1.25410795,
       1.06118107, 0.53510666, 1.08574271, 0.53623819, 0.65535784,
       0.93802977, 0.73971796, 0.91416335, 0.98235106, 0.92293   ,
       0.93446445, 0.8073802 , 0.87765956, 0.55063081, 0.55541015]), 'score_time': array([0.21684217, 0.07780981, 0.08120918, 0.24767756, 0.08379221,
       0.15896583, 0.1544435 , 0.07982898, 0.0787766 , 0.25292063,
       0.16147733, 0.15452003, 0.26108718, 0.30613017, 0.1778326 ,
       0.25193214, 0.13208985, 0.23776531, 0.24111509, 0.15827632,
       0.07263899, 0.10767221, 0.08787513, 0.07975292, 0.07667065,
       0.07184458, 0.08834624, 0.08396268, 0.14450669, 0.09423709,
       0.15335703, 0.20508075, 0.15815878, 0.40310359, 0.15821385,
       0.18826938, 0.15048599, 0.23884654, 0.1652739 , 0.07651305,
       0.07489753, 0.16020203, 0.13895679, 0.07449389, 0.13472843,
       0.16107202, 0.1619482 , 0.08431458, 0.09837508, 0.15278816,
       0.09732842, 0.07660556, 0.07376027, 0.0944562 , 0.07259011,
       0.08159614, 0.07353806, 0.07364178, 0.07173467, 0.07459021,
       0.0717597 , 0.07224512, 0.07587218, 0.07626128, 0.10555363]), 'test_pearson_r': array([ 0.99890065,  0.99511915,  0.99956708,  0.99538849,  0.99745359,
        0.99855811,  0.99977238,  0.91161093,  0.99070838,  0.99968971,
        0.77578638,  0.95994835,  0.99857   ,  0.99972625,  0.99993828,
        0.99574534,  0.99888267,  0.97294541,  0.98515877,  0.99141967,
        0.86420339,  0.97742927,  0.99955183,  0.99557494,  0.99622717,
        0.99696406,  0.99134402,  0.98895623,  0.99906604,  0.98834333,
        0.96478547,  0.99941266,  0.99888714,  0.97782348,  0.92678515,
        0.80964683,  0.98072449,  0.9999949 ,  0.74151313, -0.1391195 ,
        0.9913364 ,  0.99745217,  0.96157186,  0.99975985,  0.86267582,
        0.99444283,  0.47607308,  0.99422946,  0.99856253,  0.98583715,
        0.96827998,  0.29418479,  0.99833601,  0.99841441,  0.99888843,
        0.95007441,  0.94194288,  0.99527911,  0.9564532 ,  0.99125329,
        0.99957533,  0.99998476,  0.98933281,  0.88115683,  0.99983949]), 'test_spearman_r': array([ 1.        ,  1.        ,  0.9486833 ,  1.        ,  1.        ,
        1.        ,  1.        ,  1.        ,  1.        ,  1.        ,
        0.8       ,  1.        ,  1.        ,  1.        ,  0.77459667,
        1.        ,  1.        ,  0.88888889,  1.        ,  1.        ,
        1.        ,  0.8       ,  1.        ,  1.        ,  1.        ,
        1.        ,  0.8       ,  0.8       ,  1.        ,  1.        ,
        1.        ,  1.        ,  1.        ,  1.        ,  0.8       ,
        0.2       ,  0.8       ,  1.        ,  0.8       , -0.4       ,
        1.        ,  1.        ,  0.8       ,  1.        ,  1.        ,
        1.        , -0.2       ,  1.        ,  1.        ,  1.        ,
        0.8       , -0.4       ,  1.        ,  1.        ,  1.        ,
        0.8       ,  1.        ,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ,  1.        ,  0.8       ,  1.        ]), 'test_rmse': array([-0.02854113, -0.07674412, -0.10424118, -0.06834513, -0.0803845 ,
       -0.06536471, -0.01213861, -0.17474509, -0.21369173, -0.03815801,
       -0.15979802, -0.2510072 , -0.07633189, -0.03720631, -0.02154785,
       -0.03567097, -0.01943657, -1.13398535, -0.11699569, -0.0896999 ,
       -0.21294472, -0.13762842, -0.02451107, -0.05589421, -0.12830266,
       -0.11151301, -0.26361012, -0.0788341 , -0.05004175, -0.13337741,
       -0.12594934, -0.02889596, -0.04233455, -0.03491538, -0.11144295,
       -0.18633935, -0.16222637, -0.02630193, -0.48270822, -0.72992876,
       -0.10583459, -0.04204373, -0.11137443, -0.03618914, -0.1411817 ,
       -0.09508465, -0.28880738, -0.04850783, -0.03901356, -0.08070225,
       -0.09299931, -0.57141039, -0.14680767, -0.06035935, -0.04484774,
       -0.31933271, -0.16973309, -0.11937367, -0.19508765, -0.06015485,
       -0.06587691, -0.05617076, -0.06222663, -0.24745529, -0.03436644]), 'test_mae': array([-0.02044885, -0.06127918, -0.10243689, -0.06181854, -0.06807362,
       -0.04185015, -0.00720255, -0.10742561, -0.12075807, -0.03259052,
       -0.10615729, -0.2066533 , -0.04177341, -0.033201  , -0.01670923,
       -0.03014277, -0.01727839, -0.8025386 , -0.07766999, -0.06838897,
       -0.14635691, -0.11832153, -0.02228504, -0.03892835, -0.11600617,
       -0.0866016 , -0.20640357, -0.0565786 , -0.0351661 , -0.10486011,
       -0.10522513, -0.01900076, -0.0396852 , -0.02635575, -0.0947032 ,
       -0.14545966, -0.1026477 , -0.02229353, -0.28703898, -0.45407567,
       -0.07696653, -0.03215415, -0.1028857 , -0.0325225 , -0.11460944,
       -0.05782246, -0.16902638, -0.03859747, -0.02738925, -0.0677401 ,
       -0.07128735, -0.34531282, -0.12876127, -0.04742296, -0.04109047,
       -0.17898002, -0.1069651 , -0.10546899, -0.11600836, -0.04903138,
       -0.05998073, -0.04023253, -0.04932539, -0.2023358 , -0.03270928]), 'test_r2': array([ 9.95858419e-01,  9.70663911e-01,  9.74133494e-01,  9.84530892e-01,
        9.84113086e-01,  9.86631034e-01,  9.99252357e-01,  7.46033362e-01,
        8.34325486e-01,  9.97094635e-01,  1.89192154e-01,  7.28564264e-01,
        9.92667667e-01,  9.93059013e-01,  9.23876362e-01,  9.90137671e-01,
        9.97388296e-01, -1.12969082e+05,  9.43774585e-01,  9.43411522e-01,
        6.28029183e-01,  9.03239120e-01,  9.97041470e-01,  9.90352845e-01,
        9.56928240e-01,  9.83991381e-01,  9.12180067e-01,  9.77207171e-01,
        9.96199799e-01,  9.63832766e-01,  8.99984508e-01,  9.97595401e-01,
        9.93156674e-01,  9.36125922e-01,  7.86751049e-01,  5.33705817e-01,
        9.30693133e-01,  9.98051442e-01, -1.28077720e-01, -6.02045778e-01,
        9.48276251e-01,  9.90133241e-01,  7.39002094e-01,  9.96925416e-01,
        6.60430647e-01,  9.81296888e-01, -9.52184598e-01,  9.86804387e-01,
        9.96518097e-01,  9.64875465e-01,  8.14733079e-01, -1.06735922e+00,
        9.47666384e-01,  9.93805938e-01,  9.94748823e-01,  8.63426445e-01,
        8.42347923e-01,  9.63915279e-01,  8.74514838e-01,  9.79909521e-01,
        9.84235339e-01,  9.96481110e-01,  9.55354835e-01,  7.45285630e-01,
        9.96494289e-01]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 234, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([1.6999855 , 1.16022182, 2.28345919, 2.51047111, 2.39312267,
       2.38249397, 2.62517738, 2.95790839, 1.00077653, 0.99624109,
       1.96715784, 2.33109331, 2.23844218, 2.54421043, 2.68795919,
       3.11002493, 2.80576968, 2.07629371, 2.89366436, 1.18328404,
       1.00677562, 1.37669396, 1.28497696, 1.02869391, 2.10107565,
       0.97515535, 2.79318881, 2.10019827, 2.39217591, 0.99881864,
       2.86217046, 1.01394582, 2.40258074, 2.61740899, 0.95713758,
       2.89782119, 2.68049955, 2.5357945 , 2.66819906, 1.84544301,
       3.00469112, 2.04778099, 2.52858448, 1.08179283, 2.18803549,
       0.99780393, 1.30114102, 0.9881022 , 2.07854366, 0.98178744,
       2.03039789, 0.99295878, 0.96002412, 0.94530225, 1.52471209,
       1.73146868, 1.54050088, 1.78938293, 1.18704987, 1.13449645,
       1.56110644, 1.31346416, 1.23410654, 1.25355148, 0.98317623]), 'score_time': array([0.11061001, 0.08308434, 0.15263629, 0.24959207, 0.25331473,
       0.22058868, 0.23663664, 0.16523552, 0.07409787, 0.07601309,
       0.26711583, 0.24578691, 0.24325109, 0.19816613, 0.24861741,
       0.1754148 , 0.24030256, 0.1616385 , 0.15893435, 0.08006907,
       0.08010316, 0.08217216, 0.09009075, 0.08611941, 0.1746726 ,
       0.07560611, 0.1926744 , 0.16242003, 0.24715424, 0.07672739,
       0.2591877 , 0.08193922, 0.24483657, 0.27474642, 0.07628894,
       0.16501784, 0.27175021, 0.19253802, 0.24688864, 0.24126005,
       0.14903808, 0.16546512, 0.10974813, 0.07559156, 0.16783524,
       0.07751083, 0.07917213, 0.07074213, 0.08990669, 0.07599425,
       0.06987023, 0.07414198, 0.07232809, 0.07475877, 0.0722611 ,
       0.07061267, 0.07701349, 0.07591462, 0.07087445, 0.07292581,
       0.07297373, 0.08652186, 0.07063222, 0.0717485 , 0.07484722]), 'test_pearson_r': array([-0.31647244,  0.99904232,  0.99368312,  0.98801773, -0.38565186,
        0.9874929 ,  0.98976394,  0.99187057,  0.98658504,  0.99882193,
        0.99964823,  0.8631824 ,  0.94008278,  0.99787568,  0.99531059,
        0.96470259,  0.99718579,  0.99106573,  0.94548173,  0.85460403,
        0.99637078,  0.96188064,  0.93353414,  0.99958566,  0.82238381,
        0.97815441,  0.99824119,  0.99472344,  0.45100791,  0.99777126,
        0.99258615,  0.99330717,  0.99823159,  0.96031074,  0.98008893,
        0.84154607, -0.01333203,  0.87344919,  0.99957743,  0.99501428,
        0.99781926,  0.99832965,  0.91386343,  0.99380194,  0.99484347,
        0.99499101,  0.99492335,  0.97572521,  0.99994926,  0.99956687,
        0.56301289,  0.99393805,  0.98434076,  0.99559868,  0.97233245,
        0.98945625,  0.86843892,  0.94924204,  0.9648969 , -0.88195319,
        0.98079363,  0.99981496,  0.99839239,  0.99203929,  0.99990589]), 'test_spearman_r': array([-0.4      ,  1.       ,  1.       ,  1.       , -0.2      ,
        0.9486833,  1.       ,  1.       ,  0.8      ,  1.       ,
        1.       ,  0.8      ,  0.8      ,  1.       ,  1.       ,
        0.8      ,  1.       ,  1.       ,  1.       ,  0.8      ,
        1.       ,  1.       ,  1.       ,  1.       ,  0.4      ,
        0.8      ,  1.       ,  1.       ,  0.8      ,  1.       ,
        1.       ,  0.8      ,  0.8      ,  0.8      ,  0.8      ,
        0.8      ,  0.2      ,  0.8      ,  1.       ,  0.9486833,
        1.       ,  1.       ,  0.8      ,  1.       ,  0.9486833,
        1.       ,  0.6      ,  0.8      ,  1.       ,  1.       ,
        0.4      ,  1.       ,  1.       ,  1.       ,  0.8      ,
        1.       ,  0.4      ,  0.8      ,  1.       , -0.2      ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ]), 'test_rmse': array([-0.24329132, -0.05366142, -0.07474581, -0.07091355, -0.56199124,
       -0.02261459, -0.10758077, -0.07837284, -0.12084724, -0.0364796 ,
       -0.03676935, -0.08158492, -0.06841045, -0.03868674, -0.10061062,
       -0.13494321, -0.07636203, -0.05906174, -0.19868578, -0.26965841,
       -0.05603034, -0.13925885, -0.09562715, -0.18406358, -0.30109614,
       -0.12306458, -0.05117071, -0.1355193 , -0.79956928, -0.07569831,
       -0.09699563, -0.08199752, -0.02833229, -0.14583204, -0.20419385,
       -0.23275821, -0.21133111, -0.10719484, -0.0406938 , -0.07986964,
       -0.03371675, -0.05631248, -0.29425551, -0.09616336, -0.08432179,
       -0.07100793, -0.0762789 , -0.07853177, -0.02587876, -0.05804122,
       -0.48293806, -0.17718056, -0.12522611, -0.05328202, -0.08030091,
       -0.13675196, -0.10284839, -0.14432052, -0.11707573, -0.71876457,
       -0.10961891, -0.02365904, -0.04954486, -0.06625255, -0.05921732]), 'test_mae': array([-0.1611349 , -0.02831396, -0.07227563, -0.05924891, -0.29743267,
       -0.0158145 , -0.08474084, -0.07655248, -0.09526095, -0.03315116,
       -0.03065465, -0.05874246, -0.05234744, -0.03517046, -0.0782698 ,
       -0.11751027, -0.04621909, -0.05708173, -0.10597608, -0.15411699,
       -0.0522724 , -0.08825088, -0.05999217, -0.12211447, -0.24814355,
       -0.1062636 , -0.04535904, -0.11589028, -0.50050605, -0.05748954,
       -0.05590309, -0.06754372, -0.02678726, -0.09555382, -0.16896879,
       -0.18182209, -0.12508517, -0.06841845, -0.03344333, -0.05482725,
       -0.03073085, -0.03657729, -0.17735884, -0.06808264, -0.05961791,
       -0.04956007, -0.07055446, -0.05845874, -0.02244225, -0.04226102,
       -0.29504334, -0.14113658, -0.09868623, -0.04408482, -0.06569716,
       -0.09529003, -0.06605237, -0.12688355, -0.1041995 , -0.36919883,
       -0.09511757, -0.01963165, -0.03010948, -0.05626509, -0.05812361]), 'test_r2': array([ -9.77658247,   0.97612743,   0.97198815,   0.96718779,
       -14.36843326,   0.9137664 ,   0.95232507,   0.93638315,
         0.91296135,   0.99194577,   0.98879762,   0.70642422,
         0.88174349,   0.9788566 ,   0.96652881,   0.79608005,
         0.99119863,   0.98173832,   0.85868248,   0.55997402,
         0.99037641,   0.90069244,   0.85172898,   0.79850122,
         0.55314555,   0.94835814,   0.99422025,   0.95875599,
        -0.24687967,   0.98826072,   0.97927185,   0.95459231,
         0.99506918,   0.88606057,   0.78384597,   0.67582778,
        -2.82902025,   0.26095897,   0.99189998,   0.98193482,
         0.99549403,   0.99371256,   0.76303484,   0.98235657,
         0.98369864,   0.98948709,   0.94244588,   0.94273121,
         0.99520389,   0.98774549,  -0.56225817,   0.89168253,
         0.96573821,   0.98477698,   0.88124646,   0.94167944,
         0.65025908,   0.89118198,   0.9265837 ,  -2.97973681,
         0.94040418,   0.99844301,   0.99541263,   0.9772476 ,
         0.96714029]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03770052924189587, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 549, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 220, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([10.41055632, 11.69145536, 12.22502494,  8.71778989, 13.09346724,
        5.83379579, 10.60219669, 11.6534884 , 13.03162479,  6.68549156,
       12.06878853,  7.29071045, 10.15593076, 11.66106796,  7.32450199,
       12.66555953, 11.51291275, 11.30987406,  9.89996338,  7.74438715,
        7.83651781,  7.88176489,  8.08212352,  8.60149217,  6.92915201,
       10.91177225, 11.06812477,  9.34085679, 11.55800653, 11.78758883,
       12.48535585, 10.4763875 , 10.99909759, 11.26242971, 11.4590168 ,
       11.21155405, 12.11070037, 11.06183696, 10.80522418, 12.66507173,
        8.2843914 ,  7.53768849,  8.58688951,  7.59345102,  8.37321281,
        5.89302683, 12.15255523, 10.85230589,  9.41199636,  8.73463368,
       10.15884209,  8.13250637,  9.8354001 ,  9.57115221, 10.28875136,
        6.30043817,  9.52393174,  9.78939915,  5.72719288,  9.30821133,
        8.99935365,  8.80175161,  9.15442491,  5.32593536,  5.59681869]), 'score_time': array([0.21875691, 0.16166592, 0.1643548 , 0.17359376, 0.0759573 ,
       0.1824131 , 0.16708112, 0.16335917, 0.34120965, 0.17523575,
       0.173419  , 0.20576453, 0.19312811, 0.22362757, 0.08177567,
       0.25337267, 0.16150904, 0.17793369, 0.16689515, 0.07796884,
       0.13692784, 0.07829714, 0.07839227, 0.18378592, 0.16622591,
       0.20088172, 0.18891072, 0.07714295, 0.17474389, 0.24808383,
       0.34594035, 0.24296594, 0.16590428, 0.15266323, 0.17288613,
       0.16425848, 0.24556518, 0.07257438, 0.24842477, 0.07999372,
       0.16999602, 0.07454586, 0.09789228, 0.18079281, 0.07768917,
       0.07407475, 0.16590261, 0.07252073, 0.17622471, 0.08037376,
       0.07422376, 0.07815742, 0.08035684, 0.0892489 , 0.0741291 ,
       0.0744555 , 0.07289195, 0.07156205, 0.09801054, 0.0796833 ,
       0.07435513, 0.08229375, 0.07537651, 0.07900357, 0.07576704]), 'test_pearson_r': array([ 0.9965462 ,  0.67532413,  0.94400964,  0.96936046,  0.99356658,
        0.99185125,  0.9926888 ,  0.97829063,  0.98942723,  0.77472646,
        0.99880283,  0.99875973,  0.99955068,  0.99864523,  0.99674009,
        0.99079819,  0.99273179,  0.94978788,  0.99261676,  0.99645008,
        0.8941125 ,  0.97683586,  0.99709577,  0.99048342,  0.99944157,
        0.95720707,  0.98589637,  0.99670488,  0.99947761,  0.99964365,
        0.99838789,  0.95031422,  0.99800542,  0.99827579,  0.99938757,
        0.87689637,  0.99102283,  0.98405104,  0.98866256,  0.99573388,
        0.9303596 ,  0.9975698 ,  0.96253512,  0.9996842 ,  0.87243024,
        0.99159711,  0.99845084,  0.9991475 ,  0.99647298,  0.98925892,
        0.99847675,  0.9209722 ,  0.99934599,  0.81870827, -0.61788327,
        0.92180498,  0.96089566,  0.99227333,  0.99255196,  0.99284496,
        0.99756836,  0.96991321,  0.18213225,  0.81335018,  0.99743416]), 'test_spearman_r': array([ 1.       ,  0.8      ,  1.       ,  0.9486833,  1.       ,
        1.       ,  0.8      ,  0.8      ,  0.8      ,  0.4      ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  0.8      ,  0.8      ,  1.       ,  1.       ,
        0.8      ,  0.8      ,  1.       ,  1.       ,  1.       ,
        0.8      ,  1.       ,  0.8      ,  1.       ,  1.       ,
        1.       ,  1.       ,  0.8      ,  0.8      ,  1.       ,
        0.8      ,  1.       ,  1.       ,  0.8      ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  0.8      ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  0.9486833,  0.8      , -0.2      ,
        1.       ,  0.8      ,  1.       ,  1.       ,  1.       ,
        0.8      ,  1.       ,  0.4      ,  0.8      ,  1.       ]), 'test_rmse': array([-0.04687059, -0.55883652, -0.19604989, -0.0460885 , -0.15317602,
       -0.08341053, -0.07607175, -0.12931768, -0.13156188, -0.24239293,
       -0.03707309, -0.06414206, -0.05399299, -0.05116348, -0.05452637,
       -0.079166  , -0.08944885, -0.1682307 , -0.09542017, -0.0555677 ,
       -0.05917952, -0.16057896, -0.05651101, -0.08127631, -0.03802426,
       -0.08672131, -0.10639432, -0.06262858, -0.05934182, -0.01797226,
       -0.03988416, -0.15757296, -0.08222178, -0.05230456, -0.03131365,
       -0.16456598, -0.03584044, -0.14696518, -0.26590769, -0.10228962,
       -0.12090671, -0.04905425, -0.14375398, -0.02780113, -0.33362924,
       -0.12481846, -0.06517786, -0.04001029, -0.07112918, -0.09212381,
       -0.08530943, -0.30386844, -0.06303069, -0.17911527, -0.74584614,
       -0.24803822, -0.12499219, -0.09015442, -0.08330538, -0.11326114,
       -0.08441922, -0.18722942, -0.77917898, -0.47856414, -0.10503415]), 'test_mae': array([-0.04274735, -0.31908925, -0.1159544 , -0.04377667, -0.12115976,
       -0.07942342, -0.05376086, -0.08219067, -0.10215001, -0.12664192,
       -0.03030591, -0.05138811, -0.04684498, -0.04432465, -0.0389467 ,
       -0.05607279, -0.05645023, -0.09410063, -0.07521739, -0.05100995,
       -0.04804447, -0.12814178, -0.03588888, -0.05802012, -0.03119418,
       -0.07189507, -0.07715476, -0.05078065, -0.04376659, -0.01472368,
       -0.0345221 , -0.13607292, -0.07072609, -0.04634722, -0.02943358,
       -0.10819829, -0.03415392, -0.09015928, -0.19813972, -0.08577842,
       -0.09220921, -0.03590453, -0.12635987, -0.021306  , -0.18742969,
       -0.09219022, -0.03882467, -0.03803334, -0.05916752, -0.06472729,
       -0.07565585, -0.15928533, -0.05497344, -0.1265097 , -0.4813853 ,
       -0.17681145, -0.11100873, -0.08023676, -0.06080692, -0.09385561,
       -0.06459696, -0.12295313, -0.44275539, -0.2963045 , -0.0921029 ]), 'test_r2': array([ 0.98956031,  0.329099  ,  0.83895592, -0.81790212,  0.8418496 ,
        0.94175528,  0.97519161,  0.91802215,  0.88118889, -0.08490001,
        0.99707046,  0.99362081,  0.99454736,  0.98802161,  0.992141  ,
        0.97314322,  0.98324646,  0.85115949,  0.97386705,  0.9869756 ,
        0.59229477,  0.89380273,  0.99096274,  0.89094261,  0.99580786,
        0.88835503,  0.97042729,  0.99169625,  0.99572968,  0.99764563,
        0.99565403,  0.77211738,  0.97866977,  0.98042392,  0.99749128,
        0.70022762,  0.97539121,  0.69633457,  0.88692396,  0.96690674,
        0.8209075 ,  0.99052676,  0.88616272,  0.99699372,  0.6797932 ,
        0.96052303,  0.99364403,  0.99673387,  0.96903359,  0.95570217,
        0.98932877,  0.7935241 ,  0.99221584,  0.64006688, -3.66098095,
        0.8149709 ,  0.57549561,  0.96828068,  0.9769726 ,  0.96054853,
        0.9739934 ,  0.90966286, -0.52744133,  0.5730674 ,  0.98486153]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0029277433369518636, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1642, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.68673587, 2.50976992, 2.59234118, 1.70419145, 1.90794611,
       2.5876255 , 1.38139892, 2.91250753, 1.15204382, 1.110744  ,
       1.86382103, 2.70649028, 2.32159781, 2.56788874, 3.07932997,
       2.72224808, 1.24998713, 3.10677457, 2.20163846, 2.87441993,
       1.12127423, 1.15884805, 1.73768401, 1.92055202, 1.47297192,
       2.84088755, 2.70208693, 2.52443075, 2.03257251, 1.09154415,
       1.12623215, 2.06675196, 1.74789762, 2.92494988, 1.98275733,
       2.33967853, 2.90553856, 2.51544595, 2.35446835, 3.12882185,
       1.18209338, 1.23959732, 3.09579992, 1.68456125, 1.14891338,
       2.64013553, 1.15112019, 1.10001397, 2.32189679, 2.37528038,
       1.31220317, 1.21764684, 1.82409906, 2.06512856, 2.16105461,
       2.00066519, 1.18660331, 1.6402967 , 1.06055832, 1.64517379,
       1.08403516, 1.51200318, 1.64746547, 1.1757164 , 1.5521853 ]), 'score_time': array([0.1616137 , 0.1539042 , 0.15522766, 0.16700506, 0.15202761,
       0.15350604, 0.08275104, 0.23992157, 0.07830405, 0.07944155,
       0.22246051, 0.07127023, 0.27358103, 0.19319725, 0.25840735,
       0.18466687, 0.07884073, 0.24625731, 0.07224441, 0.20429277,
       0.07563829, 0.07441568, 0.08587384, 0.19460893, 0.08178568,
       0.16104698, 0.23767686, 0.18577695, 0.1648159 , 0.09055662,
       0.09155822, 0.16143918, 0.25145197, 0.25755548, 0.15261364,
       0.20373631, 0.2091012 , 0.1684742 , 0.18668127, 0.1662786 ,
       0.073452  , 0.17093778, 0.10334015, 0.07434011, 0.07277846,
       0.31484318, 0.07666016, 0.07208347, 0.08591509, 0.08588004,
       0.08949614, 0.1011405 , 0.15465474, 0.07809234, 0.0703156 ,
       0.07067347, 0.09123111, 0.08845901, 0.15855169, 0.07211709,
       0.07299423, 0.08659673, 0.07428026, 0.07216787, 0.07101512]), 'test_pearson_r': array([ 0.99181004,  0.99399826,  0.99530779,  0.99729235,  0.99784344,
        0.99735694,  0.99859868,  0.68634391,  0.90312037,  0.98820001,
        0.99373072,  0.99987026,  0.9888237 ,  0.99977024,  0.91889925,
        0.94407762,  0.99573018,  0.9652341 ,  0.99461851, -0.31292157,
        0.99997572,  0.98932325, -0.66677303,  0.99245058,  0.99977526,
        0.97575883,  0.99972569,  0.99580483,  0.83525627,  0.98235499,
        0.70246015,  0.96043835,  0.98561337,  0.96740595,  0.82871778,
        0.98444845,  0.76078435,  0.99347427,  0.96239094,  0.988881  ,
        0.99798886,  0.99962631,  0.94772108,  0.99955967,  0.98981624,
        0.99514274,  0.94171982,  0.99963096,  0.99708245,  0.99633628,
        0.95557972,  0.93601162,  0.98475972,  0.98866544,  0.99723202,
        0.99963767,  0.98160827,  0.9979363 ,  0.78554766,  0.9440288 ,
        0.99635626,  0.99813723,  0.91781058,  0.87958414,  0.99999311]), 'test_spearman_r': array([ 1.       ,  1.       ,  0.8      ,  1.       ,  0.8      ,
        1.       ,  1.       ,  0.4      ,  0.4      ,  0.8      ,
        1.       ,  1.       ,  1.       ,  0.9486833,  0.8      ,
        1.       ,  1.       ,  1.       ,  1.       , -0.4      ,
        1.       ,  1.       , -0.2      ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  0.8      ,  0.8      ,
        0.8      ,  0.8      ,  1.       ,  1.       ,  0.4      ,
        0.8      ,  0.8      ,  1.       ,  0.2      ,  0.8      ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  1.       ,  1.       ,  1.       ,  1.       ,
        1.       ,  0.6      ,  1.       ,  0.8      ,  1.       ,
        1.       ,  0.2      ,  0.8      ,  1.       ,  0.8      ,
        1.       ,  1.       ,  0.8      ,  0.8      ,  1.       ]), 'test_rmse': array([-0.09710112, -0.09261863, -0.04604973, -0.05502315, -0.12850524,
       -0.03769012, -0.04950947, -0.70823181, -0.28137621, -0.05608236,
       -0.11681792, -0.02441732, -0.09257222, -0.02814676, -0.18524355,
       -0.27597791, -0.04869133, -0.17588274, -0.07620783, -0.47765657,
       -0.00490596, -0.07582326, -0.79876062, -0.05355296, -0.02521402,
       -0.08530609, -0.04070031, -0.07638586, -0.34996599, -0.1157529 ,
       -0.21884426, -0.11898006, -0.10340064, -0.16643513, -0.3891685 ,
       -0.17430852, -0.54168365, -0.02500794, -0.14856243, -0.12831092,
       -0.03666499, -0.02334323, -0.24680577, -0.03554851, -0.07463679,
       -0.0949396 , -0.10333522, -0.04126553, -0.07798008, -0.04926715,
       -0.08727001, -0.11635349, -0.12080443, -0.06489309, -0.05081189,
       -0.01694899, -0.09160211, -0.10846916, -0.19998977, -0.17370208,
       -0.06482506, -0.05471723, -0.08562599, -0.08738507, -0.02083756]), 'test_mae': array([-0.07790284, -0.06125805, -0.03821777, -0.03997686, -0.1054291 ,
       -0.03491607, -0.03819403, -0.36992812, -0.15249866, -0.04431619,
       -0.09328953, -0.01912125, -0.06455037, -0.02546442, -0.14090485,
       -0.20671467, -0.04456531, -0.12220349, -0.04216522, -0.27780316,
       -0.00420956, -0.05917541, -0.50447534, -0.04114548, -0.02203867,
       -0.08221944, -0.0333951 , -0.05532795, -0.20859243, -0.08472692,
       -0.12932019, -0.0907572 , -0.08509401, -0.11692503, -0.28884733,
       -0.12937345, -0.28746576, -0.01695469, -0.13448711, -0.10264365,
       -0.03360292, -0.01929539, -0.17988569, -0.02177918, -0.06484274,
       -0.07572016, -0.07518101, -0.03429339, -0.06767974, -0.04408106,
       -0.07187158, -0.10062286, -0.08979034, -0.05263647, -0.02966179,
       -0.0139298 , -0.07728283, -0.09732208, -0.12854819, -0.12841359,
       -0.03715755, -0.05389468, -0.07458305, -0.06206688, -0.0188194 ]), 'test_r2': array([ 0.95431626,  0.98662421,  0.9905328 ,  0.94893171,  0.9567781 ,
        0.98036694,  0.99644136,  0.31166082,  0.76590045,  0.97628009,
        0.94927511,  0.99930622,  0.97288081,  0.99829077,  0.7073417 ,
        0.88157634,  0.98708662,  0.83088101,  0.97260364, -0.71162674,
        0.99992032,  0.96890033, -6.56519305,  0.98409364,  0.99892929,
        0.91503537,  0.97146439,  0.98618669,  0.57895186,  0.95266138,
       -0.02900732,  0.84934968,  0.97104803,  0.91588906,  0.67752157,
        0.84259319,  0.40349875,  0.98323034,  0.86471064,  0.91962405,
        0.992658  ,  0.99880164,  0.88449774,  0.99759872,  0.95197291,
        0.97819896,  0.72772422,  0.99706003,  0.9816508 ,  0.96146502,
        0.89251728,  0.85892118,  0.96839952,  0.94846716,  0.99271064,
        0.99907009,  0.84467524,  0.9785972 ,  0.38713195,  0.71560563,
        0.9863218 ,  0.99437323,  0.81741986,  0.65313403,  0.99876646]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05617045774903145, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 710, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_pearson_r_mean': 0.9232325294612667, 'test_pearson_r_std': 0.2380529217744821, 'test_spearman_r_mean': 0.8844348637507733, 'test_spearman_r_std': 0.2514473952267258, 'test_rmse_mean': 0.13820786731677892, 'test_rmse_std': 0.15746474432276655, 'test_mae_mean': 0.09639363516659968, 'test_mae_std': 0.0938332851288667, 'test_r2_mean': -247.56311745447655, 'test_r2_std': 5290.283102036708}}, 'CO_P3DDT': {'cluster size (%)': 3, 6: {'test_mad': 0.061934438, 'test_ystd': 0.08937434, 'test_mae': 0.11453545767942497, 'test_rmse': 0.20495302843467053, 'test_r2': -5.216696052032645, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.09093038, 'test_ystd': 0.13037516, 'test_mae': 0.12497478546437195, 'test_rmse': 0.24546650248905819, 'test_r2': -7.91734201127761, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0215565262643757, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 263, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.089447916, 'test_ystd': 0.1283811, 'test_mae': 0.12503710637795926, 'test_rmse': 0.24371180597993694, 'test_r2': -7.790307957390194, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.005726386027978289, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.075041056, 'test_ystd': 0.108122766, 'test_mae': 0.11148831496942044, 'test_rmse': 0.21911794522514072, 'test_r2': -6.105699672087022, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1254, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.06407385, 'test_ystd': 0.09277892, 'test_mae': 0.10590113735221114, 'test_rmse': 0.20280756449344103, 'test_r2': -5.087223584136443, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 687, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.08074485, 'test_ystd': 0.11626514, 'test_mae': 0.12020908757640635, 'test_rmse': 0.23056913045276484, 'test_r2': -6.867799388170805, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.059205928316857816, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1521, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.081314154, 'test_ystd': 0.116461, 'test_mae': 0.13053928777171883, 'test_rmse': 0.23681893522000094, 'test_r2': -7.3001091320440885, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07959893116692056, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 66, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_mad_mean': 0.07764094908322607, 'test_mad_std': 0.010533349008372342, 'test_ystd_mean': 0.11167977643864495, 'test_ystd_std': 0.014831262961310479, 'test_mae_mean': 0.1189550253130733, 'test_mae_std': 0.008059469705607667, 'test_rmse_mean': 0.22620641604214473, 'test_rmse_std': 0.01629420407147919, 'test_r2_mean': -6.6121682567341145, 'test_r2_std': 1.0796435233714774}}, 'ID_P3DDT': {'cluster size (%)': 3, 6: {'fit_time': array([15.81828189, 16.04607415, 14.87974644, 13.79751539,  7.54542565,
       15.35303402,  6.63906145,  7.57055688, 14.71604633, 13.75423241,
       14.5775857 , 14.84938359, 13.11889005,  7.93394709, 14.81779671,
       12.31037641, 13.7508707 , 15.94728923, 15.53451824, 15.07515907,
        6.98463726,  7.39705014,  6.73956943,  7.23513937,  9.15390182,
        9.75874162,  6.38209033,  9.84334636,  8.18129635,  8.89771938,
        6.69388461,  7.39149094,  7.21687841,  7.62606359,  6.97347713,
        9.07709479,  6.62275362]), 'score_time': array([0.16705322, 0.07716131, 0.16789842, 0.16574836, 0.18844008,
       0.17138219, 0.08658409, 0.08901453, 0.18137527, 0.28895617,
       0.17378092, 0.16078687, 0.08849311, 0.08297825, 0.24671221,
       0.17597485, 0.16867781, 0.17627978, 0.07350993, 0.23977423,
       0.07875299, 0.07632136, 0.08233023, 0.08368063, 0.08083487,
       0.07180119, 0.075984  , 0.07582688, 0.07751775, 0.07528067,
       0.07547522, 0.07363939, 0.08751035, 0.07577801, 0.07622862,
       0.07239223, 0.07463789]), 'test_pearson_r': array([ 0.9920029 ,  0.63303357,  0.94589226,  0.99914599,  0.99693545,
        0.98374748,  0.99147091,  0.99697644,  0.98590151,  0.9271836 ,
        0.99819015, -0.24639346,  0.9942142 ,  0.96882815,  0.99314381,
        0.99861154,  0.98393604,  0.99565052,  0.64357542,  0.9948859 ,
        0.94158245,  0.98157521,  0.86300666,  0.99519187,  0.9839776 ,
        0.9932716 ,  0.9537199 ,  0.9970292 ,  0.99734427,  0.93871428,
        0.995256  ,  0.85435842,  0.9784664 ,  0.90550004,  0.99586017,
        0.95692715,  0.99475138]), 'test_spearman_r': array([1.        , 0.64285714, 0.92857143, 1.        , 0.90093746,
       1.        , 1.        , 1.        , 0.96428571, 0.96428571,
       1.        , 0.        , 0.92857143, 0.96428571, 0.96428571,
       1.        , 0.89285714, 0.96428571, 0.57142857, 0.96428571,
       0.96428571, 0.75      , 0.89285714, 1.        , 1.        ,
       1.        , 0.78571429, 1.        , 0.95499371, 0.96428571,
       0.89285714, 0.89285714, 0.96428571, 0.84688121, 1.        ,
       0.92857143, 0.95499371]), 'test_rmse': array([-0.07817692, -0.42366659, -0.22335797, -0.03234981, -0.0599201 ,
       -0.13275472, -0.10078694, -0.09042802, -0.12251999, -0.22682479,
       -0.07301404, -0.62075936, -0.08750217, -0.1665311 , -0.07512944,
       -0.03147035, -0.10809349, -0.10554363, -0.56033646, -0.07419124,
       -0.21851588, -0.07328608, -0.36897465, -0.07402928, -0.08465232,
       -0.0750563 , -0.19331527, -0.04318781, -0.05624067, -0.26842319,
       -0.09916561, -0.28847714, -0.13174038, -0.14898871, -0.06002095,
       -0.12047004, -0.0543766 ]), 'test_mae': array([-0.0587429 , -0.20105325, -0.16497012, -0.02696578, -0.04064672,
       -0.07976577, -0.08100939, -0.07267017, -0.06622569, -0.12871945,
       -0.06452703, -0.34964302, -0.06815235, -0.09776067, -0.05675763,
       -0.02749702, -0.0829951 , -0.09888664, -0.29518113, -0.05991624,
       -0.10586436, -0.0463104 , -0.19387526, -0.05458235, -0.05744796,
       -0.06586199, -0.14408192, -0.03728603, -0.04430962, -0.19470798,
       -0.07438478, -0.15474751, -0.07829874, -0.11063313, -0.04257645,
       -0.09751421, -0.04451027]), 'test_r2': array([ 0.9782129 , -0.05861061,  0.88245951,  0.99683011,  0.99028751,
        0.96487621,  0.97247811,  0.98511946,  0.95737056,  0.84681291,
        0.98658776, -1.74658301,  0.97812101,  0.90515714,  0.98546607,
        0.99665504,  0.96790796,  0.95666292,  0.24067111,  0.98895568,
        0.86912078,  0.9595588 ,  0.70798728,  0.98548965,  0.96784021,
        0.98456283,  0.90666078,  0.99266254,  0.99237083,  0.82878951,
        0.97266489,  0.66307401,  0.95150783,  0.71606962,  0.98964957,
        0.89143449,  0.98238684]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0021563374205135397, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.51945591, 1.22732759, 1.80921149, 3.56152201, 1.61943984,
       2.36295581, 2.69393277, 3.57427049, 2.50537562, 1.69108224,
       2.95899272, 1.27410793, 3.45298624, 2.46822143, 1.49357176,
       2.21197605, 1.5571444 , 3.40107656, 1.81403089, 3.16278315,
       2.02512169, 1.1253624 , 1.93192744, 1.70257449, 1.38233614,
       1.96617842, 2.32547975, 1.97489715, 1.45450044, 1.72996354,
       1.72613358, 1.26640034, 1.64927435, 1.24262023, 1.68024898,
       1.39417124, 1.37920117]), 'score_time': array([0.16747999, 0.08591795, 0.0728755 , 0.18680453, 0.20742464,
       0.2176671 , 0.07102537, 0.15721536, 0.27393579, 0.26827049,
       0.16949129, 0.17101288, 0.161268  , 0.17039061, 0.10793924,
       0.17667532, 0.17069197, 0.17043161, 0.18172574, 0.25239539,
       0.21159196, 0.07484746, 0.08108759, 0.08442116, 0.20742249,
       0.07205009, 0.07329178, 0.08082151, 0.10196853, 0.07362986,
       0.07484484, 0.07850218, 0.07260346, 0.07112241, 0.07152319,
       0.07761264, 0.07661915]), 'test_pearson_r': array([0.98907495, 0.9982165 , 0.99174723, 0.99394367, 0.8291992 ,
       0.94434619, 0.99314184, 0.99752062, 0.97037943, 0.89441888,
       0.99859774, 0.59494507, 0.81572816, 0.99848961, 0.95921862,
       0.94146318, 0.69203942, 0.99820099, 0.99683947, 0.99389216,
       0.86673542, 0.98423346, 0.99010263, 0.96283596, 0.98624584,
       0.99418981, 0.99188917, 0.98819776, 0.9886997 , 0.99612504,
       0.90000366, 0.99565753, 0.99391894, 0.9523414 , 0.99259111,
       0.94418016, 0.98111931]), 'test_spearman_r': array([0.96428571, 1.        , 0.89285714, 0.92857143, 0.82142857,
       0.89285714, 0.93697496, 1.        , 0.96428571, 0.67857143,
       1.        , 0.64285714, 0.75      , 0.96428571, 0.89285714,
       1.        , 0.60714286, 1.        , 1.        , 1.        ,
       0.89285714, 1.        , 0.99103121, 0.96428571, 0.89285714,
       0.96428571, 1.        , 0.96428571, 1.        , 1.        ,
       0.92857143, 1.        , 1.        , 1.        , 1.        ,
       0.96428571, 0.96428571]), 'test_rmse': array([-0.08053437, -0.03397228, -0.06746964, -0.0752729 , -0.42803762,
       -0.17604475, -0.07019134, -0.05804575, -0.13607157, -0.29578883,
       -0.03285503, -0.60017619, -0.40122901, -0.03908677, -0.13911125,
       -0.22900672, -0.74543651, -0.0404809 , -0.07716557, -0.05371249,
       -0.25820697, -0.12585423, -0.10531516, -0.18886976, -0.10301525,
       -0.0876349 , -0.08401537, -0.11488864, -0.06861071, -0.07292205,
       -0.22264335, -0.05199408, -0.09115772, -0.15965446, -0.07382198,
       -0.14270901, -0.12075386]), 'test_mae': array([-0.05065631, -0.01873606, -0.05010949, -0.05935043, -0.20024035,
       -0.13554892, -0.05537098, -0.04358383, -0.08538079, -0.1686116 ,
       -0.02540691, -0.28576584, -0.24167049, -0.03058394, -0.09226761,
       -0.13298042, -0.31562761, -0.02361055, -0.06650448, -0.0476146 ,
       -0.1542678 , -0.10815924, -0.07672366, -0.12956882, -0.0727564 ,
       -0.06689947, -0.04300674, -0.09706487, -0.04750132, -0.05484687,
       -0.16069206, -0.04342685, -0.06847634, -0.09071403, -0.05988154,
       -0.10191529, -0.08745218]), 'test_r2': array([0.97618619, 0.99606196, 0.97405979, 0.98700428, 0.62943117,
       0.8724545 , 0.98438653, 0.99454187, 0.90938011, 0.74460468,
       0.99702457, 0.11458696, 0.57057929, 0.99659423, 0.91537611,
       0.87266301, 0.36300417, 0.99506679, 0.98436243, 0.98159774,
       0.7135567 , 0.92491659, 0.96946993, 0.92368364, 0.9672475 ,
       0.9871329 , 0.97607604, 0.97187791, 0.96019898, 0.98764208,
       0.76064698, 0.99116842, 0.97907624, 0.8904228 , 0.98299544,
       0.83402048, 0.95471172]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03897794765782249, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 304, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([0.62882257, 1.00478816, 1.05411863, 0.87705183, 0.6972518 ,
       0.90184736, 0.48535585, 0.47564769, 1.21254849, 0.68101192,
       0.46765566, 1.59502363, 1.19992495, 1.11314964, 1.20383263,
       0.55480933, 1.06511617, 1.30482125, 1.31469989, 1.36472988,
       0.48584509, 0.46823788, 0.47250652, 1.01624155, 1.01098919,
       0.85598683, 0.9297049 , 0.48897076, 0.84177804, 0.51678395,
       0.48230362, 0.80990458, 0.75915647, 0.48108625, 0.51773167,
       0.64208865, 0.48871708]), 'score_time': array([0.20877695, 0.15943789, 0.38497567, 0.1869545 , 0.15997434,
       0.17589736, 0.07447886, 0.07445621, 0.24020243, 0.07254767,
       0.07616663, 0.11927247, 0.16166401, 0.15286016, 0.14515424,
       0.16456938, 0.1572206 , 0.08718896, 0.23545623, 0.1584475 ,
       0.07664061, 0.07404399, 0.1654613 , 0.08178902, 0.08107376,
       0.07511592, 0.07240152, 0.07250285, 0.0804522 , 0.08667183,
       0.07509136, 0.08028579, 0.07241559, 0.07217407, 0.07783508,
       0.0699482 , 0.07352853]), 'test_pearson_r': array([0.98087662, 0.99882094, 0.99202563, 0.99100534, 0.9988828 ,
       0.85812985, 0.96567789, 0.9978672 , 0.98919823, 0.96199982,
       0.98087094, 0.97646299, 0.96710224, 0.99591059, 0.98936451,
       0.86293609, 0.99815282, 0.98273492, 0.99288654, 0.95105935,
       0.37988808, 0.97773799, 0.99517344, 0.98140628, 0.99432875,
       0.94628874, 0.92776733, 0.98328677, 0.9998275 , 0.84372081,
       0.95210181, 0.99983232, 0.96433482, 0.60157235, 0.97027545,
       0.99436131, 0.99507133]), 'test_spearman_r': array([1.        , 1.        , 0.96428571, 0.96428571, 1.        ,
       0.89285714, 0.92857143, 1.        , 0.96428571, 0.92857143,
       0.96428571, 0.81084372, 0.89285714, 0.96428571, 0.96428571,
       0.84688121, 1.        , 0.96428571, 1.        , 0.92857143,
       0.25      , 0.96428571, 0.99103121, 0.96428571, 0.95499371,
       0.82142857, 0.89285714, 0.96428571, 1.        , 0.78571429,
       0.92857143, 1.        , 0.78571429, 0.64285714, 0.92857143,
       0.88291871, 1.        ]), 'test_rmse': array([-0.11149055, -0.05756572, -0.18454991, -0.10682952, -0.0415826 ,
       -0.36781514, -0.14807542, -0.07606859, -0.0765435 , -0.19419612,
       -0.16179726, -0.08754788, -0.16449256, -0.07587123, -0.11412105,
       -0.29275982, -0.03312457, -0.09780901, -0.06999557, -0.17311241,
       -0.59197556, -0.0822982 , -0.09886481, -0.12911309, -0.0814935 ,
       -0.17213594, -0.18411469, -0.14510404, -0.05212488, -0.42152586,
       -0.17381026, -0.03896714, -0.18402009, -0.5608083 , -0.11338858,
       -0.07869518, -0.07078807]), 'test_mae': array([-0.07824896, -0.04901347, -0.10316156, -0.06001097, -0.0280248 ,
       -0.20099185, -0.12427067, -0.0618072 , -0.06130482, -0.11471654,
       -0.09976644, -0.05878903, -0.12745511, -0.05393977, -0.08272944,
       -0.20374711, -0.02705541, -0.06574857, -0.05172372, -0.12924637,
       -0.26106182, -0.06674757, -0.08418949, -0.08068397, -0.05258362,
       -0.12445734, -0.09893412, -0.0967874 , -0.03962117, -0.19034621,
       -0.11149092, -0.03300665, -0.12049628, -0.24675063, -0.08473569,
       -0.06077475, -0.04514734]), 'test_r2': array([ 0.95274172,  0.99240678,  0.93408614,  0.96891684,  0.99689171,
        0.68987506,  0.89993665,  0.99213992,  0.97809375,  0.89804251,
        0.94626281,  0.93464435,  0.8841952 ,  0.99011093,  0.97104617,
        0.52540931,  0.99625144,  0.93312839,  0.98285792,  0.88325315,
       -0.62744665,  0.95173434,  0.97479276,  0.96083495,  0.98845763,
        0.86008047,  0.7884173 ,  0.94632931,  0.99487696,  0.66563055,
        0.89162958,  0.99724484,  0.91759416,  0.1980997 ,  0.93350659,
        0.98562709,  0.98721602]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04786776304179686, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 125, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.57386899, 1.21239471, 1.24590683, 0.99061203, 1.51691079,
       0.73331332, 1.21110463, 0.57646537, 0.5861423 , 1.21194434,
       0.57266378, 1.27513814, 0.58716226, 1.29759383, 1.39825654,
       1.23896313, 0.75537348, 1.3488698 , 1.21456861, 0.84285784,
       0.54325175, 0.5718646 , 0.52805686, 1.13333702, 1.04588175,
       1.05540609, 0.52870965, 0.77322888, 0.52136064, 0.53252292,
       0.6130271 , 0.69705057, 0.78908181, 0.63701701, 0.78475857,
       0.76597738, 0.56072164]), 'score_time': array([0.20616317, 0.24265075, 0.15817046, 0.15724492, 0.24123979,
       0.21473098, 0.1785872 , 0.08483362, 0.1792233 , 0.17496252,
       0.07714748, 0.1293323 , 0.07646179, 0.22114062, 0.16480517,
       0.16574764, 0.07067537, 0.16153741, 0.22827005, 0.08286262,
       0.07816505, 0.07444882, 0.07764506, 0.07433319, 0.08697414,
       0.07449436, 0.07726073, 0.0727787 , 0.07252264, 0.07863331,
       0.07463741, 0.07295489, 0.07243514, 0.07224202, 0.06841731,
       0.08079553, 0.07109261]), 'test_pearson_r': array([ 0.99257328,  0.99790866,  0.99745959,  0.99994717,  0.93944176,
        0.98056863,  0.9536226 ,  0.99689036,  0.99459609, -0.18741076,
        0.99237792,  0.95263164,  0.96737298,  0.99473126,  0.99385331,
        0.9729544 ,  0.9912943 ,  0.98406638,  0.99705064,  0.98948607,
        0.97521011,  0.99841298,  0.19538034,  0.98823953,  0.98948142,
        0.98741774,  0.92346008,  0.99640382,  0.98990789,  0.74788364,
        0.99111582,  0.97292233,  0.96587441,  0.96996524,  0.99553395,
        0.99530683,  0.94645314]), 'test_spearman_r': array([ 0.96428571,  0.95499371,  1.        ,  1.        ,  0.92857143,
        1.        ,  0.92857143,  1.        ,  0.90632697, -0.27028124,
        0.99103121,  0.96428571,  0.92857143,  1.        ,  0.96428571,
        0.85714286,  0.89285714,  0.96428571,  1.        ,  0.96428571,
        0.77480622,  1.        ,  0.17857143,  1.        ,  0.96428571,
        1.        ,  0.78571429,  0.96428571,  0.96428571,  0.75      ,
        1.        ,  0.85714286,  0.96428571,  0.96428571,  0.96428571,
        0.96428571,  0.89285714]), 'test_rmse': array([-0.06099104, -0.07961699, -0.08150992, -0.01642793, -0.19747493,
       -0.11870943, -0.18247578, -0.06567251, -0.02983835, -0.83686258,
       -0.0936644 , -0.16765119, -0.12763853, -0.07360691, -0.11532505,
       -0.22737097, -0.10641183, -0.12702702, -0.04402817, -0.08488723,
       -0.11605706, -0.03204225, -0.66425533, -0.0845022 , -0.08616086,
       -0.11501666, -0.21734212, -0.04702619, -0.08391285, -0.43243631,
       -0.11210188, -0.1988032 , -0.15266728, -0.15990516, -0.06120199,
       -0.06912063, -0.20399031]), 'test_mae': array([-0.0468248 , -0.07067565, -0.069902  , -0.01217316, -0.12575397,
       -0.07450702, -0.12085892, -0.04250895, -0.02453498, -0.45845376,
       -0.0608462 , -0.10794928, -0.10171826, -0.05998305, -0.09568263,
       -0.14621151, -0.07323868, -0.07958958, -0.03965517, -0.06151358,
       -0.09382084, -0.02619991, -0.41831552, -0.05697666, -0.07124934,
       -0.09041265, -0.10377273, -0.03502733, -0.06718309, -0.22675608,
       -0.08300278, -0.10697044, -0.10608229, -0.09661022, -0.05234618,
       -0.05468145, -0.14364144]), 'test_r2': array([ 0.98255194,  0.98900352,  0.98374581,  0.99883576,  0.8144969 ,
        0.96107887,  0.85943401,  0.99138686,  0.98620548, -1.51774944,
        0.96686646,  0.87884448,  0.9046366 ,  0.98825085,  0.98133745,
        0.91403561,  0.97758057,  0.96105387,  0.99384697,  0.97463086,
        0.95084613,  0.9967189 , -1.11441374,  0.96253836,  0.96871833,
        0.96395752,  0.82543271,  0.99210707,  0.96367864,  0.43907368,
        0.96668478,  0.93399961,  0.91178573,  0.91236064,  0.98964162,
        0.98781597,  0.89077336]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 234, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.44105673, 1.82259011, 2.30051112, 1.07363415, 2.04771233,
       1.4856832 , 1.94607425, 1.37685919, 0.92628002, 2.76798201,
       2.1678586 , 1.79855752, 1.13209248, 1.54327798, 1.92329144,
       1.21836114, 1.95702887, 2.16039538, 2.56469083, 2.54710865,
       0.97227383, 0.9721427 , 1.34546661, 1.61421108, 1.77631497,
       1.71133375, 1.59911275, 1.00329709, 1.00818491, 1.50365138,
       1.28615189, 1.36138749, 1.03607202, 1.30739474, 1.37946606,
       0.99795794, 1.35540152]), 'score_time': array([0.24256444, 0.25068688, 0.25375485, 0.09303904, 0.17203426,
       0.17269444, 0.16585708, 0.07550836, 0.08099365, 0.08081961,
       0.07593632, 0.07678628, 0.07749295, 0.25185084, 0.07955837,
       0.08062029, 0.24106908, 0.16979337, 0.14847779, 0.15210795,
       0.18375039, 0.12641096, 0.16015434, 0.07879782, 0.07212448,
       0.07485557, 0.07702518, 0.07709193, 0.08727527, 0.07014012,
       0.07245421, 0.08471584, 0.07290435, 0.0709374 , 0.07016826,
       0.07513976, 0.07675028]), 'test_pearson_r': array([0.9789909 , 0.99629903, 0.32409158, 0.99258812, 0.98606244,
       0.9984014 , 0.93221617, 0.97078777, 0.97904026, 0.9916149 ,
       0.95587399, 0.99720048, 0.96970491, 0.98374037, 0.90919552,
       0.99072851, 0.58930715, 0.98825881, 0.99638538, 0.86183197,
       0.90606997, 0.9207963 , 0.99507537, 0.99854737, 0.92629134,
       0.99419925, 0.99599576, 0.98989817, 0.77497944, 0.95921752,
       0.99664201, 0.98893637, 0.96297474, 0.49182324, 0.97469642,
       0.99880594, 0.99472044]), 'test_spearman_r': array([0.75      , 0.96428571, 0.23424374, 0.96428571, 0.92857143,
       1.        , 0.92857143, 0.99103121, 0.96428571, 0.99103121,
       1.        , 0.96428571, 0.96428571, 1.        , 0.92857143,
       0.92857143, 0.75      , 0.92857143, 0.96428571, 0.60714286,
       0.75      , 0.81084372, 0.99103121, 1.        , 0.85714286,
       0.95499371, 0.82142857, 0.96428571, 0.42857143, 0.88291871,
       1.        , 0.96428571, 0.78571429, 0.64285714, 1.        ,
       1.        , 1.        ]), 'test_rmse': array([-0.15493195, -0.05809057, -0.4308475 , -0.09027583, -0.0995719 ,
       -0.04278679, -0.06734817, -0.07269522, -0.10402654, -0.09647488,
       -0.25623765, -0.0519863 , -0.10354864, -0.14737987, -0.2866113 ,
       -0.11386799, -0.61252696, -0.09371624, -0.047729  , -0.22171303,
       -0.17775824, -0.17862979, -0.08201216, -0.04612657, -0.22565121,
       -0.08228668, -0.06187089, -0.06156325, -0.36425319, -0.14762452,
       -0.06527133, -0.09654301, -0.12573976, -0.5428824 , -0.08422414,
       -0.03906304, -0.06137558]), 'test_mae': array([-0.09467221, -0.04920595, -0.20776874, -0.06139143, -0.08448141,
       -0.03769191, -0.04744858, -0.05854568, -0.08449364, -0.06690857,
       -0.1587984 , -0.0435316 , -0.05914183, -0.12036324, -0.16816222,
       -0.09347387, -0.31084136, -0.06793505, -0.03015685, -0.19398786,
       -0.11775684, -0.10929611, -0.05937348, -0.0305358 , -0.13176578,
       -0.06030438, -0.05224574, -0.04425143, -0.17807452, -0.11320716,
       -0.04836667, -0.07839112, -0.0948329 , -0.24952328, -0.06103543,
       -0.0268423 , -0.05634605]), 'test_r2': array([ 0.94446624,  0.99072162, -1.19344491,  0.97910116,  0.96119606,
        0.99321466,  0.84040546,  0.92723025,  0.95171421,  0.97727751,
        0.88853727,  0.9942399 ,  0.92547806,  0.9417899 ,  0.75056866,
        0.96701442,  0.05932933,  0.97652172,  0.98770653,  0.69600582,
        0.81142624,  0.74936569,  0.98960442,  0.99551851,  0.84943067,
        0.98742366,  0.99107522,  0.97668478,  0.37543988,  0.90794169,
        0.98975752,  0.97604164,  0.92031766,  0.08637221,  0.94025077,
        0.99735975,  0.97787861]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03770052924189587, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 549, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 220, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([10.48286629, 12.15862894, 12.5150485 ,  8.0476923 , 12.20239401,
       11.52579331,  5.34070992,  8.88107824,  5.01512194, 10.81757259,
        8.94550705,  8.08918929, 12.40504551,  8.59421968,  5.303931  ,
       11.02152896,  7.67793822, 12.31871939,  9.29441404, 13.58117056,
        5.1502986 ,  5.53161025,  6.1722331 ,  7.46669745,  5.05781126,
        8.77187872,  7.88046384,  7.89740634,  7.21472788,  6.52175426,
        5.09453964,  7.62231541,  6.51816893,  4.95705652,  5.88260245,
        5.73060846,  5.14150524]), 'score_time': array([0.16424799, 0.25205088, 0.07729888, 0.17702842, 0.17861438,
       0.15479875, 0.08063293, 0.16696382, 0.08210468, 0.16707587,
       0.16836429, 0.0832417 , 0.16689348, 0.19891071, 0.07703567,
       0.25023246, 0.17914224, 0.23952579, 0.16145444, 0.16045809,
       0.07919431, 0.07850337, 0.08080602, 0.16820741, 0.08018184,
       0.07484031, 0.07678986, 0.0740521 , 0.08094001, 0.07519865,
       0.07572198, 0.07927585, 0.0699141 , 0.07629204, 0.07276082,
       0.07187271, 0.07606387]), 'test_pearson_r': array([0.99644531, 0.54388103, 0.9554513 , 0.98347463, 0.98011089,
       0.95656587, 0.99850537, 0.99903454, 0.99488148, 0.97236688,
       0.9905576 , 0.99229451, 0.97886211, 0.99405149, 0.98063781,
       0.99717566, 0.99895028, 0.98673224, 0.99148723, 0.99079051,
       0.92578895, 0.97001369, 0.95390691, 0.99150165, 0.98195878,
       0.88492352, 0.99221098, 0.99550351, 0.99466034, 0.97841468,
       0.97589542, 0.72812655, 0.98439467, 0.98936453, 0.99296225,
       0.53082478, 0.93412354]), 'test_spearman_r': array([1.        , 0.42857143, 0.82142857, 0.96428571, 0.85714286,
       0.89285714, 1.        , 1.        , 1.        , 0.96428571,
       1.        , 0.96428571, 0.96428571, 0.96428571, 0.96428571,
       0.96428571, 1.        , 0.96428571, 0.96428571, 0.85714286,
       0.85714286, 0.99103121, 0.92857143, 1.        , 0.96428571,
       0.63065622, 1.        , 1.        , 1.        , 0.99103121,
       0.96428571, 0.75      , 0.96428571, 0.99103121, 0.96428571,
       0.46428571, 0.77480622]), 'test_rmse': array([-0.05279675, -0.44609104, -0.11866602, -0.07383825, -0.11802826,
       -0.19673996, -0.05276374, -0.05683686, -0.07282906, -0.14851842,
       -0.08042706, -0.05358874, -0.12869818, -0.05829887, -0.10252358,
       -0.0529095 , -0.04845863, -0.09072458, -0.12275405, -0.06601949,
       -0.12697393, -0.15699323, -0.25615122, -0.07571349, -0.10941131,
       -0.25145024, -0.10621516, -0.05445409, -0.09412325, -0.15607492,
       -0.13887161, -0.57158488, -0.11586343, -0.08850404, -0.09851974,
       -0.6064044 , -0.3026323 ]), 'test_mae': array([-0.04432738, -0.2352773 , -0.0867645 , -0.06274264, -0.07811832,
       -0.10327956, -0.04209236, -0.0492748 , -0.0497061 , -0.09071002,
       -0.05991059, -0.04624011, -0.09313419, -0.03732998, -0.08192735,
       -0.04389233, -0.03308739, -0.06144573, -0.09243894, -0.05605904,
       -0.07705438, -0.1155388 , -0.18896514, -0.04529206, -0.08246014,
       -0.1134446 , -0.07265965, -0.05044813, -0.07522649, -0.07889143,
       -0.09343765, -0.32880515, -0.09424869, -0.06917211, -0.07946315,
       -0.3105131 , -0.16533923]), 'test_r2': array([ 0.98876474,  0.23238617,  0.87375866,  0.96445051,  0.92843927,
        0.86405353,  0.99562552,  0.99088858,  0.98692041,  0.93395696,
        0.97982028,  0.98212726,  0.9362005 ,  0.9847473 ,  0.95309634,
        0.99427299,  0.99552982,  0.97085193,  0.96531573,  0.98108896,
        0.8417442 ,  0.8622071 ,  0.77932878,  0.97428375,  0.9514594 ,
        0.74535109,  0.98286088,  0.99101032,  0.97705751,  0.95291318,
        0.9479468 ,  0.41559142,  0.9461353 ,  0.97436989,  0.97731547,
       -0.08657   ,  0.85434294]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0029277433369518636, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1642, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.59460855, 2.86813211, 2.69323206, 2.62491465, 1.12122583,
       2.71087146, 1.14210916, 2.40263367, 2.49909973, 2.04238939,
       2.68475509, 1.2953968 , 2.51775742, 1.11796141, 3.27835083,
       2.34106779, 1.52249503, 2.53392053, 2.84933424, 1.98779011,
       1.16719151, 1.11816549, 1.83470559, 1.11887956, 2.17636132,
       2.1134913 , 1.56745648, 1.48487353, 1.50660515, 1.14581227,
       1.11855459, 1.09918165, 1.53659153, 1.29825068, 1.23444033,
       1.58245039, 1.34167051]), 'score_time': array([0.24327517, 0.07263041, 0.22941232, 0.23135066, 0.0942235 ,
       0.15628767, 0.07745528, 0.11572957, 0.25132108, 0.0770793 ,
       0.15330243, 0.09407926, 0.23775077, 0.15410638, 0.08217764,
       0.25778341, 0.12240863, 0.07477808, 0.16034389, 0.15423584,
       0.09393954, 0.0748024 , 0.07640696, 0.08475494, 0.08791494,
       0.0724957 , 0.0800581 , 0.07046247, 0.07175708, 0.07600164,
       0.07546592, 0.07498693, 0.06847429, 0.07833266, 0.07371974,
       0.07107782, 0.07022262]), 'test_pearson_r': array([0.98209077, 0.99900596, 0.99493092, 0.9985907 , 0.78117176,
       0.9859498 , 0.99938475, 0.98961097, 0.93402745, 0.99196472,
       0.97349462, 0.79670906, 0.95845222, 0.40344716, 0.99432186,
       0.99499134, 0.88731979, 0.92554221, 0.97581007, 0.89030755,
       0.58182901, 0.99337013, 0.97466338, 0.99892577, 0.96890029,
       0.9909953 , 0.98865272, 0.99552908, 0.9943766 , 0.9896633 ,
       0.99600185, 0.99825898, 0.99141075, 0.96760875, 0.9792026 ,
       0.99508506, 0.99535957]), 'test_spearman_r': array([0.92857143, 0.96428571, 0.96428571, 0.99103121, 0.42857143,
       0.96428571, 1.        , 0.99103121, 0.92857143, 1.        ,
       0.95499371, 0.78571429, 0.89285714, 0.25      , 1.        ,
       1.        , 0.96428571, 0.96428571, 0.96428571, 0.63065622,
       0.75      , 0.96428571, 0.89285714, 0.99103121, 1.        ,
       1.        , 0.96362411, 0.99103121, 1.        , 0.92857143,
       0.96428571, 1.        , 0.82142857, 1.        , 1.        ,
       0.96428571, 0.89285714]), 'test_rmse': array([-0.09917906, -0.03624271, -0.10532345, -0.03937743, -0.53646159,
       -0.08882884, -0.04893513, -0.09010994, -0.25297316, -0.06854093,
       -0.14705744, -0.3652832 , -0.11721772, -0.59492199, -0.08309865,
       -0.06281409, -0.33319804, -0.16061113, -0.12643537, -0.31339425,
       -0.44418875, -0.08291692, -0.12212856, -0.03491055, -0.18488868,
       -0.09030604, -0.0852948 , -0.07583096, -0.07331159, -0.1232837 ,
       -0.08050845, -0.0406584 , -0.08968556, -0.16878179, -0.12844187,
       -0.07295265, -0.06778978]), 'test_mae': array([-0.07424351, -0.02550186, -0.08765238, -0.02915758, -0.25170349,
       -0.05662981, -0.0382387 , -0.05475343, -0.1843696 , -0.05685906,
       -0.08423131, -0.16645511, -0.09728813, -0.25382463, -0.07203023,
       -0.04374378, -0.20581073, -0.08333511, -0.09367931, -0.22390832,
       -0.24543846, -0.05893506, -0.09348303, -0.02963548, -0.10623326,
       -0.07433027, -0.05716657, -0.06288532, -0.05863655, -0.10564349,
       -0.0596765 , -0.02375364, -0.07816529, -0.11153818, -0.07861754,
       -0.06718865, -0.04395496]), 'test_r2': array([ 0.96252614,  0.99795048,  0.95016655,  0.99702033,  0.52360422,
        0.95447695,  0.99648887,  0.97510549,  0.85137767,  0.97419691,
        0.93500627,  0.52975308,  0.91752038, -0.4725038 ,  0.98575094,
        0.9870795 ,  0.65833451,  0.82572918,  0.94242577,  0.78565491,
        0.23095591,  0.98051708,  0.93107543,  0.99627355,  0.93452083,
        0.9782894 ,  0.97162698,  0.98584483,  0.98501231,  0.96679936,
        0.97940841,  0.99572265,  0.96303695,  0.92194697,  0.95013998,
        0.98713055,  0.98866983]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05617045774903145, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 710, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_pearson_r_mean': 0.9362125032001463, 'test_pearson_r_std': 0.15446636246157883, 'test_spearman_r_mean': 0.9059524782664657, 'test_spearman_r_std': 0.1656022325619273, 'test_rmse_mean': 0.15357112801218867, 'test_rmse_std': 0.14181524978608936, 'test_mae_mean': 0.09701087597644487, 'test_mae_std': 0.06998566847642784, 'test_r2_mean': 0.8469615070479527, 'test_r2_std': 0.3606595326911241}}, 'CO_P3EHT': {'cluster size (%)': 2, 6: {'test_mad': 0.043552488, 'test_ystd': 0.046616677, 'test_mae': 0.10601392367821327, 'test_rmse': 0.1125768174124894, 'test_r2': -63.187843688903456, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.036867678393115215, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 574, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.04279381, 'test_ystd': 0.046324003, 'test_mae': 0.09962395806453021, 'test_rmse': 0.10619948259606686, 'test_r2': -56.12150670776081, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.004030190951794684, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.040633094, 'test_ystd': 0.04377744, 'test_mae': 0.09809544661980263, 'test_rmse': 0.10402506240357419, 'test_r2': -53.80634278456478, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.002593061262119465, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.046787918, 'test_ystd': 0.048964124, 'test_mae': 0.09154395241877826, 'test_rmse': 0.1000112215143614, 'test_r2': -49.6584988185462, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06750714725465827, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 533, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.04240324, 'test_ystd': 0.047699176, 'test_mae': 0.11031683265508603, 'test_rmse': 0.11672253874195924, 'test_r2': -68.00241688774068, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0723633287628948, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 598, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.041939646, 'test_ystd': 0.044837575, 'test_mae': 0.09945580342751137, 'test_rmse': 0.10560292520164795, 'test_r2': -55.4815685911421, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.012398217926728862, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.03556813, 'test_ystd': 0.04018695, 'test_mae': 0.10248542804858478, 'test_rmse': 0.10748917175878545, 'test_r2': -57.51730083709631, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_mad_mean': 0.04195404638137136, 'test_mad_std': 0.0031476378053377323, 'test_ystd_mean': 0.04548656355057444, 'test_ystd_std': 0.0026831683466065873, 'test_mae_mean': 0.1010764778446438, 'test_mae_std': 0.005558001394331041, 'test_rmse_mean': 0.10751817423269779, 'test_rmse_std': 0.005130780138854633, 'test_r2_mean': -57.6822111879649, 'test_r2_std': 5.650875693528991}}, 'ID_P3EHT': {'cluster size (%)': 2, 6: {'fit_time': array([17.70629501, 11.30099797, 16.7698555 , 18.51030755,  8.83189583,
       17.27234101, 19.13743782, 10.43464708, 10.81897783, 17.52465701,
       16.92534494,  7.53435016, 17.47668457, 16.91829705,  7.57860994,
       14.58774042, 10.5332973 , 17.16774321, 17.87104201, 15.60872912,
        8.28534222,  7.39422417, 11.22973967, 13.7862587 ,  8.89441276,
       11.56462121,  9.79355454, 12.58378267,  9.56107593, 10.32998466,
        8.80596757, 11.61485505, 11.14428306, 10.77451038, 10.58789039,
       12.34202552, 11.10357857, 12.15028119,  9.46818757, 11.63903499,
       10.67855668, 11.08868027,  7.190449  ]), 'score_time': array([0.17673397, 0.22235656, 0.07551503, 0.16757917, 0.08187175,
       0.08681417, 0.16953063, 0.19284368, 0.08430314, 0.17541337,
       0.19088411, 0.07933283, 0.16611648, 0.35462689, 0.08056331,
       0.26710534, 0.07775307, 0.19105792, 0.1966598 , 0.18350339,
       0.0963254 , 0.1630342 , 0.17433167, 0.17031884, 0.11413455,
       0.08249974, 0.07648873, 0.08030128, 0.07390618, 0.07813573,
       0.07316923, 0.07436013, 0.08464193, 0.08892035, 0.07578111,
       0.08040047, 0.07669783, 0.08110619, 0.0843997 , 0.07796335,
       0.08101082, 0.07434034, 0.07557511]), 'test_pearson_r': array([ 0.9920029 ,  0.99756262,  0.64613918,  0.98598065,  0.99690163,
        0.98750936,  0.99924531,  0.99253569,  0.99967724,  0.99339852,
        0.94374459,  0.99029646,  0.90838766, -0.46862216,  0.99514854,
        0.96397844,  0.99501139,  0.99824948,  0.99640387,  0.99266112,
        0.56181042,  0.96722552,  0.99375964,  0.88364591,  0.99177772,
        0.50578593,  0.99197604,  0.99716794,  0.9743328 ,  0.99276536,
        0.96832099,  0.97641297,  0.9898337 ,  0.99695771,  0.91648505,
        0.99035752,  0.81360236,  0.98228633,  0.90451038,  0.9889737 ,
        0.99454745,  0.9811945 ,  0.99461044]), 'test_spearman_r': array([ 1.        ,  1.        ,  0.6       ,  1.        ,  0.94285714,
        1.        ,  1.        ,  1.        ,  1.        ,  0.94285714,
        0.88571429,  1.        ,  0.82857143, -0.2       ,  0.88571429,
        1.        ,  0.94285714,  1.        ,  1.        ,  1.        ,
        0.37142857,  0.88571429,  0.94285714,  0.81167945,  0.81167945,
        0.6       ,  0.94285714,  0.98561076,  1.        ,  1.        ,
        0.82857143,  0.82857143,  0.94285714,  1.        ,  1.        ,
        0.82857143,  0.82857143,  0.94285714,  0.82857143,  0.98561076,
        1.        ,  0.82857143,  0.94285714]), 'test_rmse': array([-0.07817692, -0.06641851, -0.50482657, -0.11262153, -0.06574503,
       -0.13424498, -0.053869  , -0.10403682, -0.07179983, -0.03165356,
       -0.28440067, -0.10107091, -0.1014454 , -0.66768012, -0.09413163,
       -0.178136  , -0.07976321, -0.02934871, -0.08458741, -0.12341384,
       -0.592147  , -0.14035456, -0.0695408 , -0.22254931, -0.07527064,
       -0.39609702, -0.0940857 , -0.04488465, -0.09245423, -0.08082343,
       -0.16356879, -0.12129202, -0.06468817, -0.0846121 , -0.27447624,
       -0.10324932, -0.30840066, -0.14366976, -0.12100868, -0.09803948,
       -0.10074388, -0.08984238, -0.05810418]), 'test_mae': array([-0.0587429 , -0.04717257, -0.32786013, -0.06610787, -0.04430214,
       -0.0811734 , -0.04530598, -0.08166907, -0.06698427, -0.02618065,
       -0.17994244, -0.07249262, -0.09121938, -0.36737399, -0.07824274,
       -0.10537465, -0.06495862, -0.02546826, -0.05797329, -0.09275996,
       -0.31373219, -0.09523719, -0.05280178, -0.11157148, -0.04584476,
       -0.19791818, -0.07775998, -0.03540493, -0.06433252, -0.07587334,
       -0.10488003, -0.08671569, -0.04737572, -0.06137917, -0.18975143,
       -0.08502472, -0.17389457, -0.09162837, -0.07796944, -0.06501729,
       -0.07042724, -0.07796602, -0.04825451]), 'test_r2': array([ 0.9782129 ,  0.97327852,  0.17354237,  0.96804441,  0.98706657,
        0.97051163,  0.99116124,  0.9729034 ,  0.99173386,  0.98655277,
        0.82884086,  0.97588167,  0.80627891, -3.23320017,  0.97759403,
        0.89318581,  0.98855223,  0.99533715,  0.98022122,  0.97093536,
        0.06066781,  0.91837114,  0.98649838,  0.75607288,  0.9736621 ,
       -0.73516004,  0.97914895,  0.99411068,  0.94840455,  0.98278361,
        0.93605484,  0.9501676 ,  0.97383887,  0.98877944,  0.77978289,
        0.93305019,  0.57577389,  0.95740977,  0.78137261,  0.97564267,
        0.94783347,  0.94820046,  0.9821889 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0021563374205135397, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.56385636, 3.0231576 , 3.21630335, 3.03260446, 2.62876821,
       2.28551412, 1.2483623 , 2.34540081, 1.15255141, 3.97209191,
       1.18771172, 3.76553607, 1.16363764, 2.90443826, 4.00807738,
       2.82860279, 3.83874297, 3.80711794, 3.50164747, 3.07305431,
       1.1622901 , 1.18519592, 2.97047901, 1.18833947, 2.4605999 ,
       1.27415895, 1.14012527, 1.21170735, 1.16266274, 2.14104867,
       2.55643177, 2.31458759, 2.35162306, 2.03876805, 2.14997959,
       2.04336429, 2.32787251, 1.34003401, 1.99789548, 1.50758576,
       1.13201785, 1.91870761, 1.21664596]), 'score_time': array([0.14295554, 0.35616064, 0.28357553, 0.33530736, 0.18023467,
       0.07641006, 0.0941143 , 0.08003831, 0.07968211, 0.07671905,
       0.08677721, 0.07396841, 0.07645893, 0.07445288, 0.23696113,
       0.16420317, 0.18747663, 0.26233101, 0.17575645, 0.25828505,
       0.0899632 , 0.08748198, 0.09309769, 0.07458615, 0.07409167,
       0.08267093, 0.07500052, 0.0747664 , 0.07760501, 0.10035181,
       0.07494426, 0.07107329, 0.07177496, 0.07238746, 0.07406259,
       0.07470131, 0.07102585, 0.07583356, 0.0739193 , 0.08048868,
       0.07867217, 0.07800412, 0.15173578]), 'test_pearson_r': array([0.98907495, 0.99817856, 0.99494742, 0.99757873, 0.80036218,
       0.99360334, 0.92554482, 0.99617024, 0.99749125, 0.97318236,
       0.99675763, 0.9045779 , 0.99759745, 0.5304395 , 0.81635696,
       0.99894535, 0.92393685, 0.96100515, 0.42584509, 0.99753587,
       0.99879116, 0.997112  , 0.99586168, 0.8721986 , 0.97872489,
       0.98436452, 0.99654416, 0.96781911, 0.98854238, 0.99369067,
       0.99246848, 0.98954105, 0.99068   , 0.999272  , 0.99231081,
       0.8053344 , 0.99437064, 0.98747103, 0.99717393, 0.95326856,
       0.95934348, 0.98289827, 0.98514795]), 'test_spearman_r': array([0.96428571, 1.        , 0.94285714, 0.94285714, 0.82857143,
       0.88571429, 0.77142857, 0.89864511, 1.        , 0.98561076,
       1.        , 0.82857143, 1.        , 0.42857143, 0.82857143,
       0.94285714, 0.82857143, 1.        , 0.65714286, 1.        ,
       1.        , 1.        , 1.        , 0.82857143, 0.94285714,
       1.        , 1.        , 0.94285714, 0.82857143, 0.94285714,
       1.        , 0.82857143, 0.94285714, 1.        , 1.        ,
       0.88571429, 1.        , 1.        , 1.        , 0.94285714,
       1.        , 1.        , 0.94285714]), 'test_rmse': array([-0.08053437, -0.03667548, -0.04628892, -0.04709187, -0.46415602,
       -0.0631275 , -0.20286402, -0.05671074, -0.05929826, -0.13433074,
       -0.07458262, -0.3141889 , -0.0360194 , -0.65733587, -0.4274967 ,
       -0.03267531, -0.14922278, -0.23419471, -0.5880723 , -0.06905115,
       -0.05394929, -0.08130985, -0.05291649, -0.23122032, -0.12837087,
       -0.12125883, -0.06521272, -0.18325188, -0.08894479, -0.097315  ,
       -0.08101143, -0.12403768, -0.0809224 , -0.02824381, -0.07840562,
       -0.23999869, -0.05307753, -0.10997855, -0.04369246, -0.1671861 ,
       -0.14897969, -0.08541818, -0.1287241 ]), 'test_mae': array([-0.05065631, -0.02139845, -0.03491248, -0.0418963 , -0.24038665,
       -0.05283221, -0.17234392, -0.04305702, -0.04412855, -0.07574889,
       -0.04875035, -0.17638725, -0.02970159, -0.36142161, -0.25093446,
       -0.02428042, -0.10537123, -0.1579529 , -0.24568844, -0.03633442,
       -0.0397958 , -0.07099697, -0.04649371, -0.12996982, -0.1041906 ,
       -0.09852674, -0.05271509, -0.14948395, -0.05763427, -0.07543021,
       -0.04902241, -0.09955673, -0.06643356, -0.01939846, -0.05905895,
       -0.18481577, -0.04691899, -0.07597017, -0.03942382, -0.08559061,
       -0.1114519 , -0.07132549, -0.09254546]), 'test_r2': array([ 0.97618619,  0.99567533,  0.9806021 ,  0.99486923,  0.59717153,
        0.98631212,  0.81965549,  0.98571719,  0.99441689,  0.92684302,
        0.98713288,  0.76661464,  0.99479426, -0.1692854 ,  0.58048672,
        0.99749092,  0.83223726,  0.91323561, -0.01683249,  0.99187058,
        0.99172616,  0.98285967,  0.98442417,  0.70286258,  0.91891166,
        0.93535715,  0.98971544,  0.91505383,  0.97538788,  0.98468541,
        0.9571352 ,  0.97290094,  0.9748119 ,  0.99780899,  0.96935339,
        0.49182565,  0.98853376,  0.96616945,  0.99328896,  0.87601074,
        0.90111458,  0.95302251,  0.93478495]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03897794765782249, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 304, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([0.45258713, 0.51653862, 0.8948791 , 1.34221268, 1.32360673,
       1.3457737 , 0.64247894, 0.6269815 , 1.2176857 , 1.01952243,
       0.52073288, 1.4783814 , 1.37613463, 1.46092892, 0.85092854,
       1.45593739, 1.60134077, 1.19792938, 1.08788061, 1.51014352,
       1.04957604, 0.51648498, 0.50079536, 0.5014329 , 1.09741879,
       0.95207429, 0.98368979, 1.01965165, 0.51962471, 0.48462367,
       0.52165461, 0.93132734, 0.8688004 , 0.83480883, 0.82489634,
       0.87228513, 0.89790654, 0.85241938, 0.75302529, 0.80215335,
       0.7996366 , 0.50620437, 0.5199492 ]), 'score_time': array([0.12967396, 0.07764649, 0.16932988, 0.24001932, 0.24414253,
       0.16702414, 0.26423597, 0.07371378, 0.16810918, 0.07346106,
       0.07920837, 0.24046612, 0.25184226, 0.18143797, 0.23856735,
       0.15166593, 0.15324807, 0.2039032 , 0.15174747, 0.2436142 ,
       0.19042706, 0.0823195 , 0.07875061, 0.07399678, 0.09195948,
       0.07354593, 0.0869472 , 0.09242392, 0.08057499, 0.079602  ,
       0.15891981, 0.07251334, 0.0885036 , 0.06938148, 0.07370687,
       0.07196808, 0.07171583, 0.07959723, 0.07183838, 0.07317352,
       0.07259226, 0.16095304, 0.07627344]), 'test_pearson_r': array([ 0.98087662,  0.99849484,  0.99352851,  0.98904634,  0.9994771 ,
        0.78969412,  0.98908333,  0.98636366,  0.99831589,  0.99121424,
        0.91909815,  0.99731672,  0.9729599 ,  0.9375864 ,  0.96800843,
        0.99563252,  0.98904911,  0.9667328 ,  0.85030811,  0.9955727 ,
        0.98972697,  0.9973808 ,  0.90212226,  0.99624089, -0.48038981,
        0.99632931,  0.99425758,  0.98334558,  0.99076387,  0.75625924,
        0.94189453,  0.9723253 ,  0.99640599,  0.9992049 ,  0.77711648,
        0.95392501,  0.99981529,  0.9889811 ,  0.99869633,  0.62911088,
        0.9666605 ,  0.98958472,  0.99849373]), 'test_spearman_r': array([1.        , 0.94285714, 1.        , 0.88571429, 1.        ,
       0.82857143, 0.94285714, 0.94285714, 1.        , 1.        ,
       0.88571429, 1.        , 0.94285714, 0.840668  , 0.82857143,
       0.94285714, 1.        , 1.        , 0.88571429, 0.94285714,
       1.        , 1.        , 0.88571429, 1.        , 0.02857143,
       0.98561076, 1.        , 0.94285714, 0.94285714, 0.71428571,
       0.94285714, 0.88571429, 0.82857143, 1.        , 0.65714286,
       0.88571429, 1.        , 0.94285714, 1.        , 0.82857143,
       0.88571429, 0.81167945, 1.        ]), 'test_rmse': array([-0.11149055, -0.05732618, -0.19748527, -0.11332591, -0.02410126,
       -0.39038474, -0.11894826, -0.13656778, -0.0776292 , -0.05979261,
       -0.19732731, -0.06182308, -0.16485583, -0.11172529, -0.16810163,
       -0.08149846, -0.09225267, -0.14186727, -0.21890525, -0.05443805,
       -0.10841968, -0.04134918, -0.17797664, -0.08297544, -0.65068155,
       -0.07283425, -0.08174753, -0.13567195, -0.09456154, -0.18806738,
       -0.1974754 , -0.14481743, -0.07069626, -0.04620869, -0.4584782 ,
       -0.17971951, -0.03486871, -0.13137318, -0.04362628, -0.60256148,
       -0.08873833, -0.10357368, -0.03766819]), 'test_mae': array([-0.07824896, -0.04620896, -0.11017591, -0.07049803, -0.01925199,
       -0.18209535, -0.10405638, -0.1124385 , -0.06242413, -0.05350277,
       -0.11691202, -0.04422748, -0.09488071, -0.0805063 , -0.12522847,
       -0.06019865, -0.06045598, -0.11604226, -0.13571282, -0.03757225,
       -0.07847589, -0.03303617, -0.12471145, -0.06025305, -0.33092433,
       -0.06583913, -0.05906674, -0.0812243 , -0.06402733, -0.14775777,
       -0.11538086, -0.08002114, -0.061025  , -0.03805461, -0.21749043,
       -0.11159755, -0.02891215, -0.10770502, -0.03597359, -0.30942277,
       -0.06664882, -0.08276646, -0.02780091]), 'test_r2': array([ 0.95274172,  0.99099585,  0.93538855,  0.96414037,  0.99802586,
        0.38391559,  0.9734049 ,  0.92584946,  0.99295549,  0.98026338,
        0.78794474,  0.98415828,  0.93161197,  0.82113913,  0.89381144,
        0.9894842 ,  0.97348925,  0.93093201,  0.66526942,  0.99017617,
        0.92730554,  0.99444664,  0.79170636,  0.96894891, -4.23658382,
        0.9878092 ,  0.98046996,  0.96234458,  0.98121252,  0.43624603,
        0.81634063,  0.91710089,  0.99243758,  0.99263984,  0.50094975,
        0.89986644,  0.99770682,  0.96715131,  0.99110149,  0.25602681,
        0.92265173,  0.9728977 ,  0.99575729]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04786776304179686, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 125, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.27456236, 1.01804566, 1.3180635 , 1.53176832, 0.60314131,
       0.57242155, 1.15755153, 1.16088605, 1.30131245, 0.96604657,
       1.44547606, 1.06798625, 0.59212184, 0.58355975, 0.919631  ,
       1.42565107, 1.41212463, 1.60547304, 1.43220329, 1.39738512,
       1.42247534, 0.71012068, 0.71432137, 0.64304018, 1.23915219,
       1.27181888, 1.19253969, 1.048105  , 1.13580418, 0.57024527,
       1.17688179, 1.12045932, 1.09018016, 0.57948637, 0.88692522,
       0.61592078, 1.01452065, 1.0197463 , 1.07590151, 0.93886995,
       1.05388117, 1.00433874, 0.83438778]), 'score_time': array([0.23336029, 0.16861415, 0.16647911, 0.15442634, 0.17759562,
       0.16507292, 0.25724483, 0.09023356, 0.15811682, 0.0920198 ,
       0.24459434, 0.18360329, 0.16928673, 0.08058143, 0.15957785,
       0.20180392, 0.22771859, 0.20017457, 0.08561587, 0.21069479,
       0.2102952 , 0.10454631, 0.16955876, 0.23371148, 0.17702246,
       0.16627145, 0.15971708, 0.08532643, 0.16338539, 0.08016992,
       0.08364391, 0.07139683, 0.08357406, 0.09295106, 0.07472157,
       0.17997932, 0.07262516, 0.07133365, 0.07811213, 0.07268953,
       0.0723083 , 0.07347274, 0.07832432]), 'test_pearson_r': array([0.99257328, 0.9982608 , 0.99571976, 0.99811185, 0.99886934,
       0.97735259, 0.97501236, 0.95364997, 0.99707037, 0.99982146,
       0.99807532, 0.29692606, 0.99244294, 0.92801928, 0.98192616,
       0.99599644, 0.99827369, 0.98827898, 0.99884728, 0.98456205,
       0.98445762, 0.99688168, 0.9937344 , 0.93664399, 0.98361177,
       0.46574399, 0.96552943, 0.98807318, 0.98892317, 0.98889364,
       0.90755726, 0.99805515, 0.98883102, 0.98253126, 0.76862515,
       0.99521821, 0.96459801, 0.95848215, 0.99288188, 0.91481482,
       0.99661109, 0.97746599, 0.9902333 ]), 'test_spearman_r': array([0.96428571, 0.92763366, 1.        , 1.        , 1.        ,
       0.94285714, 1.        , 0.94285714, 1.        , 0.94112395,
       1.        , 0.5       , 1.        , 0.94285714, 0.94285714,
       1.        , 1.        , 0.82857143, 1.        , 0.94285714,
       0.82857143, 1.        , 1.        , 0.77142857, 0.92763366,
       0.6       , 0.82857143, 1.        , 0.94285714, 1.        ,
       0.65714286, 1.        , 0.94285714, 0.88571429, 0.65714286,
       1.        , 0.82857143, 1.        , 0.88571429, 0.94285714,
       1.        , 1.        , 1.        ]), 'test_rmse': array([-0.06099104, -0.07916483, -0.06881562, -0.06008947, -0.02396897,
       -0.19658239, -0.12755831, -0.19667755, -0.06982086, -0.02103582,
       -0.03861362, -0.91502548, -0.11991675, -0.19293854, -0.09677345,
       -0.06257386, -0.11269346, -0.21921177, -0.04714844, -0.12633365,
       -0.11508164, -0.03983914, -0.08625939, -0.15687887, -0.13330908,
       -0.71118406, -0.15090461, -0.06823777, -0.07594055, -0.10997564,
       -0.24338367, -0.03748024, -0.06268198, -0.08315345, -0.48370359,
       -0.08427153, -0.2304274 , -0.14939136, -0.08727271, -0.18146449,
       -0.07710396, -0.1562711 , -0.1048942 ]), 'test_mae': array([-0.0468248 , -0.06784585, -0.05783818, -0.04317105, -0.01579559,
       -0.13077807, -0.07993477, -0.13559754, -0.04754296, -0.01703594,
       -0.02857313, -0.5356809 , -0.0924896 , -0.13320791, -0.07309316,
       -0.04795866, -0.09926911, -0.157282  , -0.03138133, -0.09689268,
       -0.06867094, -0.03560735, -0.05843919, -0.11720564, -0.07533451,
       -0.43581246, -0.11694678, -0.05049204, -0.05949751, -0.07975299,
       -0.14550368, -0.02887647, -0.04754455, -0.06735932, -0.2980248 ,
       -0.06145773, -0.12846011, -0.09505674, -0.06363142, -0.11296806,
       -0.06453591, -0.09344157, -0.08405765]), 'test_r2': array([ 0.98255194,  0.9894881 ,  0.98738785,  0.98548907,  0.99748577,
        0.82492017,  0.94535504,  0.84205335,  0.98903372,  0.98650723,
        0.99361524, -1.93305995,  0.9003143 ,  0.81853358,  0.94343355,
        0.99198806,  0.98458301,  0.91276802,  0.99578555,  0.95763175,
        0.95959162,  0.99337006,  0.97708579,  0.85406561,  0.95198931,
       -0.55447104,  0.88188297,  0.9653455 ,  0.97572926,  0.97163806,
        0.80904045,  0.99443961,  0.97625159,  0.89604469,  0.40913114,
        0.98376165,  0.91169828,  0.89462007,  0.97790512,  0.81064505,
        0.99126106,  0.92741402,  0.97248558]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 234, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.68705821, 1.02037024, 2.23639202, 3.05784535, 2.71133208,
       1.03426552, 1.39526224, 1.03700519, 3.13113928, 2.69156885,
       2.68599296, 2.76011252, 2.11231613, 2.5880127 , 1.82766509,
       2.8262136 , 1.13305163, 2.44686627, 2.50975585, 3.36088252,
       0.97909617, 2.48854375, 1.05461669, 1.96901822, 1.02351284,
       1.04267645, 0.92444658, 1.02547526, 2.04287791, 1.55823636,
       1.05837893, 1.53381085, 1.5042088 , 1.69404316, 1.51855063,
       1.81688714, 1.68679643, 1.69630122, 1.72108006, 1.05759311,
       1.62530828, 1.15790415, 1.26917243]), 'score_time': array([0.23863149, 0.07862067, 0.16996622, 0.26128006, 0.2752986 ,
       0.08224368, 0.08039689, 0.07657957, 0.24213266, 0.18526578,
       0.21145821, 0.25003171, 0.25327992, 0.23111773, 0.07972527,
       0.26395297, 0.2058928 , 0.16635585, 0.16984439, 0.18027091,
       0.07538986, 0.16403365, 0.0756073 , 0.08002472, 0.07787704,
       0.08168435, 0.16230392, 0.08001232, 0.07364917, 0.0743506 ,
       0.07917929, 0.07355714, 0.13714623, 0.08433843, 0.07225871,
       0.07089472, 0.07874489, 0.07529736, 0.07224941, 0.07846618,
       0.07124829, 0.10473299, 0.07498503]), 'test_pearson_r': array([ 0.9789909 ,  0.99631579,  0.98098657,  0.7060946 ,  0.97233756,
        0.99330218,  0.99843974,  0.92479514,  0.96151549,  0.99021659,
        0.9883573 ,  0.95664119,  0.96759727,  0.99847793,  0.92036881,
        0.96706797,  0.92618274,  0.99809053,  0.94714711,  0.69008493,
        0.9506281 ,  0.99644233,  0.89776545,  0.82383859,  0.48663955,
        0.97560566,  0.99593816,  0.99863981,  0.84003096,  0.99672426,
        0.99297311,  0.99419185,  0.99966666,  0.54680084,  0.95799687,
        0.99583423,  0.98371941,  0.98784479,  0.98964099, -0.67340405,
        0.97732328,  0.99832164,  0.99705111]), 'test_spearman_r': array([0.75      , 0.98561076, 1.        , 0.40583972, 1.        ,
       0.88571429, 1.        , 0.88571429, 0.98561076, 1.        ,
       1.        , 1.        , 0.94285714, 0.94285714, 0.94285714,
       1.        , 0.94285714, 1.        , 0.94285714, 0.82857143,
       0.77142857, 0.94285714, 0.71428571, 0.77142857, 0.57977104,
       0.88571429, 0.92763366, 1.        , 0.77142857, 0.92763366,
       0.77142857, 0.94285714, 1.        , 0.40583972, 0.94285714,
       1.        , 0.94285714, 0.82857143, 1.        , 0.14285714,
       1.        , 1.        , 1.        ]), 'test_rmse': array([-0.15493195, -0.05977397, -0.09293511, -0.45832076, -0.1171579 ,
       -0.09723272, -0.03678377, -0.07087493, -0.08164686, -0.08290589,
       -0.12668968, -0.17183638, -0.22391895, -0.04707518, -0.11717124,
       -0.15282231, -0.24295479, -0.08584272, -0.2005181 , -0.62785149,
       -0.13269343, -0.04910035, -0.19799376, -0.24167333, -0.16347081,
       -0.11548971, -0.06610581, -0.04700728, -0.24273975, -0.07413087,
       -0.07217177, -0.07197241, -0.05129518, -0.39432231, -0.16486259,
       -0.07219581, -0.10403756, -0.10901598, -0.07844355, -0.58792905,
       -0.08989453, -0.04187618, -0.06457883]), 'test_mae': array([-0.09467221, -0.05006341, -0.06834586, -0.19652804, -0.10100421,
       -0.07625029, -0.03186252, -0.0488435 , -0.0721457 , -0.0613729 ,
       -0.10371696, -0.10643044, -0.10823593, -0.03990358, -0.06261386,
       -0.11697612, -0.1669488 , -0.07106507, -0.12908378, -0.29410608,
       -0.08425216, -0.03675051, -0.17083177, -0.18663052, -0.08685794,
       -0.08193431, -0.04776504, -0.03007929, -0.1504561 , -0.0510279 ,
       -0.05582565, -0.0547126 , -0.03976548, -0.20790063, -0.12842087,
       -0.05668166, -0.08708001, -0.07618318, -0.06455774, -0.27344829,
       -0.06788988, -0.02945115, -0.06178667]), 'test_r2': array([ 0.94446624,  0.99113071,  0.94850877,  0.25501813,  0.93300296,
        0.97244353,  0.99585847,  0.83110787,  0.90757189,  0.96861125,
        0.94532075,  0.89910749,  0.90396919,  0.99401398,  0.71973961,
        0.92520749,  0.8430495 ,  0.98831676,  0.88427105,  0.31344339,
        0.87935289,  0.98883475,  0.78724647,  0.58625545, -0.42912948,
        0.94957632,  0.99095608,  0.99561242,  0.67966782,  0.9910171 ,
        0.98311074,  0.98363134,  0.99052361, -0.41140002,  0.91314381,
        0.98819919,  0.96507938,  0.96656929,  0.96659649, -2.39028265,
        0.93736976,  0.99549605,  0.97317371]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03770052924189587, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 549, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 220, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([11.29322171,  9.99976492, 11.60282087, 12.12658095, 12.67973709,
       12.59308171,  6.2087667 ,  5.0946846 , 12.40175009,  5.95112681,
       12.67897749,  7.04038453, 10.66853023, 13.22464132, 13.89461327,
       12.4501698 , 13.76292944, 13.05537772, 13.96775126, 10.93233824,
        5.21874452,  6.93371487,  6.01994848,  6.88011742,  9.99182725,
        6.32169461,  7.66231775,  5.54578328,  9.91349435, 10.34815931,
        8.45205593,  5.72248507,  9.61061668,  8.7018919 ,  9.4629755 ,
        9.6101234 ,  9.16534185,  5.88093853,  9.74225521,  9.57235932,
        7.55229354,  7.69915676,  8.04817796]), 'score_time': array([0.17674756, 0.08150387, 0.19684505, 0.19731283, 0.16583014,
       0.26430392, 0.0885787 , 0.08621383, 0.20628619, 0.09007215,
       0.25661159, 0.18605471, 0.33799887, 0.17312384, 0.1701088 ,
       0.29476857, 0.18268323, 0.26516104, 0.22743368, 0.09945369,
       0.08143282, 0.07853389, 0.09031558, 0.16715384, 0.09467292,
       0.07735777, 0.07975316, 0.08121228, 0.08677173, 0.07716346,
       0.23156095, 0.07577181, 0.07353806, 0.08534217, 0.08351946,
       0.07227135, 0.07525682, 0.07818079, 0.07344341, 0.08278394,
       0.08699322, 0.0883739 , 0.07328248]), 'test_pearson_r': array([0.99644531, 0.54311244, 0.98153327, 0.97006182, 0.99079747,
       0.98495702, 0.94937312, 0.998113  , 0.99884743, 0.99781375,
       0.98171304, 0.97771688, 0.99147159, 0.99604126, 0.95562508,
       0.9935727 , 0.9917702 , 0.98640921, 0.9973083 , 0.99915874,
       0.99336124, 0.98765275, 0.99743831, 0.91502197, 0.95030284,
       0.97382925, 0.97536518, 0.98187232, 0.98315812, 0.87336506,
       0.99228241, 0.99837792, 0.99064188, 0.95890084, 0.99935204,
       0.96855771, 0.53247213, 0.98808943, 0.99128183, 0.98945317,
       0.99015826, 0.37359729, 0.93326259]), 'test_spearman_r': array([1.        , 0.37142857, 0.98561076, 1.        , 1.        ,
       0.77142857, 0.94285714, 1.        , 1.        , 1.        ,
       0.82857143, 0.94285714, 0.98561076, 0.94285714, 0.94285714,
       1.        , 0.94285714, 1.        , 0.82857143, 1.        ,
       1.        , 0.94285714, 0.94285714, 0.94285714, 0.98561076,
       1.        , 1.        , 1.        , 0.94285714, 0.65714286,
       1.        , 1.        , 1.        , 1.        , 0.98561076,
       0.94285714, 0.6       , 0.94285714, 1.        , 1.        ,
       0.94285714, 0.37142857, 0.81167945]), 'test_rmse': array([-0.05279675, -0.48198359, -0.10844378, -0.09027879, -0.07702404,
       -0.13486083, -0.23767268, -0.05473627, -0.05067629, -0.0580146 ,
       -0.0976251 , -0.14405324, -0.08643022, -0.0819357 , -0.1242127 ,
       -0.06325369, -0.0714385 , -0.09127772, -0.06778746, -0.03265621,
       -0.06593583, -0.12957405, -0.04482049, -0.1361834 , -0.16121094,
       -0.26556185, -0.09897255, -0.08513585, -0.1166924 , -0.2715341 ,
       -0.11410089, -0.03768236, -0.07853718, -0.26042455, -0.02963056,
       -0.14953892, -0.61626282, -0.10110019, -0.10333426, -0.09324578,
       -0.10012746, -0.65241515, -0.33504718]), 'test_mae': array([-0.04432738, -0.2665758 , -0.07987698, -0.0864048 , -0.04582643,
       -0.10224362, -0.112206  , -0.0428826 , -0.04276592, -0.04227146,
       -0.07320183, -0.06777396, -0.07304769, -0.06690034, -0.08172331,
       -0.04212324, -0.05512417, -0.06784009, -0.05437636, -0.02238564,
       -0.05540603, -0.09438817, -0.03829549, -0.08392526, -0.12202544,
       -0.18320551, -0.07818267, -0.05988476, -0.08786896, -0.12972711,
       -0.08127177, -0.03505583, -0.05271471, -0.1627622 , -0.02278149,
       -0.10250955, -0.37363929, -0.08403861, -0.09058654, -0.06999931,
       -0.07880288, -0.3522123 , -0.18878106]), 'test_r2': array([ 0.98876474,  0.23171649,  0.88140522,  0.92108291,  0.97739588,
        0.8926992 ,  0.88300456,  0.99502116,  0.99221147,  0.99381028,
        0.94145591,  0.9447653 ,  0.9809714 ,  0.979193  ,  0.88640697,
        0.98334612,  0.9785891 ,  0.96825972,  0.99099273,  0.99792183,
        0.98649077,  0.94987885,  0.9925085 ,  0.81886665,  0.65618844,
        0.84422515,  0.90824947,  0.95954411,  0.95260564,  0.71776865,
        0.98291125,  0.99585533,  0.97327722,  0.8745869 ,  0.99808848,
        0.93255928,  0.08100095,  0.9581988 ,  0.96740087,  0.96672319,
        0.97708501, -0.31830652,  0.84275817]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0029277433369518636, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1642, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.96897626, 2.41954899, 2.66071725, 2.71806479, 2.00346184,
       2.50871658, 1.15929484, 3.11997342, 2.60590601, 3.37833357,
       1.15554357, 2.84536695, 1.97848892, 3.38986325, 2.90902996,
       2.7951951 , 1.16798449, 1.75073004, 2.72063971, 3.46319294,
       1.18274736, 2.24847507, 1.11788511, 2.34485459, 2.40944648,
       1.11918116, 2.69331121, 1.56673813, 1.3107655 , 1.11016607,
       2.25357914, 2.02748728, 1.89519501, 2.07932138, 2.19252467,
       1.72771478, 2.08389688, 2.05631256, 1.91053843, 1.23315692,
       1.78854775, 1.74474883, 1.20963836]), 'score_time': array([0.23721409, 0.0757463 , 0.22042966, 0.1539712 , 0.0869379 ,
       0.15163732, 0.07946754, 0.16327357, 0.2335403 , 0.16345787,
       0.08961821, 0.26423955, 0.07696319, 0.23487711, 0.2516799 ,
       0.15932631, 0.07991695, 0.24049306, 0.15248585, 0.25102472,
       0.07877302, 0.17524242, 0.0903511 , 0.16806126, 0.0850966 ,
       0.0937326 , 0.07169127, 0.22720575, 0.24281597, 0.10279036,
       0.07144046, 0.07475662, 0.06992102, 0.07739329, 0.06929302,
       0.07113075, 0.06972528, 0.07639408, 0.07277584, 0.07607365,
       0.07507443, 0.07676506, 0.07544565]), 'test_pearson_r': array([0.98209077, 0.99894206, 0.99696568, 0.98776673, 0.59526311,
       0.89819611, 0.9960196 , 0.99979923, 0.98856978, 0.95249697,
       0.96989778, 0.94943248, 0.86356395, 0.99891802, 0.95580908,
       0.30920727, 0.99609844, 0.97099937, 0.99738215, 0.84398796,
       0.96227158, 0.96807649, 0.93992153, 0.82652822, 0.78978156,
       0.965336  , 0.9937031 , 0.97005218, 0.99445117, 0.99550401,
       0.98872171, 0.99494382, 0.99942348, 0.98882333, 0.97039907,
       0.98692047, 0.99828854, 0.98857102, 0.95405873, 0.93903463,
       0.99860478, 0.9893379 , 0.99635651]), 'test_spearman_r': array([0.92857143, 0.94285714, 1.        , 0.98561076, 0.42857143,
       0.65714286, 0.94285714, 1.        , 0.98561076, 0.94285714,
       0.94285714, 0.94285714, 0.82857143, 1.        , 0.94285714,
       0.14285714, 1.        , 1.        , 1.        , 0.71428571,
       0.94285714, 0.94285714, 0.98561076, 0.77142857, 0.65714286,
       0.71428571, 0.94285714, 1.        , 1.        , 1.        ,
       0.94112395, 0.98561076, 1.        , 1.        , 0.94285714,
       0.94285714, 1.        , 0.77142857, 0.94285714, 0.82857143,
       1.        , 0.94285714, 0.94285714]), 'test_rmse': array([-0.09917906, -0.0399295 , -0.08504837, -0.09164042, -0.84725741,
       -0.29813789, -0.09424134, -0.02916584, -0.08732842, -0.16694508,
       -0.20338684, -0.14908648, -0.39632948, -0.0311702 , -0.13436651,
       -0.63110689, -0.06332277, -0.08115746, -0.05216806, -0.33236443,
       -0.17596547, -0.14175061, -0.23344415, -0.26656152, -0.45359777,
       -0.14396472, -0.0726521 , -0.15030083, -0.09098103, -0.06989398,
       -0.07801998, -0.10705822, -0.04912425, -0.10145263, -0.12064856,
       -0.07257926, -0.04336324, -0.07564122, -0.1981215 , -0.15518772,
       -0.05268173, -0.0756411 , -0.07102531]), 'test_mae': array([-0.07424351, -0.02958961, -0.06603531, -0.05709883, -0.3770733 ,
       -0.14710244, -0.06249029, -0.02442748, -0.05311169, -0.12960799,
       -0.11763811, -0.098244  , -0.19692792, -0.02086978, -0.10681489,
       -0.28661374, -0.05084681, -0.06480746, -0.03594958, -0.21660023,
       -0.09683001, -0.10992826, -0.16144433, -0.1867798 , -0.19917629,
       -0.12347831, -0.05348284, -0.07858188, -0.05207911, -0.05895979,
       -0.05702922, -0.08035639, -0.0429856 , -0.08529446, -0.09933681,
       -0.04970341, -0.0263204 , -0.06003056, -0.15912565, -0.12027264,
       -0.04150763, -0.06967244, -0.04363826]), 'test_r2': array([ 0.96252614,  0.99777171,  0.96654464,  0.94882147,  0.16884541,
        0.78516137,  0.96578945,  0.99863824,  0.97346192,  0.84943857,
        0.92505047,  0.86297438,  0.63983265,  0.99607643,  0.90634768,
       -1.0445386 ,  0.9913831 ,  0.93764591,  0.99388182,  0.48772843,
        0.90139735,  0.9213407 ,  0.88117644,  0.67518148,  0.54091395,
        0.89460455,  0.98049537,  0.93281891,  0.98428286,  0.98389378,
        0.96663064,  0.97702587,  0.99175545,  0.97316916,  0.93723236,
        0.95237032,  0.99574357,  0.95310742,  0.90632985,  0.81167432,
        0.99599214,  0.97307159,  0.98906963]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05617045774903145, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 710, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_pearson_r_mean': 0.9300823581675257, 'test_pearson_r_std': 0.18811038587431253, 'test_spearman_r_mean': 0.903716991910663, 'test_spearman_r_std': 0.16144272143729524, 'test_rmse_mean': 0.1502427272755521, 'test_rmse_std': 0.14639105760426033, 'test_mae_mean': 0.09680774334980673, 'test_mae_std': 0.07535791076321566, 'test_r2_mean': 0.8148775741109697, 'test_r2_std': 0.5259261171731048}}, 'CO_P3EOT': {'cluster size (%)': 3, 6: {'test_mad': 0.071182616, 'test_ystd': 0.075013824, 'test_mae': 0.6879905073188708, 'test_rmse': 0.9204264623433961, 'test_r2': -1.0319036841137725, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06716790973375672, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 437, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.07080165, 'test_ystd': 0.0744517, 'test_mae': 0.6795360652946398, 'test_rmse': 0.9136357661914589, 'test_r2': -1.0020324413889448, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.034769668589043685, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2287, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1119, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.07518169, 'test_ystd': 0.078236945, 'test_mae': 0.5911205729686186, 'test_rmse': 0.8458899561978028, 'test_r2': -0.716139794669544, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0022571570784210033, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.07684934, 'test_ystd': 0.080080986, 'test_mae': 0.6806810481690333, 'test_rmse': 0.9107160845406013, 'test_r2': -0.9892572025719333, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.011152533012044354, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1316, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.071040064, 'test_ystd': 0.07450898, 'test_mae': 0.6635859145068095, 'test_rmse': 0.9015482600117679, 'test_r2': -0.9494086304833811, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07310532166986229, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 617, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.07511243, 'test_ystd': 0.07817736, 'test_mae': 0.5610991141044066, 'test_rmse': 0.8252539253231751, 'test_r2': -0.6334284773819288, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0026401548169232595, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1582, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.06950332, 'test_ystd': 0.07320939, 'test_mae': 0.6772281212948725, 'test_rmse': 0.9125985583659757, 'test_r2': -0.9974893945821186, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.025110050741759458, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 19, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 849, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_mad_mean': 0.07281016026224409, 'test_mad_std': 0.002618369913986936, 'test_ystd_mean': 0.07623988389968872, 'test_ystd_std': 0.0023717651540495262, 'test_mae_mean': 0.6487487633796072, 'test_mae_std': 0.04712010106013776, 'test_rmse_mean': 0.8900098589963111, 'test_rmse_std': 0.03524482096157562, 'test_r2_mean': -0.9028085178845177, 'test_r2_std': 0.14761493409635254}}, 'ID_P3EOT': {'cluster size (%)': 3, 6: {'fit_time': array([ 8.76226521, 16.90283632, 17.36041093,  7.87811732,  7.88510394,
       12.1821301 , 17.65679264,  7.02873993,  8.11650777, 16.71736455,
       16.43017626, 17.85275674, 18.0790472 , 18.30249572, 17.49850821,
       17.27264524, 17.44656396, 17.80524349, 17.59354711, 16.85774922,
       13.36458993,  7.87466812,  7.71085191, 11.28687859,  6.40917444,
        8.11515474,  6.74037576,  7.1170907 ,  7.7766428 ,  7.48274803,
        6.99543405,  6.62167573]), 'score_time': array([0.08438039, 0.16634631, 0.27312851, 0.08855247, 0.0840354 ,
       0.18982697, 0.08671856, 0.07911873, 0.26701164, 0.27873611,
       0.07753968, 0.07754302, 0.07831907, 0.07694936, 0.21208262,
       0.26284194, 0.1754868 , 0.12252808, 0.09408331, 0.17811656,
       0.07978725, 0.07991886, 0.09206653, 0.08071232, 0.08970547,
       0.0808959 , 0.07687545, 0.07694507, 0.07798791, 0.07457018,
       0.07554698, 0.07869577]), 'test_pearson_r': array([0.9926836 , 0.6835112 , 0.98931067, 0.99681162, 0.99519305,
       0.99346081, 0.99575743, 0.95133834, 0.99116144, 0.75618977,
       0.63874835, 0.96871736, 0.99257917, 0.99490063, 0.99473855,
       0.66641068, 0.99474464, 0.95020467, 0.73427609, 0.99270101,
       0.99386266, 0.9955836 , 0.97697503, 0.98123617, 0.99396933,
       0.95248217, 0.98560643, 0.88696663, 0.98034654, 0.98990285,
       0.98529699, 0.99472153]), 'test_spearman_r': array([1.        , 0.68333333, 1.        , 0.93414848, 0.97619048,
       1.        , 1.        , 0.85714286, 1.        , 0.73809524,
       0.5952381 , 0.97619048, 1.        , 1.        , 1.        ,
       0.57142857, 0.97619048, 0.92217222, 0.76190476, 0.97619048,
       0.9940298 , 0.97619048, 0.92857143, 0.92857143, 0.92217222,
       0.97007727, 0.78571429, 0.95238095, 0.85031465, 0.9940298 ,
       0.97619048, 0.93414848]), 'test_rmse': array([-0.07472259, -0.40259191, -0.09257923, -0.05980214, -0.07194689,
       -0.09814743, -0.07037692, -0.25039442, -0.09703968, -0.18269919,
       -0.56883251, -0.15575263, -0.07485842, -0.07409848, -0.11642536,
       -0.52853741, -0.0626057 , -0.19427549, -0.34566424, -0.09012894,
       -0.06584336, -0.08657002, -0.14393096, -0.10756228, -0.07232256,
       -0.24184617, -0.09973023, -0.2819024 , -0.11132861, -0.07751864,
       -0.11339742, -0.05270185]), 'test_mae': array([-0.05216485, -0.23014541, -0.04950823, -0.0420212 , -0.05713404,
       -0.07704711, -0.05751775, -0.14373273, -0.07512787, -0.12313689,
       -0.2590181 , -0.08571268, -0.05798689, -0.04900884, -0.09375937,
       -0.29227249, -0.04827444, -0.09109956, -0.16016938, -0.07491489,
       -0.04623165, -0.06899414, -0.09483723, -0.07042875, -0.05439288,
       -0.16785445, -0.08242346, -0.15957597, -0.07287042, -0.05661166,
       -0.08679295, -0.04349063]), 'test_r2': array([ 0.98308702,  0.19312114,  0.9760875 ,  0.98894949,  0.98858384,
        0.98439642,  0.98578167,  0.87502911,  0.97385671,  0.35049733,
        0.0227313 ,  0.90751787,  0.98509041,  0.97998042,  0.97589588,
        0.28819424,  0.98948818,  0.89220903, -0.02555823,  0.97998849,
        0.98584577,  0.97282496,  0.95155983,  0.96069411,  0.98559712,
        0.86630122,  0.95758126,  0.60940536,  0.94718042,  0.97978177,
        0.95974137,  0.98140401]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0021563374205135397, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.48924756, 3.10349441, 3.1001637 , 2.59153438, 3.56184101,
       1.27236128, 3.20745325, 1.41337633, 1.26017356, 1.24155259,
       3.21517038, 3.40562391, 3.62914324, 3.39258099, 3.53591251,
       3.49706984, 3.43539619, 2.25634122, 3.51577592, 2.99128675,
       1.23669076, 1.27291274, 1.23425174, 1.26785994, 1.91356015,
       1.75223255, 1.1755178 , 1.21601462, 1.59235787, 1.74163675,
       1.18127823, 1.39504671]), 'score_time': array([0.16263366, 0.17034411, 0.26074386, 0.17376041, 0.080796  ,
       0.07645774, 0.20975614, 0.09086418, 0.0781517 , 0.07940793,
       0.21185517, 0.07898831, 0.07620049, 0.17427754, 0.11210155,
       0.07275271, 0.07501316, 0.1628685 , 0.07868218, 0.24898553,
       0.08966708, 0.08463192, 0.08985662, 0.07818556, 0.07286334,
       0.0730412 , 0.07426047, 0.07956409, 0.07575083, 0.07687736,
       0.07276297, 0.07258296]), 'test_pearson_r': array([0.9879254 , 0.98780373, 0.9949116 , 0.8226428 , 0.95749994,
       0.99700538, 0.99929829, 0.98490484, 0.91519832, 0.4373913 ,
       0.8342994 , 0.9968754 , 0.97281902, 0.38486764, 0.99629148,
       0.99733555, 0.99353346, 0.86441652, 0.98484401, 0.99227272,
       0.97500922, 0.98473955, 0.99573891, 0.98974158, 0.99117259,
       0.99623405, 0.88612185, 0.9914043 , 0.99412204, 0.97652624,
       0.89559339, 0.98379341]), 'test_spearman_r': array([0.98333333, 0.95      , 0.96666667, 0.76190476, 0.9047619 ,
       0.95810101, 0.9940298 , 0.92857143, 0.83333333, 0.64285714,
       0.83333333, 0.97619048, 0.97619048, 0.61904762, 1.        ,
       1.        , 0.97619048, 0.83333333, 0.95238095, 0.9940298 ,
       0.92857143, 0.92217222, 1.        , 0.92857143, 1.        ,
       1.        , 0.95238095, 0.97619048, 1.        , 0.97619048,
       0.78571429, 0.95238095]), 'test_rmse': array([-0.07746006, -0.09167457, -0.07225783, -0.40236055, -0.17051995,
       -0.06059849, -0.04113078, -0.1341593 , -0.26612391, -0.56426565,
       -0.37694674, -0.05741548, -0.20962577, -0.51721858, -0.07277084,
       -0.06476499, -0.05723103, -0.24290761, -0.11940191, -0.0972866 ,
       -0.17618069, -0.11669611, -0.06878754, -0.10963294, -0.06436622,
       -0.06820774, -0.2120456 , -0.08317948, -0.07491081, -0.14469373,
       -0.25978479, -0.10901805]), 'test_mae': array([-0.05226991, -0.04344474, -0.05764214, -0.19421284, -0.13462585,
       -0.04683256, -0.02949803, -0.08885897, -0.13871334, -0.25753424,
       -0.21235022, -0.0427601 , -0.13191796, -0.22521455, -0.04548852,
       -0.04387645, -0.05263883, -0.14733936, -0.09686815, -0.07012474,
       -0.13673637, -0.08050201, -0.04422283, -0.08756153, -0.04336547,
       -0.04974508, -0.16203395, -0.06118226, -0.06364049, -0.07541365,
       -0.18285545, -0.08498588]), 'test_r2': array([ 0.97322886,  0.96617391,  0.98936246,  0.6260341 ,  0.90622251,
        0.98584392,  0.9971914 ,  0.94761907,  0.80806416, -0.06331108,
        0.61002439,  0.99217834,  0.917779  ,  0.02737301,  0.98996503,
        0.98955881,  0.98343049,  0.71046338,  0.93345964,  0.9762442 ,
        0.92722525,  0.950822  ,  0.98711093,  0.97664006,  0.9705743 ,
        0.98832134,  0.698022  ,  0.98096811,  0.97705635,  0.93747206,
        0.51179367,  0.95908131]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03897794765782249, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 304, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.11587811, 0.46698713, 0.94844604, 1.51210284, 0.83566856,
       0.51169729, 1.3375082 , 0.51210165, 0.5069294 , 1.55616498,
       1.57622194, 0.8290534 , 1.41740751, 1.10809612, 0.91344094,
       1.53645897, 1.65366817, 1.37220049, 0.84105659, 1.34787226,
       0.66264367, 0.69731498, 0.51493454, 0.68667579, 0.71262169,
       0.84508562, 0.63712239, 0.47694802, 0.8618772 , 0.48979688,
       0.68006229, 0.5016489 ]), 'score_time': array([0.41809154, 0.0748105 , 0.13376975, 0.2081542 , 0.17584276,
       0.07752991, 0.25723195, 0.09021163, 0.08544493, 0.11903191,
       0.11810184, 0.09519482, 0.21327186, 0.16857362, 0.07830644,
       0.13921309, 0.07738066, 0.20659971, 0.07535481, 0.22146201,
       0.25934005, 0.07820034, 0.08396077, 0.17400384, 0.0721271 ,
       0.07641649, 0.07888007, 0.07733059, 0.07054853, 0.07376122,
       0.07693744, 0.08047676]), 'test_pearson_r': array([0.9822748 , 0.979758  , 0.99157287, 0.99855269, 0.86508014,
       0.98726171, 0.99713224, 0.90709954, 0.99814731, 0.96018227,
       0.97057599, 0.99591434, 0.98958682, 0.73071745, 0.9946745 ,
       0.98929262, 0.95322299, 0.52349687, 0.98031051, 0.99657115,
       0.98293234, 0.95916485, 0.95504152, 0.98118365, 0.99942758,
       0.83905592, 0.97151208, 0.98046386, 0.99096738, 0.61507198,
       0.99328693, 0.99574017]), 'test_spearman_r': array([0.98333333, 0.96666667, 0.96666667, 1.        , 0.9047619 ,
       0.95238095, 1.        , 0.85714286, 1.        , 0.88095238,
       0.9047619 , 0.97619048, 1.        , 0.83333333, 0.92857143,
       0.97619048, 0.9047619 , 0.47619048, 0.97619048, 1.        ,
       0.9047619 , 0.9047619 , 0.97619048, 0.95238095, 1.        ,
       0.76190476, 0.95238095, 0.82636212, 0.97619048, 0.76190476,
       0.95238095, 1.        ]), 'test_rmse': array([-0.10421819, -0.192113  , -0.09962574, -0.04245474, -0.34881707,
       -0.12351999, -0.06103982, -0.17960921, -0.06187954, -0.15498614,
       -0.16947271, -0.0712004 , -0.11134714, -0.2867471 , -0.05145815,
       -0.09329769, -0.15163764, -0.55841348, -0.08250273, -0.07394973,
       -0.13566953, -0.17180773, -0.17513826, -0.13454491, -0.0525516 ,
       -0.39894472, -0.15997733, -0.14780181, -0.08828805, -0.52391837,
       -0.07647314, -0.06661754]), 'test_mae': array([-0.07142959, -0.10086891, -0.05733126, -0.03070143, -0.19110693,
       -0.09873564, -0.05167602, -0.10885488, -0.04698058, -0.09433153,
       -0.13610967, -0.04867504, -0.08710807, -0.18493471, -0.03582196,
       -0.06548369, -0.09920594, -0.24773616, -0.06814605, -0.05913232,
       -0.08720898, -0.11753754, -0.09690919, -0.08050251, -0.04253345,
       -0.1767478 , -0.08723486, -0.08893036, -0.06070166, -0.24626801,
       -0.06120108, -0.04148248]), 'test_r2': array([ 0.95719682,  0.9323928 ,  0.97223789,  0.99639225,  0.70433801,
        0.94152688,  0.99243265,  0.78485357,  0.99368801,  0.92045122,
        0.87830269,  0.99022378,  0.97244355,  0.37824691,  0.98886976,
        0.96427358,  0.89978455, -0.19563329,  0.95498945,  0.98763794,
        0.95764269,  0.89583072,  0.89474208,  0.94903874,  0.99446939,
        0.65773402,  0.93913403,  0.94361259,  0.98052936,  0.25325512,
        0.98527223,  0.98973971]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04786776304179686, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 125, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([1.48796988, 1.54231572, 1.50876474, 1.20987439, 0.57200408,
       1.41497946, 0.54436469, 0.56305861, 0.56163883, 1.08630872,
       1.30946159, 1.29867125, 1.67108059, 1.33999109, 1.52181339,
       1.63182735, 1.30936241, 1.1725204 , 1.60677886, 1.51146698,
       0.52547121, 0.55721617, 0.51922584, 0.56068087, 0.80428696,
       0.56848526, 0.58711052, 0.59703159, 0.78921151, 0.76220655,
       0.54936385, 0.56506586]), 'score_time': array([0.2401998 , 0.21585321, 0.17349267, 0.40718389, 0.08141327,
       0.24836683, 0.07653975, 0.0772841 , 0.07752037, 0.17994308,
       0.16901088, 0.23079896, 0.09135962, 0.15689588, 0.07464862,
       0.07244706, 0.16157055, 0.07102942, 0.07164121, 0.15894842,
       0.07420683, 0.07714891, 0.07284737, 0.08251023, 0.07556486,
       0.07376885, 0.07678604, 0.0792253 , 0.07549   , 0.0713923 ,
       0.07338643, 0.07024574]), 'test_pearson_r': array([0.99365251, 0.99617606, 0.99711429, 0.95138674, 0.9809721 ,
       0.97232598, 0.99678261, 0.997124  , 0.29989425, 0.95629053,
       0.97878207, 0.99488372, 0.98034817, 0.98886962, 0.98528677,
       0.99776046, 0.99344811, 0.97318552, 0.99596067, 0.49374861,
       0.94905849, 0.9873062 , 0.94839052, 0.99766161, 0.98851891,
       0.76767808, 0.99665893, 0.95264954, 0.99455179, 0.94733306,
       0.9974422 , 0.9609029 ]), 'test_spearman_r': array([0.98333333, 0.97908807, 1.        , 0.9047619 , 0.97619048,
       0.97619048, 0.97590007, 1.        , 0.40963855, 0.95238095,
       0.95238095, 0.97619048, 0.95238095, 0.92857143, 0.95238095,
       1.        , 0.97619048, 0.85031465, 1.        , 0.57142857,
       0.8024096 , 0.97619048, 0.85714286, 1.        , 0.95238095,
       0.73809524, 1.        , 0.95238095, 0.95238095, 0.9047619 ,
       0.97619048, 0.92857143]), 'test_rmse': array([-0.05459457, -0.06686016, -0.06009308, -0.17646721, -0.11784853,
       -0.1782557 , -0.05928478, -0.03803803, -0.79373555, -0.18429719,
       -0.09189178, -0.08114054, -0.1898915 , -0.10229527, -0.12009921,
       -0.0399487 , -0.07753601, -0.11277605, -0.05174536, -0.6230861 ,
       -0.12630056, -0.09865928, -0.20690848, -0.04493102, -0.08088436,
       -0.412632  , -0.0759277 , -0.2399593 , -0.09295182, -0.15272887,
       -0.05579492, -0.19235174]), 'test_mae': array([-0.03831385, -0.05546977, -0.04011897, -0.10609975, -0.07034548,
       -0.11036042, -0.03768769, -0.03089738, -0.40726442, -0.13428042,
       -0.06536271, -0.0621334 , -0.13297301, -0.07281974, -0.08917778,
       -0.03239363, -0.05502569, -0.09280079, -0.03697692, -0.37801907,
       -0.10570835, -0.07159723, -0.113437  , -0.0348892 , -0.06184056,
       -0.22187761, -0.05576204, -0.13400803, -0.07424691, -0.10079116,
       -0.03786976, -0.1309785 ]), 'test_r2': array([ 0.9847766 ,  0.99190662,  0.98565707,  0.86616249,  0.96196613,
        0.90194672,  0.98662135,  0.99371308, -1.77742968,  0.86030877,
        0.95411148,  0.98863379,  0.95462979,  0.97675427,  0.9572104 ,
        0.99552314,  0.97977317,  0.94698985,  0.99066064, -0.24156724,
        0.86994122,  0.97129574,  0.89591215,  0.99392407,  0.96197345,
        0.4641452 ,  0.98798928,  0.87404137,  0.97895731,  0.87326543,
        0.99440626,  0.91940405]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 234, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([1.53494239, 2.4502821 , 1.36985326, 1.9855094 , 1.08009529,
       2.70337772, 1.84064388, 2.81508875, 2.81375718, 2.5419445 ,
       2.23249745, 1.0480628 , 2.71501684, 2.51675344, 1.54406667,
       2.54238391, 2.13396668, 1.79909492, 2.37949157, 2.8832252 ,
       0.98434901, 1.03938079, 1.32894063, 1.01591659, 1.48055267,
       1.29842782, 1.50362778, 1.39667249, 1.0421021 , 1.08812523,
       1.27598214, 1.14440179]), 'score_time': array([0.24251294, 0.20137644, 0.2014854 , 0.16334987, 0.08212256,
       0.24488211, 0.32270265, 0.07279563, 0.07919741, 0.17054558,
       0.25933218, 0.08479595, 0.07757854, 0.21174383, 0.07964039,
       0.16283798, 0.21037102, 0.17771959, 0.24151897, 0.076792  ,
       0.15442681, 0.09193325, 0.07914662, 0.07328892, 0.07208562,
       0.07567   , 0.0733912 , 0.07534409, 0.0758276 , 0.0758667 ,
       0.07288265, 0.07541752]), 'test_pearson_r': array([0.9807836 , 0.9924286 , 0.82702488, 0.97688971, 0.99845189,
       0.95483336, 0.9906301 , 0.98850437, 0.97293498, 0.98214935,
       0.97682631, 0.9832873 , 0.91537739, 0.9693135 , 0.75712492,
       0.99153763, 0.89045713, 0.87506509, 0.91597484, 0.99473947,
       0.99752733, 0.96238825, 0.99129325, 0.99538   , 0.76770784,
       0.9683229 , 0.99364957, 0.98352785, 0.98021647, 0.07546052,
       0.99942587, 0.99415812]), 'test_spearman_r': array([0.88333333, 1.        , 0.61025715, 0.88095238, 1.        ,
       0.92857143, 0.9940298 , 0.97619048, 1.        , 0.97619048,
       0.95238095, 0.92857143, 0.95238095, 0.97619048, 0.83333333,
       0.92857143, 0.78571429, 0.80952381, 0.73055202, 0.97007727,
       1.        , 0.82636212, 0.9047619 , 0.97619048, 0.47619048,
       0.92217222, 1.        , 0.88095238, 0.97619048, 0.33333333,
       0.97619048, 1.        ]), 'test_rmse': array([-0.14467205, -0.07097064, -0.37943051, -0.11383272, -0.04125663,
       -0.07528137, -0.08623167, -0.11002113, -0.145804  , -0.16269027,
       -0.09841768, -0.14000247, -0.26058967, -0.17448638, -0.54734178,
       -0.06462005, -0.20779389, -0.21299051, -0.16936319, -0.07869651,
       -0.05045695, -0.19937799, -0.08364511, -0.06086142, -0.34188659,
       -0.13783302, -0.07671706, -0.12468371, -0.10074671, -0.51385497,
       -0.02818646, -0.05707469]), 'test_mae': array([-0.08492101, -0.05823483, -0.15503157, -0.09528189, -0.03645541,
       -0.05570422, -0.06756145, -0.08214143, -0.08154308, -0.08734277,
       -0.05384699, -0.10903165, -0.15744204, -0.1167567 , -0.24490725,
       -0.04713721, -0.15366877, -0.15077567, -0.10007065, -0.05750867,
       -0.03433648, -0.1106275 , -0.06066911, -0.04543601, -0.1581986 ,
       -0.10175058, -0.06034238, -0.08968196, -0.0863201 , -0.24068822,
       -0.0227464 , -0.049552  ]), 'test_r2': array([ 0.94867399,  0.98075638,  0.61327819,  0.94282644,  0.99549432,
        0.90495092,  0.97109196,  0.96670818,  0.93892565,  0.95271233,
        0.94702357,  0.94816709,  0.78954836,  0.93934088,  0.43478384,
        0.97414903,  0.77254924,  0.70502869,  0.7425959 ,  0.98919188,
        0.994185  ,  0.92103427,  0.981214  ,  0.9878946 ,  0.3775556 ,
        0.93310061,  0.98256341,  0.95877448,  0.95770254, -1.02082199,
        0.99845246,  0.97924332]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03770052924189587, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 549, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 220, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([12.3156116 ,  5.90727663, 12.34458852, 13.46067786,  9.92110419,
        8.33581829,  5.1844101 , 12.79300666, 12.37075019,  5.51118088,
        5.33703351, 12.18765759, 13.54367876, 12.79223251, 12.7287786 ,
       13.56751823, 11.88312101, 11.82750154, 11.14752579, 11.10791731,
        8.55462217,  6.76623559,  5.88950324,  8.21239734,  5.99173665,
        6.41839123,  5.71706796,  5.43967247,  5.20518541,  5.93396831,
        5.5361867 ,  5.47834158]), 'score_time': array([0.17669511, 0.18503785, 0.18906569, 0.07786942, 0.27217245,
       0.19051027, 0.08788514, 0.23758769, 0.27351952, 0.08056855,
       0.1910243 , 0.16058803, 0.0822804 , 0.1643002 , 0.17755198,
       0.08911252, 0.18832064, 0.27807164, 0.18983102, 0.17753267,
       0.07791352, 0.16994548, 0.12647033, 0.09446549, 0.07652307,
       0.07602215, 0.07799649, 0.08609247, 0.09174728, 0.07921243,
       0.07452178, 0.07335758]), 'test_pearson_r': array([0.75728936, 0.93280089, 0.96947833, 0.97579078, 0.95801876,
       0.9980534 , 0.99766694, 0.98795545, 0.97969775, 0.99468615,
       0.97950605, 0.99611316, 0.98198123, 0.99700049, 0.99899743,
       0.97050054, 0.9971032 , 0.93324756, 0.96106357, 0.97792207,
       0.98316781, 0.90457905, 0.99274389, 0.99752918, 0.99468165,
       0.98037616, 0.72892019, 0.96054237, 0.99411402, 0.99057977,
       0.69491596, 0.93321444]), 'test_spearman_r': array([0.75      , 0.94561497, 0.96666667, 0.9047619 , 0.92857143,
       0.97619048, 1.        , 0.92217222, 0.92857143, 0.95238095,
       0.97619048, 0.97619048, 0.97619048, 0.92217222, 0.97619048,
       0.92857143, 0.97619048, 0.9047619 , 0.9940298 , 1.        ,
       1.        , 0.85714286, 0.97007727, 1.        , 1.        ,
       0.98802352, 0.73809524, 0.97619048, 0.97619048, 0.9940298 ,
       0.76190476, 0.75450455]), 'test_rmse': array([-0.37412191, -0.13831252, -0.11542035, -0.11410379, -0.21531641,
       -0.05777112, -0.05827444, -0.08461366, -0.13997373, -0.05922143,
       -0.12229743, -0.05896586, -0.09486025, -0.06112686, -0.03016216,
       -0.15008883, -0.04911443, -0.11955712, -0.24694842, -0.12670785,
       -0.10645542, -0.24067569, -0.09893129, -0.04354202, -0.09145655,
       -0.14560194, -0.53904022, -0.18761739, -0.09795342, -0.08952266,
       -0.56890142, -0.28017652]), 'test_mae': array([-0.16551751, -0.0765481 , -0.09344926, -0.0785148 , -0.10897555,
       -0.04772659, -0.04927663, -0.056623  , -0.08086256, -0.05242086,
       -0.08626705, -0.04070853, -0.07461994, -0.04892345, -0.02159175,
       -0.11436769, -0.04125246, -0.07179806, -0.17253216, -0.0966223 ,
       -0.07992756, -0.12203657, -0.06383627, -0.03742769, -0.07476605,
       -0.07494781, -0.30688028, -0.12790436, -0.08585063, -0.06930301,
       -0.26851667, -0.15298332]), 'test_r2': array([0.54299961, 0.86808488, 0.92974199, 0.92990912, 0.89724491,
       0.99410663, 0.99242192, 0.97311892, 0.94323728, 0.98907036,
       0.94482082, 0.9884314 , 0.96280776, 0.99132453, 0.99786635,
       0.9327425 , 0.99215526, 0.86213493, 0.82573474, 0.90846087,
       0.9534382 , 0.78993392, 0.98422808, 0.99461307, 0.97567137,
       0.95670424, 0.37815371, 0.9033791 , 0.97752662, 0.97310083,
       0.26903231, 0.85799268]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0029277433369518636, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1642, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([3.00356507, 2.8558054 , 2.57410669, 2.84841466, 2.42045212,
       2.31893039, 1.16301489, 1.17018056, 3.12434244, 3.40134668,
       1.13267088, 1.15943313, 2.71525407, 2.31165361, 3.19146228,
       2.27644801, 3.20443106, 2.90000248, 2.14958143, 2.50212741,
       1.09371281, 1.29849124, 2.27562118, 1.18183613, 1.51019025,
       1.06967592, 1.32746601, 1.5120213 , 1.38917065, 1.0754087 ,
       1.5319109 , 1.13117242]), 'score_time': array([0.08733773, 0.07418442, 0.23737502, 0.16966271, 0.12693191,
       0.17136192, 0.07835174, 0.07979107, 0.0741024 , 0.08038282,
       0.07680225, 0.09776378, 0.08546948, 0.15987778, 0.10890865,
       0.24003458, 0.17042756, 0.07793856, 0.26775885, 0.0770216 ,
       0.16642809, 0.08264613, 0.071908  , 0.09495115, 0.07230735,
       0.07920527, 0.08681107, 0.07368517, 0.07869887, 0.0772655 ,
       0.07036543, 0.07760692]), 'test_pearson_r': array([0.99024566, 0.995609  , 0.99196361, 0.64004455, 0.99103256,
       0.99639199, 0.96182341, 0.94833339, 0.96088415, 0.82743047,
       0.96874064, 0.61229679, 0.99251161, 0.99505733, 0.86405531,
       0.98928028, 0.94916272, 0.60277629, 0.98633113, 0.98481354,
       0.9682663 , 0.99783524, 0.99338915, 0.99468518, 0.99347137,
       0.9856082 , 0.99168329, 0.99736915, 0.95581845, 0.96660626,
       0.99798378, 0.99323765]), 'test_spearman_r': array([0.98333333, 1.        , 0.99582462, 0.5       , 0.97619048,
       0.9940298 , 0.9940298 , 0.95238095, 0.97007727, 0.83333333,
       0.92857143, 0.5       , 1.        , 0.97619048, 0.88095238,
       1.        , 0.8982197 , 0.66666667, 0.95238095, 0.95238095,
       0.97619048, 0.9940298 , 0.97590007, 0.9940298 , 0.97619048,
       0.95238095, 0.97619048, 0.95238095, 0.95238095, 0.92857143,
       1.        , 0.92857143]), 'test_rmse': array([-0.11904146, -0.05682572, -0.09227137, -0.82011718, -0.09087703,
       -0.09075266, -0.16520179, -0.21113208, -0.14433593, -0.33902024,
       -0.10586754, -0.54558333, -0.07799286, -0.06770689, -0.335138  ,
       -0.06814932, -0.20250116, -0.4587888 , -0.10711627, -0.09516567,
       -0.16218998, -0.06179224, -0.07405922, -0.09140353, -0.07463224,
       -0.12265789, -0.06793612, -0.06714826, -0.17441314, -0.14115313,
       -0.05565497, -0.07728261]), 'test_mae': array([-0.08225658, -0.03905334, -0.06681296, -0.35205764, -0.06210054,
       -0.06579752, -0.10688134, -0.13808958, -0.09554051, -0.14408391,
       -0.08268835, -0.21466937, -0.06803262, -0.04721685, -0.22060006,
       -0.05153582, -0.13986038, -0.28025457, -0.07984425, -0.07107187,
       -0.08936563, -0.04821187, -0.05702449, -0.07073846, -0.0596581 ,
       -0.10473127, -0.04828873, -0.04225794, -0.13300152, -0.10176232,
       -0.0485727 , -0.05429348]), 'test_r2': array([0.97471995, 0.98330337, 0.95651034, 0.25492469, 0.96369767,
       0.98593088, 0.90687335, 0.89496917, 0.90144856, 0.62057422,
       0.93767378, 0.13855526, 0.98328412, 0.98872786, 0.52225753,
       0.97371267, 0.90001932, 0.25861882, 0.96545945, 0.95995842,
       0.93550247, 0.98904553, 0.98189881, 0.98236144, 0.98423217,
       0.96588531, 0.9787319 , 0.98726525, 0.90897096, 0.91137452,
       0.99272247, 0.98321075]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05617045774903145, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 710, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_pearson_r_mean': 0.9377165603765963, 'test_pearson_r_std': 0.126331092269662, 'test_spearman_r_mean': 0.9168495846830796, 'test_spearman_r_std': 0.11801126458229629, 'test_rmse_mean': 0.15951007370767442, 'test_rmse_std': 0.13971454736018185, 'test_mae_mean': 0.09793265409655473, 'test_mae_std': 0.06552724032748664, 'test_r2_mean': 0.8470776637398947, 'test_r2_std': 0.31804083007103684}}, 'CO_P3OT': {'cluster size (%)': 2, 6: {'test_mad': 0.032197546, 'test_ystd': 0.042254403, 'test_mae': 0.057784089344975566, 'test_rmse': 0.06861152201616298, 'test_r2': -0.9307115988664361, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 258, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.038609605, 'test_ystd': 0.048387665, 'test_mae': 0.060668924349782084, 'test_rmse': 0.06739336646393303, 'test_r2': -0.8627629905056677, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0922066390828013, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 393, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.032197546, 'test_ystd': 0.042254403, 'test_mae': 0.057784089344975566, 'test_rmse': 0.06861152201616298, 'test_r2': -0.9307115988664361, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 674, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.03485204, 'test_ystd': 0.046420816, 'test_mae': 0.048849829930302714, 'test_rmse': 0.062242945075429455, 'test_r2': -0.5889256126898132, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03325884144276033, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 432, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.027872255, 'test_ystd': 0.037037794, 'test_mae': 0.03844776246044488, 'test_rmse': 0.06019454454896212, 'test_r2': -0.48606417406321367, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.008766667669503627, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.0314251, 'test_ystd': 0.03861827, 'test_mae': 0.0559253482999774, 'test_rmse': 0.06583999243376801, 'test_r2': -0.777881633149154, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.03689294, 'test_ystd': 0.046598565, 'test_mae': 0.05627750247541787, 'test_rmse': 0.06463260932159497, 'test_r2': -0.7132734217109578, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06449783053541763, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1207, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_mad_mean': 0.03343529014715126, 'test_mad_std': 0.0033549174396386256, 'test_ystd_mean': 0.04308170239840235, 'test_ystd_std': 0.003954945432669164, 'test_mae_mean': 0.053676792315125156, 'test_mae_std': 0.0070677567840259125, 'test_rmse_mean': 0.0653609288394305, 'test_rmse_std': 0.0029865607390342427, 'test_r2_mean': -0.755761575693097, 'test_r2_std': 0.15835303739087386}}, 'ID_P3OT': {'cluster size (%)': 2, 6: {'fit_time': array([15.22403812, 15.3644731 , 17.97613168, 17.114923  , 14.55994606,
        8.86734796,  6.71160603,  8.061625  , 15.51522493, 12.91229105,
       14.52588916, 15.25500035,  9.54674911, 15.87656188, 15.29646945,
       16.10631514, 15.46014118, 18.11331081, 10.07351351, 15.83138418,
       12.44058895, 11.82473803, 12.93456936, 10.31939006, 12.05424547,
       11.97961378, 14.81397009, 13.46415925, 13.70271087, 14.00815892,
       13.2586453 , 14.05678535, 13.67688632, 13.18233967,  9.60068226,
       11.93287373, 13.50993347, 12.28244185, 12.57192183, 12.37970614,
        7.80278945,  8.05650806,  8.34963155]), 'score_time': array([0.27106524, 0.16916203, 0.17614508, 0.19648623, 0.1751554 ,
       0.08680749, 0.20114493, 0.08438134, 0.22857308, 0.19989538,
       0.17555118, 0.16613531, 0.08552217, 0.19200134, 0.17624855,
       0.22971559, 0.17496991, 0.17055297, 0.19922209, 0.20563126,
       0.07799959, 0.16498375, 0.07773757, 0.22832084, 0.18456817,
       0.08264542, 0.07432032, 0.08550191, 0.0824697 , 0.07519126,
       0.09043908, 0.07593942, 0.08324957, 0.07797551, 0.09316111,
       0.19168758, 0.07693028, 0.07386971, 0.07487154, 0.07948923,
       0.0782032 , 0.07503772, 0.07615399]), 'test_pearson_r': array([ 0.9920029 ,  0.99756262,  0.64613918,  0.98598065,  0.99690163,
        0.98750936,  0.99924531,  0.99253569,  0.99967724,  0.99339852,
        0.94374459,  0.99029646,  0.90838766, -0.46862216,  0.99514854,
        0.96397844,  0.99501139,  0.99824948,  0.99640387,  0.99266112,
        0.56181042,  0.96722552,  0.99375964,  0.88364591,  0.99177772,
        0.50578593,  0.99197604,  0.99716794,  0.9743328 ,  0.99276536,
        0.96832099,  0.97641297,  0.9898337 ,  0.99695771,  0.91648505,
        0.99035752,  0.81360236,  0.98228633,  0.90451038,  0.9889737 ,
        0.99454745,  0.9811945 ,  0.99461044]), 'test_spearman_r': array([ 1.        ,  1.        ,  0.6       ,  1.        ,  0.94285714,
        1.        ,  1.        ,  1.        ,  1.        ,  0.94285714,
        0.88571429,  1.        ,  0.82857143, -0.2       ,  0.88571429,
        1.        ,  0.94285714,  1.        ,  1.        ,  1.        ,
        0.37142857,  0.88571429,  0.94285714,  0.81167945,  0.81167945,
        0.6       ,  0.94285714,  0.98561076,  1.        ,  1.        ,
        0.82857143,  0.82857143,  0.94285714,  1.        ,  1.        ,
        0.82857143,  0.82857143,  0.94285714,  0.82857143,  0.98561076,
        1.        ,  0.82857143,  0.94285714]), 'test_rmse': array([-0.07817692, -0.06641851, -0.50482657, -0.11262153, -0.06574503,
       -0.13424498, -0.053869  , -0.10403682, -0.07179983, -0.03165356,
       -0.28440067, -0.10107091, -0.1014454 , -0.66768012, -0.09413163,
       -0.178136  , -0.07976321, -0.02934871, -0.08458741, -0.12341384,
       -0.592147  , -0.14035456, -0.0695408 , -0.22254931, -0.07527064,
       -0.39609702, -0.0940857 , -0.04488465, -0.09245423, -0.08082343,
       -0.16356879, -0.12129202, -0.06468817, -0.0846121 , -0.27447624,
       -0.10324932, -0.30840066, -0.14366976, -0.12100868, -0.09803948,
       -0.10074388, -0.08984238, -0.05810418]), 'test_mae': array([-0.0587429 , -0.04717257, -0.32786013, -0.06610787, -0.04430214,
       -0.0811734 , -0.04530598, -0.08166907, -0.06698427, -0.02618065,
       -0.17994244, -0.07249262, -0.09121938, -0.36737399, -0.07824274,
       -0.10537465, -0.06495862, -0.02546826, -0.05797329, -0.09275996,
       -0.31373219, -0.09523719, -0.05280178, -0.11157148, -0.04584476,
       -0.19791818, -0.07775998, -0.03540493, -0.06433252, -0.07587334,
       -0.10488003, -0.08671569, -0.04737572, -0.06137917, -0.18975143,
       -0.08502472, -0.17389457, -0.09162837, -0.07796944, -0.06501729,
       -0.07042724, -0.07796602, -0.04825451]), 'test_r2': array([ 0.9782129 ,  0.97327852,  0.17354237,  0.96804441,  0.98706657,
        0.97051163,  0.99116124,  0.9729034 ,  0.99173386,  0.98655277,
        0.82884086,  0.97588167,  0.80627891, -3.23320017,  0.97759403,
        0.89318581,  0.98855223,  0.99533715,  0.98022122,  0.97093536,
        0.06066781,  0.91837114,  0.98649838,  0.75607288,  0.9736621 ,
       -0.73516004,  0.97914895,  0.99411068,  0.94840455,  0.98278361,
        0.93605484,  0.9501676 ,  0.97383887,  0.98877944,  0.77978289,
        0.93305019,  0.57577389,  0.95740977,  0.78137261,  0.97564267,
        0.94783347,  0.94820046,  0.9821889 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0021563374205135397, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([3.07594991, 2.78134966, 3.62073779, 3.08271933, 3.57325411,
       1.69810677, 1.1784153 , 1.35393   , 2.91414118, 1.48070812,
       2.0242722 , 3.47952962, 3.46250725, 3.35135698, 3.83291793,
       1.45302749, 3.55911803, 3.09968615, 3.50863075, 3.18418241,
       1.20812273, 1.25791287, 1.26151824, 1.22751045, 2.60718441,
       2.45882869, 1.18287802, 1.30319905, 1.48937225, 2.22215533,
       2.2398212 , 1.2234149 , 2.39566255, 2.13590264, 1.73504949,
       1.79768872, 1.93020105, 2.10081816, 2.05164957, 2.1734376 ,
       1.35511446, 1.19260168, 1.76623702]), 'score_time': array([0.17434072, 0.21926045, 0.19697213, 0.17595553, 0.16173792,
       0.2617178 , 0.08070827, 0.07657099, 0.0805738 , 0.07861185,
       0.16627264, 0.26264381, 0.17305779, 0.25004935, 0.19976759,
       0.07987618, 0.24348974, 0.26199794, 0.25477576, 0.16066289,
       0.08032966, 0.07541776, 0.09569979, 0.077492  , 0.08256936,
       0.20443964, 0.07309675, 0.07715559, 0.0742085 , 0.07610416,
       0.07696033, 0.07880759, 0.07513809, 0.07715368, 0.08561563,
       0.07386279, 0.08980608, 0.07168126, 0.0705533 , 0.0742445 ,
       0.16059542, 0.14607859, 0.07864046]), 'test_pearson_r': array([0.98907495, 0.99817856, 0.99494742, 0.99757873, 0.80036218,
       0.99360334, 0.92554482, 0.99617024, 0.99749125, 0.97318236,
       0.99675763, 0.9045779 , 0.99759745, 0.5304395 , 0.81635696,
       0.99894535, 0.92393685, 0.96100515, 0.42584509, 0.99753587,
       0.99879116, 0.997112  , 0.99586168, 0.8721986 , 0.97872489,
       0.98436452, 0.99654416, 0.96781911, 0.98854238, 0.99369067,
       0.99246848, 0.98954105, 0.99068   , 0.999272  , 0.99231081,
       0.8053344 , 0.99437064, 0.98747103, 0.99717393, 0.95326856,
       0.95934348, 0.98289827, 0.98514795]), 'test_spearman_r': array([0.96428571, 1.        , 0.94285714, 0.94285714, 0.82857143,
       0.88571429, 0.77142857, 0.89864511, 1.        , 0.98561076,
       1.        , 0.82857143, 1.        , 0.42857143, 0.82857143,
       0.94285714, 0.82857143, 1.        , 0.65714286, 1.        ,
       1.        , 1.        , 1.        , 0.82857143, 0.94285714,
       1.        , 1.        , 0.94285714, 0.82857143, 0.94285714,
       1.        , 0.82857143, 0.94285714, 1.        , 1.        ,
       0.88571429, 1.        , 1.        , 1.        , 0.94285714,
       1.        , 1.        , 0.94285714]), 'test_rmse': array([-0.08053437, -0.03667548, -0.04628892, -0.04709187, -0.46415602,
       -0.0631275 , -0.20286402, -0.05671074, -0.05929826, -0.13433074,
       -0.07458262, -0.3141889 , -0.0360194 , -0.65733587, -0.4274967 ,
       -0.03267531, -0.14922278, -0.23419471, -0.5880723 , -0.06905115,
       -0.05394929, -0.08130985, -0.05291649, -0.23122032, -0.12837087,
       -0.12125883, -0.06521272, -0.18325188, -0.08894479, -0.097315  ,
       -0.08101143, -0.12403768, -0.0809224 , -0.02824381, -0.07840562,
       -0.23999869, -0.05307753, -0.10997855, -0.04369246, -0.1671861 ,
       -0.14897969, -0.08541818, -0.1287241 ]), 'test_mae': array([-0.05065631, -0.02139845, -0.03491248, -0.0418963 , -0.24038665,
       -0.05283221, -0.17234392, -0.04305702, -0.04412855, -0.07574889,
       -0.04875035, -0.17638725, -0.02970159, -0.36142161, -0.25093446,
       -0.02428042, -0.10537123, -0.1579529 , -0.24568844, -0.03633442,
       -0.0397958 , -0.07099697, -0.04649371, -0.12996982, -0.1041906 ,
       -0.09852674, -0.05271509, -0.14948395, -0.05763427, -0.07543021,
       -0.04902241, -0.09955673, -0.06643356, -0.01939846, -0.05905895,
       -0.18481577, -0.04691899, -0.07597017, -0.03942382, -0.08559061,
       -0.1114519 , -0.07132549, -0.09254546]), 'test_r2': array([ 0.97618619,  0.99567533,  0.9806021 ,  0.99486923,  0.59717153,
        0.98631212,  0.81965549,  0.98571719,  0.99441689,  0.92684302,
        0.98713288,  0.76661464,  0.99479426, -0.1692854 ,  0.58048672,
        0.99749092,  0.83223726,  0.91323561, -0.01683249,  0.99187058,
        0.99172616,  0.98285967,  0.98442417,  0.70286258,  0.91891166,
        0.93535715,  0.98971544,  0.91505383,  0.97538788,  0.98468541,
        0.9571352 ,  0.97290094,  0.9748119 ,  0.99780899,  0.96935339,
        0.49182565,  0.98853376,  0.96616945,  0.99328896,  0.87601074,
        0.90111458,  0.95302251,  0.93478495]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03897794765782249, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 304, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.463202  , 1.15270305, 1.37525821, 1.24294329, 0.99787807,
       0.63419867, 0.94769812, 1.36715341, 1.39809561, 0.49814296,
       1.43998981, 0.53567028, 0.50933647, 1.57634139, 1.25682545,
       1.4354012 , 0.69347692, 1.49376845, 1.36541152, 1.13082504,
       0.4833076 , 0.63556361, 0.51956701, 0.50009394, 0.8842802 ,
       1.12399006, 0.75751519, 0.51495934, 0.51073432, 0.48832917,
       0.73805618, 0.73586774, 0.73082018, 0.92873478, 0.84646797,
       0.95490694, 0.88900399, 0.63144898, 0.78497529, 0.83330369,
       0.72168231, 0.75368714, 0.71320415]), 'score_time': array([0.24491191, 0.26222777, 0.15676951, 0.2493639 , 0.17358875,
       0.08018947, 0.21267819, 0.16129637, 0.16240549, 0.0814786 ,
       0.23298264, 0.07524991, 0.07915306, 0.2571919 , 0.2132833 ,
       0.24091673, 0.07383704, 0.22623658, 0.07713008, 0.0798924 ,
       0.14341378, 0.18174195, 0.08537745, 0.1900022 , 0.23236156,
       0.07238674, 0.07405853, 0.11558557, 0.0897274 , 0.07858586,
       0.08176732, 0.08242321, 0.07819557, 0.07235217, 0.07434034,
       0.06919765, 0.07638288, 0.07352257, 0.07126355, 0.08377457,
       0.08541894, 0.06871033, 0.07208538]), 'test_pearson_r': array([ 0.98087662,  0.99849484,  0.99352851,  0.98904634,  0.9994771 ,
        0.78969412,  0.98908333,  0.98636366,  0.99831589,  0.99121424,
        0.91909815,  0.99731672,  0.9729599 ,  0.9375864 ,  0.96800843,
        0.99563252,  0.98904911,  0.9667328 ,  0.85030811,  0.9955727 ,
        0.98972697,  0.9973808 ,  0.90212226,  0.99624089, -0.48038981,
        0.99632931,  0.99425758,  0.98334558,  0.99076387,  0.75625924,
        0.94189453,  0.9723253 ,  0.99640599,  0.9992049 ,  0.77711648,
        0.95392501,  0.99981529,  0.9889811 ,  0.99869633,  0.62911088,
        0.9666605 ,  0.98958472,  0.99849373]), 'test_spearman_r': array([1.        , 0.94285714, 1.        , 0.88571429, 1.        ,
       0.82857143, 0.94285714, 0.94285714, 1.        , 1.        ,
       0.88571429, 1.        , 0.94285714, 0.840668  , 0.82857143,
       0.94285714, 1.        , 1.        , 0.88571429, 0.94285714,
       1.        , 1.        , 0.88571429, 1.        , 0.02857143,
       0.98561076, 1.        , 0.94285714, 0.94285714, 0.71428571,
       0.94285714, 0.88571429, 0.82857143, 1.        , 0.65714286,
       0.88571429, 1.        , 0.94285714, 1.        , 0.82857143,
       0.88571429, 0.81167945, 1.        ]), 'test_rmse': array([-0.11149055, -0.05732618, -0.19748527, -0.11332591, -0.02410126,
       -0.39038474, -0.11894826, -0.13656778, -0.0776292 , -0.05979261,
       -0.19732731, -0.06182308, -0.16485583, -0.11172529, -0.16810163,
       -0.08149846, -0.09225267, -0.14186727, -0.21890525, -0.05443805,
       -0.10841968, -0.04134918, -0.17797664, -0.08297544, -0.65068155,
       -0.07283425, -0.08174753, -0.13567195, -0.09456154, -0.18806738,
       -0.1974754 , -0.14481743, -0.07069626, -0.04620869, -0.4584782 ,
       -0.17971951, -0.03486871, -0.13137318, -0.04362628, -0.60256148,
       -0.08873833, -0.10357368, -0.03766819]), 'test_mae': array([-0.07824896, -0.04620896, -0.11017591, -0.07049803, -0.01925199,
       -0.18209535, -0.10405638, -0.1124385 , -0.06242413, -0.05350277,
       -0.11691202, -0.04422748, -0.09488071, -0.0805063 , -0.12522847,
       -0.06019865, -0.06045598, -0.11604226, -0.13571282, -0.03757225,
       -0.07847589, -0.03303617, -0.12471145, -0.06025305, -0.33092433,
       -0.06583913, -0.05906674, -0.0812243 , -0.06402733, -0.14775777,
       -0.11538086, -0.08002114, -0.061025  , -0.03805461, -0.21749043,
       -0.11159755, -0.02891215, -0.10770502, -0.03597359, -0.30942277,
       -0.06664882, -0.08276646, -0.02780091]), 'test_r2': array([ 0.95274172,  0.99099585,  0.93538855,  0.96414037,  0.99802586,
        0.38391559,  0.9734049 ,  0.92584946,  0.99295549,  0.98026338,
        0.78794474,  0.98415828,  0.93161197,  0.82113913,  0.89381144,
        0.9894842 ,  0.97348925,  0.93093201,  0.66526942,  0.99017617,
        0.92730554,  0.99444664,  0.79170636,  0.96894891, -4.23658382,
        0.9878092 ,  0.98046996,  0.96234458,  0.98121252,  0.43624603,
        0.81634063,  0.91710089,  0.99243758,  0.99263984,  0.50094975,
        0.89986644,  0.99770682,  0.96715131,  0.99110149,  0.25602681,
        0.92265173,  0.9728977 ,  0.99575729]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04786776304179686, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 125, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([0.58477426, 1.3242476 , 0.52646756, 0.88190413, 1.45933533,
       1.5904851 , 1.3645401 , 1.31459856, 1.8115685 , 0.59188008,
       1.78905892, 0.56601286, 0.61675429, 1.45298076, 1.67155576,
       1.70066643, 1.04795027, 1.39553046, 1.44328976, 1.63632584,
       0.90560055, 0.59657097, 0.60725784, 0.54388499, 0.9808917 ,
       1.32908535, 1.24673486, 0.9535048 , 0.58899546, 0.69575834,
       1.09874773, 1.10803151, 0.61349058, 1.01636577, 0.90424681,
       1.02499485, 0.80819011, 1.06423116, 0.79707837, 0.74124146,
       0.86646318, 0.62313128, 0.78243876]), 'score_time': array([0.16255403, 0.17183208, 0.07209587, 0.25468802, 0.24003768,
       0.36542749, 0.24018192, 0.16047549, 0.25313973, 0.08054042,
       0.23053169, 0.10814047, 0.08261824, 0.15973473, 0.23724222,
       0.23946023, 0.15440893, 0.08136368, 0.15932608, 0.24979687,
       0.19881344, 0.07921529, 0.07514167, 0.07550287, 0.12782049,
       0.16751456, 0.16779494, 0.08043671, 0.0803349 , 0.07691932,
       0.10504341, 0.12450528, 0.08548427, 0.081779  , 0.072227  ,
       0.07059145, 0.09243679, 0.07076025, 0.07946658, 0.07657576,
       0.07453704, 0.09337568, 0.07031226]), 'test_pearson_r': array([0.99257328, 0.9982608 , 0.99571976, 0.99811185, 0.99886934,
       0.97735259, 0.97501236, 0.95364997, 0.99707037, 0.99982146,
       0.99807532, 0.29692606, 0.99244294, 0.92801928, 0.98192616,
       0.99599644, 0.99827369, 0.98827898, 0.99884728, 0.98456205,
       0.98445762, 0.99688168, 0.9937344 , 0.93664399, 0.98361177,
       0.46574399, 0.96552943, 0.98807318, 0.98892317, 0.98889364,
       0.90755726, 0.99805515, 0.98883102, 0.98253126, 0.76862515,
       0.99521821, 0.96459801, 0.95848215, 0.99288188, 0.91481482,
       0.99661109, 0.97746599, 0.9902333 ]), 'test_spearman_r': array([0.96428571, 0.92763366, 1.        , 1.        , 1.        ,
       0.94285714, 1.        , 0.94285714, 1.        , 0.94112395,
       1.        , 0.5       , 1.        , 0.94285714, 0.94285714,
       1.        , 1.        , 0.82857143, 1.        , 0.94285714,
       0.82857143, 1.        , 1.        , 0.77142857, 0.92763366,
       0.6       , 0.82857143, 1.        , 0.94285714, 1.        ,
       0.65714286, 1.        , 0.94285714, 0.88571429, 0.65714286,
       1.        , 0.82857143, 1.        , 0.88571429, 0.94285714,
       1.        , 1.        , 1.        ]), 'test_rmse': array([-0.06099104, -0.07916483, -0.06881562, -0.06008947, -0.02396897,
       -0.19658239, -0.12755831, -0.19667755, -0.06982086, -0.02103582,
       -0.03861362, -0.91502548, -0.11991675, -0.19293854, -0.09677345,
       -0.06257386, -0.11269346, -0.21921177, -0.04714844, -0.12633365,
       -0.11508164, -0.03983914, -0.08625939, -0.15687887, -0.13330908,
       -0.71118406, -0.15090461, -0.06823777, -0.07594055, -0.10997564,
       -0.24338367, -0.03748024, -0.06268198, -0.08315345, -0.48370359,
       -0.08427153, -0.2304274 , -0.14939136, -0.08727271, -0.18146449,
       -0.07710396, -0.1562711 , -0.1048942 ]), 'test_mae': array([-0.0468248 , -0.06784585, -0.05783818, -0.04317105, -0.01579559,
       -0.13077807, -0.07993477, -0.13559754, -0.04754296, -0.01703594,
       -0.02857313, -0.5356809 , -0.0924896 , -0.13320791, -0.07309316,
       -0.04795866, -0.09926911, -0.157282  , -0.03138133, -0.09689268,
       -0.06867094, -0.03560735, -0.05843919, -0.11720564, -0.07533451,
       -0.43581246, -0.11694678, -0.05049204, -0.05949751, -0.07975299,
       -0.14550368, -0.02887647, -0.04754455, -0.06735932, -0.2980248 ,
       -0.06145773, -0.12846011, -0.09505674, -0.06363142, -0.11296806,
       -0.06453591, -0.09344157, -0.08405765]), 'test_r2': array([ 0.98255194,  0.9894881 ,  0.98738785,  0.98548907,  0.99748577,
        0.82492017,  0.94535504,  0.84205335,  0.98903372,  0.98650723,
        0.99361524, -1.93305995,  0.9003143 ,  0.81853358,  0.94343355,
        0.99198806,  0.98458301,  0.91276802,  0.99578555,  0.95763175,
        0.95959162,  0.99337006,  0.97708579,  0.85406561,  0.95198931,
       -0.55447104,  0.88188297,  0.9653455 ,  0.97572926,  0.97163806,
        0.80904045,  0.99443961,  0.97625159,  0.89604469,  0.40913114,
        0.98376165,  0.91169828,  0.89462007,  0.97790512,  0.81064505,
        0.99126106,  0.92741402,  0.97248558]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 234, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.64556909, 2.51252627, 1.09170699, 2.91052771, 2.36608481,
       2.5755589 , 2.59089828, 1.0083015 , 1.0738585 , 2.57361794,
       2.95746136, 2.91727686, 2.62555456, 2.09787488, 1.07495761,
       2.23511267, 2.50003099, 2.06505871, 3.17054725, 2.32367516,
       0.98832631, 0.99280357, 0.97001529, 0.97335339, 0.97251463,
       0.9838419 , 1.42908955, 1.11098003, 2.24700379, 1.53538275,
       1.85135651, 2.10327387, 1.84758902, 1.95978141, 1.98894763,
       1.83420372, 1.11856818, 1.40384436, 1.42196131, 1.86703873,
       1.31537247, 1.13240933, 1.23494673]), 'score_time': array([0.25209641, 0.23234344, 0.08928752, 0.240273  , 0.16076231,
       0.18214393, 0.18683767, 0.08108234, 0.07544994, 0.17279315,
       0.25311661, 0.18197751, 0.30344009, 0.17503142, 0.09797621,
       0.2173183 , 0.16572523, 0.20997095, 0.18169045, 0.21232009,
       0.0784843 , 0.07113433, 0.07651663, 0.07315946, 0.17906141,
       0.07672286, 0.17193365, 0.07539868, 0.07927847, 0.07601261,
       0.08931661, 0.07467771, 0.07527351, 0.08216691, 0.0697782 ,
       0.07854652, 0.08880424, 0.16500044, 0.0742228 , 0.07307839,
       0.08560228, 0.08495355, 0.07576466]), 'test_pearson_r': array([ 0.9789909 ,  0.99631579,  0.98098657,  0.7060946 ,  0.97233756,
        0.99330218,  0.99843974,  0.92479514,  0.96151549,  0.99021659,
        0.9883573 ,  0.95664119,  0.96759727,  0.99847793,  0.92036881,
        0.96706797,  0.92618274,  0.99809053,  0.94714711,  0.69008493,
        0.9506281 ,  0.99644233,  0.89776545,  0.82383859,  0.48663955,
        0.97560566,  0.99593816,  0.99863981,  0.84003096,  0.99672426,
        0.99297311,  0.99419185,  0.99966666,  0.54680084,  0.95799687,
        0.99583423,  0.98371941,  0.98784479,  0.98964099, -0.67340405,
        0.97732328,  0.99832164,  0.99705111]), 'test_spearman_r': array([0.75      , 0.98561076, 1.        , 0.40583972, 1.        ,
       0.88571429, 1.        , 0.88571429, 0.98561076, 1.        ,
       1.        , 1.        , 0.94285714, 0.94285714, 0.94285714,
       1.        , 0.94285714, 1.        , 0.94285714, 0.82857143,
       0.77142857, 0.94285714, 0.71428571, 0.77142857, 0.57977104,
       0.88571429, 0.92763366, 1.        , 0.77142857, 0.92763366,
       0.77142857, 0.94285714, 1.        , 0.40583972, 0.94285714,
       1.        , 0.94285714, 0.82857143, 1.        , 0.14285714,
       1.        , 1.        , 1.        ]), 'test_rmse': array([-0.15493195, -0.05977397, -0.09293511, -0.45832076, -0.1171579 ,
       -0.09723272, -0.03678377, -0.07087493, -0.08164686, -0.08290589,
       -0.12668968, -0.17183638, -0.22391895, -0.04707518, -0.11717124,
       -0.15282231, -0.24295479, -0.08584272, -0.2005181 , -0.62785149,
       -0.13269343, -0.04910035, -0.19799376, -0.24167333, -0.16347081,
       -0.11548971, -0.06610581, -0.04700728, -0.24273975, -0.07413087,
       -0.07217177, -0.07197241, -0.05129518, -0.39432231, -0.16486259,
       -0.07219581, -0.10403756, -0.10901598, -0.07844355, -0.58792905,
       -0.08989453, -0.04187618, -0.06457883]), 'test_mae': array([-0.09467221, -0.05006341, -0.06834586, -0.19652804, -0.10100421,
       -0.07625029, -0.03186252, -0.0488435 , -0.0721457 , -0.0613729 ,
       -0.10371696, -0.10643044, -0.10823593, -0.03990358, -0.06261386,
       -0.11697612, -0.1669488 , -0.07106507, -0.12908378, -0.29410608,
       -0.08425216, -0.03675051, -0.17083177, -0.18663052, -0.08685794,
       -0.08193431, -0.04776504, -0.03007929, -0.1504561 , -0.0510279 ,
       -0.05582565, -0.0547126 , -0.03976548, -0.20790063, -0.12842087,
       -0.05668166, -0.08708001, -0.07618318, -0.06455774, -0.27344829,
       -0.06788988, -0.02945115, -0.06178667]), 'test_r2': array([ 0.94446624,  0.99113071,  0.94850877,  0.25501813,  0.93300296,
        0.97244353,  0.99585847,  0.83110787,  0.90757189,  0.96861125,
        0.94532075,  0.89910749,  0.90396919,  0.99401398,  0.71973961,
        0.92520749,  0.8430495 ,  0.98831676,  0.88427105,  0.31344339,
        0.87935289,  0.98883475,  0.78724647,  0.58625545, -0.42912948,
        0.94957632,  0.99095608,  0.99561242,  0.67966782,  0.9910171 ,
        0.98311074,  0.98363134,  0.99052361, -0.41140002,  0.91314381,
        0.98819919,  0.96507938,  0.96656929,  0.96659649, -2.39028265,
        0.93736976,  0.99549605,  0.97317371]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03770052924189587, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 549, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 220, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([13.54716778, 12.18915415,  5.45148253,  5.07630706, 14.10938811,
       11.53792477, 10.46415806,  6.96660376, 10.8215723 , 11.31822395,
       13.06697249,  6.69636273, 12.76346803,  9.58243227, 13.24444914,
       12.62260485, 11.84911132, 13.86854649, 12.73940563, 14.92700005,
        4.87303138,  5.85682607,  5.61019158,  5.32465649, 11.8789804 ,
        6.78089786, 10.65657854, 10.63514137,  9.20827842,  6.40786767,
        9.18935919,  8.60420823,  5.66316819,  5.32996964,  6.15000176,
        9.40127206,  9.88400483,  8.61785674,  8.49706221,  8.39072919,
        8.46328616,  8.30573893,  7.87629056]), 'score_time': array([0.1967113 , 0.19434094, 0.18172956, 0.08441639, 0.17211223,
       0.1712079 , 0.28646827, 0.08680248, 0.16689444, 0.17949557,
       0.27613664, 0.08927703, 0.2587626 , 0.37412882, 0.34406686,
       0.24569702, 0.07666612, 0.17442989, 0.07341814, 0.16859269,
       0.08535457, 0.08022046, 0.07744575, 0.08106852, 0.08853912,
       0.17442203, 0.08556533, 0.07588077, 0.09987283, 0.07199574,
       0.17231011, 0.09407854, 0.08005786, 0.07480407, 0.07497621,
       0.07383513, 0.07743549, 0.077353  , 0.09100008, 0.07662034,
       0.07679462, 0.07869077, 0.07404304]), 'test_pearson_r': array([0.99644531, 0.54311244, 0.98153327, 0.97006182, 0.99079747,
       0.98495702, 0.94937312, 0.998113  , 0.99884743, 0.99781375,
       0.98171304, 0.97771688, 0.99147159, 0.99604126, 0.95562508,
       0.9935727 , 0.9917702 , 0.98640921, 0.9973083 , 0.99915874,
       0.99336124, 0.98765275, 0.99743831, 0.91502197, 0.95030284,
       0.97382925, 0.97536518, 0.98187232, 0.98315812, 0.87336506,
       0.99228241, 0.99837792, 0.99064188, 0.95890084, 0.99935204,
       0.96855771, 0.53247213, 0.98808943, 0.99128183, 0.98945317,
       0.99015826, 0.37359729, 0.93326259]), 'test_spearman_r': array([1.        , 0.37142857, 0.98561076, 1.        , 1.        ,
       0.77142857, 0.94285714, 1.        , 1.        , 1.        ,
       0.82857143, 0.94285714, 0.98561076, 0.94285714, 0.94285714,
       1.        , 0.94285714, 1.        , 0.82857143, 1.        ,
       1.        , 0.94285714, 0.94285714, 0.94285714, 0.98561076,
       1.        , 1.        , 1.        , 0.94285714, 0.65714286,
       1.        , 1.        , 1.        , 1.        , 0.98561076,
       0.94285714, 0.6       , 0.94285714, 1.        , 1.        ,
       0.94285714, 0.37142857, 0.81167945]), 'test_rmse': array([-0.05279675, -0.48198359, -0.10844378, -0.09027879, -0.07702404,
       -0.13486083, -0.23767268, -0.05473627, -0.05067629, -0.0580146 ,
       -0.0976251 , -0.14405324, -0.08643022, -0.0819357 , -0.1242127 ,
       -0.06325369, -0.0714385 , -0.09127772, -0.06778746, -0.03265621,
       -0.06593583, -0.12957405, -0.04482049, -0.1361834 , -0.16121094,
       -0.26556185, -0.09897255, -0.08513585, -0.1166924 , -0.2715341 ,
       -0.11410089, -0.03768236, -0.07853718, -0.26042455, -0.02963056,
       -0.14953892, -0.61626282, -0.10110019, -0.10333426, -0.09324578,
       -0.10012746, -0.65241515, -0.33504718]), 'test_mae': array([-0.04432738, -0.2665758 , -0.07987698, -0.0864048 , -0.04582643,
       -0.10224362, -0.112206  , -0.0428826 , -0.04276592, -0.04227146,
       -0.07320183, -0.06777396, -0.07304769, -0.06690034, -0.08172331,
       -0.04212324, -0.05512417, -0.06784009, -0.05437636, -0.02238564,
       -0.05540603, -0.09438817, -0.03829549, -0.08392526, -0.12202544,
       -0.18320551, -0.07818267, -0.05988476, -0.08786896, -0.12972711,
       -0.08127177, -0.03505583, -0.05271471, -0.1627622 , -0.02278149,
       -0.10250955, -0.37363929, -0.08403861, -0.09058654, -0.06999931,
       -0.07880288, -0.3522123 , -0.18878106]), 'test_r2': array([ 0.98876474,  0.23171649,  0.88140522,  0.92108291,  0.97739588,
        0.8926992 ,  0.88300456,  0.99502116,  0.99221147,  0.99381028,
        0.94145591,  0.9447653 ,  0.9809714 ,  0.979193  ,  0.88640697,
        0.98334612,  0.9785891 ,  0.96825972,  0.99099273,  0.99792183,
        0.98649077,  0.94987885,  0.9925085 ,  0.81886665,  0.65618844,
        0.84422515,  0.90824947,  0.95954411,  0.95260564,  0.71776865,
        0.98291125,  0.99585533,  0.97327722,  0.8745869 ,  0.99808848,
        0.93255928,  0.08100095,  0.9581988 ,  0.96740087,  0.96672319,
        0.97708501, -0.31830652,  0.84275817]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0029277433369518636, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1642, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([3.03679919, 1.46040869, 2.64037728, 2.9041338 , 2.85497117,
       1.13381743, 2.19914055, 1.15703678, 1.17763996, 2.09823275,
       3.43310261, 3.27201128, 3.21930122, 3.07323503, 2.74074411,
       2.69638014, 2.89612651, 2.62365913, 2.69183683, 2.37332845,
       1.86267877, 1.28373408, 1.17998838, 2.43783569, 1.11135101,
       1.17886448, 1.23225498, 1.17648196, 2.17016387, 2.11641097,
       1.78862929, 1.91379333, 2.08813596, 2.10112762, 2.13170433,
       1.3536427 , 2.18567085, 1.60049343, 1.45571518, 1.99802732,
       1.10081339, 1.8879652 , 1.83178282]), 'score_time': array([0.25248575, 0.26146817, 0.16214609, 0.23765135, 0.24175811,
       0.07682657, 0.09030461, 0.08521843, 0.08419299, 0.09079933,
       0.23359942, 0.45690703, 0.21385646, 0.20005846, 0.16141081,
       0.26983643, 0.17137527, 0.2031827 , 0.25465631, 0.24325871,
       0.25861716, 0.10651469, 0.07606649, 0.16982484, 0.07627392,
       0.25663304, 0.07238626, 0.10046029, 0.07302284, 0.07783794,
       0.09087944, 0.08183146, 0.07867813, 0.07429671, 0.07245207,
       0.07566404, 0.07649207, 0.07323313, 0.08432412, 0.07274938,
       0.07245684, 0.07131267, 0.07870984]), 'test_pearson_r': array([0.98209077, 0.99894206, 0.99696568, 0.98776673, 0.59526311,
       0.89819611, 0.9960196 , 0.99979923, 0.98856978, 0.95249697,
       0.96989778, 0.94943248, 0.86356395, 0.99891802, 0.95580908,
       0.30920727, 0.99609844, 0.97099937, 0.99738215, 0.84398796,
       0.96227158, 0.96807649, 0.93992153, 0.82652822, 0.78978156,
       0.965336  , 0.9937031 , 0.97005218, 0.99445117, 0.99550401,
       0.98872171, 0.99494382, 0.99942348, 0.98882333, 0.97039907,
       0.98692047, 0.99828854, 0.98857102, 0.95405873, 0.93903463,
       0.99860478, 0.9893379 , 0.99635651]), 'test_spearman_r': array([0.92857143, 0.94285714, 1.        , 0.98561076, 0.42857143,
       0.65714286, 0.94285714, 1.        , 0.98561076, 0.94285714,
       0.94285714, 0.94285714, 0.82857143, 1.        , 0.94285714,
       0.14285714, 1.        , 1.        , 1.        , 0.71428571,
       0.94285714, 0.94285714, 0.98561076, 0.77142857, 0.65714286,
       0.71428571, 0.94285714, 1.        , 1.        , 1.        ,
       0.94112395, 0.98561076, 1.        , 1.        , 0.94285714,
       0.94285714, 1.        , 0.77142857, 0.94285714, 0.82857143,
       1.        , 0.94285714, 0.94285714]), 'test_rmse': array([-0.09917906, -0.0399295 , -0.08504837, -0.09164042, -0.84725741,
       -0.29813789, -0.09424134, -0.02916584, -0.08732842, -0.16694508,
       -0.20338684, -0.14908648, -0.39632948, -0.0311702 , -0.13436651,
       -0.63110689, -0.06332277, -0.08115746, -0.05216806, -0.33236443,
       -0.17596547, -0.14175061, -0.23344415, -0.26656152, -0.45359777,
       -0.14396472, -0.0726521 , -0.15030083, -0.09098103, -0.06989398,
       -0.07801998, -0.10705822, -0.04912425, -0.10145263, -0.12064856,
       -0.07257926, -0.04336324, -0.07564122, -0.1981215 , -0.15518772,
       -0.05268173, -0.0756411 , -0.07102531]), 'test_mae': array([-0.07424351, -0.02958961, -0.06603531, -0.05709883, -0.3770733 ,
       -0.14710244, -0.06249029, -0.02442748, -0.05311169, -0.12960799,
       -0.11763811, -0.098244  , -0.19692792, -0.02086978, -0.10681489,
       -0.28661374, -0.05084681, -0.06480746, -0.03594958, -0.21660023,
       -0.09683001, -0.10992826, -0.16144433, -0.1867798 , -0.19917629,
       -0.12347831, -0.05348284, -0.07858188, -0.05207911, -0.05895979,
       -0.05702922, -0.08035639, -0.0429856 , -0.08529446, -0.09933681,
       -0.04970341, -0.0263204 , -0.06003056, -0.15912565, -0.12027264,
       -0.04150763, -0.06967244, -0.04363826]), 'test_r2': array([ 0.96252614,  0.99777171,  0.96654464,  0.94882147,  0.16884541,
        0.78516137,  0.96578945,  0.99863824,  0.97346192,  0.84943857,
        0.92505047,  0.86297438,  0.63983265,  0.99607643,  0.90634768,
       -1.0445386 ,  0.9913831 ,  0.93764591,  0.99388182,  0.48772843,
        0.90139735,  0.9213407 ,  0.88117644,  0.67518148,  0.54091395,
        0.89460455,  0.98049537,  0.93281891,  0.98428286,  0.98389378,
        0.96663064,  0.97702587,  0.99175545,  0.97316916,  0.93723236,
        0.95237032,  0.99574357,  0.95310742,  0.90632985,  0.81167432,
        0.99599214,  0.97307159,  0.98906963]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05617045774903145, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 710, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_pearson_r_mean': 0.9300823581675257, 'test_pearson_r_std': 0.18811038587431253, 'test_spearman_r_mean': 0.903716991910663, 'test_spearman_r_std': 0.16144272143729524, 'test_rmse_mean': 0.1502427272755521, 'test_rmse_std': 0.14639105760426033, 'test_mae_mean': 0.09680774334980673, 'test_mae_std': 0.07535791076321566, 'test_r2_mean': 0.8148775741109697, 'test_r2_std': 0.5259261171731048}}, 'CO_P7DPF': {'cluster size (%)': 2, 6: {'test_mad': 0.00045492253, 'test_ystd': 0.0006198431, 'test_mae': 0.5389300420610835, 'test_rmse': 0.5399203432755918, 'test_r2': -270.2268492290349, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 673, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.00042917332, 'test_ystd': 0.00046011625, 'test_mae': 0.5391567383933793, 'test_rmse': 0.5401648245814206, 'test_r2': -270.47253327480746, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.011856675578279312, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.0021186073, 'test_ystd': 0.0022710524, 'test_mae': 0.5350922579297156, 'test_rmse': 0.5360577782280762, 'test_r2': -266.3600418090524, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.056807170156263465, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1127, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.0004437963, 'test_ystd': 0.0006172338, 'test_mae': 0.5369313393760453, 'test_rmse': 0.5379360869295826, 'test_r2': -268.236945841771, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.010161970578227233, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.00082139176, 'test_ystd': 0.0008798691, 'test_mae': 0.5344413950769832, 'test_rmse': 0.5354393665856902, 'test_r2': -265.7435291881423, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 406, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.0008361737, 'test_ystd': 0.0009367085, 'test_mae': 0.5366115604568253, 'test_rmse': 0.5376071264900135, 'test_r2': -267.9077572061177, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06534654337748008, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 341, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.00035176674, 'test_ystd': 0.00044129664, 'test_mae': 0.5380970870185624, 'test_rmse': 0.5391044598227377, 'test_r2': -269.4077569176729, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.011735119717520552, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_mad_mean': 0.0007794045211215105, 'test_mad_std': 0.0005759349068480399, 'test_ystd_mean': 0.000889445684151724, 'test_ystd_std': 0.0005907753913081771, 'test_mae_mean': 0.5370372029017992, 'test_mae_std': 0.001686587124885743, 'test_rmse_mean': 0.5380328551304446, 'test_rmse_std': 0.0016934311077358836, 'test_r2_mean': -268.33648763808554, 'test_r2_std': 1.6948352539754516}}, 'ID_P7DPF': {'cluster size (%)': 2, 6: {'fit_time': array([15.66099048, 12.64988947, 17.44670916, 18.8564775 , 16.49409151,
       15.30291486, 14.78031659, 13.55867553,  8.29991651, 16.57127905,
       15.00364089, 13.39245224,  9.60201955, 17.40723538, 18.07981849,
       15.16390061, 20.29724979, 12.08882952,  8.61863565, 16.26329827,
        7.51133895,  6.9079113 ,  7.66494203, 15.51270556, 16.36467266,
       13.8999064 ,  9.84893441, 14.31041718, 13.45863867, 13.55963945,
       13.92836571,  9.94423866, 10.07528615,  9.20874214,  8.12182641,
       12.39766121, 12.13591576,  9.72778106, 13.2556951 , 13.03383136,
       10.96711421, 11.80237484, 10.76350999]), 'score_time': array([0.16864204, 0.17721963, 0.22915554, 0.29118609, 0.26485252,
       0.1680913 , 0.27432609, 0.08227468, 0.09108663, 0.17466521,
       0.26020575, 0.08032298, 0.0849483 , 0.1775434 , 0.17260098,
       0.16119504, 0.27277398, 0.29395866, 0.14654112, 0.13418341,
       0.12377119, 0.08094478, 0.14956999, 0.1741035 , 0.07814288,
       0.09967637, 0.20533228, 0.07914329, 0.10955334, 0.07838154,
       0.07909203, 0.08133984, 0.08056521, 0.07521558, 0.08956456,
       0.08482671, 0.08030891, 0.07606483, 0.07677889, 0.07304764,
       0.08114982, 0.08454919, 0.07475233]), 'test_pearson_r': array([ 0.9920029 ,  0.99756262,  0.64613918,  0.98598065,  0.99690163,
        0.98750936,  0.99924531,  0.99253569,  0.99967724,  0.99339852,
        0.94374459,  0.99029646,  0.90838766, -0.46862216,  0.99514854,
        0.96397844,  0.99501139,  0.99824948,  0.99640387,  0.99266112,
        0.56181042,  0.96722552,  0.99375964,  0.88364591,  0.99177772,
        0.50578593,  0.99197604,  0.99716794,  0.9743328 ,  0.99276536,
        0.96832099,  0.97641297,  0.9898337 ,  0.99695771,  0.91648505,
        0.99035752,  0.81360236,  0.98228633,  0.90451038,  0.9889737 ,
        0.99454745,  0.9811945 ,  0.99461044]), 'test_spearman_r': array([ 1.        ,  1.        ,  0.6       ,  1.        ,  0.94285714,
        1.        ,  1.        ,  1.        ,  1.        ,  0.94285714,
        0.88571429,  1.        ,  0.82857143, -0.2       ,  0.88571429,
        1.        ,  0.94285714,  1.        ,  1.        ,  1.        ,
        0.37142857,  0.88571429,  0.94285714,  0.81167945,  0.81167945,
        0.6       ,  0.94285714,  0.98561076,  1.        ,  1.        ,
        0.82857143,  0.82857143,  0.94285714,  1.        ,  1.        ,
        0.82857143,  0.82857143,  0.94285714,  0.82857143,  0.98561076,
        1.        ,  0.82857143,  0.94285714]), 'test_rmse': array([-0.07817692, -0.06641851, -0.50482657, -0.11262153, -0.06574503,
       -0.13424498, -0.053869  , -0.10403682, -0.07179983, -0.03165356,
       -0.28440067, -0.10107091, -0.1014454 , -0.66768012, -0.09413163,
       -0.178136  , -0.07976321, -0.02934871, -0.08458741, -0.12341384,
       -0.592147  , -0.14035456, -0.0695408 , -0.22254931, -0.07527064,
       -0.39609702, -0.0940857 , -0.04488465, -0.09245423, -0.08082343,
       -0.16356879, -0.12129202, -0.06468817, -0.0846121 , -0.27447624,
       -0.10324932, -0.30840066, -0.14366976, -0.12100868, -0.09803948,
       -0.10074388, -0.08984238, -0.05810418]), 'test_mae': array([-0.0587429 , -0.04717257, -0.32786013, -0.06610787, -0.04430214,
       -0.0811734 , -0.04530598, -0.08166907, -0.06698427, -0.02618065,
       -0.17994244, -0.07249262, -0.09121938, -0.36737399, -0.07824274,
       -0.10537465, -0.06495862, -0.02546826, -0.05797329, -0.09275996,
       -0.31373219, -0.09523719, -0.05280178, -0.11157148, -0.04584476,
       -0.19791818, -0.07775998, -0.03540493, -0.06433252, -0.07587334,
       -0.10488003, -0.08671569, -0.04737572, -0.06137917, -0.18975143,
       -0.08502472, -0.17389457, -0.09162837, -0.07796944, -0.06501729,
       -0.07042724, -0.07796602, -0.04825451]), 'test_r2': array([ 0.9782129 ,  0.97327852,  0.17354237,  0.96804441,  0.98706657,
        0.97051163,  0.99116124,  0.9729034 ,  0.99173386,  0.98655277,
        0.82884086,  0.97588167,  0.80627891, -3.23320017,  0.97759403,
        0.89318581,  0.98855223,  0.99533715,  0.98022122,  0.97093536,
        0.06066781,  0.91837114,  0.98649838,  0.75607288,  0.9736621 ,
       -0.73516004,  0.97914895,  0.99411068,  0.94840455,  0.98278361,
        0.93605484,  0.9501676 ,  0.97383887,  0.98877944,  0.77978289,
        0.93305019,  0.57577389,  0.95740977,  0.78137261,  0.97564267,
        0.94783347,  0.94820046,  0.9821889 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0021563374205135397, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.7541523 , 3.29906201, 3.48310065, 1.32205033, 2.68416548,
       2.33673286, 2.31493044, 3.66016364, 3.12133217, 1.39759374,
       2.90876412, 1.48728776, 1.30325699, 3.05447388, 3.18188572,
       2.64161062, 2.34905076, 3.27296352, 3.39574361, 2.95584011,
       1.49558449, 1.25368786, 2.1290462 , 1.21779966, 1.18371773,
       2.43189502, 2.38528872, 2.69163537, 2.60783625, 1.27417111,
       1.34199524, 1.80194688, 2.07034445, 2.01743698, 2.22122145,
       2.26912856, 1.99616528, 2.09616303, 1.9872973 , 2.27928829,
       1.1756978 , 1.96420979, 2.2551136 ]), 'score_time': array([0.25683522, 0.25407195, 0.25206137, 0.080266  , 0.17452502,
       0.07997847, 0.25749612, 0.23437381, 0.16996455, 0.09215498,
       0.25845623, 0.09147334, 0.08808327, 0.24632335, 0.21259785,
       0.16713643, 0.20973229, 0.2427299 , 0.2442894 , 0.09099841,
       0.15605021, 0.18630958, 0.14809895, 0.08308554, 0.07677484,
       0.07772589, 0.07080483, 0.07056761, 0.08176756, 0.08055139,
       0.0796988 , 0.07873702, 0.08889127, 0.07617831, 0.07491755,
       0.07299805, 0.09334922, 0.07246828, 0.07357049, 0.07348204,
       0.07827902, 0.07450652, 0.07335305]), 'test_pearson_r': array([0.98907495, 0.99817856, 0.99494742, 0.99757873, 0.80036218,
       0.99360334, 0.92554482, 0.99617024, 0.99749125, 0.97318236,
       0.99675763, 0.9045779 , 0.99759745, 0.5304395 , 0.81635696,
       0.99894535, 0.92393685, 0.96100515, 0.42584509, 0.99753587,
       0.99879116, 0.997112  , 0.99586168, 0.8721986 , 0.97872489,
       0.98436452, 0.99654416, 0.96781911, 0.98854238, 0.99369067,
       0.99246848, 0.98954105, 0.99068   , 0.999272  , 0.99231081,
       0.8053344 , 0.99437064, 0.98747103, 0.99717393, 0.95326856,
       0.95934348, 0.98289827, 0.98514795]), 'test_spearman_r': array([0.96428571, 1.        , 0.94285714, 0.94285714, 0.82857143,
       0.88571429, 0.77142857, 0.89864511, 1.        , 0.98561076,
       1.        , 0.82857143, 1.        , 0.42857143, 0.82857143,
       0.94285714, 0.82857143, 1.        , 0.65714286, 1.        ,
       1.        , 1.        , 1.        , 0.82857143, 0.94285714,
       1.        , 1.        , 0.94285714, 0.82857143, 0.94285714,
       1.        , 0.82857143, 0.94285714, 1.        , 1.        ,
       0.88571429, 1.        , 1.        , 1.        , 0.94285714,
       1.        , 1.        , 0.94285714]), 'test_rmse': array([-0.08053437, -0.03667548, -0.04628892, -0.04709187, -0.46415602,
       -0.0631275 , -0.20286402, -0.05671074, -0.05929826, -0.13433074,
       -0.07458262, -0.3141889 , -0.0360194 , -0.65733587, -0.4274967 ,
       -0.03267531, -0.14922278, -0.23419471, -0.5880723 , -0.06905115,
       -0.05394929, -0.08130985, -0.05291649, -0.23122032, -0.12837087,
       -0.12125883, -0.06521272, -0.18325188, -0.08894479, -0.097315  ,
       -0.08101143, -0.12403768, -0.0809224 , -0.02824381, -0.07840562,
       -0.23999869, -0.05307753, -0.10997855, -0.04369246, -0.1671861 ,
       -0.14897969, -0.08541818, -0.1287241 ]), 'test_mae': array([-0.05065631, -0.02139845, -0.03491248, -0.0418963 , -0.24038665,
       -0.05283221, -0.17234392, -0.04305702, -0.04412855, -0.07574889,
       -0.04875035, -0.17638725, -0.02970159, -0.36142161, -0.25093446,
       -0.02428042, -0.10537123, -0.1579529 , -0.24568844, -0.03633442,
       -0.0397958 , -0.07099697, -0.04649371, -0.12996982, -0.1041906 ,
       -0.09852674, -0.05271509, -0.14948395, -0.05763427, -0.07543021,
       -0.04902241, -0.09955673, -0.06643356, -0.01939846, -0.05905895,
       -0.18481577, -0.04691899, -0.07597017, -0.03942382, -0.08559061,
       -0.1114519 , -0.07132549, -0.09254546]), 'test_r2': array([ 0.97618619,  0.99567533,  0.9806021 ,  0.99486923,  0.59717153,
        0.98631212,  0.81965549,  0.98571719,  0.99441689,  0.92684302,
        0.98713288,  0.76661464,  0.99479426, -0.1692854 ,  0.58048672,
        0.99749092,  0.83223726,  0.91323561, -0.01683249,  0.99187058,
        0.99172616,  0.98285967,  0.98442417,  0.70286258,  0.91891166,
        0.93535715,  0.98971544,  0.91505383,  0.97538788,  0.98468541,
        0.9571352 ,  0.97290094,  0.9748119 ,  0.99780899,  0.96935339,
        0.49182565,  0.98853376,  0.96616945,  0.99328896,  0.87601074,
        0.90111458,  0.95302251,  0.93478495]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03897794765782249, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 304, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.09997249, 1.02593374, 1.3281846 , 0.4827044 , 1.22358727,
       1.49721146, 1.50092459, 1.45497108, 1.46891499, 1.37169003,
       0.49023461, 1.20313835, 0.5111773 , 0.48886752, 1.32374263,
       1.67684293, 1.05859351, 1.09716058, 1.49328399, 1.56668854,
       0.48677945, 0.48365331, 0.51025438, 0.52105474, 0.48818827,
       0.47608376, 0.4960022 , 0.87761903, 1.19234014, 0.85737658,
       1.0338459 , 0.70001435, 0.89932966, 0.94613695, 0.97846007,
       0.63990831, 0.92519474, 0.72690868, 0.5045979 , 0.83965373,
       0.53921127, 0.8395927 , 0.52026939]), 'score_time': array([0.25039577, 0.27017355, 0.20056677, 0.07151866, 0.17075706,
       0.27330089, 0.24932861, 0.25221205, 0.28511262, 0.22237754,
       0.07709718, 0.15773034, 0.07902837, 0.07827044, 0.21958375,
       0.24465013, 0.18744087, 0.21383715, 0.15794539, 0.21283531,
       0.07175326, 0.07547975, 0.07421255, 0.07474494, 0.07160664,
       0.07329035, 0.07408595, 0.07983518, 0.08020711, 0.07392478,
       0.07338214, 0.08114052, 0.07712293, 0.08661628, 0.0732367 ,
       0.07528019, 0.07036018, 0.07208157, 0.07300448, 0.07220578,
       0.08716893, 0.07356787, 0.0735023 ]), 'test_pearson_r': array([ 0.98087662,  0.99849484,  0.99352851,  0.98904634,  0.9994771 ,
        0.78969412,  0.98908333,  0.98636366,  0.99831589,  0.99121424,
        0.91909815,  0.99731672,  0.9729599 ,  0.9375864 ,  0.96800843,
        0.99563252,  0.98904911,  0.9667328 ,  0.85030811,  0.9955727 ,
        0.98972697,  0.9973808 ,  0.90212226,  0.99624089, -0.48038981,
        0.99632931,  0.99425758,  0.98334558,  0.99076387,  0.75625924,
        0.94189453,  0.9723253 ,  0.99640599,  0.9992049 ,  0.77711648,
        0.95392501,  0.99981529,  0.9889811 ,  0.99869633,  0.62911088,
        0.9666605 ,  0.98958472,  0.99849373]), 'test_spearman_r': array([1.        , 0.94285714, 1.        , 0.88571429, 1.        ,
       0.82857143, 0.94285714, 0.94285714, 1.        , 1.        ,
       0.88571429, 1.        , 0.94285714, 0.840668  , 0.82857143,
       0.94285714, 1.        , 1.        , 0.88571429, 0.94285714,
       1.        , 1.        , 0.88571429, 1.        , 0.02857143,
       0.98561076, 1.        , 0.94285714, 0.94285714, 0.71428571,
       0.94285714, 0.88571429, 0.82857143, 1.        , 0.65714286,
       0.88571429, 1.        , 0.94285714, 1.        , 0.82857143,
       0.88571429, 0.81167945, 1.        ]), 'test_rmse': array([-0.11149055, -0.05732618, -0.19748527, -0.11332591, -0.02410126,
       -0.39038474, -0.11894826, -0.13656778, -0.0776292 , -0.05979261,
       -0.19732731, -0.06182308, -0.16485583, -0.11172529, -0.16810163,
       -0.08149846, -0.09225267, -0.14186727, -0.21890525, -0.05443805,
       -0.10841968, -0.04134918, -0.17797664, -0.08297544, -0.65068155,
       -0.07283425, -0.08174753, -0.13567195, -0.09456154, -0.18806738,
       -0.1974754 , -0.14481743, -0.07069626, -0.04620869, -0.4584782 ,
       -0.17971951, -0.03486871, -0.13137318, -0.04362628, -0.60256148,
       -0.08873833, -0.10357368, -0.03766819]), 'test_mae': array([-0.07824896, -0.04620896, -0.11017591, -0.07049803, -0.01925199,
       -0.18209535, -0.10405638, -0.1124385 , -0.06242413, -0.05350277,
       -0.11691202, -0.04422748, -0.09488071, -0.0805063 , -0.12522847,
       -0.06019865, -0.06045598, -0.11604226, -0.13571282, -0.03757225,
       -0.07847589, -0.03303617, -0.12471145, -0.06025305, -0.33092433,
       -0.06583913, -0.05906674, -0.0812243 , -0.06402733, -0.14775777,
       -0.11538086, -0.08002114, -0.061025  , -0.03805461, -0.21749043,
       -0.11159755, -0.02891215, -0.10770502, -0.03597359, -0.30942277,
       -0.06664882, -0.08276646, -0.02780091]), 'test_r2': array([ 0.95274172,  0.99099585,  0.93538855,  0.96414037,  0.99802586,
        0.38391559,  0.9734049 ,  0.92584946,  0.99295549,  0.98026338,
        0.78794474,  0.98415828,  0.93161197,  0.82113913,  0.89381144,
        0.9894842 ,  0.97348925,  0.93093201,  0.66526942,  0.99017617,
        0.92730554,  0.99444664,  0.79170636,  0.96894891, -4.23658382,
        0.9878092 ,  0.98046996,  0.96234458,  0.98121252,  0.43624603,
        0.81634063,  0.91710089,  0.99243758,  0.99263984,  0.50094975,
        0.89986644,  0.99770682,  0.96715131,  0.99110149,  0.25602681,
        0.92265173,  0.9728977 ,  0.99575729]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04786776304179686, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 125, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([0.82023406, 1.67670655, 1.32677484, 1.37787437, 0.54802871,
       1.48299813, 1.4375205 , 1.6357317 , 0.56200767, 1.47607708,
       0.54581404, 1.66972351, 1.58379745, 1.30012321, 1.18460274,
       1.08839345, 0.65770626, 1.20456815, 1.7579143 , 1.57164741,
       0.68573928, 0.56090379, 0.5464747 , 0.55274057, 0.60545254,
       0.56508136, 1.22909498, 0.55788732, 0.72717786, 1.19865203,
       1.17689133, 0.95577526, 0.74349165, 0.79576492, 1.09507513,
       1.10476589, 0.60759211, 0.56407118, 0.93391252, 0.97652698,
       0.75569844, 0.93539381, 0.78674054]), 'score_time': array([0.2517066 , 0.23599529, 0.2922194 , 0.25887036, 0.07415771,
       0.10560465, 0.16695571, 0.07649016, 0.0770905 , 0.26042318,
       0.07920814, 0.24277639, 0.47201419, 0.23718977, 0.25325489,
       0.17878389, 0.08058548, 0.15832901, 0.24805403, 0.16000605,
       0.16211247, 0.07640219, 0.075068  , 0.07569098, 0.15974212,
       0.14441299, 0.07403541, 0.07852077, 0.07690048, 0.07329154,
       0.08088279, 0.07937574, 0.08178163, 0.08616304, 0.07282257,
       0.07250023, 0.07339358, 0.07542753, 0.07121825, 0.0820024 ,
       0.07550716, 0.0727694 , 0.08576345]), 'test_pearson_r': array([0.99257328, 0.9982608 , 0.99571976, 0.99811185, 0.99886934,
       0.97735259, 0.97501236, 0.95364997, 0.99707037, 0.99982146,
       0.99807532, 0.29692606, 0.99244294, 0.92801928, 0.98192616,
       0.99599644, 0.99827369, 0.98827898, 0.99884728, 0.98456205,
       0.98445762, 0.99688168, 0.9937344 , 0.93664399, 0.98361177,
       0.46574399, 0.96552943, 0.98807318, 0.98892317, 0.98889364,
       0.90755726, 0.99805515, 0.98883102, 0.98253126, 0.76862515,
       0.99521821, 0.96459801, 0.95848215, 0.99288188, 0.91481482,
       0.99661109, 0.97746599, 0.9902333 ]), 'test_spearman_r': array([0.96428571, 0.92763366, 1.        , 1.        , 1.        ,
       0.94285714, 1.        , 0.94285714, 1.        , 0.94112395,
       1.        , 0.5       , 1.        , 0.94285714, 0.94285714,
       1.        , 1.        , 0.82857143, 1.        , 0.94285714,
       0.82857143, 1.        , 1.        , 0.77142857, 0.92763366,
       0.6       , 0.82857143, 1.        , 0.94285714, 1.        ,
       0.65714286, 1.        , 0.94285714, 0.88571429, 0.65714286,
       1.        , 0.82857143, 1.        , 0.88571429, 0.94285714,
       1.        , 1.        , 1.        ]), 'test_rmse': array([-0.06099104, -0.07916483, -0.06881562, -0.06008947, -0.02396897,
       -0.19658239, -0.12755831, -0.19667755, -0.06982086, -0.02103582,
       -0.03861362, -0.91502548, -0.11991675, -0.19293854, -0.09677345,
       -0.06257386, -0.11269346, -0.21921177, -0.04714844, -0.12633365,
       -0.11508164, -0.03983914, -0.08625939, -0.15687887, -0.13330908,
       -0.71118406, -0.15090461, -0.06823777, -0.07594055, -0.10997564,
       -0.24338367, -0.03748024, -0.06268198, -0.08315345, -0.48370359,
       -0.08427153, -0.2304274 , -0.14939136, -0.08727271, -0.18146449,
       -0.07710396, -0.1562711 , -0.1048942 ]), 'test_mae': array([-0.0468248 , -0.06784585, -0.05783818, -0.04317105, -0.01579559,
       -0.13077807, -0.07993477, -0.13559754, -0.04754296, -0.01703594,
       -0.02857313, -0.5356809 , -0.0924896 , -0.13320791, -0.07309316,
       -0.04795866, -0.09926911, -0.157282  , -0.03138133, -0.09689268,
       -0.06867094, -0.03560735, -0.05843919, -0.11720564, -0.07533451,
       -0.43581246, -0.11694678, -0.05049204, -0.05949751, -0.07975299,
       -0.14550368, -0.02887647, -0.04754455, -0.06735932, -0.2980248 ,
       -0.06145773, -0.12846011, -0.09505674, -0.06363142, -0.11296806,
       -0.06453591, -0.09344157, -0.08405765]), 'test_r2': array([ 0.98255194,  0.9894881 ,  0.98738785,  0.98548907,  0.99748577,
        0.82492017,  0.94535504,  0.84205335,  0.98903372,  0.98650723,
        0.99361524, -1.93305995,  0.9003143 ,  0.81853358,  0.94343355,
        0.99198806,  0.98458301,  0.91276802,  0.99578555,  0.95763175,
        0.95959162,  0.99337006,  0.97708579,  0.85406561,  0.95198931,
       -0.55447104,  0.88188297,  0.9653455 ,  0.97572926,  0.97163806,
        0.80904045,  0.99443961,  0.97625159,  0.89604469,  0.40913114,
        0.98376165,  0.91169828,  0.89462007,  0.97790512,  0.81064505,
        0.99126106,  0.92741402,  0.97248558]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 234, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.1832068 , 2.45852256, 2.5870254 , 2.09550691, 2.06163502,
       1.04602361, 2.31530499, 1.02111483, 1.01145959, 1.00423265,
       2.41529584, 2.64090967, 3.30719042, 2.89143252, 2.38315988,
       2.36329818, 3.12452841, 1.53748512, 2.52646661, 3.06687999,
       1.02626896, 1.36284447, 1.36875653, 1.18994975, 1.11933422,
       2.33515787, 1.75274706, 1.88556743, 1.08796549, 1.92354894,
       1.69502497, 0.96452641, 0.99262905, 1.85861826, 1.97273707,
       1.7005589 , 1.76153255, 1.76807141, 1.85496926, 1.70418501,
       0.93595219, 1.64192963, 1.21945548]), 'score_time': array([0.25109649, 0.16032124, 0.17147636, 0.25775528, 0.16670084,
       0.07670426, 0.16754293, 0.07473063, 0.07850957, 0.07891583,
       0.19834781, 0.25100899, 0.22134852, 0.15819597, 0.25200272,
       0.2020154 , 0.26061606, 0.09176373, 0.17205143, 0.25351739,
       0.2090261 , 0.0724597 , 0.07639122, 0.07826805, 0.07616568,
       0.07633066, 0.07315016, 0.07526183, 0.07802558, 0.07261395,
       0.08285308, 0.07957006, 0.0854001 , 0.0753355 , 0.07288814,
       0.08503771, 0.07369947, 0.07561803, 0.0751164 , 0.08521175,
       0.07588959, 0.07423282, 0.07587075]), 'test_pearson_r': array([ 0.9789909 ,  0.99631579,  0.98098657,  0.7060946 ,  0.97233756,
        0.99330218,  0.99843974,  0.92479514,  0.96151549,  0.99021659,
        0.9883573 ,  0.95664119,  0.96759727,  0.99847793,  0.92036881,
        0.96706797,  0.92618274,  0.99809053,  0.94714711,  0.69008493,
        0.9506281 ,  0.99644233,  0.89776545,  0.82383859,  0.48663955,
        0.97560566,  0.99593816,  0.99863981,  0.84003096,  0.99672426,
        0.99297311,  0.99419185,  0.99966666,  0.54680084,  0.95799687,
        0.99583423,  0.98371941,  0.98784479,  0.98964099, -0.67340405,
        0.97732328,  0.99832164,  0.99705111]), 'test_spearman_r': array([0.75      , 0.98561076, 1.        , 0.40583972, 1.        ,
       0.88571429, 1.        , 0.88571429, 0.98561076, 1.        ,
       1.        , 1.        , 0.94285714, 0.94285714, 0.94285714,
       1.        , 0.94285714, 1.        , 0.94285714, 0.82857143,
       0.77142857, 0.94285714, 0.71428571, 0.77142857, 0.57977104,
       0.88571429, 0.92763366, 1.        , 0.77142857, 0.92763366,
       0.77142857, 0.94285714, 1.        , 0.40583972, 0.94285714,
       1.        , 0.94285714, 0.82857143, 1.        , 0.14285714,
       1.        , 1.        , 1.        ]), 'test_rmse': array([-0.15493195, -0.05977397, -0.09293511, -0.45832076, -0.1171579 ,
       -0.09723272, -0.03678377, -0.07087493, -0.08164686, -0.08290589,
       -0.12668968, -0.17183638, -0.22391895, -0.04707518, -0.11717124,
       -0.15282231, -0.24295479, -0.08584272, -0.2005181 , -0.62785149,
       -0.13269343, -0.04910035, -0.19799376, -0.24167333, -0.16347081,
       -0.11548971, -0.06610581, -0.04700728, -0.24273975, -0.07413087,
       -0.07217177, -0.07197241, -0.05129518, -0.39432231, -0.16486259,
       -0.07219581, -0.10403756, -0.10901598, -0.07844355, -0.58792905,
       -0.08989453, -0.04187618, -0.06457883]), 'test_mae': array([-0.09467221, -0.05006341, -0.06834586, -0.19652804, -0.10100421,
       -0.07625029, -0.03186252, -0.0488435 , -0.0721457 , -0.0613729 ,
       -0.10371696, -0.10643044, -0.10823593, -0.03990358, -0.06261386,
       -0.11697612, -0.1669488 , -0.07106507, -0.12908378, -0.29410608,
       -0.08425216, -0.03675051, -0.17083177, -0.18663052, -0.08685794,
       -0.08193431, -0.04776504, -0.03007929, -0.1504561 , -0.0510279 ,
       -0.05582565, -0.0547126 , -0.03976548, -0.20790063, -0.12842087,
       -0.05668166, -0.08708001, -0.07618318, -0.06455774, -0.27344829,
       -0.06788988, -0.02945115, -0.06178667]), 'test_r2': array([ 0.94446624,  0.99113071,  0.94850877,  0.25501813,  0.93300296,
        0.97244353,  0.99585847,  0.83110787,  0.90757189,  0.96861125,
        0.94532075,  0.89910749,  0.90396919,  0.99401398,  0.71973961,
        0.92520749,  0.8430495 ,  0.98831676,  0.88427105,  0.31344339,
        0.87935289,  0.98883475,  0.78724647,  0.58625545, -0.42912948,
        0.94957632,  0.99095608,  0.99561242,  0.67966782,  0.9910171 ,
        0.98311074,  0.98363134,  0.99052361, -0.41140002,  0.91314381,
        0.98819919,  0.96507938,  0.96656929,  0.96659649, -2.39028265,
        0.93736976,  0.99549605,  0.97317371]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03770052924189587, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 549, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 220, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([ 6.01460886,  5.59735417, 11.93169332, 13.52964067, 11.54468083,
        5.59269571, 12.68832588, 13.04538012, 14.45394254, 14.0911715 ,
       11.76430655, 12.0305922 , 11.99972653,  7.46429586,  5.64004922,
        6.99235129, 13.71034646, 11.95222068, 13.22882724, 10.17718339,
        6.21149373,  9.60956573,  7.95976639,  6.12527585,  5.87955928,
        6.81506848,  9.54466867,  9.6330266 , 10.11554384,  5.54157043,
        8.82265449,  9.4269526 ,  9.42554212,  9.72644114,  5.78187871,
        7.82395983,  5.3868506 ,  8.19849277,  8.54032969,  7.99924183,
        5.20258236,  8.82447147,  7.25375414]), 'score_time': array([0.08054328, 0.08297873, 0.21330667, 0.18129134, 0.18430591,
       0.29531097, 0.18522525, 0.29039192, 0.20530653, 0.19443417,
       0.1681757 , 0.28539658, 0.16226721, 0.15635729, 0.13454413,
       0.08999681, 0.25253034, 0.17354965, 0.17486072, 0.18785501,
       0.11805248, 0.18356991, 0.08233309, 0.17326736, 0.08012128,
       0.17501569, 0.0807445 , 0.08111787, 0.07271838, 0.07443333,
       0.08443642, 0.07705212, 0.08011317, 0.07861161, 0.0790484 ,
       0.07961392, 0.07647729, 0.08597875, 0.07836652, 0.0790534 ,
       0.08802152, 0.08233619, 0.07455206]), 'test_pearson_r': array([0.99644531, 0.54311244, 0.98153327, 0.97006182, 0.99079747,
       0.98495702, 0.94937312, 0.998113  , 0.99884743, 0.99781375,
       0.98171304, 0.97771688, 0.99147159, 0.99604126, 0.95562508,
       0.9935727 , 0.9917702 , 0.98640921, 0.9973083 , 0.99915874,
       0.99336124, 0.98765275, 0.99743831, 0.91502197, 0.95030284,
       0.97382925, 0.97536518, 0.98187232, 0.98315812, 0.87336506,
       0.99228241, 0.99837792, 0.99064188, 0.95890084, 0.99935204,
       0.96855771, 0.53247213, 0.98808943, 0.99128183, 0.98945317,
       0.99015826, 0.37359729, 0.93326259]), 'test_spearman_r': array([1.        , 0.37142857, 0.98561076, 1.        , 1.        ,
       0.77142857, 0.94285714, 1.        , 1.        , 1.        ,
       0.82857143, 0.94285714, 0.98561076, 0.94285714, 0.94285714,
       1.        , 0.94285714, 1.        , 0.82857143, 1.        ,
       1.        , 0.94285714, 0.94285714, 0.94285714, 0.98561076,
       1.        , 1.        , 1.        , 0.94285714, 0.65714286,
       1.        , 1.        , 1.        , 1.        , 0.98561076,
       0.94285714, 0.6       , 0.94285714, 1.        , 1.        ,
       0.94285714, 0.37142857, 0.81167945]), 'test_rmse': array([-0.05279675, -0.48198359, -0.10844378, -0.09027879, -0.07702404,
       -0.13486083, -0.23767268, -0.05473627, -0.05067629, -0.0580146 ,
       -0.0976251 , -0.14405324, -0.08643022, -0.0819357 , -0.1242127 ,
       -0.06325369, -0.0714385 , -0.09127772, -0.06778746, -0.03265621,
       -0.06593583, -0.12957405, -0.04482049, -0.1361834 , -0.16121094,
       -0.26556185, -0.09897255, -0.08513585, -0.1166924 , -0.2715341 ,
       -0.11410089, -0.03768236, -0.07853718, -0.26042455, -0.02963056,
       -0.14953892, -0.61626282, -0.10110019, -0.10333426, -0.09324578,
       -0.10012746, -0.65241515, -0.33504718]), 'test_mae': array([-0.04432738, -0.2665758 , -0.07987698, -0.0864048 , -0.04582643,
       -0.10224362, -0.112206  , -0.0428826 , -0.04276592, -0.04227146,
       -0.07320183, -0.06777396, -0.07304769, -0.06690034, -0.08172331,
       -0.04212324, -0.05512417, -0.06784009, -0.05437636, -0.02238564,
       -0.05540603, -0.09438817, -0.03829549, -0.08392526, -0.12202544,
       -0.18320551, -0.07818267, -0.05988476, -0.08786896, -0.12972711,
       -0.08127177, -0.03505583, -0.05271471, -0.1627622 , -0.02278149,
       -0.10250955, -0.37363929, -0.08403861, -0.09058654, -0.06999931,
       -0.07880288, -0.3522123 , -0.18878106]), 'test_r2': array([ 0.98876474,  0.23171649,  0.88140522,  0.92108291,  0.97739588,
        0.8926992 ,  0.88300456,  0.99502116,  0.99221147,  0.99381028,
        0.94145591,  0.9447653 ,  0.9809714 ,  0.979193  ,  0.88640697,
        0.98334612,  0.9785891 ,  0.96825972,  0.99099273,  0.99792183,
        0.98649077,  0.94987885,  0.9925085 ,  0.81886665,  0.65618844,
        0.84422515,  0.90824947,  0.95954411,  0.95260564,  0.71776865,
        0.98291125,  0.99585533,  0.97327722,  0.8745869 ,  0.99808848,
        0.93255928,  0.08100095,  0.9581988 ,  0.96740087,  0.96672319,
        0.97708501, -0.31830652,  0.84275817]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0029277433369518636, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1642, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([3.2430656 , 1.90992451, 2.8684206 , 2.89525032, 2.76527143,
       1.1248033 , 1.12501621, 3.01350641, 1.34444499, 1.8017447 ,
       2.90056849, 3.23865271, 3.42220926, 1.72253895, 3.58626699,
       3.34813142, 2.32255769, 3.24803877, 1.80412889, 2.48280716,
       2.05542445, 1.64867902, 1.36349845, 1.27023625, 1.34494352,
       2.26489496, 2.45471978, 1.24470615, 1.95949149, 2.00535822,
       2.20838284, 2.10256863, 1.54402924, 2.07344842, 1.5442555 ,
       2.0354929 , 1.16109562, 1.21409798, 1.85907698, 1.64411712,
       1.35366702, 1.69705629, 1.79725122]), 'score_time': array([0.18433809, 0.25625229, 0.15181398, 0.23606157, 0.24033427,
       0.07823133, 0.07312012, 0.09254551, 0.26194835, 0.08518624,
       0.15358281, 0.23190451, 0.25207615, 0.11087155, 0.27316904,
       0.14619946, 0.07552814, 0.18375254, 0.07441854, 0.07308602,
       0.23097992, 0.2602129 , 0.08137751, 0.08248329, 0.07828236,
       0.15899777, 0.0885365 , 0.17547941, 0.12733912, 0.08244729,
       0.06821465, 0.06966829, 0.09450674, 0.07341361, 0.08287191,
       0.08855009, 0.07788181, 0.16930938, 0.0704627 , 0.06937647,
       0.07166624, 0.08030796, 0.07038665]), 'test_pearson_r': array([0.98209077, 0.99894206, 0.99696568, 0.98776673, 0.59526311,
       0.89819611, 0.9960196 , 0.99979923, 0.98856978, 0.95249697,
       0.96989778, 0.94943248, 0.86356395, 0.99891802, 0.95580908,
       0.30920727, 0.99609844, 0.97099937, 0.99738215, 0.84398796,
       0.96227158, 0.96807649, 0.93992153, 0.82652822, 0.78978156,
       0.965336  , 0.9937031 , 0.97005218, 0.99445117, 0.99550401,
       0.98872171, 0.99494382, 0.99942348, 0.98882333, 0.97039907,
       0.98692047, 0.99828854, 0.98857102, 0.95405873, 0.93903463,
       0.99860478, 0.9893379 , 0.99635651]), 'test_spearman_r': array([0.92857143, 0.94285714, 1.        , 0.98561076, 0.42857143,
       0.65714286, 0.94285714, 1.        , 0.98561076, 0.94285714,
       0.94285714, 0.94285714, 0.82857143, 1.        , 0.94285714,
       0.14285714, 1.        , 1.        , 1.        , 0.71428571,
       0.94285714, 0.94285714, 0.98561076, 0.77142857, 0.65714286,
       0.71428571, 0.94285714, 1.        , 1.        , 1.        ,
       0.94112395, 0.98561076, 1.        , 1.        , 0.94285714,
       0.94285714, 1.        , 0.77142857, 0.94285714, 0.82857143,
       1.        , 0.94285714, 0.94285714]), 'test_rmse': array([-0.09917906, -0.0399295 , -0.08504837, -0.09164042, -0.84725741,
       -0.29813789, -0.09424134, -0.02916584, -0.08732842, -0.16694508,
       -0.20338684, -0.14908648, -0.39632948, -0.0311702 , -0.13436651,
       -0.63110689, -0.06332277, -0.08115746, -0.05216806, -0.33236443,
       -0.17596547, -0.14175061, -0.23344415, -0.26656152, -0.45359777,
       -0.14396472, -0.0726521 , -0.15030083, -0.09098103, -0.06989398,
       -0.07801998, -0.10705822, -0.04912425, -0.10145263, -0.12064856,
       -0.07257926, -0.04336324, -0.07564122, -0.1981215 , -0.15518772,
       -0.05268173, -0.0756411 , -0.07102531]), 'test_mae': array([-0.07424351, -0.02958961, -0.06603531, -0.05709883, -0.3770733 ,
       -0.14710244, -0.06249029, -0.02442748, -0.05311169, -0.12960799,
       -0.11763811, -0.098244  , -0.19692792, -0.02086978, -0.10681489,
       -0.28661374, -0.05084681, -0.06480746, -0.03594958, -0.21660023,
       -0.09683001, -0.10992826, -0.16144433, -0.1867798 , -0.19917629,
       -0.12347831, -0.05348284, -0.07858188, -0.05207911, -0.05895979,
       -0.05702922, -0.08035639, -0.0429856 , -0.08529446, -0.09933681,
       -0.04970341, -0.0263204 , -0.06003056, -0.15912565, -0.12027264,
       -0.04150763, -0.06967244, -0.04363826]), 'test_r2': array([ 0.96252614,  0.99777171,  0.96654464,  0.94882147,  0.16884541,
        0.78516137,  0.96578945,  0.99863824,  0.97346192,  0.84943857,
        0.92505047,  0.86297438,  0.63983265,  0.99607643,  0.90634768,
       -1.0445386 ,  0.9913831 ,  0.93764591,  0.99388182,  0.48772843,
        0.90139735,  0.9213407 ,  0.88117644,  0.67518148,  0.54091395,
        0.89460455,  0.98049537,  0.93281891,  0.98428286,  0.98389378,
        0.96663064,  0.97702587,  0.99175545,  0.97316916,  0.93723236,
        0.95237032,  0.99574357,  0.95310742,  0.90632985,  0.81167432,
        0.99599214,  0.97307159,  0.98906963]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05617045774903145, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 710, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_pearson_r_mean': 0.9300823581675257, 'test_pearson_r_std': 0.18811038587431253, 'test_spearman_r_mean': 0.903716991910663, 'test_spearman_r_std': 0.16144272143729524, 'test_rmse_mean': 0.1502427272755521, 'test_rmse_std': 0.14639105760426033, 'test_mae_mean': 0.09680774334980673, 'test_mae_std': 0.07535791076321566, 'test_r2_mean': 0.8148775741109697, 'test_r2_std': 0.5259261171731048}}, 'CO_PBTTT-C14': {'cluster size (%)': 4, 6: {'test_mad': 0.6505321, 'test_ystd': 0.7559491, 'test_mae': 1.0697101237799644, 'test_rmse': 1.1977714632387093, 'test_r2': -4.817353541796655, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0642468786364765, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 51, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.65346706, 'test_ystd': 0.757366, 'test_mae': 1.0693499567534448, 'test_rmse': 1.203407126366956, 'test_r2': -4.872225065749182, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.003300055942924796, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1693, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.5932236, 'test_ystd': 0.69522655, 'test_mae': 1.0101840894301282, 'test_rmse': 1.1341296593380623, 'test_r2': -4.215584076652663, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0020160887940951387, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.64741457, 'test_ystd': 0.7535023, 'test_mae': 1.0648959102656366, 'test_rmse': 1.1924936816106835, 'test_r2': -4.766200079959833, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06488294260471365, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 174, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.67164296, 'test_ystd': 0.76972616, 'test_mae': 1.0923319520976067, 'test_rmse': 1.2171871892685335, 'test_r2': -5.00747926065513, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05913781436124809, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2125, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1123, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.66073126, 'test_ystd': 0.7596914, 'test_mae': 1.078957194330883, 'test_rmse': 1.204220453272361, 'test_r2': -4.880165275653345, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04218102786594297, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 199, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.64105797, 'test_ystd': 0.7447475, 'test_mae': 1.0547334077383996, 'test_rmse': 1.1893726109484184, 'test_r2': -4.736056244232324, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.002544674426476699, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_mad_mean': 0.6454385008130755, 'test_mad_std': 0.02317769086814205, 'test_ystd_mean': 0.7480298621313912, 'test_ystd_std': 0.02263218255591873, 'test_mae_mean': 1.0628803763422945, 'test_mae_std': 0.024088214191728536, 'test_rmse_mean': 1.1912260262919605, 'test_rmse_std': 0.024782183338851165, 'test_r2_mean': -4.756437649242733, 'test_r2_std': 0.23557867405657051}}, 'ID_PBTTT-C14': {'cluster size (%)': 4, 6: {'fit_time': array([15.81912398, 15.75824428, 15.12357354, 12.46461082, 16.61964035,
       16.24114132, 17.19745064,  9.3500936 , 13.40546799,  7.29921865,
       14.49099851, 16.84589314, 16.4964776 ,  7.29051661, 16.16401029,
       16.55315661, 16.49799442,  7.81991124, 16.10306311, 16.93123603,
        9.27884936,  8.78932905,  8.9853363 ,  8.16841412,  8.74218607,
        7.4169004 ]), 'score_time': array([0.1685605 , 0.1357038 , 0.19837999, 0.20949101, 0.07673717,
       0.07644439, 0.07796812, 0.09002256, 0.20244122, 0.14837146,
       0.2595799 , 0.07993674, 0.07996464, 0.08225775, 0.17860913,
       0.10723591, 0.10033035, 0.08751893, 0.17621136, 0.07647181,
       0.085325  , 0.28644443, 0.07671928, 0.07652879, 0.07591677,
       0.08541059]), 'test_pearson_r': array([0.99080103, 0.71504749, 0.99796883, 0.99841271, 0.99240881,
       0.99748185, 0.94625703, 0.98696152, 0.55304432, 0.97645602,
       0.994337  , 0.98728215, 0.56338989, 0.99544887, 0.94516686,
       0.87654825, 0.99260696, 0.99464686, 0.96624158, 0.99427575,
       0.95878004, 0.99141888, 0.9196769 , 0.97479163, 0.98273885,
       0.99133972]), 'test_spearman_r': array([1.        , 0.67272727, 0.98787879, 1.        , 0.95151515,
       1.        , 0.96363636, 0.96363636, 0.61212121, 0.97575758,
       1.        , 0.96363636, 0.5030303 , 0.98787879, 0.98480698,
       0.83030303, 0.97264887, 0.98787879, 0.92727273, 0.98787879,
       0.96363636, 0.89090909, 0.95151515, 0.94833265, 1.        ,
       0.9037736 ]), 'test_rmse': array([-0.07753322, -0.38710949, -0.05512366, -0.04597582, -0.0853443 ,
       -0.07589123, -0.20778448, -0.09465726, -0.52520617, -0.14060417,
       -0.05592948, -0.11670407, -0.47039954, -0.06569439, -0.17604487,
       -0.31200221, -0.07963762, -0.08055676, -0.16478252, -0.05631813,
       -0.22161066, -0.09087371, -0.25255106, -0.11243074, -0.11068419,
       -0.07649699]), 'test_mae': array([-0.05680215, -0.22261052, -0.03983974, -0.03720301, -0.0645219 ,
       -0.05878924, -0.12397726, -0.08362116, -0.25762249, -0.07350693,
       -0.04289756, -0.09255997, -0.23042897, -0.05214476, -0.07460656,
       -0.16034891, -0.05936871, -0.06303133, -0.11225467, -0.04156589,
       -0.14541871, -0.06803431, -0.13703535, -0.07446545, -0.08424007,
       -0.05813919]), 'test_r2': array([ 0.98048188,  0.31165876,  0.99276696,  0.99585447,  0.98064126,
        0.99015684,  0.8830266 ,  0.96850318, -0.07417686,  0.93966682,
        0.98854805,  0.97397874,  0.14335674,  0.9900784 ,  0.88052066,
        0.73987856,  0.97809398,  0.97151919,  0.93327608,  0.98856641,
        0.90278727,  0.97626045,  0.80129125,  0.9352927 ,  0.95867755,
        0.9632084 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0021563374205135397, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.32319617, 3.18380761, 2.36726594, 2.59832168, 2.60922837,
       2.20300198, 2.80603242, 3.36244226, 3.16119528, 1.2547884 ,
       3.32260489, 1.27705884, 2.69579554, 1.83353662, 1.25222135,
       2.92491889, 2.94343972, 2.86042881, 1.88750315, 2.94718814,
       1.74269533, 1.74174786, 1.48861313, 1.27958727, 1.49589849,
       1.59355783]), 'score_time': array([0.23832035, 0.07598329, 0.17151237, 0.1782887 , 0.08261323,
       0.16526008, 0.17489767, 0.08092308, 0.07650161, 0.1799891 ,
       0.07750607, 0.08633161, 0.18079567, 0.08790255, 0.16318059,
       0.15367055, 0.10896039, 0.07689881, 0.17543864, 0.10381413,
       0.09091258, 0.08200145, 0.07416391, 0.07924604, 0.07395053,
       0.08170223]), 'test_pearson_r': array([0.98981883, 0.98953155, 0.989215  , 0.65185641, 0.98087256,
       0.99894484, 0.89964532, 0.7113533 , 0.95831155, 0.88854982,
       0.96256634, 0.64057483, 0.99572861, 0.99523014, 0.96464455,
       0.97501777, 0.95165379, 0.98866311, 0.99233753, 0.99292029,
       0.99570948, 0.91966593, 0.99058744, 0.97732845, 0.97346438,
       0.96965467]), 'test_spearman_r': array([0.98787879, 0.96363636, 0.87878788, 0.63636364, 0.91185832,
       0.99696509, 0.68484848, 0.74545455, 0.93939394, 0.86322587,
       0.98787879, 0.64848485, 0.98787879, 0.98787879, 0.95151515,
       0.98787879, 0.87878788, 0.96049076, 1.        , 0.98787879,
       0.98787879, 0.93939394, 0.98787879, 1.        , 0.97575758,
       0.95      ]), 'test_rmse': array([-0.07367064, -0.08653231, -0.11287107, -0.50876163, -0.11512394,
       -0.04416447, -0.27079335, -0.48352259, -0.18978896, -0.32012533,
       -0.19107974, -0.68734322, -0.0664103 , -0.05655463, -0.15435587,
       -0.12766594, -0.20601841, -0.12441826, -0.07978358, -0.09970698,
       -0.06285993, -0.19463535, -0.10124095, -0.13503295, -0.12171567,
       -0.12953388]), 'test_mae': array([-0.04781528, -0.04723272, -0.08516585, -0.32766202, -0.08650427,
       -0.03286077, -0.1635586 , -0.17235632, -0.11666226, -0.16332935,
       -0.10999635, -0.24325298, -0.04712604, -0.05229925, -0.11046513,
       -0.08770661, -0.14427378, -0.08417281, -0.04914326, -0.07677555,
       -0.04758782, -0.1330415 , -0.07588499, -0.07088233, -0.08438685,
       -0.10200145]), 'test_r2': array([0.97746358, 0.97300332, 0.97478375, 0.101932  , 0.95475708,
       0.99607833, 0.7366593 , 0.401784  , 0.91541025, 0.73693548,
       0.91924584, 0.29141417, 0.98765011, 0.9869035 , 0.92214404,
       0.94251621, 0.90059339, 0.96940573, 0.97873252, 0.97103664,
       0.98821961, 0.80246886, 0.97618969, 0.94878497, 0.94118488,
       0.93853823]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03897794765782249, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 304, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([0.99418998, 0.88051367, 1.18472457, 1.38422251, 0.96133423,
       1.27273035, 0.52308655, 0.5118289 , 1.27508926, 0.86782074,
       1.2158618 , 1.30308867, 0.52145267, 1.20001698, 1.2705214 ,
       1.20275784, 1.12077641, 1.36050534, 1.3370223 , 1.04685593,
       0.50052381, 0.48370934, 0.49188375, 0.66761088, 0.54868865,
       0.63584304]), 'score_time': array([0.20697236, 0.16564727, 0.24409842, 0.07670617, 0.16177797,
       0.0791266 , 0.07555056, 0.07853484, 0.14018178, 0.18135834,
       0.17047286, 0.15611696, 0.07427835, 0.0787704 , 0.08923864,
       0.20871544, 0.16993284, 0.07361484, 0.07397723, 0.07914233,
       0.07958794, 0.07259798, 0.07293582, 0.07250333, 0.07605076,
       0.07714701]), 'test_pearson_r': array([0.98070362, 0.98212294, 0.9950917 , 0.8780193 , 0.98894281,
       0.99622573, 0.9680074 , 0.9833128 , 0.97027313, 0.99287829,
       0.92887417, 0.99438308, 0.98866661, 0.96746076, 0.38389377,
       0.99415491, 0.9885541 , 0.96691743, 0.96614953, 0.98636679,
       0.85163947, 0.97561911, 0.99149364, 0.66219285, 0.9877135 ,
       0.99633119]), 'test_spearman_r': array([0.98480698, 0.97575758, 0.98787879, 0.86666667, 0.97575758,
       1.        , 0.93939394, 0.93939394, 0.97264887, 1.        ,
       0.92727273, 0.96363636, 0.97575758, 0.95151515, 0.40606061,
       0.99696509, 0.94833265, 0.93939394, 0.96363636, 0.95151515,
       0.87878788, 0.94225359, 0.91185832, 0.74545455, 0.97575758,
       0.99582462]), 'test_rmse': array([-0.11571629, -0.1852488 , -0.08718825, -0.31430509, -0.11967676,
       -0.06264677, -0.16175696, -0.13497105, -0.16148961, -0.08639998,
       -0.24086391, -0.05233131, -0.08807741, -0.14457928, -0.49831474,
       -0.09434878, -0.10837877, -0.15484408, -0.14983223, -0.1277044 ,
       -0.35692864, -0.1429263 , -0.10091883, -0.48232674, -0.09509963,
       -0.06301898]), 'test_mae': array([-0.07221835, -0.09609216, -0.04569756, -0.15435738, -0.09765715,
       -0.05265079, -0.08961412, -0.07682112, -0.12026065, -0.05565079,
       -0.16374418, -0.03915852, -0.06136744, -0.09516629, -0.21203708,
       -0.07990123, -0.06333151, -0.11434532, -0.07374518, -0.08719494,
       -0.14399968, -0.08296159, -0.07540548, -0.20918476, -0.07549399,
       -0.03806518]), 'test_r2': array([ 0.95579635,  0.93328352,  0.98498755,  0.72382668,  0.9684266 ,
        0.99137767,  0.92799934,  0.95925884,  0.89807421,  0.98437615,
        0.83181949,  0.98813293,  0.95801696,  0.92762745, -0.53998938,
        0.97357251,  0.97543546,  0.92088222,  0.9173254 ,  0.96939689,
        0.69965003,  0.94587901,  0.97946207,  0.2807078 ,  0.9730614 ,
        0.99113015]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04786776304179686, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 125, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([0.54241157, 0.57844615, 1.4039495 , 1.47421122, 1.02329016,
       1.08405709, 0.54898   , 1.16503811, 1.46268487, 0.59428   ,
       1.15884709, 1.55087161, 1.28800392, 1.48935437, 1.49131465,
       1.36741686, 1.53808045, 1.41749859, 1.38528705, 1.27401066,
       0.53291965, 0.53799248, 0.52084661, 0.56578732, 0.75088429,
       0.51343513]), 'score_time': array([0.08220768, 0.08311915, 0.07579184, 0.08437991, 0.16828442,
       0.20169473, 0.07864475, 0.17039299, 0.07625866, 0.07867646,
       0.16612387, 0.07672358, 0.10908461, 0.07281184, 0.07562017,
       0.07710457, 0.0749135 , 0.07580447, 0.11902618, 0.08215761,
       0.07491422, 0.07585621, 0.07359028, 0.07901144, 0.08040404,
       0.07349992]), 'test_pearson_r': array([0.98344285, 0.99212742, 0.99773744, 0.96026275, 0.9336598 ,
       0.99697642, 0.19006631, 0.99312523, 0.94242595, 0.99121693,
       0.97162369, 0.99297852, 0.98168777, 0.99178083, 0.98007756,
       0.6213612 , 0.98543608, 0.99060805, 0.9525159 , 0.9935347 ,
       0.79996128, 0.98806067, 0.95990215, 0.96415045, 0.99705047,
       0.9653021 ]), 'test_spearman_r': array([0.98480698, 0.97575758, 1.        , 0.97575758, 0.83030303,
       0.98780442, 0.19452977, 0.99696509, 0.89090909, 0.98787879,
       0.91515152, 0.91515152, 0.96049076, 0.95151515, 0.84498871,
       0.66060606, 0.98787879, 0.98787879, 0.85454545, 0.97575758,
       0.89090909, 1.        , 0.98787879, 0.91515152, 0.98787879,
       0.95      ]), 'test_rmse': array([-0.0813539 , -0.08741799, -0.04422752, -0.1762332 , -0.20366164,
       -0.05314396, -0.71836659, -0.08797415, -0.14438465, -0.10359574,
       -0.21511794, -0.09454296, -0.12047857, -0.07040268, -0.09964366,
       -0.55582712, -0.09454165, -0.08740109, -0.18957066, -0.06395878,
       -0.36985693, -0.11978701, -0.21712176, -0.15013114, -0.05944139,
       -0.18306297]), 'test_mae': array([-0.05960778, -0.07249029, -0.02540495, -0.10142781, -0.12892062,
       -0.03253634, -0.34340073, -0.05716421, -0.09708311, -0.08164545,
       -0.15081377, -0.06281529, -0.0795796 , -0.04983933, -0.07191635,
       -0.30265277, -0.07058595, -0.06657495, -0.09862474, -0.04816295,
       -0.18592942, -0.08273456, -0.1257486 , -0.09650924, -0.04812834,
       -0.12216739]), 'test_r2': array([ 0.96545709,  0.98247361,  0.99264854,  0.90580978,  0.84532423,
        0.9914009 , -1.12006147,  0.96828931,  0.88442074,  0.97738623,
        0.93362747,  0.98265334,  0.95580216,  0.97968937,  0.96041586,
        0.17071763,  0.95812194,  0.97579423,  0.90243562,  0.98500042,
        0.56240982,  0.96530882,  0.90073328,  0.92127754,  0.99265641,
        0.92838465]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 234, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([2.12229228, 2.0328176 , 2.6878314 , 2.59983754, 2.6603384 ,
       2.18336964, 2.6831367 , 1.03841734, 2.47185516, 1.01489139,
       2.09239578, 2.51379538, 1.67969584, 2.45316958, 2.21886826,
       1.41932464, 1.82438803, 1.26478696, 2.5706923 , 2.65059948,
       1.23832822, 1.26681256, 1.13053298, 1.10120249, 1.28094745,
       1.16524291]), 'score_time': array([0.22506499, 0.24156785, 0.0731287 , 0.12382722, 0.08024526,
       0.17844605, 0.07557273, 0.08411503, 0.0773921 , 0.15926528,
       0.2068119 , 0.07535934, 0.08333731, 0.07541537, 0.17579174,
       0.09738326, 0.16141105, 0.07770181, 0.08280778, 0.0740099 ,
       0.07648134, 0.07641339, 0.07733369, 0.07300425, 0.07684064,
       0.07515359]), 'test_pearson_r': array([0.9793711 , 0.79689773, 0.98995112, 0.99113405, 0.87283299,
       0.98780114, 0.98914354, 0.96269327, 0.98474147, 0.93545263,
       0.99121936, 0.75568737, 0.98239961, 0.87330769, 0.87105993,
       0.99669161, 0.99717983, 0.96184699, 0.99450893, 0.99463025,
       0.79046521, 0.99544089, 0.97700193, 0.69380689, 0.99651274,
       0.99239979]), 'test_spearman_r': array([0.86666667, 0.74545455, 0.98480698, 0.93939394, 0.68292683,
       0.99696509, 0.97264887, 0.98787879, 0.96363636, 0.9030303 ,
       0.97575758, 0.86666667, 0.95151515, 0.62424242, 0.70121951,
       0.97264887, 0.99696509, 0.76596099, 0.92727273, 1.        ,
       0.7669289 , 0.96363636, 0.96363636, 0.73333333, 1.        ,
       0.98333333]), 'test_rmse': array([-0.13677621, -0.36235008, -0.09491572, -0.0845999 , -0.15854412,
       -0.08795466, -0.09789512, -0.21335137, -0.09983069, -0.20155881,
       -0.10244457, -0.496663  , -0.11209379, -0.2038281 , -0.19540078,
       -0.06707169, -0.05015775, -0.17751872, -0.06869237, -0.06388386,
       -0.33101349, -0.07145363, -0.13623953, -0.45029655, -0.07071144,
       -0.05783083]), 'test_mae': array([-0.08213416, -0.16231322, -0.06361356, -0.0652359 , -0.10311428,
       -0.06859954, -0.07000833, -0.11913761, -0.05365401, -0.13831723,
       -0.08529227, -0.23818265, -0.06861036, -0.15154721, -0.12367711,
       -0.04877414, -0.03782116, -0.10223356, -0.05428459, -0.04506382,
       -0.18697319, -0.053506  , -0.10072785, -0.17964731, -0.04847184,
       -0.05039737]), 'test_r2': array([0.95044834, 0.529644  , 0.97788975, 0.97311875, 0.70549316,
       0.97057531, 0.97038035, 0.91478939, 0.96880611, 0.87155963,
       0.97802282, 0.49663302, 0.9598448 , 0.72793926, 0.74353202,
       0.99287818, 0.99358247, 0.92286237, 0.98795148, 0.98175749,
       0.4542216 , 0.98353476, 0.94383008, 0.41851959, 0.99113402,
       0.97783048]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03770052924189587, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 549, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 220, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([ 5.04352164, 11.90105486, 13.17693353,  4.94540095, 12.09561658,
       12.84730005,  9.57354546, 12.69555473,  5.02278376, 12.33392   ,
       12.4162364 ,  6.05758929, 11.7601335 , 12.79067159, 12.56783748,
       12.65223074, 12.39182925, 12.71153092, 12.41899347, 13.07314777,
        5.23085213,  5.16258454,  5.38829064,  6.07177472,  5.00426316,
        4.8035686 ]), 'score_time': array([0.08158875, 0.18933511, 0.07941389, 0.0943656 , 0.08268237,
       0.07513499, 0.18847203, 0.09030175, 0.08902121, 0.08084178,
       0.08126402, 0.0851109 , 0.24947405, 0.0775609 , 0.08246732,
       0.08394718, 0.07574415, 0.12598515, 0.15509582, 0.07673573,
       0.08052468, 0.25733423, 0.07863235, 0.08902717, 0.08263373,
       0.07459617]), 'test_pearson_r': array([0.79070698, 0.88374517, 0.98306028, 0.95991413, 0.99839685,
       0.99808323, 0.97538481, 0.99275685, 0.97850815, 0.99625445,
       0.98326416, 0.99882308, 0.97133889, 0.9931586 , 0.91874487,
       0.96826503, 0.98979756, 0.92843158, 0.9938088 , 0.99126513,
       0.98560727, 0.79133873, 0.96298516, 0.98891441, 0.97518703,
       0.6489526 ]), 'test_spearman_r': array([0.81818182, 0.92401643, 0.95151515, 0.80606061, 0.99696509,
       0.98787879, 0.95151515, 0.99696509, 0.97575758, 0.98787879,
       0.92727273, 0.93617454, 0.93939394, 0.93939394, 0.86322587,
       0.96363636, 0.96363636, 0.83030303, 0.98480698, 1.        ,
       0.99696509, 0.80606061, 0.98787879, 0.99696509, 0.97575758,
       0.47699162]), 'test_rmse': array([-0.35457729, -0.16530639, -0.08398525, -0.17836872, -0.05198558,
       -0.06054133, -0.13033152, -0.06962561, -0.11900276, -0.05396033,
       -0.10282178, -0.04183616, -0.13483841, -0.05959224, -0.1344352 ,
       -0.22942033, -0.0842946 , -0.19843531, -0.08914605, -0.07923331,
       -0.13890317, -0.48166285, -0.16851638, -0.10775186, -0.15342495,
       -0.67047531]), 'test_mae': array([-0.15007854, -0.10949496, -0.06677835, -0.11012725, -0.04250174,
       -0.05019675, -0.07999246, -0.05255899, -0.08259334, -0.03828912,
       -0.08200272, -0.02710549, -0.10002582, -0.04999803, -0.09101785,
       -0.15847064, -0.06226765, -0.11214077, -0.05671412, -0.06063121,
       -0.0810094 , -0.24978429, -0.11726886, -0.08702472, -0.09588993,
       -0.33157913]), 'test_r2': array([0.60389268, 0.76546611, 0.96258575, 0.8920433 , 0.99518026,
       0.99211696, 0.94905888, 0.98317625, 0.94730262, 0.98968752,
       0.96528421, 0.99689536, 0.93155553, 0.98628629, 0.77972642,
       0.8723901 , 0.97679991, 0.85456396, 0.98650798, 0.97650603,
       0.96536735, 0.53031118, 0.90752271, 0.96414177, 0.94067496,
       0.24054871]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0029277433369518636, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1642, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.93974638, 2.51592922, 2.48696065, 1.17529249, 2.04987288,
       2.73544955, 2.60871744, 2.71124005, 2.92525339, 2.46195674,
       2.80578351, 2.34675026, 2.90338635, 2.79567742, 1.29710364,
       1.11246037, 2.36123013, 2.74830651, 2.41177487, 2.8017776 ,
       1.16786289, 1.14624858, 1.11756945, 1.25336027, 1.35631132,
       1.12267447]), 'score_time': array([0.17781377, 0.09965086, 0.17823052, 0.084656  , 0.15396428,
       0.07868886, 0.07297897, 0.07464576, 0.07009482, 0.08393598,
       0.07309246, 0.1948266 , 0.07354617, 0.07806516, 0.08328009,
       0.07630014, 0.15886354, 0.07438183, 0.17032051, 0.07333374,
       0.07797456, 0.15730119, 0.07385731, 0.07174397, 0.07608914,
       0.07643819]), 'test_pearson_r': array([0.99084342, 0.9955299 , 0.62010033, 0.91923355, 0.99125609,
       0.95637123, 0.95524937, 0.87178053, 0.99173449, 0.68312876,
       0.99096152, 0.90392906, 0.95528627, 0.91652298, 0.79794145,
       0.97871793, 0.98239833, 0.99348684, 0.99149108, 0.99726873,
       0.98118479, 0.996428  , 0.99727692, 0.95022881, 0.99800256,
       0.99354495]), 'test_spearman_r': array([0.98787879, 0.97575758, 0.54605338, 0.74545455, 0.98480698,
       0.97264887, 0.96363636, 0.7781191 , 0.98787879, 0.66060606,
       1.        , 0.9030303 , 0.92727273, 0.79027721, 0.78181818,
       0.92727273, 0.99696509, 0.99696509, 0.97553356, 1.        ,
       0.97575758, 0.98787879, 0.95151515, 0.95151515, 1.        ,
       0.95      ]), 'test_rmse': array([-0.10975315, -0.09344805, -0.65853498, -0.22677213, -0.10364745,
       -0.16912054, -0.1844868 , -0.3228839 , -0.07308301, -0.50213479,
       -0.07755869, -0.26425475, -0.16318496, -0.26747261, -0.36881349,
       -0.12050379, -0.12015248, -0.08376819, -0.08999507, -0.05931569,
       -0.15508569, -0.06421198, -0.0394684 , -0.18160418, -0.0686198 ,
       -0.07316838]), 'test_mae': array([-0.07340541, -0.06627176, -0.23668107, -0.09380298, -0.07839861,
       -0.10985632, -0.1152747 , -0.16240287, -0.04381746, -0.20078734,
       -0.06355407, -0.14814615, -0.09450939, -0.17765648, -0.17806479,
       -0.09313935, -0.06276557, -0.06143394, -0.06587983, -0.0505188 ,
       -0.12554062, -0.04595928, -0.03503442, -0.14218223, -0.05872172,
       -0.05002754]), 'test_r2': array([0.97659368, 0.96363877, 0.23711854, 0.8336781 , 0.98143374,
       0.88820333, 0.91076395, 0.69004923, 0.9790184 , 0.29284568,
       0.97997192, 0.74211237, 0.89810125, 0.83055524, 0.61106492,
       0.93177911, 0.95828655, 0.9773637 , 0.97515591, 0.99049283,
       0.94747755, 0.98862146, 0.99408867, 0.89286115, 0.99153897,
       0.9837838 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05617045774903145, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 710, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_pearson_r_mean': 0.9368747646709604, 'test_pearson_r_std': 0.11550794925000404, 'test_spearman_r_mean': 0.9144283230757583, 'test_spearman_r_std': 0.1235187003528248, 'test_rmse_mean': 0.16801861739799695, 'test_rmse_std': 0.13752353128446576, 'test_mae_mean': 0.09943120327732169, 'test_mae_std': 0.06003532427295963, 'test_r2_mean': 0.8555187667784099, 'test_r2_std': 0.2697916082761324}}, 'CO_PFO': {'cluster size (%)': 21, 6: {'test_mad': 0.21687433, 'test_ystd': 0.24908051, 'test_mae': 0.7620465744402888, 'test_rmse': 0.8643758908947753, 'test_r2': -0.47895732736003405, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07580815375356535, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.21970281, 'test_ystd': 0.25293776, 'test_mae': 0.7427270732522225, 'test_rmse': 0.8428906239733696, 'test_r2': -0.4063479973817514, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 956, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.22236612, 'test_ystd': 0.2564175, 'test_mae': 0.7512123286702229, 'test_rmse': 0.8528611843031868, 'test_r2': -0.43981618599010597, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.07352481813242628, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 1264, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1246, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.20695117, 'test_ystd': 0.24394812, 'test_mae': 0.7577150971779332, 'test_rmse': 0.8608413362227465, 'test_r2': -0.4668867277854525, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0654128725506301, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 394, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.20953168, 'test_ystd': 0.24276173, 'test_mae': 0.7624150492505005, 'test_rmse': 0.8631357465367969, 'test_r2': -0.4747165685133916, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06852541996542266, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 217, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.21272363, 'test_ystd': 0.24976227, 'test_mae': 0.7501014294425862, 'test_rmse': 0.8558414724895148, 'test_r2': -0.44989652433169924, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06924331430165374, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 156, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.20444204, 'test_ystd': 0.23562539, 'test_mae': 0.7663966196532818, 'test_rmse': 0.8670891683805609, 'test_r2': -0.48825679947225287, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03425519828017914, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_mad_mean': 0.2132273976291929, 'test_mad_std': 0.006201763286074802, 'test_ystd_mean': 0.2472190409898758, 'test_ystd_std': 0.006461182158785167, 'test_mae_mean': 0.7560877388410051, 'test_mae_std': 0.007769692097210053, 'test_rmse_mean': 0.858147917542993, 'test_rmse_std': 0.007717520003860921, 'test_r2_mean': -0.457839732976384, 'test_r2_std': 0.026123793379304372}}, 'ID_PFO': {'cluster size (%)': 20, 6: {'fit_time': array([5.61682606, 5.53684473, 5.38199353, 5.70693684, 5.45418453]), 'score_time': array([0.0799253 , 0.07830119, 0.07738781, 0.07708097, 0.07868385]), 'test_pearson_r': array([0.93620358, 0.92121523, 0.90282278, 0.96377246, 0.98308191]), 'test_spearman_r': array([0.92283881, 0.91196688, 0.92145104, 0.9546707 , 0.97691995]), 'test_rmse': array([-0.23606448, -0.24722179, -0.28345648, -0.16836046, -0.10261777]), 'test_mae': array([-0.10823382, -0.11227789, -0.11181028, -0.10002554, -0.07214602]), 'test_r2': array([0.87232792, 0.84726281, 0.79604828, 0.92782172, 0.96549917]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0021563374205135397, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([0.98618674, 1.0618012 , 0.97668576, 1.01497865, 1.0481987 ]), 'score_time': array([0.07399201, 0.07531285, 0.07573366, 0.07328939, 0.07272983]), 'test_pearson_r': array([0.9547014 , 0.93335995, 0.84006612, 0.97286884, 0.93003637]), 'test_spearman_r': array([0.93594809, 0.92289957, 0.87602743, 0.96031257, 0.9143077 ]), 'test_rmse': array([-0.19302137, -0.24672575, -0.35946007, -0.1508819 , -0.21063291]), 'test_mae': array([-0.09681393, -0.1079766 , -0.1359328 , -0.09829637, -0.11502166]), 'test_r2': array([0.90529   , 0.85600112, 0.66844961, 0.94508597, 0.86142744]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03897794765782249, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 304, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([0.40606856, 0.42505598, 0.41478777, 0.43806267, 0.44189286]), 'score_time': array([0.11562371, 0.07147932, 0.07268977, 0.0738287 , 0.11730504]), 'test_pearson_r': array([0.96385362, 0.98592741, 0.87817498, 0.98275681, 0.89930951]), 'test_spearman_r': array([0.95950303, 0.97967724, 0.88304231, 0.98050938, 0.90207927]), 'test_rmse': array([-0.17835773, -0.11217495, -0.25801458, -0.11989963, -0.28999783]), 'test_mae': array([-0.09912145, -0.07531639, -0.11453359, -0.08017346, -0.12874343]), 'test_r2': array([0.92833624, 0.97079652, 0.73179275, 0.9651092 , 0.79825194]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04786776304179686, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 125, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([0.48496962, 0.48006749, 0.48025537, 0.4773159 , 0.46127534]), 'score_time': array([0.07557845, 0.0739677 , 0.072927  , 0.07304907, 0.07361054]), 'test_pearson_r': array([0.98292595, 0.8560493 , 0.958999  , 0.8041141 , 0.95965948]), 'test_spearman_r': array([0.9770088 , 0.86192777, 0.94991462, 0.84203561, 0.95992941]), 'test_rmse': array([-0.1143494 , -0.33021151, -0.18663322, -0.38564738, -0.19630968]), 'test_mae': array([-0.06845828, -0.1225182 , -0.10017538, -0.16567982, -0.11032717]), 'test_r2': array([0.96610464, 0.6898362 , 0.91125161, 0.58018416, 0.91807552]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 234, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([0.83787632, 0.79630256, 0.77065158, 0.86170673, 0.83153105]), 'score_time': array([0.07293463, 0.07292867, 0.07344532, 0.07634091, 0.07329845]), 'test_pearson_r': array([0.94722297, 0.96354969, 0.82640913, 0.97851768, 0.8913071 ]), 'test_spearman_r': array([0.89390973, 0.95628415, 0.84795049, 0.97449144, 0.91422495]), 'test_rmse': array([-0.19662424, -0.16746414, -0.33047777, -0.13747961, -0.30516246]), 'test_mae': array([-0.10292843, -0.097073  , -0.17747379, -0.08666185, -0.11614618]), 'test_r2': array([0.89377448, 0.92813793, 0.66171344, 0.95633741, 0.78204756]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03770052924189587, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 549, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 220, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([4.21150446, 4.58689356, 4.44275904, 4.88263464, 4.55971098]), 'score_time': array([0.0793407 , 0.12854385, 0.07970619, 0.08421731, 0.12987304]), 'test_pearson_r': array([0.92210391, 0.98909264, 0.92987839, 0.99018352, 0.67196914]), 'test_spearman_r': array([0.91096219, 0.98396571, 0.92895132, 0.98285549, 0.70653757]), 'test_rmse': array([-0.22799638, -0.08510165, -0.25962955, -0.0921204 , -0.5611488 ]), 'test_mae': array([-0.10837121, -0.05949257, -0.13595585, -0.06139564, -0.25890484]), 'test_r2': array([0.84239073, 0.97810311, 0.8338101 , 0.97914047, 0.33882131]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0029277433369518636, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1642, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([0.93962407, 1.00876927, 0.99127126, 0.98845768, 0.99514341]), 'score_time': array([0.07158208, 0.07112122, 0.07373977, 0.07141376, 0.07668066]), 'test_pearson_r': array([0.82795226, 0.89739975, 0.91948224, 0.98872005, 0.98613032]), 'test_spearman_r': array([0.84162656, 0.88947247, 0.91565803, 0.98652723, 0.98160592]), 'test_rmse': array([-0.40370947, -0.27101055, -0.24023269, -0.09887834, -0.1027894 ]), 'test_mae': array([-0.13975313, -0.11881196, -0.12424619, -0.07018041, -0.06817104]), 'test_r2': array([0.63192513, 0.77235373, 0.83297283, 0.9764549 , 0.97200776]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05617045774903145, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 710, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_pearson_r_mean': 0.9239947887370377, 'test_pearson_r_std': 0.06730884130532377, 'test_spearman_r_mean': 0.9230855258916112, 'test_spearman_r_std': 0.056813838237237894, 'test_rmse_mean': 0.2242818383206393, 'test_rmse_std': 0.10365385107394931, 'test_mae_mean': 0.10997566246323605, 'test_mae_std': 0.03696890935580316, 'test_r2_mean': 0.8424269638062842, 'test_r2_std': 0.1389596317024757}}, 'CO_PPFOH': {'cluster size (%)': 4, 6: {'test_mad': 0.40008494, 'test_ystd': 0.450349, 'test_mae': 0.5732080421065778, 'test_rmse': 0.5897899791628289, 'test_r2': -2.0932378643803986, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.08646479880356304, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2326, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 847, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.40176475, 'test_ystd': 0.45179918, 'test_mae': 0.5750069265417114, 'test_rmse': 0.5914589725541473, 'test_r2': -2.110769183374209, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.034769668589043685, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 2287, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1119, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.40089843, 'test_ystd': 0.4500769, 'test_mae': 0.5737471552813631, 'test_rmse': 0.5907008807137996, 'test_r2': -2.102799949587418, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.40081406, 'test_ystd': 0.4499228, 'test_mae': 0.573861991757429, 'test_rmse': 0.5904388250747137, 'test_r2': -2.100047538378768, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06774188478195048, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 446, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.40304568, 'test_ystd': 0.45304492, 'test_mae': 0.5757579559030894, 'test_rmse': 0.5925882302037601, 'test_r2': -2.1226591489235527, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.38226664, 'test_ystd': 0.42992353, 'test_mae': 0.5545428150835399, 'test_rmse': 0.5726850139991896, 'test_r2': -1.916420728201929, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.06232659688981066, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 50, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.39669725, 'test_ystd': 0.44557363, 'test_mae': 0.569813763493574, 'test_rmse': 0.586458544068792, 'test_r2': -2.058392180970607, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0022546124862567857, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1929, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_mad_mean': 0.39793882199696134, 'test_mad_std': 0.006649474710520987, 'test_ystd_mean': 0.4472414255142212, 'test_ystd_std': 0.007387551251675287, 'test_mae_mean': 0.5708483785953263, 'test_mae_std': 0.00688053239906002, 'test_rmse_mean': 0.5877314922538901, 'test_rmse_std': 0.00639065394637755, 'test_r2_mean': -2.0720466562595545, 'test_r2_std': 0.06616625645254402}}, 'ID_PPFOH': {'cluster size (%)': 4, 6: {'fit_time': array([13.32304907, 15.11156273, 15.4214046 , 15.49233842, 15.81073761,
       15.67935681,  8.26867962, 14.73632455, 15.55934596, 13.64050174,
        7.83678603, 15.30854964, 15.49444914, 15.81483626,  8.40182161,
       16.29496622, 15.7066164 , 16.48809981, 13.07547855, 15.96587133,
        6.86948013,  7.386693  ,  7.47218609,  7.01543021]), 'score_time': array([0.07843304, 0.16903377, 0.17908835, 0.08370662, 0.0765357 ,
       0.07555723, 0.09157991, 0.18960214, 0.08224177, 0.18623137,
       0.09180117, 0.15999556, 0.07433248, 0.07624817, 0.08389854,
       0.07321787, 0.07545757, 0.07798982, 0.20711803, 0.07231164,
       0.09280491, 0.08778787, 0.09200692, 0.07310438]), 'test_pearson_r': array([0.98959477, 0.82847326, 0.99757311, 0.99515863, 0.99174308,
       0.95485996, 0.99102396, 0.53697349, 0.93652117, 0.99492977,
       0.98590643, 0.70032706, 0.99587566, 0.95540502, 0.89404042,
       0.99101424, 0.97642787, 0.98810547, 0.96815755, 0.98083541,
       0.92355512, 0.97162777, 0.98487833, 0.98170704]), 'test_spearman_r': array([0.99090909, 0.74545455, 0.99090909, 0.99090909, 0.94545455,
       0.89090909, 0.97272727, 0.52727273, 0.93636364, 1.        ,
       0.95454545, 0.62727273, 0.96363636, 0.92483156, 0.89090909,
       1.        , 0.93636364, 0.97272727, 0.96363636, 0.89090909,
       0.97575758, 0.92401643, 1.        , 0.91793737]), 'test_rmse': array([-0.08230865, -0.37276184, -0.05406191, -0.07212179, -0.11676275,
       -0.21103855, -0.08751789, -0.49992914, -0.22454604, -0.05382584,
       -0.11754488, -0.45134634, -0.05822544, -0.1739197 , -0.29863714,
       -0.0780421 , -0.14294736, -0.08302588, -0.19376811, -0.1281842 ,
       -0.2530894 , -0.11320553, -0.10013256, -0.08096708]), 'test_mae': array([-0.05709309, -0.20954951, -0.03778078, -0.05208503, -0.08596841,
       -0.11353194, -0.07049853, -0.23937508, -0.11350362, -0.04043059,
       -0.08857249, -0.22750766, -0.04084013, -0.08975781, -0.14647012,
       -0.05324047, -0.09911582, -0.05644755, -0.12002402, -0.1003554 ,
       -0.13897756, -0.07094377, -0.07826589, -0.06378241]), 'test_r2': array([ 0.97799143,  0.61161275,  0.99107106,  0.98924846,  0.97569964,
        0.88771607,  0.9727039 , -0.01759969,  0.85385563,  0.98972156,
        0.97131659,  0.3634421 ,  0.99152576,  0.89638476,  0.78288509,
        0.98154194,  0.95226079,  0.97485082,  0.92025338,  0.95364657,
        0.80748756,  0.92526097,  0.96636437,  0.9542855 ]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0021563374205135397, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([2.55599594, 2.94935894, 2.0825069 , 2.38758373, 2.62742209,
       2.6099956 , 1.35225248, 3.02219748, 2.95953059, 2.1202848 ,
       2.78410363, 1.39116812, 1.30107784, 2.77361345, 1.41620255,
       2.42491031, 2.80314398, 3.01464605, 2.89474249, 2.81432462,
       1.2833128 , 1.96189594, 1.93800831, 1.82475805]), 'score_time': array([0.15946293, 0.09133506, 0.08225799, 0.08656168, 0.1735456 ,
       0.08229184, 0.07726002, 0.07896948, 0.07614923, 0.18172383,
       0.21600962, 0.11695933, 0.11262751, 0.1539259 , 0.2916348 ,
       0.13384461, 0.08754134, 0.07538652, 0.07520127, 0.07318306,
       0.07989216, 0.0748415 , 0.07235098, 0.07707787]), 'test_pearson_r': array([0.99015988, 0.99253736, 0.83525647, 0.9724165 , 0.99670725,
       0.98698683, 0.92276478, 0.75756593, 0.88134863, 0.94984957,
       0.67789879, 0.99545114, 0.99444617, 0.92095577, 0.97635355,
       0.97401966, 0.99895008, 0.99126011, 0.99576293, 0.92903759,
       0.98890194, 0.98091802, 0.9779323 , 0.97041989]), 'test_spearman_r': array([0.96363636, 0.94545455, 0.70909091, 0.9       , 0.96127812,
       0.94305484, 0.89090909, 0.79090909, 0.87272727, 0.96363636,
       0.73636364, 0.99090909, 0.99772468, 0.87272727, 0.98861304,
       0.72727273, 1.        , 0.98181818, 0.99090909, 0.97575758,
       0.98787879, 1.        , 0.98787879, 0.95151515]), 'test_rmse': array([-0.07098924, -0.0866572 , -0.34682845, -0.15176984, -0.06013629,
       -0.11571392, -0.23281583, -0.48631664, -0.30241118, -0.20906056,
       -0.64504569, -0.06705127, -0.06801218, -0.20833341, -0.15611616,
       -0.1387164 , -0.03082014, -0.10398973, -0.06120283, -0.19061093,
       -0.09722323, -0.13373843, -0.11993759, -0.12265741]), 'test_mae': array([-0.04639586, -0.04854384, -0.15749334, -0.11376389, -0.04432014,
       -0.06884612, -0.11027118, -0.21735075, -0.1442663 , -0.13286334,
       -0.22009929, -0.05064987, -0.05480334, -0.14971258, -0.09538886,
       -0.10456352, -0.0256828 , -0.08171862, -0.04164308, -0.13763368,
       -0.06943764, -0.07541883, -0.07851451, -0.0943501 ]), 'test_r2': array([0.97892283, 0.98130787, 0.65532613, 0.94292922, 0.99220913,
       0.96220518, 0.83278371, 0.42408192, 0.76293331, 0.89388706,
       0.37606926, 0.9881458 , 0.97940794, 0.80044788, 0.93799046,
       0.94803007, 0.99773123, 0.97706255, 0.98906864, 0.81799563,
       0.97277373, 0.95565264, 0.95130863, 0.94076452]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03897794765782249, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 304, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([1.0489378 , 1.21027827, 0.80861807, 0.63010049, 1.16137147,
       0.69997215, 1.31305695, 1.30406666, 0.55877328, 1.27364159,
       1.32665086, 1.2802422 , 1.09919357, 1.08176064, 0.83325505,
       1.03938794, 0.58300853, 1.22645211, 1.10530186, 0.53061867,
       0.49957943, 0.50583529, 0.69682479, 0.72340274]), 'score_time': array([0.16691589, 0.1261394 , 0.19966722, 0.22001815, 0.09329152,
       0.20746899, 0.07374668, 0.07334089, 0.08548045, 0.08314681,
       0.07065153, 0.07774115, 0.10892367, 0.16360736, 0.08602428,
       0.0727272 , 0.20716286, 0.08756733, 0.16287065, 0.07878065,
       0.07704377, 0.07432413, 0.07258821, 0.07148004]), 'test_pearson_r': array([0.98579762, 0.98233062, 0.99795038, 0.91350215, 0.9934638 ,
       0.98407966, 0.97837539, 0.9722063 , 0.99053507, 0.94104851,
       0.99530354, 0.98805447, 0.96133055, 0.47095286, 0.99706839,
       0.97661645, 0.9560357 , 0.98535055, 0.9979613 , 0.84037519,
       0.99242257, 0.59962214, 0.97316041, 0.99650454]), 'test_spearman_r': array([0.98861304, 0.96363636, 0.99090909, 0.95454545, 0.99090909,
       0.92727273, 0.98181818, 0.89749663, 0.99090909, 0.94545455,
       0.97272727, 0.99090909, 0.93636364, 0.57272727, 0.98861304,
       0.96127812, 0.95454545, 0.95454545, 0.99090909, 0.79393939,
       0.91185832, 0.66060606, 0.93939394, 0.99696509]), 'test_rmse': array([-0.0965422 , -0.1486991 , -0.04393694, -0.29669576, -0.107302  ,
       -0.0812318 , -0.18483267, -0.13893284, -0.1036899 , -0.21676035,
       -0.04888486, -0.08537255, -0.15637978, -0.49626776, -0.08353161,
       -0.15944529, -0.16621493, -0.12175644, -0.03998525, -0.37874386,
       -0.0978697 , -0.47160367, -0.12153982, -0.06093301]), 'test_mae': array([-0.0669573 , -0.0787468 , -0.03044432, -0.15710186, -0.08227184,
       -0.06196808, -0.1123244 , -0.09336697, -0.0714906 , -0.15856097,
       -0.03481955, -0.05995976, -0.09318698, -0.23492251, -0.07002611,
       -0.09617509, -0.10398847, -0.0790512 , -0.0325952 , -0.19041687,
       -0.07080323, -0.18157526, -0.09598801, -0.03870353]), 'test_r2': array([ 0.9686698 ,  0.9549702 ,  0.99585528,  0.81638239,  0.98006401,
        0.96690308,  0.93913674,  0.90991138,  0.9772952 ,  0.87161237,
        0.99015916,  0.9625134 ,  0.91383136, -0.47357413,  0.98415284,
        0.94376564,  0.8920593 ,  0.96524149,  0.99497405,  0.6417796 ,
        0.98080429,  0.21383967,  0.93985279,  0.99216826]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04786776304179686, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 125, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([0.49235654, 1.28065348, 1.34462428, 1.04606795, 1.14354372,
       0.49835658, 1.29886699, 1.13516212, 0.57170177, 0.55626106,
       0.61070848, 1.2176528 , 0.69980145, 1.30195284, 1.1489172 ,
       1.21157479, 1.26175737, 1.10591578, 1.34047532, 1.2802937 ,
       0.49478579, 0.72193074, 0.61916327, 0.5237987 ]), 'score_time': array([0.0734036 , 0.08537126, 0.07485032, 0.08315825, 0.14533401,
       0.07119513, 0.08047581, 0.0884943 , 0.24182367, 0.08221841,
       0.07634521, 0.07525468, 0.12385345, 0.07262015, 0.07465696,
       0.07617211, 0.07588601, 0.13799191, 0.07061601, 0.07195687,
       0.07275248, 0.08164597, 0.07444572, 0.07975411]), 'test_pearson_r': array([0.98939392, 0.99190555, 0.98062685, 0.97738626, 0.97309979,
       0.99771347, 0.47947678, 0.95377845, 0.99536197, 0.97117523,
       0.99056978, 0.98963871, 0.97703892, 0.98534428, 0.49367413,
       0.99272582, 0.91965664, 0.99719908, 0.80567621, 0.99438464,
       0.95752255, 0.9699554 , 0.99690267, 0.95812567]), 'test_spearman_r': array([0.98861304, 0.98861304, 0.98181818, 0.96363636, 0.97272727,
       0.97700842, 0.4109589 , 0.94545455, 0.99090909, 0.93636364,
       0.93636364, 0.96334329, 0.98181818, 0.96127812, 0.53636364,
       0.99090909, 0.77272727, 0.98181818, 0.85454545, 1.        ,
       0.95151515, 0.89090909, 0.98787879, 0.96363636]), 'test_rmse': array([-0.07897619, -0.08704069, -0.09123072, -0.13301319, -0.15654875,
       -0.03153106, -0.66765044, -0.14547267, -0.07118237, -0.20698371,
       -0.10576157, -0.09017396, -0.11965562, -0.11513231, -0.53803603,
       -0.07377869, -0.22837269, -0.04631184, -0.35305062, -0.09931527,
       -0.21809154, -0.14489295, -0.06117557, -0.18856364]), 'test_mae': array([-0.06024909, -0.06977377, -0.04356012, -0.07293744, -0.10059653,
       -0.02444026, -0.32554731, -0.10071172, -0.05223293, -0.14594901,
       -0.07428974, -0.05767092, -0.080703  , -0.06811724, -0.29818688,
       -0.06210198, -0.1530097 , -0.03420136, -0.17841663, -0.07596903,
       -0.12968917, -0.09226018, -0.05038865, -0.1301469 ]), 'test_r2': array([ 0.97804236,  0.98225834,  0.95761519,  0.95039321,  0.93679501,
        0.99491318, -0.49231544,  0.90768557,  0.98911234,  0.93395107,
        0.97634599,  0.97309653,  0.94718207,  0.96416167, -0.12845702,
        0.97854297,  0.84150668,  0.99237631,  0.59581204,  0.97661634,
        0.89546047,  0.92890877,  0.99207214,  0.91564701]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 234, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([1.43544126, 2.24382901, 1.64343739, 2.22552872, 0.94220066,
       1.91264319, 1.05852056, 1.19485259, 1.36725879, 1.54123116,
       1.68892002, 1.73768067, 2.11840034, 2.23176551, 2.22483873,
       2.17765784, 1.71493888, 1.27609921, 2.11725426, 1.81869149,
       1.03329325, 0.9137063 , 1.01308203, 1.03687477]), 'score_time': array([0.07226205, 0.07179761, 0.17689729, 0.06894135, 0.07893515,
       0.11766744, 0.08574295, 0.08691025, 0.12334728, 0.10496998,
       0.07134128, 0.08147883, 0.0729301 , 0.07071638, 0.07047963,
       0.14240551, 0.08163404, 0.16219234, 0.06909561, 0.07248259,
       0.08217335, 0.08740854, 0.06865668, 0.07620478]), 'test_pearson_r': array([0.98156629, 0.81000588, 0.98584016, 0.9973685 , 0.95595929,
       0.98689416, 0.96264375, 0.9923367 , 0.98126319, 0.94468857,
       0.78722382, 0.97393468, 0.87584133, 0.8518461 , 0.99662656,
       0.96268462, 0.99452708, 0.99576503, 0.77468337, 0.99496437,
       0.985208  , 0.69256591, 0.99639566, 0.99449372]), 'test_spearman_r': array([0.85454545, 0.74259874, 0.96363636, 1.        , 0.94761066,
       0.94545455, 0.99772468, 0.95454545, 0.96363636, 0.92727273,
       0.9       , 0.95454545, 0.80909091, 0.6574869 , 0.95890411,
       0.91818182, 0.95216648, 0.99090909, 0.74545455, 1.        ,
       0.92727273, 0.74545455, 0.99696509, 0.98787879]), 'test_rmse': array([-0.13289684, -0.34423387, -0.1012084 , -0.04779426, -0.08117055,
       -0.09637852, -0.19305135, -0.07579032, -0.11912992, -0.24219373,
       -0.46884233, -0.10955722, -0.21816884, -0.17331122, -0.06948003,
       -0.18109454, -0.07339464, -0.06108562, -0.31937676, -0.06872776,
       -0.12237887, -0.45242299, -0.07040707, -0.05432465]), 'test_mae': array([-0.08319062, -0.14196024, -0.0787329 , -0.04252276, -0.06381795,
       -0.07233592, -0.11776937, -0.05110275, -0.08280455, -0.14369499,
       -0.21500566, -0.06489436, -0.17018661, -0.10976087, -0.04668976,
       -0.0948307 , -0.0520644 , -0.04488846, -0.18420373, -0.05072399,
       -0.08811891, -0.18595016, -0.04922505, -0.04506451]), 'test_r2': array([0.95321163, 0.55554211, 0.96677902, 0.99450222, 0.90909452,
       0.96849691, 0.91641926, 0.98461058, 0.95201154, 0.86595315,
       0.57077683, 0.93470467, 0.7512945 , 0.6653799 , 0.99301828,
       0.92348235, 0.98793034, 0.98845883, 0.41583567, 0.98404376,
       0.96079767, 0.40889411, 0.99139591, 0.98404758]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03770052924189587, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 549, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 220, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([10.5790987 ,  9.06929231,  9.70409513, 10.77264905,  6.27207589,
        9.045964  ,  7.439569  , 10.15933657, 11.10140133,  9.15900826,
        7.13906765, 10.87688541, 10.21517229,  6.72275782,  5.93369699,
        8.78855467, 11.00402927,  8.29306483, 10.31019282, 10.08992052,
        5.25821853,  6.42224026,  5.18647528,  6.0027113 ]), 'score_time': array([0.13074231, 0.17156911, 0.09072781, 0.07098603, 0.16991067,
       0.18286681, 0.17082667, 0.08134031, 0.07771254, 0.08779931,
       0.17416239, 0.07508588, 0.08689356, 0.16539621, 0.08588052,
       0.08361793, 0.07547045, 0.1763823 , 0.07535195, 0.07866788,
       0.08548045, 0.07459807, 0.0833776 , 0.07324457]), 'test_pearson_r': array([0.76389676, 0.9512404 , 0.9796148 , 0.96403708, 0.99842302,
       0.99660908, 0.98300498, 0.98213878, 0.99544597, 0.98622405,
       0.99873246, 0.97697615, 0.97951718, 0.96475375, 0.94951092,
       0.98853138, 0.97341   , 0.99093073, 0.9852193 , 0.82189337,
       0.9706943 , 0.98555076, 0.97634147, 0.65288771]), 'test_spearman_r': array([0.79090909, 0.91571992, 0.92727273, 0.93636364, 1.        ,
       0.99772468, 0.97272727, 0.98181818, 0.96363636, 0.94545455,
       0.94305484, 0.98181818, 0.93636364, 0.94305484, 0.95454545,
       0.98181818, 0.84282679, 1.        , 0.99544417, 0.86322587,
       0.97575758, 0.98480698, 0.97575758, 0.46200821]), 'test_rmse': array([-0.35790678, -0.10259163, -0.09681334, -0.1781604 , -0.05376687,
       -0.06655818, -0.12943864, -0.11058259, -0.06263543, -0.09731699,
       -0.04510877, -0.12782925, -0.11410752, -0.12543576, -0.21205354,
       -0.08302057, -0.17434432, -0.07410489, -0.13548469, -0.48181004,
       -0.17146604, -0.10902349, -0.15684516, -0.63752118]), 'test_mae': array([-0.16952667, -0.07680004, -0.06833909, -0.09563577, -0.04390219,
       -0.04795293, -0.08494395, -0.0745882 , -0.04325334, -0.07680849,
       -0.03272364, -0.09172048, -0.07684378, -0.08130511, -0.14789727,
       -0.05570815, -0.0973499 , -0.05561548, -0.07857709, -0.25107795,
       -0.1151859 , -0.09090737, -0.09407578, -0.30858016]), 'test_r2': array([0.5767319 , 0.88036568, 0.94843193, 0.92263545, 0.99414563,
       0.98903594, 0.95770546, 0.9558365 , 0.98526188, 0.97124196,
       0.99686643, 0.94767669, 0.95899191, 0.88576797, 0.86050887,
       0.97411022, 0.9452484 , 0.98005597, 0.96506142, 0.58910986,
       0.92739096, 0.95479321, 0.94577274, 0.24601607]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0029277433369518636, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1642, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([1.98598433, 2.15134048, 1.92048097, 2.23499489, 2.67057085,
       2.5404253 , 2.38201523, 2.34116769, 1.13974524, 1.14685464,
       1.11923075, 2.39634442, 2.41628647, 2.65170312, 2.46931028,
       2.29584861, 2.651824  , 2.48478246, 2.20471311, 1.91940975,
       1.17024112, 1.17122626, 1.16771555, 1.12635851]), 'score_time': array([0.17766809, 0.16044617, 0.17148471, 0.08831096, 0.07222605,
       0.06986761, 0.14122462, 0.15895009, 0.079916  , 0.14535403,
       0.07764006, 0.07127118, 0.10750771, 0.08705258, 0.08702397,
       0.14425492, 0.07043886, 0.0725081 , 0.07633424, 0.10515094,
       0.075109  , 0.0776844 , 0.07781577, 0.07009864]), 'test_pearson_r': array([0.99036905, 0.99316211, 0.75971712, 0.9389943 , 0.99159024,
       0.94252888, 0.97885925, 0.8529556 , 0.60646561, 0.99287437,
       0.90309937, 0.97206507, 0.91927236, 0.79863629, 0.98477933,
       0.97814848, 0.9907194 , 0.99320375, 0.98719932, 0.99420854,
       0.99577399, 0.96058663, 0.98845953, 0.99192533]), 'test_spearman_r': array([0.95454545, 0.99090909, 0.73397584, 0.91818182, 0.92238405,
       0.9       , 0.97038976, 0.86363636, 0.57403338, 1.        ,
       0.89090909, 0.98861304, 0.83371515, 0.68181818, 0.96363636,
       0.98861304, 0.98169269, 0.99772468, 0.96363636, 0.97575758,
       0.97575758, 0.96363636, 1.        , 0.95151515]), 'test_rmse': array([-0.10741636, -0.086758  , -0.55870532, -0.18502411, -0.09919472,
       -0.20740884, -0.11593398, -0.29431567, -0.48864281, -0.07603218,
       -0.25276099, -0.14760873, -0.23988034, -0.35373174, -0.0944285 ,
       -0.14890134, -0.07637049, -0.09985644, -0.11419454, -0.08117329,
       -0.06718707, -0.16453359, -0.1142121 , -0.0741969 ]), 'test_mae': array([-0.07130226, -0.06244552, -0.1877316 , -0.10097822, -0.06516368,
       -0.13316388, -0.07012587, -0.12291157, -0.20703959, -0.06250672,
       -0.13902704, -0.09172029, -0.15061008, -0.16806726, -0.07065022,
       -0.07202197, -0.0613496 , -0.07713719, -0.09625672, -0.05710459,
       -0.04185656, -0.12291522, -0.08071469, -0.05338905]), 'test_r2': array([0.97833915, 0.95994168, 0.51333862, 0.86782678, 0.98244418,
       0.88202927, 0.95389732, 0.66939825, 0.13577914, 0.98520306,
       0.74094196, 0.93332834, 0.84207111, 0.60708024, 0.96343711,
       0.95539981, 0.97791618, 0.97687889, 0.97199712, 0.97787622,
       0.98440144, 0.91970899, 0.97686864, 0.98166695]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05617045774903145, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 710, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_pearson_r_mean': 0.9391517958146788, 'test_pearson_r_std': 0.104388754341864, 'test_spearman_r_mean': 0.9187392623604305, 'test_spearman_r_std': 0.11066515939262866, 'test_rmse_mean': 0.16810698344649067, 'test_rmse_std': 0.13233546606684582, 'test_mae_mean': 0.09844935090170569, 'test_mae_std': 0.05671969505792618, 'test_r2_mean': 0.8617015961143869, 'test_r2_std': 0.24402938842865748}}, 'CO_rr-P3HT': {'cluster size (%)': 42, 6: {'test_mad': 0.18751593, 'test_ystd': 0.22482547, 'test_mae': 0.43811401237528774, 'test_rmse': 0.6612965394142861, 'test_r2': -0.22538246541023987, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 129, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'test_mad': 0.21003091, 'test_ystd': 0.24968779, 'test_mae': 0.45327462289720405, 'test_rmse': 0.6653559109521839, 'test_r2': -0.24047266998019357, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.006458867195030569, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'test_mad': 0.19578405, 'test_ystd': 0.23690096, 'test_mae': 0.4381203041595885, 'test_rmse': 0.6598002264515348, 'test_r2': -0.21984340337460262, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.060258855720141384, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1485, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'test_mad': 0.20821099, 'test_ystd': 0.24849923, 'test_mae': 0.44706488960788787, 'test_rmse': 0.6596038709415646, 'test_r2': -0.21911746445211633, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.012424474587191382, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 529, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'test_mad': 0.20485543, 'test_ystd': 0.2450362, 'test_mae': 0.44533770715013626, 'test_rmse': 0.6608799872657287, 'test_r2': -0.22383920937887747, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.040278632524721567, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'test_mad': 0.20901865, 'test_ystd': 0.25050873, 'test_mae': 0.4420001862547813, 'test_rmse': 0.6549315736736174, 'test_r2': -0.20190742251886884, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04467723209793772, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 120, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'test_mad': 0.20361987, 'test_ystd': 0.24504642, 'test_mae': 0.43439292235326826, 'test_rmse': 0.6501374482914365, 'test_r2': -0.18437580324960434, 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.010521546017160871, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 399, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_mad_mean': 0.20271940316472734, 'test_mad_std': 0.007633707200056799, 'test_ystd_mean': 0.2429292563881193, 'test_ystd_std': 0.008511838629153884, 'test_mae_mean': 0.44261494925687916, 'test_mae_std': 0.005967578464457338, 'test_rmse_mean': 0.6588579367129075, 'test_rmse_std': 0.004553910621463609, 'test_r2_mean': -0.2164197769092147, 'test_r2_std': 0.016777292657997437}}, 'ID_rr-P3HT': {'cluster size (%)': 50, 6: {'fit_time': array([4.05287719, 4.06800556]), 'score_time': array([0.08534265, 0.08102608]), 'test_pearson_r': array([0.8591985 , 0.89492062]), 'test_spearman_r': array([0.86484221, 0.88439932]), 'test_rmse': array([-0.34090682, -0.27326591]), 'test_mae': array([-0.16685056, -0.14108156]), 'test_r2': array([0.73061678, 0.79165756]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0021563374205135397, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 2000, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 13: {'fit_time': array([0.80018687, 0.74526834]), 'score_time': array([0.07387066, 0.07746506]), 'test_pearson_r': array([0.8820083, 0.8613154]), 'test_spearman_r': array([0.87358594, 0.84964168]), 'test_rmse': array([-0.32663788, -0.31409871]), 'test_mae': array([-0.1545448 , -0.16820004]), 'test_r2': array([0.75343554, 0.72029305]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03897794765782249, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10000, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 304, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 42: {'fit_time': array([0.32115626, 0.33456492]), 'score_time': array([0.06963825, 0.07181787]), 'test_pearson_r': array([0.75170176, 0.90301481]), 'test_spearman_r': array([0.82244399, 0.90491755]), 'test_rmse': array([-0.42899009, -0.27363565]), 'test_mae': array([-0.18321523, -0.13309577]), 'test_r2': array([0.5350976 , 0.80803412]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.04786776304179686, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 125, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 69: {'fit_time': array([0.39889884, 0.39630342]), 'score_time': array([0.07110453, 0.07201743]), 'test_pearson_r': array([0.92367505, 0.8486476 ]), 'test_spearman_r': array([0.91777257, 0.85623314]), 'test_rmse': array([-0.24933088, -0.35082902]), 'test_mae': array([-0.12811174, -0.15995371]), 'test_r2': array([0.84261901, 0.68824753]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.1, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 234, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 420: {'fit_time': array([0.56172729, 0.59816051]), 'score_time': array([0.07238364, 0.07200193]), 'test_pearson_r': array([0.91603244, 0.82915629]), 'test_spearman_r': array([0.90370798, 0.82756298]), 'test_rmse': array([-0.25782906, -0.36439132]), 'test_mae': array([-0.13878406, -0.16017524]), 'test_r2': array([0.83169211, 0.66308148]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.03770052924189587, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 549, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 220, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 1234567890: {'fit_time': array([3.06067419, 3.16334486]), 'score_time': array([0.08057046, 0.08184004]), 'test_pearson_r': array([0.91589618, 0.88860743]), 'test_spearman_r': array([0.89867822, 0.8840119 ]), 'test_rmse': array([-0.25905189, -0.29512505]), 'test_mae': array([-0.14794038, -0.15134764]), 'test_r2': array([0.82399958, 0.78722665]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.0029277433369518636, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 10, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 1642, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 473129: {'fit_time': array([0.81629872, 0.8035419 ]), 'score_time': array([0.07640576, 0.07508731]), 'test_pearson_r': array([0.86149052, 0.86850288]), 'test_spearman_r': array([0.86704943, 0.85226045]), 'test_rmse': array([-0.33950755, -0.3122952 ]), 'test_mae': array([-0.14800901, -0.16113493]), 'test_r2': array([0.69973984, 0.75012633]), 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__objective': 'reg:squarederror', 'regressor__base_score': None, 'regressor__booster': None, 'regressor__callbacks': None, 'regressor__colsample_bylevel': None, 'regressor__colsample_bynode': None, 'regressor__colsample_bytree': None, 'regressor__device': None, 'regressor__early_stopping_rounds': None, 'regressor__enable_categorical': False, 'regressor__eval_metric': None, 'regressor__feature_types': None, 'regressor__gamma': None, 'regressor__grow_policy': None, 'regressor__importance_type': None, 'regressor__interaction_constraints': None, 'regressor__learning_rate': 0.05617045774903145, 'regressor__max_bin': None, 'regressor__max_cat_threshold': None, 'regressor__max_cat_to_onehot': None, 'regressor__max_delta_step': None, 'regressor__max_depth': 11, 'regressor__max_leaves': None, 'regressor__min_child_weight': None, 'regressor__missing': nan, 'regressor__monotone_constraints': None, 'regressor__multi_strategy': None, 'regressor__n_estimators': 710, 'regressor__n_jobs': -2, 'regressor__num_parallel_tree': None, 'regressor__random_state': None, 'regressor__reg_alpha': None, 'regressor__reg_lambda': None, 'regressor__sampling_method': None, 'regressor__scale_pos_weight': None, 'regressor__subsample': None, 'regressor__tree_method': None, 'regressor__validate_parameters': None, 'regressor__verbosity': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__with_mean': True, 'transformer__y scaler__with_std': True}}, 'summary_stats': {'test_pearson_r_mean': 0.8717262695682291, 'test_pearson_r_std': 0.042804825210059995, 'test_spearman_r_mean': 0.8719362394771991, 'test_spearman_r_std': 0.027826799771240023, 'test_rmse_mean': 0.3132782166221965, 'test_rmse_std': 0.0482920487040986, 'test_mae_mean': 0.15303176302532137, 'test_mae_std': 0.014435107460543772, 'test_r2_mean': 0.7447047995853536, 'test_r2_std': 0.0793598310291145}}, 'overall data shape': {'targets_shape': (259, 1), 'training_features_shape': (259, 178)}}
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c203n10>
Subject: Job 169394: <XGBR_log Rg (nm)_MACCS_Trimer_canonical_name_20250515> in cluster <Hazel> Done

Job <XGBR_log Rg (nm)_MACCS_Trimer_canonical_name_20250515> was submitted from host <c200n11> by user <sdehgha2> in cluster <Hazel> at Sat May 17 22:27:56 2025
Job was executed on host(s) <6*c203n10>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Sat May 17 23:52:52 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Sat May 17 23:52:52 2025
Terminated at Mon May 19 05:18:30 2025
Results reported at Mon May 19 05:18:30 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input



#BSUB -n 6
#BSUB -W 48:05
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "XGBR_log Rg (nm)_MACCS_Trimer_canonical_name_20250515"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250515/XGBR_log Rg (nm)_MACCS_Trimer_canonical_name_20250515.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250515/XGBR_log Rg (nm)_MACCS_Trimer_canonical_name_20250515.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../make_ood_prediction.py --target_features "log Rg (nm)"                                   --representation "MACCS"                                   --regressor_type "XGBR"                                   --oligomer_representation "Trimer"                                   --numerical_feats 'Xn' 'Mw (g/mol)' 'PDI' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" 'solvent dP' 'solvent dD' 'solvent dH'                                   --clustering_method "canonical_name" 



------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   366660.00 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.98 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   105939 sec.
    Turnaround time :                            111034 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250515/XGBR_log Rg (nm)_MACCS_Trimer_canonical_name_20250515.err> for stderr output of this job.

