Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003803846575672523), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 283), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0030623586196272807), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 188), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01033020569432858), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 94), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002160465232298079), ('regressor__regressor__max_depth', 5551), ('regressor__regressor__n_estimators', 523), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.013505218033302829), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 86), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011395651551461761), ('regressor__regressor__max_depth', 6489), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005421034183313283), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 191), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007671386487752699), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 97), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011188626616233344), ('regressor__regressor__max_depth', 1840), ('regressor__regressor__n_estimators', 104), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022048941436753376), ('regressor__regressor__max_depth', 13), ('regressor__regressor__n_estimators', 76), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013040944505577066), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 511), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014181175354408227), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.032826480286574304), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006478387867480131), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 108), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01697121427839417), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007054905398727932), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 120), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0035285967151685057), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 204), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012615380200975417), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 901), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015387719290255039), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 602), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002986929642040468), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 574), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003076483681002457), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 232), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.021449299192390022), ('regressor__regressor__max_depth', 5488), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013231091845540299), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 773), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.030593576855032372), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 61), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03367398961222069), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008539970725353976), ('regressor__regressor__max_depth', 583), ('regressor__regressor__n_estimators', 138), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.018833837292562872), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01673509522750922), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004030177639623726), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 358), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011914150746944983), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0141478238491063), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012724549342809892), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015242984043737692), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 706), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0011685422269398298), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 738), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0221564177824329), ('regressor__regressor__max_depth', 6978), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])


Average scores:	 r: 0.34±0.13	 r2: 0.08±0.12
Dimer
Filename: (ECFP3.count.512)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Second Peak wo placeholder/Dimer/(ECFP3.count.512)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Second Peak wo placeholder/Dimer/(ECFP3.count.512)_XGBR_Standard_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Second Peak wo placeholder/Dimer/(ECFP3.count.512)_XGBR_Standard_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c207n04>
Subject: Job 492334: <ECFP_XGBR_Dimer_log Second Peak wo placeholder_3_count_20250204> in cluster <Hazel> Done

Job <ECFP_XGBR_Dimer_log Second Peak wo placeholder_3_count_20250204> was submitted from host <c013n01> by user <sdehgha2> in cluster <Hazel> at Tue Feb  4 14:12:58 2025
Job was executed on host(s) <6*c207n04>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Tue Feb  4 14:49:54 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Tue Feb  4 14:49:54 2025
Terminated at Tue Feb  4 16:00:34 2025
Results reported at Tue Feb  4 16:00:34 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "ECFP_XGBR_Dimer_log Second Peak wo placeholder_3_count_20250204"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/ECFP_XGBR_Dimer_log Second Peak wo placeholder_3_count_20250204.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/ECFP_XGBR_Dimer_log Second Peak wo placeholder_3_count_20250204.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py --target_features "log Second Peak wo placeholder"                                   --representation "ECFP"                                   --regressor_type "XGBR"                                   --oligomer_representation "Dimer"                                   --radius "3"                                   --vector "count" 

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   14517.27 sec.
    Max Memory :                                 2 GB
    Average Memory :                             1.96 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               14.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   4248 sec.
    Turnaround time :                            6456 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/ECFP_XGBR_Dimer_log Second Peak wo placeholder_3_count_20250204.err> for stderr output of this job.

