Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01616669954090141), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018889700863610674), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 58), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011210162136379574), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 239), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0048841850141763685), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 126), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0037344274982323267), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 208), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015755015649853191), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1204), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006453032990141525), ('regressor__regressor__max_depth', 3696), ('regressor__regressor__n_estimators', 285), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 20), ('regressor__regressor__n_estimators', 1444), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001800226913332255), ('regressor__regressor__max_depth', 4654), ('regressor__regressor__n_estimators', 339), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03972893133963027), ('regressor__regressor__max_depth', 206), ('regressor__regressor__n_estimators', 349), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005484790725279422), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 212), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01838513277463266), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0019073589629866816), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 801), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 501), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010382440106605762), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020119287753173065), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 107), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 445), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001690920004865672), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 552), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.013978993462480093), ('regressor__regressor__max_depth', 653), ('regressor__regressor__n_estimators', 60), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0051165126724349325), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 330), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0284456911526099), ('regressor__regressor__max_depth', 47), ('regressor__regressor__n_estimators', 64), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00401848890386716), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 605), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008839672783924599), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 268), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001472956039507874), ('regressor__regressor__max_depth', 1460), ('regressor__regressor__n_estimators', 1002), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012173765258850497), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 914), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0053441840763502856), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 541), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012171908951984832), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 115), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015181380721733418), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 814), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008250506626235627), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 122), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.023269348633783698), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0034039371973320926), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 267), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 135), ('regressor__regressor__n_jobs', -2)])


Average scores:	 r: 0.34±0.22	 r2: -0.03±0.32
Dimer
Filename: (MACCS)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Third Peak wo placeholder/Dimer/(MACCS)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Third Peak wo placeholder/Dimer/(MACCS)_XGBR_Standard_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Third Peak wo placeholder/Dimer/(MACCS)_XGBR_Standard_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c039n02>
Subject: Job 491857: <MACCS_XGBR_Dimer_log Third Peak wo placeholder_20250204> in cluster <Hazel> Done

Job <MACCS_XGBR_Dimer_log Third Peak wo placeholder_20250204> was submitted from host <c039n02> by user <sdehgha2> in cluster <Hazel> at Tue Feb  4 13:31:11 2025
Job was executed on host(s) <6*c039n02>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Tue Feb  4 13:32:11 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Tue Feb  4 13:32:11 2025
Terminated at Tue Feb  4 14:05:04 2025
Results reported at Tue Feb  4 14:05:04 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "MACCS_XGBR_Dimer_log Third Peak wo placeholder_20250204"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/MACCS_XGBR_Dimer_log Third Peak wo placeholder_20250204.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/MACCS_XGBR_Dimer_log Third Peak wo placeholder_20250204.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py --target_features "log Third Peak wo placeholder"                                   --representation "MACCS"                                   --regressor_type "XGBR"                                   --oligomer_representation "Dimer" 

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   4552.40 sec.
    Max Memory :                                 3 GB
    Average Memory :                             2.94 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               13.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   1997 sec.
    Turnaround time :                            2033 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/MACCS_XGBR_Dimer_log Third Peak wo placeholder_20250204.err> for stderr output of this job.

