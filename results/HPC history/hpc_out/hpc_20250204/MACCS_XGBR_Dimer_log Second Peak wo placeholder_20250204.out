Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004649107590629735), ('regressor__regressor__max_depth', 171), ('regressor__regressor__n_estimators', 236), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0035249988175634745), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 194), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02026115423604154), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0039844134143597575), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 254), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014107990858937835), ('regressor__regressor__max_depth', 13), ('regressor__regressor__n_estimators', 86), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.022086177751485005), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0058318110465628474), ('regressor__regressor__max_depth', 15), ('regressor__regressor__n_estimators', 175), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014028367438592485), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 59), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012927133261577652), ('regressor__regressor__max_depth', 145), ('regressor__regressor__n_estimators', 91), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009067997405125814), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 201), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009993905417677204), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 68), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.016727524088953897), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 62), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1696), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0050097821838797196), ('regressor__regressor__max_depth', 14), ('regressor__regressor__n_estimators', 156), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017157972716590197), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.020714138048141345), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01000056296944589), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 75), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02391175376780035), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012184567223908774), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00628315544133934), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 251), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01562485504500705), ('regressor__regressor__max_depth', 7492), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010415129961966271), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 110), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007724034192705121), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 117), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001314096050905597), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 846), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04162332939299203), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02361200855192175), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 54), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019959636930082958), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.016480756025813545), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.017053938042501306), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 85), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.013968509551329784), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007297740055061758), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 65), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012913445759661465), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006709830082048606), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 184), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009446715536040703), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 75), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0171500434758983), ('regressor__regressor__max_depth', 25), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])


Average scores:	 r: 0.35±0.14	 r2: 0.09±0.12
Dimer
Filename: (MACCS)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Second Peak wo placeholder/Dimer/(MACCS)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Second Peak wo placeholder/Dimer/(MACCS)_XGBR_Standard_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Second Peak wo placeholder/Dimer/(MACCS)_XGBR_Standard_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c017n01>
Subject: Job 491853: <MACCS_XGBR_Dimer_log Second Peak wo placeholder_20250204> in cluster <Hazel> Done

Job <MACCS_XGBR_Dimer_log Second Peak wo placeholder_20250204> was submitted from host <c039n02> by user <sdehgha2> in cluster <Hazel> at Tue Feb  4 13:31:11 2025
Job was executed on host(s) <6*c017n01>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Tue Feb  4 13:31:47 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Tue Feb  4 13:31:47 2025
Terminated at Tue Feb  4 14:00:06 2025
Results reported at Tue Feb  4 14:00:06 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "MACCS_XGBR_Dimer_log Second Peak wo placeholder_20250204"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/MACCS_XGBR_Dimer_log Second Peak wo placeholder_20250204.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/MACCS_XGBR_Dimer_log Second Peak wo placeholder_20250204.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py --target_features "log Second Peak wo placeholder"                                   --representation "MACCS"                                   --regressor_type "XGBR"                                   --oligomer_representation "Dimer" 

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   3937.41 sec.
    Max Memory :                                 3 GB
    Average Memory :                             2.80 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               13.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   1703 sec.
    Turnaround time :                            1735 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/MACCS_XGBR_Dimer_log Second Peak wo placeholder_20250204.err> for stderr output of this job.

