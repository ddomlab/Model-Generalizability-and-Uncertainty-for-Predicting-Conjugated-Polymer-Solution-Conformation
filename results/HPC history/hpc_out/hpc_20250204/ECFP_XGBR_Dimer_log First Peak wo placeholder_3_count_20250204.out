Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.021723169447991613), ('regressor__regressor__max_depth', 1230), ('regressor__regressor__n_estimators', 65), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0017171032583895476), ('regressor__regressor__max_depth', 4893), ('regressor__regressor__n_estimators', 984), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013803605975577697), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1378), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02734615580535244), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01681727660565325), ('regressor__regressor__max_depth', 12), ('regressor__regressor__n_estimators', 80), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0033505011043391854), ('regressor__regressor__max_depth', 5368), ('regressor__regressor__n_estimators', 336), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009899822991586458), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 111), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015194186442071616), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1248), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012663291314389464), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1432), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009812016470931061), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 104), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006103705518663595), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 257), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008202264818526407), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 198), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.024012643031985123), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 70), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0072110088751303906), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 239), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011688391622903391), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 156), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012705476801057076), ('regressor__regressor__max_depth', 13), ('regressor__regressor__n_estimators', 1517), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.013121340277331396), ('regressor__regressor__max_depth', 3473), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002754317498632309), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 652), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005715956103033496), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 298), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025689762413459712), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02116566032144881), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 108), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004299767295438188), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 429), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011930478368658055), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 106), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007242941759078702), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 173), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01354847076423279), ('regressor__regressor__max_depth', 13), ('regressor__regressor__n_estimators', 106), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01639199550313828), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 95), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002690998392117692), ('regressor__regressor__max_depth', 6356), ('regressor__regressor__n_estimators', 479), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0014060018342890307), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1263), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01673290352859844), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 89), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015932184750471318), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 943), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0035000186009332707), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 387), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016253018249787162), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 654), ('regressor__regressor__n_jobs', -2)])


Average scores:	 r: 0.45±0.08	 r2: 0.18±0.07
Dimer
Filename: (ECFP3.count.512)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log First Peak wo placeholder/Dimer/(ECFP3.count.512)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log First Peak wo placeholder/Dimer/(ECFP3.count.512)_XGBR_Standard_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log First Peak wo placeholder/Dimer/(ECFP3.count.512)_XGBR_Standard_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c020n03>
Subject: Job 492332: <ECFP_XGBR_Dimer_log First Peak wo placeholder_3_count_20250204> in cluster <Hazel> Done

Job <ECFP_XGBR_Dimer_log First Peak wo placeholder_3_count_20250204> was submitted from host <c013n01> by user <sdehgha2> in cluster <Hazel> at Tue Feb  4 14:12:58 2025
Job was executed on host(s) <6*c020n03>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Tue Feb  4 14:42:18 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Tue Feb  4 14:42:18 2025
Terminated at Tue Feb  4 15:39:28 2025
Results reported at Tue Feb  4 15:39:28 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "ECFP_XGBR_Dimer_log First Peak wo placeholder_3_count_20250204"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/ECFP_XGBR_Dimer_log First Peak wo placeholder_3_count_20250204.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/ECFP_XGBR_Dimer_log First Peak wo placeholder_3_count_20250204.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py --target_features "log First Peak wo placeholder"                                   --representation "ECFP"                                   --regressor_type "XGBR"                                   --oligomer_representation "Dimer"                                   --radius "3"                                   --vector "count" 

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   11877.00 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.92 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   3430 sec.
    Turnaround time :                            5190 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/ECFP_XGBR_Dimer_log First Peak wo placeholder_3_count_20250204.err> for stderr output of this job.

