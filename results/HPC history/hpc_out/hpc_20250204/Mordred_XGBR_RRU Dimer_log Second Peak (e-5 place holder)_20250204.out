Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['RRU Dimer Mordred ABC',
                                                   'RRU Dimer Mordred ABCGG',
                                                   'RRU Dimer Mordred nAcid',
                                                   'RRU Dimer Mordred nBase',
                                                   'RRU Dimer Mordred '
                                                   'nAromAtom',
                                                   'RRU Dimer Mordred '
                                                   'nAromBond',
                                                   'RRU Dimer Mordred nAtom',
                                                   'RRU Dimer Mordred '
                                                   'nHeavyAtom',
                                                   'RRU Dimer Mordred '
                                                   '...
                                                   'RRU Dimer Mordred nCl',
                                                   'RRU Dimer Mordred nBr',
                                                   'RRU Dimer Mordred nX',
                                                   'RRU Dimer Mordred ATS0dv',
                                                   'RRU Dimer Mordred ATS1dv',
                                                   'RRU Dimer Mordred ATS2dv',
                                                   'RRU Dimer Mordred ATS3dv',
                                                   'RRU Dimer Mordred ATS4dv',
                                                   'RRU Dimer Mordred ATS5dv',
                                                   'RRU Dimer Mordred ATS6dv',
                                                   'RRU Dimer Mordred ATS7dv',
                                                   'RRU Dimer Mordred ATS8dv',
                                                   'RRU Dimer Mordred ATS0d',
                                                   'RRU Dimer Mordred ATS1d', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04063781222084087), ('regressor__regressor__max_depth', 177), ('regressor__regressor__n_estimators', 54), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.031600651529666575), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 65), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03685334874042952), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 67), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03666127899306222), ('regressor__regressor__max_depth', 43), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['RRU Dimer Mordred ABC',
                                                   'RRU Dimer Mordred ABCGG',
                                                   'RRU Dimer Mordred nAcid',
                                                   'RRU Dimer Mordred nBase',
                                                   'RRU Dimer Mordred '
                                                   'nAromAtom',
                                                   'RRU Dimer Mordred '
                                                   'nAromBond',
                                                   'RRU Dimer Mordred nAtom',
                                                   'RRU Dimer Mordred '
                                                   'nHeavyAtom',
                                                   'RRU Dimer Mordred '
                                                   '...
                                                   'RRU Dimer Mordred nCl',
                                                   'RRU Dimer Mordred nBr',
                                                   'RRU Dimer Mordred nX',
                                                   'RRU Dimer Mordred ATS0dv',
                                                   'RRU Dimer Mordred ATS1dv',
                                                   'RRU Dimer Mordred ATS2dv',
                                                   'RRU Dimer Mordred ATS3dv',
                                                   'RRU Dimer Mordred ATS4dv',
                                                   'RRU Dimer Mordred ATS5dv',
                                                   'RRU Dimer Mordred ATS6dv',
                                                   'RRU Dimer Mordred ATS7dv',
                                                   'RRU Dimer Mordred ATS8dv',
                                                   'RRU Dimer Mordred ATS0d',
                                                   'RRU Dimer Mordred ATS1d', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03385852895166564), ('regressor__regressor__max_depth', 29), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026246799468641842), ('regressor__regressor__max_depth', 23), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016837440170499951), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1477), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026616354556634744), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 73), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019175027488043974), ('regressor__regressor__max_depth', 20), ('regressor__regressor__n_estimators', 96), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['RRU Dimer Mordred ABC',
                                                   'RRU Dimer Mordred ABCGG',
                                                   'RRU Dimer Mordred nAcid',
                                                   'RRU Dimer Mordred nBase',
                                                   'RRU Dimer Mordred '
                                                   'nAromAtom',
                                                   'RRU Dimer Mordred '
                                                   'nAromBond',
                                                   'RRU Dimer Mordred nAtom',
                                                   'RRU Dimer Mordred '
                                                   'nHeavyAtom',
                                                   'RRU Dimer Mordred '
                                                   '...
                                                   'RRU Dimer Mordred nCl',
                                                   'RRU Dimer Mordred nBr',
                                                   'RRU Dimer Mordred nX',
                                                   'RRU Dimer Mordred ATS0dv',
                                                   'RRU Dimer Mordred ATS1dv',
                                                   'RRU Dimer Mordred ATS2dv',
                                                   'RRU Dimer Mordred ATS3dv',
                                                   'RRU Dimer Mordred ATS4dv',
                                                   'RRU Dimer Mordred ATS5dv',
                                                   'RRU Dimer Mordred ATS6dv',
                                                   'RRU Dimer Mordred ATS7dv',
                                                   'RRU Dimer Mordred ATS8dv',
                                                   'RRU Dimer Mordred ATS0d',
                                                   'RRU Dimer Mordred ATS1d', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016481267068633356), ('regressor__regressor__max_depth', 12), ('regressor__regressor__n_estimators', 1401), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03352793669037341), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007199759411735628), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 257), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006817354679675914), ('regressor__regressor__max_depth', 5726), ('regressor__regressor__n_estimators', 296), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04395878029263543), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['RRU Dimer Mordred ABC',
                                                   'RRU Dimer Mordred ABCGG',
                                                   'RRU Dimer Mordred nAcid',
                                                   'RRU Dimer Mordred nBase',
                                                   'RRU Dimer Mordred '
                                                   'nAromAtom',
                                                   'RRU Dimer Mordred '
                                                   'nAromBond',
                                                   'RRU Dimer Mordred nAtom',
                                                   'RRU Dimer Mordred '
                                                   'nHeavyAtom',
                                                   'RRU Dimer Mordred '
                                                   '...
                                                   'RRU Dimer Mordred nCl',
                                                   'RRU Dimer Mordred nBr',
                                                   'RRU Dimer Mordred nX',
                                                   'RRU Dimer Mordred ATS0dv',
                                                   'RRU Dimer Mordred ATS1dv',
                                                   'RRU Dimer Mordred ATS2dv',
                                                   'RRU Dimer Mordred ATS3dv',
                                                   'RRU Dimer Mordred ATS4dv',
                                                   'RRU Dimer Mordred ATS5dv',
                                                   'RRU Dimer Mordred ATS6dv',
                                                   'RRU Dimer Mordred ATS7dv',
                                                   'RRU Dimer Mordred ATS8dv',
                                                   'RRU Dimer Mordred ATS0d',
                                                   'RRU Dimer Mordred ATS1d', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006306678331401665), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 372), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0033529523355028427), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 871), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1479), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00900382562478114), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 259), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006327077557730694), ('regressor__regressor__max_depth', 19), ('regressor__regressor__n_estimators', 419), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['RRU Dimer Mordred ABC',
                                                   'RRU Dimer Mordred ABCGG',
                                                   'RRU Dimer Mordred nAcid',
                                                   'RRU Dimer Mordred nBase',
                                                   'RRU Dimer Mordred '
                                                   'nAromAtom',
                                                   'RRU Dimer Mordred '
                                                   'nAromBond',
                                                   'RRU Dimer Mordred nAtom',
                                                   'RRU Dimer Mordred '
                                                   'nHeavyAtom',
                                                   'RRU Dimer Mordred '
                                                   '...
                                                   'RRU Dimer Mordred nCl',
                                                   'RRU Dimer Mordred nBr',
                                                   'RRU Dimer Mordred nX',
                                                   'RRU Dimer Mordred ATS0dv',
                                                   'RRU Dimer Mordred ATS1dv',
                                                   'RRU Dimer Mordred ATS2dv',
                                                   'RRU Dimer Mordred ATS3dv',
                                                   'RRU Dimer Mordred ATS4dv',
                                                   'RRU Dimer Mordred ATS5dv',
                                                   'RRU Dimer Mordred ATS6dv',
                                                   'RRU Dimer Mordred ATS7dv',
                                                   'RRU Dimer Mordred ATS8dv',
                                                   'RRU Dimer Mordred ATS0d',
                                                   'RRU Dimer Mordred ATS1d', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02624693677612701), ('regressor__regressor__max_depth', 14), ('regressor__regressor__n_estimators', 76), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03950384616862783), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04943935467742527), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005731540714795857), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 369), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['RRU Dimer Mordred ABC',
                                                   'RRU Dimer Mordred ABCGG',
                                                   'RRU Dimer Mordred nAcid',
                                                   'RRU Dimer Mordred nBase',
                                                   'RRU Dimer Mordred '
                                                   'nAromAtom',
                                                   'RRU Dimer Mordred '
                                                   'nAromBond',
                                                   'RRU Dimer Mordred nAtom',
                                                   'RRU Dimer Mordred '
                                                   'nHeavyAtom',
                                                   'RRU Dimer Mordred '
                                                   '...
                                                   'RRU Dimer Mordred nCl',
                                                   'RRU Dimer Mordred nBr',
                                                   'RRU Dimer Mordred nX',
                                                   'RRU Dimer Mordred ATS0dv',
                                                   'RRU Dimer Mordred ATS1dv',
                                                   'RRU Dimer Mordred ATS2dv',
                                                   'RRU Dimer Mordred ATS3dv',
                                                   'RRU Dimer Mordred ATS4dv',
                                                   'RRU Dimer Mordred ATS5dv',
                                                   'RRU Dimer Mordred ATS6dv',
                                                   'RRU Dimer Mordred ATS7dv',
                                                   'RRU Dimer Mordred ATS8dv',
                                                   'RRU Dimer Mordred ATS0d',
                                                   'RRU Dimer Mordred ATS1d', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013370441860739734), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1666), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005557158121583467), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 437), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013796581273389226), ('regressor__regressor__max_depth', 7389), ('regressor__regressor__n_estimators', 1349), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004981284053012516), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 470), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.013229089636829583), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 110), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['RRU Dimer Mordred ABC',
                                                   'RRU Dimer Mordred ABCGG',
                                                   'RRU Dimer Mordred nAcid',
                                                   'RRU Dimer Mordred nBase',
                                                   'RRU Dimer Mordred '
                                                   'nAromAtom',
                                                   'RRU Dimer Mordred '
                                                   'nAromBond',
                                                   'RRU Dimer Mordred nAtom',
                                                   'RRU Dimer Mordred '
                                                   'nHeavyAtom',
                                                   'RRU Dimer Mordred '
                                                   '...
                                                   'RRU Dimer Mordred nCl',
                                                   'RRU Dimer Mordred nBr',
                                                   'RRU Dimer Mordred nX',
                                                   'RRU Dimer Mordred ATS0dv',
                                                   'RRU Dimer Mordred ATS1dv',
                                                   'RRU Dimer Mordred ATS2dv',
                                                   'RRU Dimer Mordred ATS3dv',
                                                   'RRU Dimer Mordred ATS4dv',
                                                   'RRU Dimer Mordred ATS5dv',
                                                   'RRU Dimer Mordred ATS6dv',
                                                   'RRU Dimer Mordred ATS7dv',
                                                   'RRU Dimer Mordred ATS8dv',
                                                   'RRU Dimer Mordred ATS0d',
                                                   'RRU Dimer Mordred ATS1d', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1470), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03072688027473758), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009865569413738793), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.043707909409060386), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005644531441077408), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 394), ('regressor__regressor__n_jobs', -2)])


Average scores:	 r: 0.42±0.07	 r2: 0.17±0.07
RRU Dimer
Filename: (Mordred)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Second Peak (e-5 place holder)/RRU Dimer/(Mordred)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Second Peak (e-5 place holder)/RRU Dimer/(Mordred)_XGBR_Standard_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Second Peak (e-5 place holder)/RRU Dimer/(Mordred)_XGBR_Standard_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c031n02>
Subject: Job 491921: <Mordred_XGBR_RRU Dimer_log Second Peak (e-5 place holder)_20250204> in cluster <Hazel> Done

Job <Mordred_XGBR_RRU Dimer_log Second Peak (e-5 place holder)_20250204> was submitted from host <c027n01> by user <sdehgha2> in cluster <Hazel> at Tue Feb  4 13:37:22 2025
Job was executed on host(s) <6*c031n02>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Tue Feb  4 13:41:33 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Tue Feb  4 13:41:33 2025
Terminated at Tue Feb  4 17:24:19 2025
Results reported at Tue Feb  4 17:24:19 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "Mordred_XGBR_RRU Dimer_log Second Peak (e-5 place holder)_20250204"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/Mordred_XGBR_RRU Dimer_log Second Peak (e-5 place holder)_20250204.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/Mordred_XGBR_RRU Dimer_log Second Peak (e-5 place holder)_20250204.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py --target_features "log Second Peak (e-5 place holder)"                                   --representation "Mordred"                                   --regressor_type "XGBR"                                   --oligomer_representation "RRU Dimer" 

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   57257.00 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.96 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   13367 sec.
    Turnaround time :                            13617 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/Mordred_XGBR_RRU Dimer_log Second Peak (e-5 place holder)_20250204.err> for stderr output of this job.

