Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer Mordred ABC',
                                                   'Dimer Mordred ABCGG',
                                                   'Dimer Mordred nAcid',
                                                   'Dimer Mordred nBase',
                                                   'Dimer Mordred nAromAtom',
                                                   'Dimer Mordred nAromBond',
                                                   'Dimer Mordred nAtom',
                                                   'Dimer Mordred nHeavyAtom',
                                                   'Dimer Mordred nHetero',
                                                   'Dimer Mordred nH',
                                                   'Dimer Mor...
                                                   'Dimer Mordred nF',
                                                   'Dimer Mordred nCl',
                                                   'Dimer Mordred nBr',
                                                   'Dimer Mordred nX',
                                                   'Dimer Mordred ATS0dv',
                                                   'Dimer Mordred ATS1dv',
                                                   'Dimer Mordred ATS2dv',
                                                   'Dimer Mordred ATS3dv',
                                                   'Dimer Mordred ATS4dv',
                                                   'Dimer Mordred ATS5dv',
                                                   'Dimer Mordred ATS6dv',
                                                   'Dimer Mordred ATS7dv',
                                                   'Dimer Mordred ATS8dv',
                                                   'Dimer Mordred ATS0d',
                                                   'Dimer Mordred ATS1d',
                                                   'Dimer Mordred ATS2d', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0313113936697798), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008598250969683686), ('regressor__regressor__max_depth', 6156), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007963244429815436), ('regressor__regressor__max_depth', 32), ('regressor__regressor__n_estimators', 471), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.00870158009178539), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 68), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015370685312770885), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 448), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer Mordred ABC',
                                                   'Dimer Mordred ABCGG',
                                                   'Dimer Mordred nAcid',
                                                   'Dimer Mordred nBase',
                                                   'Dimer Mordred nAromAtom',
                                                   'Dimer Mordred nAromBond',
                                                   'Dimer Mordred nAtom',
                                                   'Dimer Mordred nHeavyAtom',
                                                   'Dimer Mordred nHetero',
                                                   'Dimer Mordred nH',
                                                   'Dimer Mor...
                                                   'Dimer Mordred nF',
                                                   'Dimer Mordred nCl',
                                                   'Dimer Mordred nBr',
                                                   'Dimer Mordred nX',
                                                   'Dimer Mordred ATS0dv',
                                                   'Dimer Mordred ATS1dv',
                                                   'Dimer Mordred ATS2dv',
                                                   'Dimer Mordred ATS3dv',
                                                   'Dimer Mordred ATS4dv',
                                                   'Dimer Mordred ATS5dv',
                                                   'Dimer Mordred ATS6dv',
                                                   'Dimer Mordred ATS7dv',
                                                   'Dimer Mordred ATS8dv',
                                                   'Dimer Mordred ATS0d',
                                                   'Dimer Mordred ATS1d',
                                                   'Dimer Mordred ATS2d', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005991343114652765), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 290), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013854309411587527), ('regressor__regressor__max_depth', 6271), ('regressor__regressor__n_estimators', 1151), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.034353281266932434), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015091157368080942), ('regressor__regressor__max_depth', 7853), ('regressor__regressor__n_estimators', 959), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001596801756618205), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 158), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer Mordred ABC',
                                                   'Dimer Mordred ABCGG',
                                                   'Dimer Mordred nAcid',
                                                   'Dimer Mordred nBase',
                                                   'Dimer Mordred nAromAtom',
                                                   'Dimer Mordred nAromBond',
                                                   'Dimer Mordred nAtom',
                                                   'Dimer Mordred nHeavyAtom',
                                                   'Dimer Mordred nHetero',
                                                   'Dimer Mordred nH',
                                                   'Dimer Mor...
                                                   'Dimer Mordred nF',
                                                   'Dimer Mordred nCl',
                                                   'Dimer Mordred nBr',
                                                   'Dimer Mordred nX',
                                                   'Dimer Mordred ATS0dv',
                                                   'Dimer Mordred ATS1dv',
                                                   'Dimer Mordred ATS2dv',
                                                   'Dimer Mordred ATS3dv',
                                                   'Dimer Mordred ATS4dv',
                                                   'Dimer Mordred ATS5dv',
                                                   'Dimer Mordred ATS6dv',
                                                   'Dimer Mordred ATS7dv',
                                                   'Dimer Mordred ATS8dv',
                                                   'Dimer Mordred ATS0d',
                                                   'Dimer Mordred ATS1d',
                                                   'Dimer Mordred ATS2d', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03972893133963027), ('regressor__regressor__max_depth', 206), ('regressor__regressor__n_estimators', 349), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0011966753095854418), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 915), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.018106219675016057), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015908221689116524), ('regressor__regressor__max_depth', 6916), ('regressor__regressor__n_estimators', 85), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 482), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer Mordred ABC',
                                                   'Dimer Mordred ABCGG',
                                                   'Dimer Mordred nAcid',
                                                   'Dimer Mordred nBase',
                                                   'Dimer Mordred nAromAtom',
                                                   'Dimer Mordred nAromBond',
                                                   'Dimer Mordred nAtom',
                                                   'Dimer Mordred nHeavyAtom',
                                                   'Dimer Mordred nHetero',
                                                   'Dimer Mordred nH',
                                                   'Dimer Mor...
                                                   'Dimer Mordred nF',
                                                   'Dimer Mordred nCl',
                                                   'Dimer Mordred nBr',
                                                   'Dimer Mordred nX',
                                                   'Dimer Mordred ATS0dv',
                                                   'Dimer Mordred ATS1dv',
                                                   'Dimer Mordred ATS2dv',
                                                   'Dimer Mordred ATS3dv',
                                                   'Dimer Mordred ATS4dv',
                                                   'Dimer Mordred ATS5dv',
                                                   'Dimer Mordred ATS6dv',
                                                   'Dimer Mordred ATS7dv',
                                                   'Dimer Mordred ATS8dv',
                                                   'Dimer Mordred ATS0d',
                                                   'Dimer Mordred ATS1d',
                                                   'Dimer Mordred ATS2d', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0017623240791830989), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 485), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0022759167876890323), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 74), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006904304539992788), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 56), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016337193434973396), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 553), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010492092533694554), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer Mordred ABC',
                                                   'Dimer Mordred ABCGG',
                                                   'Dimer Mordred nAcid',
                                                   'Dimer Mordred nBase',
                                                   'Dimer Mordred nAromAtom',
                                                   'Dimer Mordred nAromBond',
                                                   'Dimer Mordred nAtom',
                                                   'Dimer Mordred nHeavyAtom',
                                                   'Dimer Mordred nHetero',
                                                   'Dimer Mordred nH',
                                                   'Dimer Mor...
                                                   'Dimer Mordred nF',
                                                   'Dimer Mordred nCl',
                                                   'Dimer Mordred nBr',
                                                   'Dimer Mordred nX',
                                                   'Dimer Mordred ATS0dv',
                                                   'Dimer Mordred ATS1dv',
                                                   'Dimer Mordred ATS2dv',
                                                   'Dimer Mordred ATS3dv',
                                                   'Dimer Mordred ATS4dv',
                                                   'Dimer Mordred ATS5dv',
                                                   'Dimer Mordred ATS6dv',
                                                   'Dimer Mordred ATS7dv',
                                                   'Dimer Mordred ATS8dv',
                                                   'Dimer Mordred ATS0d',
                                                   'Dimer Mordred ATS1d',
                                                   'Dimer Mordred ATS2d', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002954550514133003), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 520), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007939610837019875), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 204), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006748186291253155), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 360), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0021959552146586076), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1072), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer Mordred ABC',
                                                   'Dimer Mordred ABCGG',
                                                   'Dimer Mordred nAcid',
                                                   'Dimer Mordred nBase',
                                                   'Dimer Mordred nAromAtom',
                                                   'Dimer Mordred nAromBond',
                                                   'Dimer Mordred nAtom',
                                                   'Dimer Mordred nHeavyAtom',
                                                   'Dimer Mordred nHetero',
                                                   'Dimer Mordred nH',
                                                   'Dimer Mor...
                                                   'Dimer Mordred nF',
                                                   'Dimer Mordred nCl',
                                                   'Dimer Mordred nBr',
                                                   'Dimer Mordred nX',
                                                   'Dimer Mordred ATS0dv',
                                                   'Dimer Mordred ATS1dv',
                                                   'Dimer Mordred ATS2dv',
                                                   'Dimer Mordred ATS3dv',
                                                   'Dimer Mordred ATS4dv',
                                                   'Dimer Mordred ATS5dv',
                                                   'Dimer Mordred ATS6dv',
                                                   'Dimer Mordred ATS7dv',
                                                   'Dimer Mordred ATS8dv',
                                                   'Dimer Mordred ATS0d',
                                                   'Dimer Mordred ATS1d',
                                                   'Dimer Mordred ATS2d', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002620117053391353), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 613), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0014933140062445417), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 754), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.050791617138676685), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0025666268011902095), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer Mordred ABC',
                                                   'Dimer Mordred ABCGG',
                                                   'Dimer Mordred nAcid',
                                                   'Dimer Mordred nBase',
                                                   'Dimer Mordred nAromAtom',
                                                   'Dimer Mordred nAromBond',
                                                   'Dimer Mordred nAtom',
                                                   'Dimer Mordred nHeavyAtom',
                                                   'Dimer Mordred nHetero',
                                                   'Dimer Mordred nH',
                                                   'Dimer Mor...
                                                   'Dimer Mordred nF',
                                                   'Dimer Mordred nCl',
                                                   'Dimer Mordred nBr',
                                                   'Dimer Mordred nX',
                                                   'Dimer Mordred ATS0dv',
                                                   'Dimer Mordred ATS1dv',
                                                   'Dimer Mordred ATS2dv',
                                                   'Dimer Mordred ATS3dv',
                                                   'Dimer Mordred ATS4dv',
                                                   'Dimer Mordred ATS5dv',
                                                   'Dimer Mordred ATS6dv',
                                                   'Dimer Mordred ATS7dv',
                                                   'Dimer Mordred ATS8dv',
                                                   'Dimer Mordred ATS0d',
                                                   'Dimer Mordred ATS1d',
                                                   'Dimer Mordred ATS2d', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016198234887195024), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 698), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011108706051587272), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 90), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0019433382265171889), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 558), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005427550608943698), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 160), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 362), ('regressor__regressor__n_jobs', -2)])


Average scores:	 r: 0.33±0.22	 r2: -0.05±0.34
Dimer
Filename: (Mordred)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Third Peak wo placeholder/Dimer/(Mordred)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Third Peak wo placeholder/Dimer/(Mordred)_XGBR_Standard_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Third Peak wo placeholder/Dimer/(Mordred)_XGBR_Standard_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c008n01>
Subject: Job 491855: <Mordred_XGBR_Dimer_log Third Peak wo placeholder_20250204> in cluster <Hazel> Done

Job <Mordred_XGBR_Dimer_log Third Peak wo placeholder_20250204> was submitted from host <c039n02> by user <sdehgha2> in cluster <Hazel> at Tue Feb  4 13:31:11 2025
Job was executed on host(s) <6*c008n01>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Tue Feb  4 13:32:02 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Tue Feb  4 13:32:02 2025
Terminated at Tue Feb  4 14:19:19 2025
Results reported at Tue Feb  4 14:19:19 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "Mordred_XGBR_Dimer_log Third Peak wo placeholder_20250204"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/Mordred_XGBR_Dimer_log Third Peak wo placeholder_20250204.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/Mordred_XGBR_Dimer_log Third Peak wo placeholder_20250204.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py --target_features "log Third Peak wo placeholder"                                   --representation "Mordred"                                   --regressor_type "XGBR"                                   --oligomer_representation "Dimer" 

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   9516.00 sec.
    Max Memory :                                 3 GB
    Average Memory :                             2.94 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               13.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   2858 sec.
    Turnaround time :                            2888 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/Mordred_XGBR_Dimer_log Third Peak wo placeholder_20250204.err> for stderr output of this job.

