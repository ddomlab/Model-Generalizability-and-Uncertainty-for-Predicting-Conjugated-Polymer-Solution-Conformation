Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003477881652989226), ('regressor__regressor__max_depth', 32), ('regressor__regressor__n_estimators', 505), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03326755519841701), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 73), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04298366652214217), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008318686226412337), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 298), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03419041468803888), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015535328525375287), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1525), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.05578825907539971), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 567), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018117192943773515), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1116), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007239312742276073), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 313), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012721336186380706), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 135), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0363384546512244), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.029380287142759306), ('regressor__regressor__max_depth', 6578), ('regressor__regressor__n_estimators', 91), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013184811014051849), ('regressor__regressor__max_depth', 2764), ('regressor__regressor__n_estimators', 1864), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09959821624674509), ('regressor__regressor__max_depth', 4800), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.003511357677788871), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 434), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 65), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002627693331058198), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1047), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.033352774916829656), ('regressor__regressor__max_depth', 5266), ('regressor__regressor__n_estimators', 68), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008067554683268204), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 289), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006236171821118797), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 376), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.052667604562778074), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0036958843394183016), ('regressor__regressor__max_depth', 196), ('regressor__regressor__n_estimators', 486), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0097153580127217), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 193), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.06382608721294218), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015843570502761105), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 143), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010871307211537519), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 224), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014592313747863935), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 121), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0018138821758011089), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 840), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01600733335529801), ('regressor__regressor__max_depth', 22), ('regressor__regressor__n_estimators', 131), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023406135422553323), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 726), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.03833940044803117), ('regressor__regressor__max_depth', 8784), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0014386945196194088), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])


Average scores:	 r: 0.42±0.08	 r2: 0.16±0.07
Dimer
Filename: (ECFP3.count.512)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Second Peak (e-5 place holder)/Dimer/(ECFP3.count.512)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Second Peak (e-5 place holder)/Dimer/(ECFP3.count.512)_XGBR_Standard_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Second Peak (e-5 place holder)/Dimer/(ECFP3.count.512)_XGBR_Standard_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c038n04>
Subject: Job 492328: <ECFP_XGBR_Dimer_log Second Peak (e-5 place holder)_3_count_20250204> in cluster <Hazel> Done

Job <ECFP_XGBR_Dimer_log Second Peak (e-5 place holder)_3_count_20250204> was submitted from host <c013n01> by user <sdehgha2> in cluster <Hazel> at Tue Feb  4 14:12:58 2025
Job was executed on host(s) <6*c038n04>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Tue Feb  4 14:28:44 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Tue Feb  4 14:28:44 2025
Terminated at Tue Feb  4 15:39:32 2025
Results reported at Tue Feb  4 15:39:32 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "ECFP_XGBR_Dimer_log Second Peak (e-5 place holder)_3_count_20250204"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/ECFP_XGBR_Dimer_log Second Peak (e-5 place holder)_3_count_20250204.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/ECFP_XGBR_Dimer_log Second Peak (e-5 place holder)_3_count_20250204.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py --target_features "log Second Peak (e-5 place holder)"                                   --representation "ECFP"                                   --regressor_type "XGBR"                                   --oligomer_representation "Dimer"                                   --radius "3"                                   --vector "count" 

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   15665.00 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.87 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   4268 sec.
    Turnaround time :                            5194 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/ECFP_XGBR_Dimer_log Second Peak (e-5 place holder)_3_count_20250204.err> for stderr output of this job.

