Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011826780571453624), ('regressor__regressor__max_depth', 3030), ('regressor__regressor__n_estimators', 151), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.018466612494104615), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 101), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.016199303822769767), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001712524551650608), ('regressor__regressor__max_depth', 12), ('regressor__regressor__n_estimators', 993), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0026329495234183476), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 653), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005851924831717748), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 190), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.013234417257999984), ('regressor__regressor__max_depth', 3086), ('regressor__regressor__n_estimators', 140), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0054320071245412575), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 347), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0026314341219495128), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 531), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0034681780100447417), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 462), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.005618302260410665), ('regressor__regressor__max_depth', 15), ('regressor__regressor__n_estimators', 275), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006094716089457949), ('regressor__regressor__max_depth', 4181), ('regressor__regressor__n_estimators', 170), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008743797422547729), ('regressor__regressor__max_depth', 2190), ('regressor__regressor__n_estimators', 163), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011302045097148931), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 158), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004360748814544487), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 386), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0043646753653481234), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 400), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0039302078797918945), ('regressor__regressor__max_depth', 7781), ('regressor__regressor__n_estimators', 472), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007314247978490995), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 155), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010870054460848622), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 162), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.07154278241266443), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1065), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008826403917780586), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 169), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0035428807151259806), ('regressor__regressor__max_depth', 1781), ('regressor__regressor__n_estimators', 462), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019016028712041978), ('regressor__regressor__max_depth', 21), ('regressor__regressor__n_estimators', 101), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09725180457383661), ('regressor__regressor__max_depth', 6548), ('regressor__regressor__n_estimators', 167), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0035428807151259806), ('regressor__regressor__max_depth', 1781), ('regressor__regressor__n_estimators', 462), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0019130847303925084), ('regressor__regressor__max_depth', 12), ('regressor__regressor__n_estimators', 748), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.09969097974032459), ('regressor__regressor__max_depth', 352), ('regressor__regressor__n_estimators', 180), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001971669882971116), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 758), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.043603695255099405), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01601441345372636), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_MACCS_bit1',
                                                   'Dimer_MACCS_bit2',
                                                   'Dimer_MACCS_bit3',
                                                   'Dimer_MACCS_bit4',
                                                   'Dimer_MACCS_bit5',
                                                   'Dimer_MACCS_bit6',
                                                   'Dimer_MACCS_bit7',
                                                   'Dimer_MACCS_bit8',
                                                   'Dimer_MACCS_bit9',
                                                   'Dimer_MACCS_bit10',
                                                   'Dimer_MACCS_bit11',
                                                   'Dimer_M...
                                                   'Dimer_MACCS_bit15',
                                                   'Dimer_MACCS_bit16',
                                                   'Dimer_MACCS_bit17',
                                                   'Dimer_MACCS_bit18',
                                                   'Dimer_MACCS_bit19',
                                                   'Dimer_MACCS_bit20',
                                                   'Dimer_MACCS_bit21',
                                                   'Dimer_MACCS_bit22',
                                                   'Dimer_MACCS_bit23',
                                                   'Dimer_MACCS_bit24',
                                                   'Dimer_MACCS_bit25',
                                                   'Dimer_MACCS_bit26',
                                                   'Dimer_MACCS_bit27',
                                                   'Dimer_MACCS_bit28',
                                                   'Dimer_MACCS_bit29',
                                                   'Dimer_MACCS_bit30', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0037454002513628713), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 298), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1526), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008798209807240087), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 161), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02614891236609831), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])


Average scores:	 r: 0.31±0.08	 r2: 0.08±0.06
Dimer
Filename: (MACCS)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Second Peak (e-5 place holder)/Dimer/(MACCS)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Second Peak (e-5 place holder)/Dimer/(MACCS)_XGBR_Standard_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Second Peak (e-5 place holder)/Dimer/(MACCS)_XGBR_Standard_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c013n01>
Subject: Job 491922: <MACCS_XGBR_Dimer_log Second Peak (e-5 place holder)_20250204> in cluster <Hazel> Done

Job <MACCS_XGBR_Dimer_log Second Peak (e-5 place holder)_20250204> was submitted from host <c027n01> by user <sdehgha2> in cluster <Hazel> at Tue Feb  4 13:37:22 2025
Job was executed on host(s) <6*c013n01>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Tue Feb  4 13:45:45 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Tue Feb  4 13:45:45 2025
Terminated at Tue Feb  4 14:12:56 2025
Results reported at Tue Feb  4 14:12:56 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "MACCS_XGBR_Dimer_log Second Peak (e-5 place holder)_20250204"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/MACCS_XGBR_Dimer_log Second Peak (e-5 place holder)_20250204.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/MACCS_XGBR_Dimer_log Second Peak (e-5 place holder)_20250204.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py --target_features "log Second Peak (e-5 place holder)"                                   --representation "MACCS"                                   --regressor_type "XGBR"                                   --oligomer_representation "Dimer" 

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   4506.00 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.43 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   1659 sec.
    Turnaround time :                            2134 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/MACCS_XGBR_Dimer_log Second Peak (e-5 place holder)_20250204.err> for stderr output of this job.

