Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008340954205636934), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 190), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001538603126111804), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 979), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0014761553821206978), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 920), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010707389928726788), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 110), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004698661837452708), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 255), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.013724597681417393), ('regressor__regressor__max_depth', 916), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.024407794013358592), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 77), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01961401865952597), ('regressor__regressor__max_depth', 24), ('regressor__regressor__n_estimators', 83), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 12), ('regressor__regressor__n_estimators', 1181), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013644940976610647), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 653), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 13), ('regressor__regressor__n_estimators', 1177), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0067992318186690034), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 269), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002150366826908796), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 588), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 9873), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006458646697627308), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 174), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.013121340277331396), ('regressor__regressor__max_depth', 3473), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.013121340277331396), ('regressor__regressor__max_depth', 3473), ('regressor__regressor__n_estimators', 98), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0020396691270151805), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 541), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008659046480042117), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 121), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.025169209548475582), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 57), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006679772560046718), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 182), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.019688140171240646), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01173431982268037), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 108), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.002092734435271187), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 715), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.026286280867844413), ('regressor__regressor__max_depth', 9105), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.010615639978654915), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 119), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013130506713631212), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 691), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01328115476585722), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 121), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010051402566701342), ('regressor__regressor__max_depth', 3181), ('regressor__regressor__n_estimators', 1368), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015129835988407203), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 85), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015568232649462981), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 82), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0023956315519463338), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 531), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004506711275457318), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 384), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008818458203064851), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 132), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0012630884605443254), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 923), ('regressor__regressor__n_jobs', -2)])


Average scores:	 r: 0.31±0.08	 r2: 0.07±0.06
Dimer
Filename: (ECFP3.count.512)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log First Peak (e-5 place holder)/Dimer/(ECFP3.count.512)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log First Peak (e-5 place holder)/Dimer/(ECFP3.count.512)_XGBR_Standard_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log First Peak (e-5 place holder)/Dimer/(ECFP3.count.512)_XGBR_Standard_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c013n01>
Subject: Job 492326: <ECFP_XGBR_Dimer_log First Peak (e-5 place holder)_3_count_20250204> in cluster <Hazel> Done

Job <ECFP_XGBR_Dimer_log First Peak (e-5 place holder)_3_count_20250204> was submitted from host <c013n01> by user <sdehgha2> in cluster <Hazel> at Tue Feb  4 14:12:58 2025
Job was executed on host(s) <6*c013n01>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Tue Feb  4 14:13:57 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Tue Feb  4 14:13:57 2025
Terminated at Tue Feb  4 15:04:17 2025
Results reported at Tue Feb  4 15:04:17 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "ECFP_XGBR_Dimer_log First Peak (e-5 place holder)_3_count_20250204"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/ECFP_XGBR_Dimer_log First Peak (e-5 place holder)_3_count_20250204.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/ECFP_XGBR_Dimer_log First Peak (e-5 place holder)_3_count_20250204.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py --target_features "log First Peak (e-5 place holder)"                                   --representation "ECFP"                                   --regressor_type "XGBR"                                   --oligomer_representation "Dimer"                                   --radius "3"                                   --vector "count" 

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   10931.66 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.92 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   3043 sec.
    Turnaround time :                            3079 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/ECFP_XGBR_Dimer_log First Peak (e-5 place holder)_3_count_20250204.err> for stderr output of this job.

