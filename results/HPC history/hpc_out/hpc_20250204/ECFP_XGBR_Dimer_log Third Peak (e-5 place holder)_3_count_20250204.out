Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0013121117935976686), ('regressor__regressor__max_depth', 3431), ('regressor__regressor__n_estimators', 608), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.006737061466919042), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 150), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015565177034053586), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 65), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.007357583607109866), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 204), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0058550409914436725), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 124), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0015091157368080942), ('regressor__regressor__max_depth', 7853), ('regressor__regressor__n_estimators', 959), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008423255044076549), ('regressor__regressor__max_depth', 28), ('regressor__regressor__n_estimators', 222), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.04470311599710446), ('regressor__regressor__max_depth', 19), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0025621553399968345), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 576), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0019643841219403697), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 684), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.014052658974259785), ('regressor__regressor__max_depth', 3594), ('regressor__regressor__n_estimators', 99), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.018473410028417844), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0070360716390688235), ('regressor__regressor__max_depth', 18), ('regressor__regressor__n_estimators', 158), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004630763707347688), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 246), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011495062627597906), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 138), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.009644632997105594), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 105), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.01728463523480272), ('regressor__regressor__max_depth', 26), ('regressor__regressor__n_estimators', 51), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0052975208339989775), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 270), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.024214585525083952), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0010002099347772666), ('regressor__regressor__max_depth', 2724), ('regressor__regressor__n_estimators', 1363), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004608765977157782), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 189), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011152472576575131), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 113), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 2000), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.008022735076666971), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 206), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.012942928101487831), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 64), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1124), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.013686059091459207), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 100), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.001), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 1305), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0016283030541223292), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 1078), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.015835936402080846), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 87), ('regressor__regressor__n_jobs', -2)])


Pipeline(steps=[('scaling features',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('structural_scaling',
                                                  StandardScaler(),
                                                  ['Dimer_ECFP6_count_bit0',
                                                   'Dimer_ECFP6_count_bit1',
                                                   'Dimer_ECFP6_count_bit2',
                                                   'Dimer_ECFP6_count_bit3',
                                                   'Dimer_ECFP6_count_bit4',
                                                   'Dimer_ECFP6_count_bit5',
                                                   'Dimer_ECFP6_count_bit6',
                                                   'Dimer_ECFP6_count_bit7',
                                                   'Dimer_ECFP6_count_...
                                                   'Dimer_ECFP6_count_bit18',
                                                   'Dimer_ECFP6_count_bit19',
                                                   'Dimer_ECFP6_count_bit20',
                                                   'Dimer_ECFP6_count_bit21',
                                                   'Dimer_ECFP6_count_bit22',
                                                   'Dimer_ECFP6_count_bit23',
                                                   'Dimer_ECFP6_count_bit24',
                                                   'Dimer_ECFP6_count_bit25',
                                                   'Dimer_ECFP6_count_bit26',
                                                   'Dimer_ECFP6_count_bit27',
                                                   'Dimer_ECFP6_count_bit28',
                                                   'Dimer_ECFP6_count_bit29', ...])],
                                   verbose_feature_names_out=False))])



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02585182736527816), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.02173024087609096), ('regressor__regressor__max_depth', 11), ('regressor__regressor__n_estimators', 50), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.004317511065177673), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 391), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.011450191825355737), ('regressor__regressor__max_depth', 10), ('regressor__regressor__n_estimators', 79), ('regressor__regressor__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__learning_rate', 0.0043476620277496224), ('regressor__regressor__max_depth', 10000), ('regressor__regressor__n_estimators', 324), ('regressor__regressor__n_jobs', -2)])


Average scores:	 r: 0.29±0.07	 r2: 0.06±0.06
Dimer
Filename: (ECFP3.count.512)_XGBR_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Third Peak (e-5 place holder)/Dimer/(ECFP3.count.512)_XGBR_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Third Peak (e-5 place holder)/Dimer/(ECFP3.count.512)_XGBR_Standard_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_log Third Peak (e-5 place holder)/Dimer/(ECFP3.count.512)_XGBR_Standard_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c008n01>
Subject: Job 492330: <ECFP_XGBR_Dimer_log Third Peak (e-5 place holder)_3_count_20250204> in cluster <Hazel> Done

Job <ECFP_XGBR_Dimer_log Third Peak (e-5 place holder)_3_count_20250204> was submitted from host <c013n01> by user <sdehgha2> in cluster <Hazel> at Tue Feb  4 14:12:58 2025
Job was executed on host(s) <6*c008n01>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Tue Feb  4 14:37:13 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Tue Feb  4 14:37:13 2025
Terminated at Tue Feb  4 15:27:47 2025
Results reported at Tue Feb  4 15:27:47 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "ECFP_XGBR_Dimer_log Third Peak (e-5 place holder)_3_count_20250204"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/ECFP_XGBR_Dimer_log Third Peak (e-5 place holder)_3_count_20250204.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/ECFP_XGBR_Dimer_log Third Peak (e-5 place holder)_3_count_20250204.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py --target_features "log Third Peak (e-5 place holder)"                                   --representation "ECFP"                                   --regressor_type "XGBR"                                   --oligomer_representation "Dimer"                                   --radius "3"                                   --vector "count" 

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   10637.00 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.60 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   3035 sec.
    Turnaround time :                            4489 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_20250204/ECFP_XGBR_Dimer_log Third Peak (e-5 place holder)_3_count_20250204.err> for stderr output of this job.

