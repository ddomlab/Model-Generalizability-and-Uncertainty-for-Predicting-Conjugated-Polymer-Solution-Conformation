


OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.004907715906831805), ('regressor__regressor__estimator__max_depth', 10), ('regressor__regressor__estimator__n_estimators', 982), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.005011397481081658), ('regressor__regressor__estimator__max_depth', 10000), ('regressor__regressor__estimator__n_estimators', 964), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.019968026473794167), ('regressor__regressor__estimator__max_depth', 94), ('regressor__regressor__estimator__n_estimators', 274), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.002258734162732198), ('regressor__regressor__estimator__max_depth', 10000), ('regressor__regressor__estimator__n_estimators', 2000), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.007686479100452777), ('regressor__regressor__estimator__max_depth', 10), ('regressor__regressor__estimator__n_estimators', 547), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.06515480344601467), ('regressor__regressor__estimator__max_depth', 208), ('regressor__regressor__estimator__n_estimators', 590), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.007559196985639151), ('regressor__regressor__estimator__max_depth', 17), ('regressor__regressor__estimator__n_estimators', 563), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.005685621731891744), ('regressor__regressor__estimator__max_depth', 10000), ('regressor__regressor__estimator__n_estimators', 553), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.007829349372513564), ('regressor__regressor__estimator__max_depth', 57), ('regressor__regressor__estimator__n_estimators', 615), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.0074868493511423455), ('regressor__regressor__estimator__max_depth', 10000), ('regressor__regressor__estimator__n_estimators', 584), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.020824816288557438), ('regressor__regressor__estimator__max_depth', 10), ('regressor__regressor__estimator__n_estimators', 203), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.04093401903448159), ('regressor__regressor__estimator__max_depth', 10000), ('regressor__regressor__estimator__n_estimators', 83), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.1), ('regressor__regressor__estimator__max_depth', 6195), ('regressor__regressor__estimator__n_estimators', 50), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.010625151841998196), ('regressor__regressor__estimator__max_depth', 1356), ('regressor__regressor__estimator__n_estimators', 392), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.013777938284069343), ('regressor__regressor__estimator__max_depth', 4334), ('regressor__regressor__estimator__n_estimators', 321), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.06291912573151652), ('regressor__regressor__estimator__max_depth', 10000), ('regressor__regressor__estimator__n_estimators', 50), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.044209097540604134), ('regressor__regressor__estimator__max_depth', 10000), ('regressor__regressor__estimator__n_estimators', 123), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.02272428821693448), ('regressor__regressor__estimator__max_depth', 10000), ('regressor__regressor__estimator__n_estimators', 152), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.05819193175754205), ('regressor__regressor__estimator__max_depth', 10000), ('regressor__regressor__estimator__n_estimators', 79), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.01734880815181516), ('regressor__regressor__estimator__max_depth', 10000), ('regressor__regressor__estimator__n_estimators', 184), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.05565238926274726), ('regressor__regressor__estimator__max_depth', 10), ('regressor__regressor__estimator__n_estimators', 83), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.0428839069891835), ('regressor__regressor__estimator__max_depth', 236), ('regressor__regressor__estimator__n_estimators', 102), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.016577556749701742), ('regressor__regressor__estimator__max_depth', 75), ('regressor__regressor__estimator__n_estimators', 264), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.042485965168426156), ('regressor__regressor__estimator__max_depth', 10), ('regressor__regressor__estimator__n_estimators', 85), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.0428839069891835), ('regressor__regressor__estimator__max_depth', 236), ('regressor__regressor__estimator__n_estimators', 102), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.001), ('regressor__regressor__estimator__max_depth', 10000), ('regressor__regressor__estimator__n_estimators', 2000), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.0016813324224939452), ('regressor__regressor__estimator__max_depth', 10000), ('regressor__regressor__estimator__n_estimators', 2000), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.008510093387824422), ('regressor__regressor__estimator__max_depth', 10), ('regressor__regressor__estimator__n_estimators', 479), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.049400615249328775), ('regressor__regressor__estimator__max_depth', 127), ('regressor__regressor__estimator__n_estimators', 85), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.07111369892361666), ('regressor__regressor__estimator__max_depth', 10000), ('regressor__regressor__estimator__n_estimators', 50), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.08706825030847706), ('regressor__regressor__estimator__max_depth', 818), ('regressor__regressor__estimator__n_estimators', 50), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.06346223380352391), ('regressor__regressor__estimator__max_depth', 841), ('regressor__regressor__estimator__n_estimators', 50), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.09934887008169835), ('regressor__regressor__estimator__max_depth', 119), ('regressor__regressor__estimator__n_estimators', 51), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.07975713874460622), ('regressor__regressor__estimator__max_depth', 1035), ('regressor__regressor__estimator__n_estimators', 54), ('regressor__regressor__estimator__n_jobs', -2)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR XGBR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__learning_rate', 0.03258035627116066), ('regressor__regressor__estimator__max_depth', 15), ('regressor__regressor__estimator__n_estimators', 179), ('regressor__regressor__estimator__n_jobs', -2)])


Average scores:	 r2: [-0.133  0.031 -0.553]±[0.205 0.154 2.379]
[array([-0.13258432,  0.03101477, -0.55262112]), array([9.30899844e+00, 1.54799677e+02, 9.45185178e+04]), array([5.06711188e+00, 8.36815098e+01, 1.38785211e+04])]
{6: {'fit_time': array([2.6112082 , 2.5697732 , 2.60305738, 2.59569526, 2.71151376]), 'score_time': array([0.0426271 , 0.04239488, 0.04066849, 0.04466271, 0.03908896]), 'test_r2': [array([0.01463029, 0.0254998 , 0.0094689 ]), array([ 0.05274836, -0.17444662, -0.02555977]), array([ 0.19359997,  0.24362209, -2.64103137]), array([-0.14647049,  0.0053973 , -0.11348623]), array([-0.48889352, -0.0877078 ,  0.14822688])], 'test_rmse': [array([6.42982900e+00, 1.40685535e+02, 1.70877092e+04]), array([8.51756640e+00, 1.48147080e+02, 3.38349144e+05]), array([7.92357835e+00, 1.61109880e+02, 4.58654501e+04]), array([1.03214118e+01, 1.66440000e+02, 1.36505683e+04]), array([1.17011383e+01, 1.68201930e+02, 1.80953718e+04])], 'test_mae': [array([3.20301613e+00, 7.99742092e+01, 3.62375018e+03]), array([4.38727779e+00, 8.22172290e+01, 5.36209360e+04]), array([4.23115630e+00, 8.84255607e+01, 6.44043966e+03]), array([   5.62788479,   73.93688382, 3786.15504422]), array([   7.35796837,   96.84490789, 4161.18508593])], 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__estimator__objective': 'reg:squarederror', 'regressor__estimator__base_score': None, 'regressor__estimator__booster': None, 'regressor__estimator__callbacks': None, 'regressor__estimator__colsample_bylevel': None, 'regressor__estimator__colsample_bynode': None, 'regressor__estimator__colsample_bytree': None, 'regressor__estimator__device': None, 'regressor__estimator__early_stopping_rounds': None, 'regressor__estimator__enable_categorical': False, 'regressor__estimator__eval_metric': None, 'regressor__estimator__feature_types': None, 'regressor__estimator__gamma': None, 'regressor__estimator__grow_policy': None, 'regressor__estimator__importance_type': None, 'regressor__estimator__interaction_constraints': None, 'regressor__estimator__learning_rate': 0.004907715906831805, 'regressor__estimator__max_bin': None, 'regressor__estimator__max_cat_threshold': None, 'regressor__estimator__max_cat_to_onehot': None, 'regressor__estimator__max_delta_step': None, 'regressor__estimator__max_depth': 10, 'regressor__estimator__max_leaves': None, 'regressor__estimator__min_child_weight': None, 'regressor__estimator__missing': nan, 'regressor__estimator__monotone_constraints': None, 'regressor__estimator__multi_strategy': None, 'regressor__estimator__n_estimators': 982, 'regressor__estimator__n_jobs': -2, 'regressor__estimator__num_parallel_tree': None, 'regressor__estimator__random_state': None, 'regressor__estimator__reg_alpha': None, 'regressor__estimator__reg_lambda': None, 'regressor__estimator__sampling_method': None, 'regressor__estimator__scale_pos_weight': None, 'regressor__estimator__subsample': None, 'regressor__estimator__tree_method': None, 'regressor__estimator__validate_parameters': None, 'regressor__estimator__verbosity': None, 'regressor__n_jobs': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__log transform__accept_sparse': False, 'transformer__log transform__check_inverse': True, 'transformer__log transform__feature_names_out': None, 'transformer__log transform__inv_kw_args': None, 'transformer__log transform__kw_args': None, 'transformer__log transform__validate': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__unit_variance': False, 'transformer__y scaler__with_centering': True, 'transformer__y scaler__with_scaling': True}}, 13: {'fit_time': array([1.95747352, 1.81359363, 2.02052259, 2.02705765, 1.95045996]), 'score_time': array([0.03984356, 0.03794575, 0.03838897, 0.03638744, 0.0380311 ]), 'test_r2': [array([-0.09967385,  0.07109921, -0.02442537]), array([-0.2897829 ,  0.0746266 ,  0.08348344]), array([-0.07234467,  0.05686139,  0.15310892]), array([ 0.27908461,  0.07807041, -0.01144928]), array([0.00613543, 0.03081314, 0.95119034])], 'test_rmse': [array([  10.29322946,  174.80196445, 8872.08012724]), array([1.01565215e+01, 1.55473628e+02, 2.64758807e+04]), array([9.83845975e+00, 1.46183383e+02, 8.61382027e+04]), array([5.46999647e+00, 1.48618099e+02, 3.24132463e+05]), array([   8.7203014 ,  142.42281706, 3268.13690271])], 'test_mae': [array([   5.5167819 ,   98.75466889, 2373.67036474]), array([   5.51641198,   87.46214868, 5505.67683224]), array([5.82126268e+00, 6.92482033e+01, 1.21956994e+04]), array([2.95739120e+00, 7.98161533e+01, 4.46930712e+04]), array([  4.41889574,  78.16367425, 913.35863896])], 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__estimator__objective': 'reg:squarederror', 'regressor__estimator__base_score': None, 'regressor__estimator__booster': None, 'regressor__estimator__callbacks': None, 'regressor__estimator__colsample_bylevel': None, 'regressor__estimator__colsample_bynode': None, 'regressor__estimator__colsample_bytree': None, 'regressor__estimator__device': None, 'regressor__estimator__early_stopping_rounds': None, 'regressor__estimator__enable_categorical': False, 'regressor__estimator__eval_metric': None, 'regressor__estimator__feature_types': None, 'regressor__estimator__gamma': None, 'regressor__estimator__grow_policy': None, 'regressor__estimator__importance_type': None, 'regressor__estimator__interaction_constraints': None, 'regressor__estimator__learning_rate': 0.007559196985639151, 'regressor__estimator__max_bin': None, 'regressor__estimator__max_cat_threshold': None, 'regressor__estimator__max_cat_to_onehot': None, 'regressor__estimator__max_delta_step': None, 'regressor__estimator__max_depth': 17, 'regressor__estimator__max_leaves': None, 'regressor__estimator__min_child_weight': None, 'regressor__estimator__missing': nan, 'regressor__estimator__monotone_constraints': None, 'regressor__estimator__multi_strategy': None, 'regressor__estimator__n_estimators': 563, 'regressor__estimator__n_jobs': -2, 'regressor__estimator__num_parallel_tree': None, 'regressor__estimator__random_state': None, 'regressor__estimator__reg_alpha': None, 'regressor__estimator__reg_lambda': None, 'regressor__estimator__sampling_method': None, 'regressor__estimator__scale_pos_weight': None, 'regressor__estimator__subsample': None, 'regressor__estimator__tree_method': None, 'regressor__estimator__validate_parameters': None, 'regressor__estimator__verbosity': None, 'regressor__n_jobs': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__log transform__accept_sparse': False, 'transformer__log transform__check_inverse': True, 'transformer__log transform__feature_names_out': None, 'transformer__log transform__inv_kw_args': None, 'transformer__log transform__kw_args': None, 'transformer__log transform__validate': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__unit_variance': False, 'transformer__y scaler__with_centering': True, 'transformer__y scaler__with_scaling': True}}, 42: {'fit_time': array([1.15549874, 1.12886453, 1.09498262, 1.17450237, 1.22758627]), 'score_time': array([0.03038049, 0.03211904, 0.03242326, 0.02940011, 0.03566146]), 'test_r2': [array([-0.12248414,  0.01199108, -0.01976014]), array([-0.21283271,  0.12627812,  0.18033016]), array([ 0.20073285,  0.06571815, -0.01412133]), array([-0.21150773,  0.33908134, -0.31250588]), array([-0.08340334, -0.25929494, -1.74355953])], 'test_rmse': [array([9.55166308e+00, 1.54417890e+02, 2.36844857e+04]), array([9.58240117e+00, 1.55933757e+02, 5.42192511e+04]), array([5.79381275e+00, 1.57829727e+02, 3.32216586e+05]), array([1.12263795e+01, 1.43379155e+02, 1.58057986e+04]), array([9.33675842e+00, 1.50714569e+02, 3.22684196e+04])], 'test_mae': [array([   5.46409126,   90.17169025, 4093.59918854]), array([5.20897826e+00, 7.51772948e+01, 9.34748318e+03]), array([3.04164953e+00, 8.78401288e+01, 4.76449447e+04]), array([   6.06966168,   70.36295279, 3652.99944314]), array([   5.11329124,   88.5361828 , 4313.87408025])], 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__estimator__objective': 'reg:squarederror', 'regressor__estimator__base_score': None, 'regressor__estimator__booster': None, 'regressor__estimator__callbacks': None, 'regressor__estimator__colsample_bylevel': None, 'regressor__estimator__colsample_bynode': None, 'regressor__estimator__colsample_bytree': None, 'regressor__estimator__device': None, 'regressor__estimator__early_stopping_rounds': None, 'regressor__estimator__enable_categorical': False, 'regressor__estimator__eval_metric': None, 'regressor__estimator__feature_types': None, 'regressor__estimator__gamma': None, 'regressor__estimator__grow_policy': None, 'regressor__estimator__importance_type': None, 'regressor__estimator__interaction_constraints': None, 'regressor__estimator__learning_rate': 0.013777938284069343, 'regressor__estimator__max_bin': None, 'regressor__estimator__max_cat_threshold': None, 'regressor__estimator__max_cat_to_onehot': None, 'regressor__estimator__max_delta_step': None, 'regressor__estimator__max_depth': 4334, 'regressor__estimator__max_leaves': None, 'regressor__estimator__min_child_weight': None, 'regressor__estimator__missing': nan, 'regressor__estimator__monotone_constraints': None, 'regressor__estimator__multi_strategy': None, 'regressor__estimator__n_estimators': 321, 'regressor__estimator__n_jobs': -2, 'regressor__estimator__num_parallel_tree': None, 'regressor__estimator__random_state': None, 'regressor__estimator__reg_alpha': None, 'regressor__estimator__reg_lambda': None, 'regressor__estimator__sampling_method': None, 'regressor__estimator__scale_pos_weight': None, 'regressor__estimator__subsample': None, 'regressor__estimator__tree_method': None, 'regressor__estimator__validate_parameters': None, 'regressor__estimator__verbosity': None, 'regressor__n_jobs': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__log transform__accept_sparse': False, 'transformer__log transform__check_inverse': True, 'transformer__log transform__feature_names_out': None, 'transformer__log transform__inv_kw_args': None, 'transformer__log transform__kw_args': None, 'transformer__log transform__validate': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__unit_variance': False, 'transformer__y scaler__with_centering': True, 'transformer__y scaler__with_scaling': True}}, 69: {'fit_time': array([0.51424146, 0.50319123, 0.51532578, 0.50544047, 0.56293011]), 'score_time': array([0.0292809 , 0.02955699, 0.03063226, 0.02974939, 0.03350091]), 'test_r2': [array([ 0.14672021,  0.2294734 , -0.00634449]), array([-0.18744467, -0.16523095,  0.13253117]), array([-0.33155979,  0.31375216, -0.02254298]), array([ 0.09621193, -0.11120116, -0.17591084]), array([-0.20334793, -0.06158911, -0.39670449])], 'test_rmse': [array([7.28432049e+00, 1.44454913e+02, 3.23074623e+05]), array([9.27424821e+00, 1.66637229e+02, 8.71211909e+04]), array([1.17269763e+01, 1.22475363e+02, 3.16624706e+04]), array([8.91266321e+00, 1.63829842e+02, 1.40172844e+04]), array([8.61070291e+00, 1.80115114e+02, 1.38747095e+04])], 'test_mae': [array([3.66004489e+00, 7.86655297e+01, 4.33115416e+04]), array([4.77173250e+00, 8.71921196e+01, 1.21846370e+04]), array([   6.68371063,   73.57466422, 6177.50341852]), array([   4.90867551,   95.30244403, 3014.47786501]), array([   4.83796066,   81.13328886, 2737.54231782])], 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__estimator__objective': 'reg:squarederror', 'regressor__estimator__base_score': None, 'regressor__estimator__booster': None, 'regressor__estimator__callbacks': None, 'regressor__estimator__colsample_bylevel': None, 'regressor__estimator__colsample_bynode': None, 'regressor__estimator__colsample_bytree': None, 'regressor__estimator__device': None, 'regressor__estimator__early_stopping_rounds': None, 'regressor__estimator__enable_categorical': False, 'regressor__estimator__eval_metric': None, 'regressor__estimator__feature_types': None, 'regressor__estimator__gamma': None, 'regressor__estimator__grow_policy': None, 'regressor__estimator__importance_type': None, 'regressor__estimator__interaction_constraints': None, 'regressor__estimator__learning_rate': 0.044209097540604134, 'regressor__estimator__max_bin': None, 'regressor__estimator__max_cat_threshold': None, 'regressor__estimator__max_cat_to_onehot': None, 'regressor__estimator__max_delta_step': None, 'regressor__estimator__max_depth': 10000, 'regressor__estimator__max_leaves': None, 'regressor__estimator__min_child_weight': None, 'regressor__estimator__missing': nan, 'regressor__estimator__monotone_constraints': None, 'regressor__estimator__multi_strategy': None, 'regressor__estimator__n_estimators': 123, 'regressor__estimator__n_jobs': -2, 'regressor__estimator__num_parallel_tree': None, 'regressor__estimator__random_state': None, 'regressor__estimator__reg_alpha': None, 'regressor__estimator__reg_lambda': None, 'regressor__estimator__sampling_method': None, 'regressor__estimator__scale_pos_weight': None, 'regressor__estimator__subsample': None, 'regressor__estimator__tree_method': None, 'regressor__estimator__validate_parameters': None, 'regressor__estimator__verbosity': None, 'regressor__n_jobs': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__log transform__accept_sparse': False, 'transformer__log transform__check_inverse': True, 'transformer__log transform__feature_names_out': None, 'transformer__log transform__inv_kw_args': None, 'transformer__log transform__kw_args': None, 'transformer__log transform__validate': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__unit_variance': False, 'transformer__y scaler__with_centering': True, 'transformer__y scaler__with_scaling': True}}, 420: {'fit_time': array([0.25638723, 0.27474403, 0.28104663, 0.26115465, 0.2752831 ]), 'score_time': array([0.02828002, 0.02835202, 0.02847457, 0.02795625, 0.03045058]), 'test_r2': [array([-0.43191737, -0.22094503, -2.70164315]), array([0.10132482, 0.2367762 , 0.0498275 ]), array([-0.62844114,  0.02622287, -0.07128106]), array([-0.29519067,  0.17092208, -0.012357  ]), array([-0.135647 , -0.2990674,  0.2106385])], 'test_rmse': [array([1.05698799e+01, 1.83984598e+02, 3.04148923e+04]), array([9.32773837e+00, 1.08727908e+02, 9.45630894e+04]), array([  11.47461018,  166.36171346, 7708.03876573]), array([9.48533854e+00, 1.80021763e+02, 3.23975520e+05]), array([8.57117955e+00, 1.48181908e+02, 2.03249777e+04])], 'test_mae': [array([   6.10430574,   90.26027699, 5426.2837023 ]), array([4.40331608e+00, 6.77536269e+01, 1.54806932e+04]), array([   6.51759835,   91.10518567, 2197.16328298]), array([5.17986414e+00, 9.09494411e+01, 4.16780389e+04]), array([4.34132092e+00, 8.90459290e+01, 4.89119823e+03])], 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__estimator__objective': 'reg:squarederror', 'regressor__estimator__base_score': None, 'regressor__estimator__booster': None, 'regressor__estimator__callbacks': None, 'regressor__estimator__colsample_bylevel': None, 'regressor__estimator__colsample_bynode': None, 'regressor__estimator__colsample_bytree': None, 'regressor__estimator__device': None, 'regressor__estimator__early_stopping_rounds': None, 'regressor__estimator__enable_categorical': False, 'regressor__estimator__eval_metric': None, 'regressor__estimator__feature_types': None, 'regressor__estimator__gamma': None, 'regressor__estimator__grow_policy': None, 'regressor__estimator__importance_type': None, 'regressor__estimator__interaction_constraints': None, 'regressor__estimator__learning_rate': 0.042485965168426156, 'regressor__estimator__max_bin': None, 'regressor__estimator__max_cat_threshold': None, 'regressor__estimator__max_cat_to_onehot': None, 'regressor__estimator__max_delta_step': None, 'regressor__estimator__max_depth': 10, 'regressor__estimator__max_leaves': None, 'regressor__estimator__min_child_weight': None, 'regressor__estimator__missing': nan, 'regressor__estimator__monotone_constraints': None, 'regressor__estimator__multi_strategy': None, 'regressor__estimator__n_estimators': 85, 'regressor__estimator__n_jobs': -2, 'regressor__estimator__num_parallel_tree': None, 'regressor__estimator__random_state': None, 'regressor__estimator__reg_alpha': None, 'regressor__estimator__reg_lambda': None, 'regressor__estimator__sampling_method': None, 'regressor__estimator__scale_pos_weight': None, 'regressor__estimator__subsample': None, 'regressor__estimator__tree_method': None, 'regressor__estimator__validate_parameters': None, 'regressor__estimator__verbosity': None, 'regressor__n_jobs': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__log transform__accept_sparse': False, 'transformer__log transform__check_inverse': True, 'transformer__log transform__feature_names_out': None, 'transformer__log transform__inv_kw_args': None, 'transformer__log transform__kw_args': None, 'transformer__log transform__validate': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__unit_variance': False, 'transformer__y scaler__with_centering': True, 'transformer__y scaler__with_scaling': True}}, 1234567890: {'fit_time': array([1.20002842, 1.2619257 , 1.24880719, 1.26561046, 1.28440094]), 'score_time': array([0.03339362, 0.0322597 , 0.03306699, 0.03307366, 0.03709078]), 'test_r2': [array([-0.24101757,  0.00727048,  0.49913925]), array([-0.17080681, -0.13421981,  0.08613739]), array([-0.1666317 ,  0.03895757, -0.3004478 ]), array([-0.13826391,  0.07411679, -0.03100346]), array([-0.1751955 ,  0.05561968, -0.01604228])], 'test_rmse': [array([8.37099484e+00, 1.87020270e+02, 2.26267874e+04]), array([9.73217355e+00, 1.43315707e+02, 8.92343233e+04]), array([9.82426045e+00, 1.29389917e+02, 1.05956906e+04]), array([8.65875929e+00, 1.80194922e+02, 1.28209044e+04]), array([1.12383380e+01, 1.39599007e+02, 3.26524271e+05])], 'test_mae': [array([5.11122594e+00, 9.80664356e+01, 5.18027854e+03]), array([5.42304685e+00, 7.67384790e+01, 1.12665528e+04]), array([   4.85989676,   78.0319566 , 2369.19307846]), array([   4.94918878,  101.21320583, 2428.22275239]), array([5.93244916e+00, 7.25497449e+01, 4.60956968e+04])], 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__estimator__objective': 'reg:squarederror', 'regressor__estimator__base_score': None, 'regressor__estimator__booster': None, 'regressor__estimator__callbacks': None, 'regressor__estimator__colsample_bylevel': None, 'regressor__estimator__colsample_bynode': None, 'regressor__estimator__colsample_bytree': None, 'regressor__estimator__device': None, 'regressor__estimator__early_stopping_rounds': None, 'regressor__estimator__enable_categorical': False, 'regressor__estimator__eval_metric': None, 'regressor__estimator__feature_types': None, 'regressor__estimator__gamma': None, 'regressor__estimator__grow_policy': None, 'regressor__estimator__importance_type': None, 'regressor__estimator__interaction_constraints': None, 'regressor__estimator__learning_rate': 0.008510093387824422, 'regressor__estimator__max_bin': None, 'regressor__estimator__max_cat_threshold': None, 'regressor__estimator__max_cat_to_onehot': None, 'regressor__estimator__max_delta_step': None, 'regressor__estimator__max_depth': 10, 'regressor__estimator__max_leaves': None, 'regressor__estimator__min_child_weight': None, 'regressor__estimator__missing': nan, 'regressor__estimator__monotone_constraints': None, 'regressor__estimator__multi_strategy': None, 'regressor__estimator__n_estimators': 479, 'regressor__estimator__n_jobs': -2, 'regressor__estimator__num_parallel_tree': None, 'regressor__estimator__random_state': None, 'regressor__estimator__reg_alpha': None, 'regressor__estimator__reg_lambda': None, 'regressor__estimator__sampling_method': None, 'regressor__estimator__scale_pos_weight': None, 'regressor__estimator__subsample': None, 'regressor__estimator__tree_method': None, 'regressor__estimator__validate_parameters': None, 'regressor__estimator__verbosity': None, 'regressor__n_jobs': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__log transform__accept_sparse': False, 'transformer__log transform__check_inverse': True, 'transformer__log transform__feature_names_out': None, 'transformer__log transform__inv_kw_args': None, 'transformer__log transform__kw_args': None, 'transformer__log transform__validate': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__unit_variance': False, 'transformer__y scaler__with_centering': True, 'transformer__y scaler__with_scaling': True}}, 473129: {'fit_time': array([0.70784068, 0.68364048, 0.71138263, 0.68919659, 0.70396709]), 'score_time': array([0.03820086, 0.03137565, 0.03010535, 0.03063512, 0.03053546]), 'test_r2': [array([ -0.57236704,  -0.09589407, -13.76679766]), array([-0.12342613,  0.2731065 ,  0.34285947]), array([ 0.03303201,  0.06148348, -0.01744953]), array([-0.15848053, -0.02050882, -0.16652921]), array([-0.07754055,  0.09886271,  0.40227179])], 'test_rmse': [array([1.11399336e+01, 1.36287639e+02, 9.50135441e+04]), array([8.48701799e+00, 1.42486485e+02, 7.53551466e+04]), array([8.85231829e+00, 1.51862809e+02, 3.20823095e+05]), array([1.01117434e+01, 1.98184376e+02, 2.36816463e+04]), array([9.29870124e+00, 1.30497801e+02, 4.46063699e+04])], 'test_mae': [array([6.07202310e+00, 7.78407938e+01, 1.24098700e+04]), array([4.31042592e+00, 7.44596105e+01, 9.31190769e+03]), array([4.96753733e+00, 7.93330016e+01, 4.01034017e+04]), array([5.26183237e+00, 1.02947573e+02, 6.50944867e+03]), array([5.11704115e+00, 7.57576493e+01, 6.60774369e+03])], 'best_params': {'check_inverse': True, 'func': None, 'inverse_func': None, 'regressor__estimator__objective': 'reg:squarederror', 'regressor__estimator__base_score': None, 'regressor__estimator__booster': None, 'regressor__estimator__callbacks': None, 'regressor__estimator__colsample_bylevel': None, 'regressor__estimator__colsample_bynode': None, 'regressor__estimator__colsample_bytree': None, 'regressor__estimator__device': None, 'regressor__estimator__early_stopping_rounds': None, 'regressor__estimator__enable_categorical': False, 'regressor__estimator__eval_metric': None, 'regressor__estimator__feature_types': None, 'regressor__estimator__gamma': None, 'regressor__estimator__grow_policy': None, 'regressor__estimator__importance_type': None, 'regressor__estimator__interaction_constraints': None, 'regressor__estimator__learning_rate': 0.03258035627116066, 'regressor__estimator__max_bin': None, 'regressor__estimator__max_cat_threshold': None, 'regressor__estimator__max_cat_to_onehot': None, 'regressor__estimator__max_delta_step': None, 'regressor__estimator__max_depth': 15, 'regressor__estimator__max_leaves': None, 'regressor__estimator__min_child_weight': None, 'regressor__estimator__missing': nan, 'regressor__estimator__monotone_constraints': None, 'regressor__estimator__multi_strategy': None, 'regressor__estimator__n_estimators': 179, 'regressor__estimator__n_jobs': -2, 'regressor__estimator__num_parallel_tree': None, 'regressor__estimator__random_state': None, 'regressor__estimator__reg_alpha': None, 'regressor__estimator__reg_lambda': None, 'regressor__estimator__sampling_method': None, 'regressor__estimator__scale_pos_weight': None, 'regressor__estimator__subsample': None, 'regressor__estimator__tree_method': None, 'regressor__estimator__validate_parameters': None, 'regressor__estimator__verbosity': None, 'regressor__n_jobs': None, 'transformer__memory': None, 'transformer__verbose': False, 'transformer__log transform__accept_sparse': False, 'transformer__log transform__check_inverse': True, 'transformer__log transform__feature_names_out': None, 'transformer__log transform__inv_kw_args': None, 'transformer__log transform__kw_args': None, 'transformer__log transform__validate': False, 'transformer__y scaler__copy': True, 'transformer__y scaler__unit_variance': False, 'transformer__y scaler__with_centering': True, 'transformer__y scaler__with_scaling': True}}, 'r2_avg': array([-0.13258432,  0.03101477, -0.55262112]), 'r2_stdev': array([0.2049004 , 0.15424661, 2.37947309]), 'rmse_avg': array([9.30899844e+00, 1.54799677e+02, 9.45185178e+04]), 'rmse_stdev': array([1.49856876e+00, 1.91923818e+01, 1.19205956e+05]), 'mae_avg': array([5.06711188e+00, 8.36815098e+01, 1.38785211e+04]), 'mae_stdev': array([9.68277293e-01, 9.47137095e+00, 1.61672025e+04]), 'r2_avg_aggregate': -0.21806355729745494, 'r2_stdev_aggregate': 0.9128733670359427, 'rmse_avg_aggregate': 31560.875483294687, 'rmse_stdev_aggregate': 39742.21563639676, 'mae_avg_aggregate': 4655.756572690998, 'mae_stdev_aggregate': 5392.547398423206}
scaler
Filename: (PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_XGBR_mean_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/scaler/(PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_XGBR_mean_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/scaler/(PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_XGBR_mean_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/scaler/(PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_XGBR_mean_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c207n11>
Subject: Job 275247: <numerical_XGBR_polymer_size_feats_on_multimodal Rh_all_num_20250118> in cluster <Hazel> Done

Job <numerical_XGBR_polymer_size_feats_on_multimodal Rh_all_num_20250118> was submitted from host <c028n01> by user <sdehgha2> in cluster <Hazel> at Sat Jan 18 17:11:05 2025
Job was executed on host(s) <6*c207n11>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Sat Jan 18 17:11:06 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Sat Jan 18 17:11:06 2025
Terminated at Sat Jan 18 18:13:59 2025
Results reported at Sat Jan 18 18:13:59 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 6
#BSUB -W 25:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "numerical_XGBR_polymer_size_feats_on_multimodal Rh_all_num_20250118"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_XGBR_Robust Scaler_multimodal Rh_20250118.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_XGBR_Robust Scaler_multimodal Rh_20250118.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "multimodal Rh"                                     --regressor_type "XGBR"                                     --transform_type "Robust Scaler"                                     --numerical_feats 'Mn (g/mol)' 'PDI' 'Mw (g/mol)' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "solvent dP" "solvent dD" "solvent dH"                                     --columns_to_impute "PDI" "Temperature SANS/SLS/DLS/SEC (K)" "Concentration (mg/ml)"                                     --special_impute 'Mw (g/mol)'                                     --imputer mean


conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   12095.57 sec.
    Max Memory :                                 7 GB
    Average Memory :                             6.65 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               9.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   3802 sec.
    Turnaround time :                            3774 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_XGBR_Robust Scaler_multimodal Rh_20250118.err> for stderr output of this job.

