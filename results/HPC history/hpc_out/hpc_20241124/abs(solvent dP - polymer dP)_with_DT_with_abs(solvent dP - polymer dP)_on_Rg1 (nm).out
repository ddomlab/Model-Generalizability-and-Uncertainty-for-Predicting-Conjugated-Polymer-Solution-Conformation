


OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.435497721322115), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.34685161787782576), ('regressor__regressor__min_samples_split', 0.6799390713727985)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.435497721322115), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.34685161787782576), ('regressor__regressor__min_samples_split', 0.6799390713727985)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.185365247654856), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.0678099018588246), ('regressor__regressor__min_samples_split', 0.7883985107902242)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.185365247654856), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.0678099018588246), ('regressor__regressor__min_samples_split', 0.7883985107902242)])


Average scores:	 r: nan±nan	 r2: -0.02±0.03
scaler
Filename: (polymer dH)_DT_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/test/scaler/(polymer dH)_DT_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/test/scaler/(polymer dH)_DT_Standard_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/test/scaler/(polymer dH)_DT_Standard_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c038n01>
Subject: Job 558831: <DT_with_abs(solvent dP - polymer dP)_on_Rg1 (nm)> in cluster <Hazel> Done

Job <DT_with_abs(solvent dP - polymer dP)_on_Rg1 (nm)> was submitted from host <c020n03> by user <sdehgha2> in cluster <Hazel> at Mon Nov 25 11:17:46 2024
Job was executed on host(s) <4*c038n01>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Nov 25 11:22:46 2024
                            <4*c036n03>
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Nov 25 11:22:46 2024
Terminated at Mon Nov 25 11:24:00 2024
Results reported at Mon Nov 25 11:24:00 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 8
#BSUB -W 10:01
#BSUB -R span[ptile=4]
##BSUB -x
#BSUB -R "rusage[mem=32GB]"
#BSUB -J "DT_with_abs(solvent dP - polymer dP)_on_Rg1 (nm)"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/abs(solvent dP - polymer dP)_with_DT_with_abs(solvent dP - polymer dP)_on_Rg1 (nm).out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/abs(solvent dP - polymer dP)_with_DT_with_abs(solvent dP - polymer dP)_on_Rg1 (nm).err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env

python ../train_numerical_only.py --target_features "Rg1 (nm)"                                   --regressor_type "DT"                                   --numerical_feats "abs(solvent dP - polymer dP)" 
conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   41.20 sec.
    Max Memory :                                 2 GB
    Average Memory :                             1.25 GB
    Total Requested Memory :                     64.00 GB
    Delta Memory :                               62.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   89 sec.
    Turnaround time :                            374 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/abs(solvent dP - polymer dP)_with_DT_with_abs(solvent dP - polymer dP)_on_Rg1 (nm).err> for stderr output of this job.




OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.0761137682609763), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.08963412251525835)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.22097584850619806), ('regressor__regressor__min_samples_split', 0.2739572093176348)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.16916751265813862), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05018630042400767), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.1524275945108704), ('regressor__regressor__min_samples_split', 0.2995886243086441)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.3036122167273059)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.99)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.99)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.5759806405462754)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.050775312213356044), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.06710014907750751), ('regressor__regressor__min_samples_split', 0.11925780001002682)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.1899472960413925), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.3559904161167981)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.11296200197705729), ('regressor__regressor__min_samples_split', 0.5683528930114442)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.18528889218043204), ('regressor__regressor__min_samples_split', 0.05115693245293466)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.435497721322115), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.34685161787782576), ('regressor__regressor__min_samples_split', 0.6799390713727985)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.5979916695143879)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.7874293370712214), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.7832449374594603), ('regressor__regressor__min_samples_split', 0.6959604091263834)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.060321198711140646), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.21741978640887138), ('regressor__regressor__min_samples_split', 0.07217137501019712)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.059735739565466295), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.17690168631101666), ('regressor__regressor__min_samples_split', 0.06069595194288035)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.7874293370712214), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.7832449374594603), ('regressor__regressor__min_samples_split', 0.6959604091263834)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.7874293370712214), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.7832449374594603), ('regressor__regressor__min_samples_split', 0.6959604091263834)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.5699473181583913), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.4688246439037563), ('regressor__regressor__min_samples_split', 0.059996399033831825)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.5699473181583913), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.4688246439037563), ('regressor__regressor__min_samples_split', 0.059996399033831825)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.5699473181583913), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.4688246439037563), ('regressor__regressor__min_samples_split', 0.059996399033831825)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05032459346680027), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05605452404635643), ('regressor__regressor__min_samples_split', 0.8690671206343091)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.07666878653637729), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.07113835494640698), ('regressor__regressor__min_samples_split', 0.26021836628596556)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.25205931598743636), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.5332356148616714), ('regressor__regressor__min_samples_split', 0.1222776512236606)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.055323537721463735), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.08749057615748791), ('regressor__regressor__min_samples_split', 0.985613979101368)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.99)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.25205931598743636), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.5332356148616714), ('regressor__regressor__min_samples_split', 0.1222776512236606)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05647908194754877), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.0640029693555536), ('regressor__regressor__min_samples_split', 0.1956722000019036)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.20614777577455295), ('regressor__regressor__min_samples_split', 0.1465180719312035)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.07438513646904246), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.19640680924720816), ('regressor__regressor__min_samples_split', 0.31830414175859817)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.07438513646904246), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.19640680924720816), ('regressor__regressor__min_samples_split', 0.31830414175859817)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.07438513646904246), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.19640680924720816), ('regressor__regressor__min_samples_split', 0.31830414175859817)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.18158666339068452), ('regressor__regressor__min_samples_split', 0.05)])


Average scores:	 r: nan±nan	 r2: 0.06±0.21
scaler
Filename: (abs(solvent dP - polymer dP))_DT_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rg/scaler/(abs(solvent dP - polymer dP))_DT_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rg/scaler/(abs(solvent dP - polymer dP))_DT_Standard_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rg/scaler/(abs(solvent dP - polymer dP))_DT_Standard_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c205n14>
Subject: Job 558998: <DT_with_abs(solvent dP - polymer dP)_on_Rg1 (nm)> in cluster <Hazel> Done

Job <DT_with_abs(solvent dP - polymer dP)_on_Rg1 (nm)> was submitted from host <c040n01> by user <sdehgha2> in cluster <Hazel> at Mon Nov 25 11:28:15 2024
Job was executed on host(s) <4*c205n14>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Nov 25 11:45:14 2024
                            <4*c205n11>
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Nov 25 11:45:14 2024
Terminated at Mon Nov 25 12:15:04 2024
Results reported at Mon Nov 25 12:15:04 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 8
#BSUB -W 15:01
#BSUB -R span[ptile=4]
##BSUB -x
#BSUB -R "rusage[mem=32GB]"
#BSUB -J "DT_with_abs(solvent dP - polymer dP)_on_Rg1 (nm)"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/abs(solvent dP - polymer dP)_with_DT_with_abs(solvent dP - polymer dP)_on_Rg1 (nm).out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/abs(solvent dP - polymer dP)_with_DT_with_abs(solvent dP - polymer dP)_on_Rg1 (nm).err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env

python ../train_numerical_only.py --target_features "Rg1 (nm)"                                   --regressor_type "DT"                                   --numerical_feats "abs(solvent dP - polymer dP)" 
conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   1878.00 sec.
    Max Memory :                                 2 GB
    Average Memory :                             1.92 GB
    Total Requested Memory :                     64.00 GB
    Delta Memory :                               62.00 GB
    Max Swap :                                   -
    Max Processes :                              30
    Max Threads :                                33
    Run time :                                   1792 sec.
    Turnaround time :                            2809 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/abs(solvent dP - polymer dP)_with_DT_with_abs(solvent dP - polymer dP)_on_Rg1 (nm).err> for stderr output of this job.

