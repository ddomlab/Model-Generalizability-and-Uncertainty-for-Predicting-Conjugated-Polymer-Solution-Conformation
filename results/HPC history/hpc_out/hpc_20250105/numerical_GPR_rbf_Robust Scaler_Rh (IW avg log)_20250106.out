['Rh (IW avg log)']



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.632478145304319), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.632478145304319), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.632478145304319), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.632478145304319), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.632478145304319), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.47481646870406946), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.47481646870406946), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.47481646870406946), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.47481646870406946), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.47481646870406946), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.259806678617276), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.259806678617276), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.259806678617276), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.259806678617276), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.259806678617276), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.3642729195320245), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.3642729195320245), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.3642729195320245), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.3642729195320245), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.3642729195320245), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.6817495623055898), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.6817495623055898), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.6817495623055898), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.6817495623055898), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.6817495623055898), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.6841223214499335), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.6841223214499335), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.6841223214499335), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.6841223214499335), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.6841223214499335), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.8643589293022735), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.8643589293022735), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.8643589293022735), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.8643589293022735), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.8643589293022735), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100)])


Average scores:	 r: 0.35±0.29	 r2: 0.07±0.19
scaler
Filename: (PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_GPR.rbf_mean_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/scaler/(PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_GPR.rbf_mean_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/scaler/(PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_GPR.rbf_mean_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/scaler/(PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_GPR.rbf_mean_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c205n03>
Subject: Job 166898: <numerical_GPR_polymer_size_feats_on_Rh (IW avg log)> in cluster <Hazel> Done

Job <numerical_GPR_polymer_size_feats_on_Rh (IW avg log)> was submitted from host <c202n11> by user <sdehgha2> in cluster <Hazel> at Mon Jan  6 11:58:39 2025
Job was executed on host(s) <6*c205n03>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Jan  6 11:58:40 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Jan  6 11:58:40 2025
Terminated at Mon Jan  6 13:02:55 2025
Results reported at Mon Jan  6 13:02:55 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "numerical_GPR_polymer_size_feats_on_Rh (IW avg log)"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_GPR_rbf_Robust Scaler_Rh (IW avg log)_20250106.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_GPR_rbf_Robust Scaler_Rh (IW avg log)_20250106.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "Rh (IW avg log)"                                     --regressor_type "GPR"                                     --kernel "rbf"                                     --transform_type "Robust Scaler"                                     --numerical_feats 'Mn (g/mol)' 'PDI' 'Mw (g/mol)' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "solvent dP" "solvent dD" "solvent dH"                                     --columns_to_impute "PDI" "Temperature SANS/SLS/DLS/SEC (K)" "Concentration (mg/ml)"                                     --special_impute 'Mw (g/mol)'                                     --imputer mean 


conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   11055.18 sec.
    Max Memory :                                 6 GB
    Average Memory :                             5.47 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               10.00 GB
    Max Swap :                                   -
    Max Processes :                              30
    Max Threads :                                33
    Run time :                                   3884 sec.
    Turnaround time :                            3856 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_GPR_rbf_Robust Scaler_Rh (IW avg log)_20250106.err> for stderr output of this job.

