['multimodal Rh']
{'regressor__regressor__estimator__min_samples_split': Real(low=0.05, high=0.99, prior='uniform', transform='identity'), 'regressor__regressor__estimator__min_samples_leaf': Real(low=0.05, high=0.99, prior='uniform', transform='identity'), 'regressor__regressor__estimator__max_features': Categorical(categories=(None, 'sqrt', 'log2'), prior=None), 'regressor__regressor__estimator__max_depth': [None], 'regressor__regressor__estimator__ccp_alpha': Real(low=0.05, high=0.99, prior='uniform', transform='identity')}



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.5542472734190033), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.8352487625519375), ('regressor__regressor__estimator__min_samples_split', 0.7851304478916721)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.5542472734190033), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.8352487625519375), ('regressor__regressor__estimator__min_samples_split', 0.7851304478916721)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.5542472734190033), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.8352487625519375), ('regressor__regressor__estimator__min_samples_split', 0.7851304478916721)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.5542472734190033), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.8352487625519375), ('regressor__regressor__estimator__min_samples_split', 0.7851304478916721)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.5542472734190033), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.8352487625519375), ('regressor__regressor__estimator__min_samples_split', 0.7851304478916721)])


{'regressor__regressor__estimator__min_samples_split': Real(low=0.05, high=0.99, prior='uniform', transform='normalize'), 'regressor__regressor__estimator__min_samples_leaf': Real(low=0.05, high=0.99, prior='uniform', transform='normalize'), 'regressor__regressor__estimator__max_features': Categorical(categories=(None, 'sqrt', 'log2'), prior=None), 'regressor__regressor__estimator__max_depth': [None], 'regressor__regressor__estimator__ccp_alpha': Real(low=0.05, high=0.99, prior='uniform', transform='normalize')}



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.9543130570009525), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.8121712698189169), ('regressor__regressor__estimator__min_samples_split', 0.24267006739132307)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.9543130570009525), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.8121712698189169), ('regressor__regressor__estimator__min_samples_split', 0.24267006739132307)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.9543130570009525), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.8121712698189169), ('regressor__regressor__estimator__min_samples_split', 0.24267006739132307)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.9543130570009525), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.8121712698189169), ('regressor__regressor__estimator__min_samples_split', 0.24267006739132307)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.9543130570009525), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.8121712698189169), ('regressor__regressor__estimator__min_samples_split', 0.24267006739132307)])


{'regressor__regressor__estimator__min_samples_split': Real(low=0.05, high=0.99, prior='uniform', transform='normalize'), 'regressor__regressor__estimator__min_samples_leaf': Real(low=0.05, high=0.99, prior='uniform', transform='normalize'), 'regressor__regressor__estimator__max_features': Categorical(categories=(None, 'sqrt', 'log2'), prior=None), 'regressor__regressor__estimator__max_depth': [None], 'regressor__regressor__estimator__ccp_alpha': Real(low=0.05, high=0.99, prior='uniform', transform='normalize')}



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.8371450542200873), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.9441504721977296), ('regressor__regressor__estimator__min_samples_split', 0.8622802405370537)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.8371450542200873), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.9441504721977296), ('regressor__regressor__estimator__min_samples_split', 0.8622802405370537)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.8371450542200873), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.9441504721977296), ('regressor__regressor__estimator__min_samples_split', 0.8622802405370537)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.8371450542200873), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.9441504721977296), ('regressor__regressor__estimator__min_samples_split', 0.8622802405370537)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.8371450542200873), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.9441504721977296), ('regressor__regressor__estimator__min_samples_split', 0.8622802405370537)])


{'regressor__regressor__estimator__min_samples_split': Real(low=0.05, high=0.99, prior='uniform', transform='normalize'), 'regressor__regressor__estimator__min_samples_leaf': Real(low=0.05, high=0.99, prior='uniform', transform='normalize'), 'regressor__regressor__estimator__max_features': Categorical(categories=(None, 'sqrt', 'log2'), prior=None), 'regressor__regressor__estimator__max_depth': [None], 'regressor__regressor__estimator__ccp_alpha': Real(low=0.05, high=0.99, prior='uniform', transform='normalize')}



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.9567970339654663), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05390048413396255), ('regressor__regressor__estimator__min_samples_split', 0.3077425938633771)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.7874293370712214), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.7832449374594603), ('regressor__regressor__estimator__min_samples_split', 0.6959604091263834)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.7874293370712214), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.7832449374594603), ('regressor__regressor__estimator__min_samples_split', 0.6959604091263834)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.7874293370712214), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.7832449374594603), ('regressor__regressor__estimator__min_samples_split', 0.6959604091263834)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.7874293370712214), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.7832449374594603), ('regressor__regressor__estimator__min_samples_split', 0.6959604091263834)])


{'regressor__regressor__estimator__min_samples_split': Real(low=0.05, high=0.99, prior='uniform', transform='normalize'), 'regressor__regressor__estimator__min_samples_leaf': Real(low=0.05, high=0.99, prior='uniform', transform='normalize'), 'regressor__regressor__estimator__max_features': Categorical(categories=(None, 'sqrt', 'log2'), prior=None), 'regressor__regressor__estimator__max_depth': [None], 'regressor__regressor__estimator__ccp_alpha': Real(low=0.05, high=0.99, prior='uniform', transform='normalize')}



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.8572555333607538), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.8273337050600362), ('regressor__regressor__estimator__min_samples_split', 0.8097081976893896)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.8572555333607538), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.8273337050600362), ('regressor__regressor__estimator__min_samples_split', 0.8097081976893896)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.8572555333607538), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.8273337050600362), ('regressor__regressor__estimator__min_samples_split', 0.8097081976893896)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.8572555333607538), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.8273337050600362), ('regressor__regressor__estimator__min_samples_split', 0.8097081976893896)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.8572555333607538), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.8273337050600362), ('regressor__regressor__estimator__min_samples_split', 0.8097081976893896)])


{'regressor__regressor__estimator__min_samples_split': Real(low=0.05, high=0.99, prior='uniform', transform='normalize'), 'regressor__regressor__estimator__min_samples_leaf': Real(low=0.05, high=0.99, prior='uniform', transform='normalize'), 'regressor__regressor__estimator__max_features': Categorical(categories=(None, 'sqrt', 'log2'), prior=None), 'regressor__regressor__estimator__max_depth': [None], 'regressor__regressor__estimator__ccp_alpha': Real(low=0.05, high=0.99, prior='uniform', transform='normalize')}



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.25205931598743636), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.5332356148616714), ('regressor__regressor__estimator__min_samples_split', 0.1222776512236606)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.25205931598743636), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.5332356148616714), ('regressor__regressor__estimator__min_samples_split', 0.1222776512236606)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.25205931598743636), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.5332356148616714), ('regressor__regressor__estimator__min_samples_split', 0.1222776512236606)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.25205931598743636), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.5332356148616714), ('regressor__regressor__estimator__min_samples_split', 0.1222776512236606)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.25205931598743636), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.5332356148616714), ('regressor__regressor__estimator__min_samples_split', 0.1222776512236606)])


{'regressor__regressor__estimator__min_samples_split': Real(low=0.05, high=0.99, prior='uniform', transform='normalize'), 'regressor__regressor__estimator__min_samples_leaf': Real(low=0.05, high=0.99, prior='uniform', transform='normalize'), 'regressor__regressor__estimator__max_features': Categorical(categories=(None, 'sqrt', 'log2'), prior=None), 'regressor__regressor__estimator__max_depth': [None], 'regressor__regressor__estimator__ccp_alpha': Real(low=0.05, high=0.99, prior='uniform', transform='normalize')}



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.854463903068529), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.8680379485478369), ('regressor__regressor__estimator__min_samples_split', 0.4353825546162698)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.854463903068529), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.8680379485478369), ('regressor__regressor__estimator__min_samples_split', 0.4353825546162698)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.854463903068529), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.8680379485478369), ('regressor__regressor__estimator__min_samples_split', 0.4353825546162698)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.854463903068529), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.8680379485478369), ('regressor__regressor__estimator__min_samples_split', 0.4353825546162698)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__ccp_alpha', 0.854463903068529), ('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', None), ('regressor__regressor__estimator__min_samples_leaf', 0.8680379485478369), ('regressor__regressor__estimator__min_samples_split', 0.4353825546162698)])


Average scores:	 r: 0.18±0.07	 r2: -0.4±1.03
scaler
Filename: (PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_DT_mean_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/scaler/(PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_DT_mean_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/scaler/(PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_DT_mean_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/scaler/(PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_DT_mean_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c202n02>
Subject: Job 166054: <numerical_DT_polymer_size_feats_on_multimodal Rh_all_num> in cluster <Hazel> Done

Job <numerical_DT_polymer_size_feats_on_multimodal Rh_all_num> was submitted from host <c202n03> by user <sdehgha2> in cluster <Hazel> at Mon Jan  6 11:47:04 2025
Job was executed on host(s) <6*c202n02>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Jan  6 11:47:05 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Jan  6 11:47:05 2025
Terminated at Mon Jan  6 12:41:23 2025
Results reported at Mon Jan  6 12:41:23 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "numerical_DT_polymer_size_feats_on_multimodal Rh_all_num"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_DT_Robust Scaler_multimodal Rh_20250106.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_DT_Robust Scaler_multimodal Rh_20250106.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "multimodal Rh"                                     --regressor_type "DT"                                     --transform_type "Robust Scaler"                                     --numerical_feats 'Mn (g/mol)' 'PDI' 'Mw (g/mol)' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "solvent dP" "solvent dD" "solvent dH"                                     --columns_to_impute "PDI" "Temperature SANS/SLS/DLS/SEC (K)" "Concentration (mg/ml)"                                     --special_impute 'Mw (g/mol)'                                     --imputer mean


conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   3166.06 sec.
    Max Memory :                                 5 GB
    Average Memory :                             3.97 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               11.00 GB
    Max Swap :                                   -
    Max Processes :                              30
    Max Threads :                                33
    Run time :                                   3288 sec.
    Turnaround time :                            3259 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_DT_Robust Scaler_multimodal Rh_20250106.err> for stderr output of this job.

