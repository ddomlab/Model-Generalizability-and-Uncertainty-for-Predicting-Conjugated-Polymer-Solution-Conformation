['multimodal Rh']
{'regressor__regressor__estimator__fit_intercept': [True, False]}



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', True)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', True)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])


{'regressor__regressor__estimator__fit_intercept': [True, False]}



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', True)])


{'regressor__regressor__estimator__fit_intercept': [True, False]}



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', True)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', True)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])


{'regressor__regressor__estimator__fit_intercept': [True, False]}



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', True)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])


{'regressor__regressor__estimator__fit_intercept': [True, False]}



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', True)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])


{'regressor__regressor__estimator__fit_intercept': [True, False]}



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', True)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', True)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', True)])


{'regressor__regressor__estimator__fit_intercept': [True, False]}



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', True)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', True)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', True)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR MLR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__fit_intercept', False)])


Average scores:	 r: 0.25±0.09	 r2: -4.56±22.17
scaler
Filename: (PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_MLR_mean_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/scaler/(PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_MLR_mean_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/scaler/(PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_MLR_mean_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/scaler/(PDI-Mw-concentration-temperature-solvent dP-solvent dD-solvent dH)_MLR_mean_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c202n12>
Subject: Job 166058: <numerical_MLR_polymer_size_feats_on_multimodal Rh_all_num> in cluster <Hazel> Done

Job <numerical_MLR_polymer_size_feats_on_multimodal Rh_all_num> was submitted from host <c202n03> by user <sdehgha2> in cluster <Hazel> at Mon Jan  6 11:47:04 2025
Job was executed on host(s) <6*c202n12>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Jan  6 11:47:05 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Jan  6 11:47:05 2025
Terminated at Mon Jan  6 12:18:11 2025
Results reported at Mon Jan  6 12:18:11 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "numerical_MLR_polymer_size_feats_on_multimodal Rh_all_num"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_MLR_Robust Scaler_multimodal Rh_20250106.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_MLR_Robust Scaler_multimodal Rh_20250106.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "multimodal Rh"                                     --regressor_type "MLR"                                     --transform_type "Robust Scaler"                                     --numerical_feats 'Mn (g/mol)' 'PDI' 'Mw (g/mol)' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "solvent dP" "solvent dD" "solvent dH"                                     --columns_to_impute "PDI" "Temperature SANS/SLS/DLS/SEC (K)" "Concentration (mg/ml)"                                     --special_impute 'Mw (g/mol)'                                     --imputer mean


conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   1928.00 sec.
    Max Memory :                                 5 GB
    Average Memory :                             3.59 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               11.00 GB
    Max Swap :                                   -
    Max Processes :                              30
    Max Threads :                                33
    Run time :                                   1888 sec.
    Turnaround time :                            1867 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_MLR_Robust Scaler_multimodal Rh_20250106.err> for stderr output of this job.

