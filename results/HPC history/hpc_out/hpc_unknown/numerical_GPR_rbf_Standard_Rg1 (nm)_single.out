
------------------------------------------------------------
Sender: LSF System <lsfadmin@c028n01>
Subject: Job 820553: <numerical_GPR_polymer_size_feats_on_Rg1 (nm)_all_num> in cluster <Hazel> Exited

Job <numerical_GPR_polymer_size_feats_on_Rg1 (nm)_all_num> was submitted from host <c029n03> by user <sdehgha2> in cluster <Hazel> at Fri Dec 20 12:08:49 2024
Job was executed on host(s) <2*c028n01>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Fri Dec 20 12:08:50 2024
                            <2*c031n03>
                            <2*c030n04>
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Fri Dec 20 12:08:50 2024
Terminated at Fri Dec 20 12:09:00 2024
Results reported at Fri Dec 20 12:09:00 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[ptile=2]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "numerical_GPR_polymer_size_feats_on_Rg1 (nm)_all_num"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_out/numerical_GPR_rbf_Standard_Rg1 (nm)_single.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_out/numerical_GPR_rbf_Standard_Rg1 (nm)_single.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "Rg1 (nm)"                                     --regressor_type "GPR"                                     --kernel "rbf"                                     --numerical_feats 'Mn (g/mol)' 'PDI' 'Mw (g/mol)' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" "solvent dP" "solvent dD" "solvent dH"                                     --imputer mean
                                    --columns_to_impute "PDI" "Temperature SANS/SLS/DLS/SEC (K)" "Concentration (mg/ml)"                                     --special_impute 'Mw (g/mol)' 
conda deactivate


------------------------------------------------------------

TERM_OWNER: job killed by owner.
Exited with exit code 130.

Resource usage summary:

    CPU time :                                   1.29 sec.
    Max Memory :                                 -
    Average Memory :                             -
    Total Requested Memory :                     48.00 GB
    Delta Memory :                               -
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                5
    Run time :                                   28 sec.
    Turnaround time :                            11 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_out/numerical_GPR_rbf_Standard_Rg1 (nm)_single.err> for stderr output of this job.




OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6

------------------------------------------------------------
Sender: LSF System <lsfadmin@c032n02>
Subject: Job 820560: <numerical_GPR_polymer_size_feats_on_Rg1 (nm)_all_num> in cluster <Hazel> Done

Job <numerical_GPR_polymer_size_feats_on_Rg1 (nm)_all_num> was submitted from host <c027n04> by user <sdehgha2> in cluster <Hazel> at Fri Dec 20 12:09:20 2024
Job was executed on host(s) <2*c032n02>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Fri Dec 20 12:09:51 2024
                            <2*c033n04>
                            <2*c034n03>
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Fri Dec 20 12:09:51 2024
Terminated at Fri Dec 20 12:11:54 2024
Results reported at Fri Dec 20 12:11:54 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[ptile=2]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "numerical_GPR_polymer_size_feats_on_Rg1 (nm)_all_num"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_out/numerical_GPR_rbf_Standard_Rg1 (nm)_single.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_out/numerical_GPR_rbf_Standard_Rg1 (nm)_single.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "Rg1 (nm)"                                     --regressor_type "GPR"                                     --kernel "rbf"                                     --numerical_feats 'Mn (g/mol)' 'PDI' 'Mw (g/mol)' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" "solvent dP" "solvent dD" "solvent dH"                                     --imputer mean
                                    --columns_to_impute "PDI" "Temperature SANS/SLS/DLS/SEC (K)" "Concentration (mg/ml)"                                     --special_impute 'Mw (g/mol)' 
conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   39.00 sec.
    Max Memory :                                 1 GB
    Average Memory :                             0.14 GB
    Total Requested Memory :                     48.00 GB
    Delta Memory :                               47.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   140 sec.
    Turnaround time :                            154 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_out/numerical_GPR_rbf_Standard_Rg1 (nm)_single.err> for stderr output of this job.




OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.632478145304319), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.632478145304319), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.632478145304319), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.632478145304319), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.632478145304319), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.47481646870406946), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.47481646870406946), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.47481646870406946), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.47481646870406946), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.47481646870406946), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.259806678617276), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.259806678617276), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.259806678617276), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.259806678617276), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.259806678617276), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.3642729195320245), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.3642729195320245), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.3642729195320245), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.3642729195320245), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.3642729195320245), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.6817495623055898), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 1.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.6817495623055898), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 1.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.6817495623055898), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 1.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.6817495623055898), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 1.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.6817495623055898), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 1.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.6841223214499335), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 1.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.6841223214499335), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 1.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.6841223214499335), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 1.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.6841223214499335), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 1.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.6841223214499335), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 1.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.8643589293022735), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.8643589293022735), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.8643589293022735), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.8643589293022735), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.8643589293022735), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])


Average scores:	 r: 0.84±0.15	 r2: 0.61±0.48
scaler
Filename: (PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_GPR.rbf_mean_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rg/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_GPR.rbf_mean_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rg/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_GPR.rbf_mean_Standard_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rg/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_GPR.rbf_mean_Standard_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c205n06>
Subject: Job 820599: <numerical_GPR_polymer_size_feats_on_Rg1 (nm)_all_num> in cluster <Hazel> Done

Job <numerical_GPR_polymer_size_feats_on_Rg1 (nm)_all_num> was submitted from host <c031n02> by user <sdehgha2> in cluster <Hazel> at Fri Dec 20 12:21:47 2024
Job was executed on host(s) <2*c205n06>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Fri Dec 20 12:21:49 2024
                            <2*c205n07>
                            <2*c205n04>
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Fri Dec 20 12:21:49 2024
Terminated at Fri Dec 20 13:44:00 2024
Results reported at Fri Dec 20 13:44:00 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[ptile=2]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "numerical_GPR_polymer_size_feats_on_Rg1 (nm)_all_num"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_out/numerical_GPR_rbf_Standard_Rg1 (nm)_single.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_out/numerical_GPR_rbf_Standard_Rg1 (nm)_single.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "Rg1 (nm)"                                     --regressor_type "GPR"                                     --kernel "rbf"                                     --numerical_feats 'Mn (g/mol)' 'PDI' 'Mw (g/mol)' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" "solvent dP" "solvent dD" "solvent dH"                                     --imputer mean                                     --columns_to_impute "PDI" "Temperature SANS/SLS/DLS/SEC (K)" "Concentration (mg/ml)"                                     --special_impute 'Mw (g/mol)' 
conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   7558.00 sec.
    Max Memory :                                 6 GB
    Average Memory :                             3.86 GB
    Total Requested Memory :                     48.00 GB
    Delta Memory :                               42.00 GB
    Max Swap :                                   -
    Max Processes :                              30
    Max Threads :                                33
    Run time :                                   4945 sec.
    Turnaround time :                            4933 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_out/numerical_GPR_rbf_Standard_Rg1 (nm)_single.err> for stderr output of this job.




OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6

------------------------------------------------------------
Sender: LSF System <lsfadmin@c031n03>
Subject: Job 820953: <numerical_GPR_polymer_size_feats_on_Rg1 (nm)_all_num> in cluster <Hazel> Done

Job <numerical_GPR_polymer_size_feats_on_Rg1 (nm)_all_num> was submitted from host <c031n01> by user <sdehgha2> in cluster <Hazel> at Fri Dec 20 13:44:41 2024
Job was executed on host(s) <2*c031n03>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Fri Dec 20 13:44:42 2024
                            <2*c028n04>
                            <2*c034n03>
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Fri Dec 20 13:44:42 2024
Terminated at Fri Dec 20 13:47:24 2024
Results reported at Fri Dec 20 13:47:24 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[ptile=2]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "numerical_GPR_polymer_size_feats_on_Rg1 (nm)_all_num"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_out/numerical_GPR_rbf_Standard_Rg1 (nm)_single.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_out/numerical_GPR_rbf_Standard_Rg1 (nm)_single.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "Rg1 (nm)"                                     --regressor_type "GPR"                                     --kernel "rbf"                                     --numerical_feats 'Mn (g/mol)' 'PDI' 'Mw (g/mol)' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" "solvent dP" "solvent dD" "solvent dH"                                     --imputer mean
                                    --columns_to_impute "PDI" "Temperature SANS/SLS/DLS/SEC (K)" "Concentration (mg/ml)"                                     --special_impute 'Mw (g/mol)' 
conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   45.31 sec.
    Max Memory :                                 2 GB
    Average Memory :                             0.88 GB
    Total Requested Memory :                     48.00 GB
    Delta Memory :                               46.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   176 sec.
    Turnaround time :                            163 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/hpc_out/numerical_GPR_rbf_Standard_Rg1 (nm)_single.err> for stderr output of this job.

