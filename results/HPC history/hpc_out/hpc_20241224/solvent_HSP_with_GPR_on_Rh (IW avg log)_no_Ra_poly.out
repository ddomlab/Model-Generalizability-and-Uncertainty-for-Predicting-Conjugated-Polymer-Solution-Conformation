


OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])


Average scores:	 r: 0.29±0.34	 r2: 0.08±0.15
scaler
Filename: (polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_GPR.matern_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/scaler/(polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_GPR.matern_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/scaler/(polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_GPR.matern_Standard_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/scaler/(polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_GPR.matern_Standard_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c014n02>
Subject: Job 597988: <poly_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly> in cluster <Hazel> Done

Job <poly_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly> was submitted from host <c024n01> by user <sdehgha2> in cluster <Hazel> at Sun Dec  1 23:30:36 2024
Job was executed on host(s) <2*c014n02>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Sun Dec  1 23:30:36 2024
                            <2*c021n02>
                            <2*c014n03>
                            <2*c014n04>
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Sun Dec  1 23:30:36 2024
Terminated at Tue Dec  3 19:42:04 2024
Results reported at Tue Dec  3 19:42:04 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 8
#BSUB -W 30:01
#BSUB -R span[ptile=2]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "poly_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/solvent_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/solvent_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "Rh (IW avg log)"                                   --regressor_type "GPR"                                   --kernel "matern"                                   --numerical_feats "polymer dP" "polymer dD" "polymer dH" "solvent dP" "solvent dD" "solvent dH" "Ra"
                                  
conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   64876.00 sec.
    Max Memory :                                 4 GB
    Average Memory :                             1.44 GB
    Total Requested Memory :                     64.00 GB
    Delta Memory :                               60.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   159088 sec.
    Turnaround time :                            159088 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/solvent_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly.err> for stderr output of this job.



Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 1000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420

------------------------------------------------------------
Sender: LSF System <lsfadmin@c037n02>
Subject: Job 597989: <poly_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly> in cluster <Hazel> Exited

Job <poly_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly> was submitted from host <c024n01> by user <sdehgha2> in cluster <Hazel> at Sun Dec  1 23:30:36 2024
Job was executed on host(s) <2*c037n02>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Sun Dec  1 23:30:37 2024
                            <2*c027n02>
                            <2*c030n02>
                            <2*c038n02>
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Sun Dec  1 23:30:37 2024
Terminated at Wed Dec  4 00:00:37 2024
Results reported at Wed Dec  4 00:00:37 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 8
#BSUB -W 30:01
#BSUB -R span[ptile=2]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "poly_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/solvent_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/solvent_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "Rh (IW avg log)"                                   --regressor_type "GPR"                                   --kernel "rbf"                                   --numerical_feats "polymer dP" "polymer dD" "polymer dH" "solvent dP" "solvent dD" "solvent dH" "Ra"
                                  
conda deactivate


------------------------------------------------------------

TERM_RUNLIMIT: job killed after reaching LSF run time limit.
Exited with exit code 140.

Resource usage summary:

    CPU time :                                   86801.00 sec.
    Max Memory :                                 4 GB
    Average Memory :                             1.42 GB
    Total Requested Memory :                     64.00 GB
    Delta Memory :                               60.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   174606 sec.
    Turnaround time :                            174601 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/solvent_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly.err> for stderr output of this job.




OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6

------------------------------------------------------------
Sender: LSF System <lsfadmin@c008n02>
Subject: Job 619265: <poly_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly> in cluster <Hazel> Done

Job <poly_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly> was submitted from host <c203n01> by user <sdehgha2> in cluster <Hazel> at Wed Dec  4 15:34:01 2024
Job was executed on host(s) <4*c008n02>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Wed Dec  4 17:53:08 2024
                            <4*c008n01>
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Wed Dec  4 17:53:08 2024
Terminated at Wed Dec  4 18:21:02 2024
Results reported at Wed Dec  4 18:21:02 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 8
#BSUB -W 48:02
#BSUB -R span[ptile=4]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "poly_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/solvent_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/solvent_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "Rh (IW avg log)"                                   --regressor_type "GPR"                                   --kernel "rbf"                                   --numerical_feats "polymer dP" "polymer dD" "polymer dH" "solvent dP" "solvent dD" "solvent dH" "Ra"
                                  
conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   71.22 sec.
    Max Memory :                                 1 GB
    Average Memory :                             0.64 GB
    Total Requested Memory :                     32.00 GB
    Delta Memory :                               31.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   1675 sec.
    Turnaround time :                            10021 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/solvent_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly.err> for stderr output of this job.


------------------------------------------------------------
Sender: LSF System <lsfadmin@c005n01>
Subject: Job 619264: <poly_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly> in cluster <Hazel> Done

Job <poly_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly> was submitted from host <c203n01> by user <sdehgha2> in cluster <Hazel> at Wed Dec  4 15:34:00 2024
Job was executed on host(s) <4*c005n01>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Wed Dec  4 17:53:08 2024
                            <4*c010n02>
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Wed Dec  4 17:53:08 2024
Terminated at Wed Dec  4 18:21:29 2024
Results reported at Wed Dec  4 18:21:29 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 8
#BSUB -W 48:02
#BSUB -R span[ptile=4]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "poly_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/solvent_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/solvent_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "Rh (IW avg log)"                                   --regressor_type "GPR"                                   --kernel "matern"                                   --numerical_feats "polymer dP" "polymer dD" "polymer dH" "solvent dP" "solvent dD" "solvent dH" "Ra"
                                  
conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   84.00 sec.
    Max Memory :                                 1 GB
    Average Memory :                             0.69 GB
    Total Requested Memory :                     32.00 GB
    Delta Memory :                               31.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   1704 sec.
    Turnaround time :                            10049 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/solvent_HSP_with_GPR_on_Rh (IW avg log)_no_Ra_poly.err> for stderr output of this job.

