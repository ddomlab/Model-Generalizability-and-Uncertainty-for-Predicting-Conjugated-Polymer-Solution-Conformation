


OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.11073042008327219), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.43534245092116314), ('regressor__regressor__min_samples_split', 0.99)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.11736958818633339), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.3610575159877637)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.07558340286429001), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.15605071237897827), ('regressor__regressor__min_samples_split', 0.6638489336123954)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05574815617481613), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.09390189642176408), ('regressor__regressor__min_samples_split', 0.060851960571544086)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05203753615953894), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.0504020387387044), ('regressor__regressor__min_samples_split', 0.15063801820147305)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.23695014942241688)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.13672830143003212), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.99)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.07680556586793855), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.8371450542200873), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.9441504721977296), ('regressor__regressor__min_samples_split', 0.8622802405370537)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.061905535759496574), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05000000000000002)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.24094619205837065), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.24601692578213352), ('regressor__regressor__min_samples_split', 0.11547731223533317)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.15341211167801833), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.45657290861053246), ('regressor__regressor__min_samples_split', 0.059450749815212714)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.12424557698979789), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.0727745583122815)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.22129799132758454), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.21558531502294204), ('regressor__regressor__min_samples_split', 0.1295449729482134)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.08956925129214406), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.06349758398171729), ('regressor__regressor__min_samples_split', 0.1834719421581546)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05034835352737389), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.450221235885367), ('regressor__regressor__min_samples_split', 0.6984487650698255)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.15975666349823014), ('regressor__regressor__min_samples_split', 0.08759497024566923)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.19732576143607689), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.12339770522249531), ('regressor__regressor__min_samples_split', 0.2530408559720919)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05584175525635872), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05486148761476048), ('regressor__regressor__min_samples_split', 0.5572496578150122)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.19732576143607689), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.12339770522249531), ('regressor__regressor__min_samples_split', 0.2530408559720919)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.24432919583215873)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.2813336537220422)])


Average scores:	 r: 0.58±0.13	 r2: 0.15±0.43
scaler
Filename: (PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_DT_mean_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rg/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_DT_mean_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rg/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_DT_mean_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rg/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_DT_mean_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c033n01>
Subject: Job 821689: <numerical_DT_polymer_size_feats_on_Rg1 (nm)_all_num> in cluster <Hazel> Done

Job <numerical_DT_polymer_size_feats_on_Rg1 (nm)_all_num> was submitted from host <c004n04> by user <sdehgha2> in cluster <Hazel> at Fri Dec 20 17:00:57 2024
Job was executed on host(s) <2*c033n01>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Fri Dec 20 17:00:58 2024
                            <2*c027n04>
                            <2*c029n03>
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Fri Dec 20 17:00:58 2024
Terminated at Fri Dec 20 17:36:39 2024
Results reported at Fri Dec 20 17:36:39 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[ptile=2]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "numerical_DT_polymer_size_feats_on_Rg1 (nm)_all_num"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_DT_Robust Scaler_Rg1 (nm)_final.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_DT_Robust Scaler_Rg1 (nm)_final.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "Rg1 (nm)"                                     --regressor_type "DT"                                     --transform_type "Robust Scaler"                                     --numerical_feats 'Mn (g/mol)' 'PDI' 'Mw (g/mol)' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" "solvent dP" "solvent dD" "solvent dH" "Ra"                                     --columns_to_impute "PDI" "Temperature SANS/SLS/DLS/SEC (K)" "Concentration (mg/ml)"                                     --special_impute 'Mw (g/mol)'                                     --imputer mean


conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   2020.37 sec.
    Max Memory :                                 6 GB
    Average Memory :                             5.08 GB
    Total Requested Memory :                     48.00 GB
    Delta Memory :                               42.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   2142 sec.
    Turnaround time :                            2142 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_DT_Robust Scaler_Rg1 (nm)_final.err> for stderr output of this job.



Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.09068829086107005)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.09077958574463817), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.12179764783513666), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.25497669286672986), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.06032919402164688), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.08262731452669755), ('regressor__regressor__min_samples_split', 0.05249395785228744)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.3380829245311388), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.06336339404448911), ('regressor__regressor__min_samples_split', 0.07619837333781727)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.10956378848577003), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.3415806255472331), ('regressor__regressor__min_samples_split', 0.09499720800676531)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.0704010477832803), ('regressor__regressor__min_samples_split', 0.12131335663003269)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.07964440500815437), ('regressor__regressor__min_samples_split', 0.1525397875347069)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.12276522252028381), ('regressor__regressor__min_samples_split', 0.486138650478579)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.184791621459361), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.8224490179750484)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.06893597348160208), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.3927426468371417), ('regressor__regressor__min_samples_split', 0.8014098003976099)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.435497721322115), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.34685161787782576), ('regressor__regressor__min_samples_split', 0.6799390713727985)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.28895653743946176), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.99)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.2445032794413166), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.2014802568062336), ('regressor__regressor__min_samples_split', 0.7697296632199392)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.1863149304803589), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.21793449874644089), ('regressor__regressor__min_samples_split', 0.7676374001161879)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.057121857395779234), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.44123561702353203), ('regressor__regressor__min_samples_split', 0.7064228813282334)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.99)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.058304547442669975), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.07223586833475051), ('regressor__regressor__min_samples_split', 0.15587519980370373)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.9869455974198869)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.1938779173584142), ('regressor__regressor__min_samples_split', 0.99)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05680989282137761), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.0509783352713028), ('regressor__regressor__min_samples_split', 0.13113704509888863)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.11222661970688591), ('regressor__regressor__min_samples_split', 0.4520417905393554)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.08001118503813141), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.3778769068468622), ('regressor__regressor__min_samples_split', 0.8978459625012498)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.209603284613612), ('regressor__regressor__min_samples_split', 0.7834407556001652)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.19732576143607689), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.12339770522249531), ('regressor__regressor__min_samples_split', 0.2530408559720919)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.2665313816324143)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.13153954939148274), ('regressor__regressor__min_samples_split', 0.7760242175167418)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.09533050116275625), ('regressor__regressor__min_samples_split', 0.21585674147542294)])


Average scores:	 r: 0.58±0.11	 r2: 0.2±0.25
scaler
Filename: (PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_DT_mean_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rg/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_DT_mean_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rg/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_DT_mean_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rg/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_DT_mean_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c019n03>
Subject: Job 821706: <numerical_DT_polymer_size_feats_on_Rg1 (nm)_all_num> in cluster <Hazel> Done

Job <numerical_DT_polymer_size_feats_on_Rg1 (nm)_all_num> was submitted from host <c007n02> by user <sdehgha2> in cluster <Hazel> at Fri Dec 20 17:02:35 2024
Job was executed on host(s) <2*c019n03>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Fri Dec 20 17:02:37 2024
                            <2*c019n01>
                            <2*c014n01>
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Fri Dec 20 17:02:37 2024
Terminated at Fri Dec 20 17:37:37 2024
Results reported at Fri Dec 20 17:37:37 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[ptile=2]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "numerical_DT_polymer_size_feats_on_Rg1 (nm)_all_num"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_DT_Robust Scaler_Rg1 (nm)_final.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_DT_Robust Scaler_Rg1 (nm)_final.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "Rg1 (nm)"                                     --regressor_type "DT"                                     --transform_type "Robust Scaler"                                     --numerical_feats 'Mn (g/mol)' 'PDI' 'Mw (g/mol)' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" "solvent dP" "solvent dD" "solvent dH"                                     --columns_to_impute "PDI" "Temperature SANS/SLS/DLS/SEC (K)" "Concentration (mg/ml)"                                     --special_impute 'Mw (g/mol)'                                     --imputer mean


conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   1920.00 sec.
    Max Memory :                                 6 GB
    Average Memory :                             4.83 GB
    Total Requested Memory :                     48.00 GB
    Delta Memory :                               42.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   2116 sec.
    Turnaround time :                            2102 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_DT_Robust Scaler_Rg1 (nm)_final.err> for stderr output of this job.

