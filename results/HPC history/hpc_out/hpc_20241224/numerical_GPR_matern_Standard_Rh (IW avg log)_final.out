


OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.503947079288224), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.503947079288224), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.503947079288224), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.632478145304319), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.632478145304319), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.47481646870406946), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.888003742715755), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.47481646870406946), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.888003742715755), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 0.47481646870406946), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.259806678617276), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.259806678617276), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.259806678617276), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.259806678617276), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.259806678617276), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.0535263630521259), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.0535263630521259), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.0535263630521259), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.0535263630521259), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.0535263630521259), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.457634159466227), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.583408322781089), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.583408322781089), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.457634159466227), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.457634159466227), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.1128981765515544), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.1128981765515544), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.1128981765515544), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.1128981765515544), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 1.1128981765515544), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.8643589293022735), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.574647355374639), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 2.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.8643589293022735), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.8643589293022735), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR GPR 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__lengthscale', 2.8643589293022735), ('regressor__regressor__lr', 0.01), ('regressor__regressor__n_epoch', 100), ('regressor__regressor__nu', 0.5)])


Average scores:	 r: 0.38±0.3	 r2: -0.26±2.17
scaler
Filename: (PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_GPR.matern_mean_Standard
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_GPR.matern_mean_Standard_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_GPR.matern_mean_Standard_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_GPR.matern_mean_Standard_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c003n03>
Subject: Job 821675: <numerical_GPR_polymer_size_feats_on_Rh (IW avg log)_all_num> in cluster <Hazel> Done

Job <numerical_GPR_polymer_size_feats_on_Rh (IW avg log)_all_num> was submitted from host <c010n02> by user <sdehgha2> in cluster <Hazel> at Fri Dec 20 17:00:49 2024
Job was executed on host(s) <2*c003n03>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Fri Dec 20 17:00:51 2024
                            <2*c006n02>
                            <2*c009n04>
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Fri Dec 20 17:00:51 2024
Terminated at Fri Dec 20 17:46:04 2024
Results reported at Fri Dec 20 17:46:04 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[ptile=2]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "numerical_GPR_polymer_size_feats_on_Rh (IW avg log)_all_num"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_GPR_matern_Standard_Rh (IW avg log)_final.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_GPR_matern_Standard_Rh (IW avg log)_final.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "Rh (IW avg log)"                                     --regressor_type "GPR"                                     --kernel "matern"                                     --transform_type "Standard"                                     --numerical_feats 'Mn (g/mol)' 'PDI' 'Mw (g/mol)' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" "solvent dP" "solvent dD" "solvent dH" "Ra"                                     --columns_to_impute "PDI" "Temperature SANS/SLS/DLS/SEC (K)" "Concentration (mg/ml)"                                     --special_impute 'Mw (g/mol)'                                     --imputer mean 

conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   6376.00 sec.
    Max Memory :                                 8 GB
    Average Memory :                             6.63 GB
    Total Requested Memory :                     48.00 GB
    Delta Memory :                               40.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   2714 sec.
    Turnaround time :                            2715 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_GPR_matern_Standard_Rh (IW avg log)_final.err> for stderr output of this job.

