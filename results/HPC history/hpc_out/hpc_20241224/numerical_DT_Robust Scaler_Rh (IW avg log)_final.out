


OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.1951656958524347)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05000000000000006)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.051096714177934696), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.050643135614768055), ('regressor__regressor__min_samples_split', 0.09885891083927674)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.16006802804328124), ('regressor__regressor__min_samples_split', 0.7560027752179891)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.050974423079183054), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.08141788277841672), ('regressor__regressor__min_samples_split', 0.970109847414565)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.6688187181090117)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.062377380518976275), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.11462886353566552), ('regressor__regressor__min_samples_split', 0.42103433340644214)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.5592538934101217)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.06227507351629724), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.050000277369897914)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.435497721322115), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.34685161787782576), ('regressor__regressor__min_samples_split', 0.6799390713727985)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.99)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.06405342752814466), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.07879328566142019), ('regressor__regressor__min_samples_split', 0.07362101236595202)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05015223262413728), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.054931488801843883), ('regressor__regressor__min_samples_split', 0.09315472273978521)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.055443955718978234), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.19312417560288309), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.11295064191850925)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05779495455045278), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.99)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05826846852916016), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.07659140350315546), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.36215636084429464)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.09169508524475911), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.12488705513888769), ('regressor__regressor__min_samples_split', 0.9888114451386707)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.0527775043035794), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.20595776580820713), ('regressor__regressor__min_samples_split', 0.10123046883720295)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.08168495333629638)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.07458256443185844), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.11666771117575489), ('regressor__regressor__min_samples_split', 0.16230256788125164)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.055323537721463735), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.08749057615748791), ('regressor__regressor__min_samples_split', 0.985613979101368)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.19803288032072153)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.08833936744396939), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.15490853422896372), ('regressor__regressor__min_samples_split', 0.49865996579847005)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])


Average scores:	 r: nan±nan	 r2: 0.01±0.12
scaler
Filename: (PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_DT_mean_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_DT_mean_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_DT_mean_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH)_DT_mean_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c034n02>
Subject: Job 821712: <numerical_DT_polymer_size_feats_on_Rh (IW avg log)_all_num> in cluster <Hazel> Done

Job <numerical_DT_polymer_size_feats_on_Rh (IW avg log)_all_num> was submitted from host <c007n02> by user <sdehgha2> in cluster <Hazel> at Fri Dec 20 17:02:37 2024
Job was executed on host(s) <2*c034n02>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Fri Dec 20 17:02:38 2024
                            <2*c033n02>
                            <2*c031n02>
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Fri Dec 20 17:02:38 2024
Terminated at Fri Dec 20 17:36:41 2024
Results reported at Fri Dec 20 17:36:41 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[ptile=2]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "numerical_DT_polymer_size_feats_on_Rh (IW avg log)_all_num"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_DT_Robust Scaler_Rh (IW avg log)_final.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_DT_Robust Scaler_Rh (IW avg log)_final.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "Rh (IW avg log)"                                     --regressor_type "DT"                                     --transform_type "Robust Scaler"                                     --numerical_feats 'Mn (g/mol)' 'PDI' 'Mw (g/mol)' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" "solvent dP" "solvent dD" "solvent dH"                                     --columns_to_impute "PDI" "Temperature SANS/SLS/DLS/SEC (K)" "Concentration (mg/ml)"                                     --special_impute 'Mw (g/mol)'                                     --imputer mean


conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   2004.03 sec.
    Max Memory :                                 6 GB
    Average Memory :                             4.99 GB
    Total Requested Memory :                     48.00 GB
    Delta Memory :                               42.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   2069 sec.
    Turnaround time :                            2044 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_DT_Robust Scaler_Rh (IW avg log)_final.err> for stderr output of this job.



Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.99)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05334671399747797), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.09626974142713977), ('regressor__regressor__min_samples_split', 0.6070553499408398)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.06426842986433032), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.07223528091627175), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.17635056516456638), ('regressor__regressor__min_samples_split', 0.34408577283959707)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.07544306278936493), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.435497721322115), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.34685161787782576), ('regressor__regressor__min_samples_split', 0.6799390713727985)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05772450750099628), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.190534304413778)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05084058963875795), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.2530130311194719)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.4253739205516538)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.18961105754703955)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.06405342752814466), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.07879328566142019), ('regressor__regressor__min_samples_split', 0.07362101236595202)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05710672379447468), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.13642100765103007), ('regressor__regressor__min_samples_split', 0.060035150302228994)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.13180057298720868), ('regressor__regressor__min_samples_split', 0.3943988527180719)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.060840261474759426), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.050111312380882435), ('regressor__regressor__min_samples_split', 0.09872624947585121)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.062080033431618005), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05207977281269076), ('regressor__regressor__min_samples_split', 0.33299835489728713)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.07288907476819569), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.41910694590536524)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.056849436160471535), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05099416792178408), ('regressor__regressor__min_samples_split', 0.13114029469270083)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.06020391420105604), ('regressor__regressor__min_samples_split', 0.5653745016452371)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.08558239335765952), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.24014443259939144), ('regressor__regressor__min_samples_split', 0.6388403628861283)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.1921863229015599), ('regressor__regressor__min_samples_split', 0.21698467648776382)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.13704678438095644), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'sqrt'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', 'log2'), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.3279643221306402)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.11121153230630636), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.052890960459336896), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.1511800471731713), ('regressor__regressor__min_samples_split', 0.05)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR DT 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__ccp_alpha', 0.05), ('regressor__regressor__max_depth', None), ('regressor__regressor__max_features', None), ('regressor__regressor__min_samples_leaf', 0.05), ('regressor__regressor__min_samples_split', 0.05)])


Average scores:	 r: nan±nan	 r2: -0.03±0.06
scaler
Filename: (PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_DT_mean_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_DT_mean_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_DT_mean_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_Rh/scaler/(PDI-Mw-concentration-temperature-polymer dP-polymer dD-polymer dH-solvent dP-solvent dD-solvent dH-Ra)_DT_mean_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c205n06>
Subject: Job 821695: <numerical_DT_polymer_size_feats_on_Rh (IW avg log)_all_num> in cluster <Hazel> Done

Job <numerical_DT_polymer_size_feats_on_Rh (IW avg log)_all_num> was submitted from host <c004n04> by user <sdehgha2> in cluster <Hazel> at Fri Dec 20 17:00:57 2024
Job was executed on host(s) <2*c205n06>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Fri Dec 20 17:01:00 2024
                            <2*c205n13>
                            <2*c205n04>
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Fri Dec 20 17:01:00 2024
Terminated at Fri Dec 20 17:40:31 2024
Results reported at Fri Dec 20 17:40:31 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 6
#BSUB -W 40:01
#BSUB -R span[ptile=2]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "numerical_DT_polymer_size_feats_on_Rh (IW avg log)_all_num"
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_DT_Robust Scaler_Rh (IW avg log)_final.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_DT_Robust Scaler_Rh (IW avg log)_final.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_numerical_only.py --target_features "Rh (IW avg log)"                                     --regressor_type "DT"                                     --transform_type "Robust Scaler"                                     --numerical_feats 'Mn (g/mol)' 'PDI' 'Mw (g/mol)' 'Concentration (mg/ml)' 'Temperature SANS/SLS/DLS/SEC (K)' "polymer dP" "polymer dD" "polymer dH" "solvent dP" "solvent dD" "solvent dH" "Ra"                                     --columns_to_impute "PDI" "Temperature SANS/SLS/DLS/SEC (K)" "Concentration (mg/ml)"                                     --special_impute 'Mw (g/mol)'                                     --imputer mean


conda deactivate


------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   2670.00 sec.
    Max Memory :                                 5 GB
    Average Memory :                             4.37 GB
    Total Requested Memory :                     48.00 GB
    Delta Memory :                               43.00 GB
    Max Swap :                                   -
    Max Processes :                              30
    Max Threads :                                33
    Run time :                                   2389 sec.
    Turnaround time :                            2374 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/numerical_DT_Robust Scaler_Rh (IW avg log)_final.err> for stderr output of this job.

