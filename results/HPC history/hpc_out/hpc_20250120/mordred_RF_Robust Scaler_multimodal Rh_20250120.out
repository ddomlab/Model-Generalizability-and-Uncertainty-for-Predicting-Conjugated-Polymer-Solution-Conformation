Monomer



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6
Dimer



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6
Trimer



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6
RRU Monomer



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6
RRU Dimer



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6
RRU Trimer



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6
Monomer



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6
Dimer



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6
Trimer



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6
RRU Monomer



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6
RRU Dimer



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6
RRU Trimer



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.18894142171649625), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.0500377580229486), ('regressor__regressor__estimator__min_samples_split', 0.06734687183436075), ('regressor__regressor__estimator__n_estimators', 140)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05096659081511896), ('regressor__regressor__estimator__min_samples_split', 0.06794706158760801), ('regressor__regressor__estimator__n_estimators', 1969)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05378361893460851), ('regressor__regressor__estimator__min_samples_split', 0.06386488675175608), ('regressor__regressor__estimator__n_estimators', 62)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.11114980459440751), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.15395374315908522), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.11819964317712332), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.051708512530533005), ('regressor__regressor__estimator__min_samples_split', 0.07018823747016083), ('regressor__regressor__estimator__n_estimators', 583)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.0511112590226121), ('regressor__regressor__estimator__min_samples_split', 0.05866087268822301), ('regressor__regressor__estimator__n_estimators', 180)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 609)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.051494031085785236), ('regressor__regressor__estimator__min_samples_split', 0.056004565892354384), ('regressor__regressor__estimator__n_estimators', 53)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05076209071725598), ('regressor__regressor__estimator__min_samples_split', 0.06866074972884742), ('regressor__regressor__estimator__n_estimators', 72)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05069733793106011), ('regressor__regressor__estimator__min_samples_split', 0.05375640052295252), ('regressor__regressor__estimator__n_estimators', 1889)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05054933640233682), ('regressor__regressor__estimator__min_samples_split', 0.07577547637872585), ('regressor__regressor__estimator__n_estimators', 55)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.14365931886145228), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05071388419214858), ('regressor__regressor__estimator__min_samples_split', 0.06724929626288029), ('regressor__regressor__estimator__n_estimators', 55)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08136454443947291), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10105166152072215), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.2773388238512695), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05172124757686656), ('regressor__regressor__estimator__min_samples_split', 0.08144535030287722), ('regressor__regressor__estimator__n_estimators', 1572)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.21447505339235284), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.06948418395677657), ('regressor__regressor__estimator__n_estimators', 2000)])


Average scores:	 r2: [ 0.044  0.041 -0.041]±[0.114 0.049 0.022]
[array([ 0.04417704,  0.04137476, -0.04057392]), array([8.50421838e+00, 1.54803935e+02, 9.38188955e+04]), array([6.53473920e+00, 1.05779637e+02, 1.41217049e+04])]
Monomer
Filename: (MACCS)_RF_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Monomer/(MACCS)_RF_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Monomer/(MACCS)_RF_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Monomer/(MACCS)_RF_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c207n03>
Subject: Job 292252: <mordred_RF_Robust Scaler_multimodal Rh_20250120> in cluster <Hazel> Done

Job <mordred_RF_Robust Scaler_multimodal Rh_20250120> was submitted from host <c038n02> by user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:17 2025
Job was executed on host(s) <8*c207n03>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:17:30 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Jan 20 12:17:30 2025
Terminated at Mon Jan 20 13:48:57 2025
Results reported at Mon Jan 20 13:48:57 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 8
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "mordred_RF_Robust Scaler_multimodal Rh_20250120"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py maccs              --regressor_type RF              --target "multimodal Rh"              --oligo_type "Monomer"              --transform_type "Robust Scaler"

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   19908.00 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.78 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   5488 sec.
    Turnaround time :                            5560 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err> for stderr output of this job.



Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08964304520622284), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05410049775239314), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05008050949801044), ('regressor__regressor__estimator__min_samples_split', 0.05806782186117265), ('regressor__regressor__estimator__n_estimators', 71)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.2688543878299574), ('regressor__regressor__estimator__n_estimators', 422)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10466919567892885), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05584344546765119), ('regressor__regressor__estimator__min_samples_split', 0.08613692126574171), ('regressor__regressor__estimator__n_estimators', 62)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08764271890928224), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10566905914432656), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.21863353994885293), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.09089645124382252), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.051494031085785236), ('regressor__regressor__estimator__min_samples_split', 0.056004565892354384), ('regressor__regressor__estimator__n_estimators', 53)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05069733793106011), ('regressor__regressor__estimator__min_samples_split', 0.05375640052295252), ('regressor__regressor__estimator__n_estimators', 1889)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05014912610892318), ('regressor__regressor__estimator__min_samples_split', 0.059110673991282225), ('regressor__regressor__estimator__n_estimators', 556)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05015574944519795), ('regressor__regressor__estimator__min_samples_split', 0.05761660271675556), ('regressor__regressor__estimator__n_estimators', 741)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 1134)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.051907680310410056), ('regressor__regressor__estimator__min_samples_split', 0.05093923097989127), ('regressor__regressor__estimator__n_estimators', 1803)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08991275591422167), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.12306896076495105), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 579)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.050917481692672864), ('regressor__regressor__estimator__min_samples_split', 0.07609907057701965), ('regressor__regressor__estimator__n_estimators', 180)])


Average scores:	 r2: [ 0.043  0.043 -0.041]±[0.109 0.048 0.022]
[array([ 0.04296245,  0.04292737, -0.04057392]), array([8.51360755e+00, 1.54690008e+02, 9.38188955e+04]), array([6.53662093e+00, 1.05589652e+02, 1.41217049e+04])]
Trimer
Filename: (MACCS)_RF_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Trimer/(MACCS)_RF_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Trimer/(MACCS)_RF_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Trimer/(MACCS)_RF_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c207n12>
Subject: Job 292256: <mordred_RF_Robust Scaler_multimodal Rh_20250120> in cluster <Hazel> Done

Job <mordred_RF_Robust Scaler_multimodal Rh_20250120> was submitted from host <c038n02> by user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:17 2025
Job was executed on host(s) <8*c207n12>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:18:25 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Jan 20 12:18:25 2025
Terminated at Mon Jan 20 13:53:01 2025
Results reported at Mon Jan 20 13:53:01 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 8
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "mordred_RF_Robust Scaler_multimodal Rh_20250120"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py maccs              --regressor_type RF              --target "multimodal Rh"              --oligo_type "Trimer"              --transform_type "Robust Scaler"

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   20971.01 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.83 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   5676 sec.
    Turnaround time :                            5804 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err> for stderr output of this job.



Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05172722757933875), ('regressor__regressor__estimator__min_samples_split', 0.09786168744264787), ('regressor__regressor__estimator__n_estimators', 1707)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.12355215253820571), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.18062318332772015), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.051621669425973835), ('regressor__regressor__estimator__min_samples_split', 0.05586957536472967), ('regressor__regressor__estimator__n_estimators', 293)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.051805658216930506), ('regressor__regressor__estimator__min_samples_split', 0.06925621302063295), ('regressor__regressor__estimator__n_estimators', 63)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.051708512530533005), ('regressor__regressor__estimator__min_samples_split', 0.07018823747016083), ('regressor__regressor__estimator__n_estimators', 583)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.21636382640388346), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.34339049083687817), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08275769900135896), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.11436098152222629), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 1654)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.0511112590226121), ('regressor__regressor__estimator__min_samples_split', 0.05866087268822301), ('regressor__regressor__estimator__n_estimators', 180)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05118012568920886), ('regressor__regressor__estimator__min_samples_split', 0.09988425930212608), ('regressor__regressor__estimator__n_estimators', 67)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.11090330644928348), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05026392690472537), ('regressor__regressor__estimator__min_samples_split', 0.08829859144499794), ('regressor__regressor__estimator__n_estimators', 212)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.12252745978311917), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 553)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 1134)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.1572813330675423), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10194041012294655), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 628)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08064511954148235), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.09395002416531349), ('regressor__regressor__estimator__n_estimators', 2000)])


Average scores:	 r2: [ 0.042  0.044 -0.041]±[0.118 0.047 0.022]
[array([ 0.04182867,  0.04417626, -0.04057392]), array([8.51278989e+00, 1.54606568e+02, 9.38188955e+04]), array([6.54852491e+00, 1.05666374e+02, 1.41217049e+04])]
RRU Monomer
Filename: (MACCS)_RF_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Monomer/(MACCS)_RF_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Monomer/(MACCS)_RF_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Monomer/(MACCS)_RF_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c200n01>
Subject: Job 292258: <mordred_RF_Robust Scaler_multimodal Rh_20250120> in cluster <Hazel> Done

Job <mordred_RF_Robust Scaler_multimodal Rh_20250120> was submitted from host <c038n02> by user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:17 2025
Job was executed on host(s) <8*c200n01>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:18:45 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Jan 20 12:18:45 2025
Terminated at Mon Jan 20 13:54:03 2025
Results reported at Mon Jan 20 13:54:03 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 8
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "mordred_RF_Robust Scaler_multimodal Rh_20250120"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py maccs              --regressor_type RF              --target "multimodal Rh"              --oligo_type "RRU Monomer"              --transform_type "Robust Scaler"

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   20839.09 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.84 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   5719 sec.
    Turnaround time :                            5866 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err> for stderr output of this job.



Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08785427866058126), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10419160096042511), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10396016505962088), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.15927126634458608), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05096659081511896), ('regressor__regressor__estimator__min_samples_split', 0.06794706158760801), ('regressor__regressor__estimator__n_estimators', 1969)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05026991304466285), ('regressor__regressor__estimator__min_samples_split', 0.06130772093236794), ('regressor__regressor__estimator__n_estimators', 146)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05251564308628807), ('regressor__regressor__estimator__min_samples_split', 0.12558357169439754), ('regressor__regressor__estimator__n_estimators', 51)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.2192221390460095), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.1409914124027455), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10116203255383743), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.09082560165041784), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.0511112590226121), ('regressor__regressor__estimator__min_samples_split', 0.05866087268822301), ('regressor__regressor__estimator__n_estimators', 180)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05083277168428705), ('regressor__regressor__estimator__min_samples_split', 0.06962633302947505), ('regressor__regressor__estimator__n_estimators', 79)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05094521546846843), ('regressor__regressor__estimator__min_samples_split', 0.09052185625200138), ('regressor__regressor__estimator__n_estimators', 148)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.1180756716628984), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05076209071725598), ('regressor__regressor__estimator__min_samples_split', 0.06866074972884742), ('regressor__regressor__estimator__n_estimators', 72)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05014912610892318), ('regressor__regressor__estimator__min_samples_split', 0.059110673991282225), ('regressor__regressor__estimator__n_estimators', 556)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.07531974250558199), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08827513616165064), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.09972435310140905), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.16803234547300636), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05000000000000002), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 580)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.06765417971716359), ('regressor__regressor__estimator__n_estimators', 2000)])


Average scores:	 r2: [ 0.041  0.041 -0.041]±[0.108 0.044 0.022]
[array([ 0.04087777,  0.04080365, -0.04057392]), array([8.52259732e+00, 1.54898618e+02, 9.38188955e+04]), array([6.55418674e+00, 1.05737370e+02, 1.41217049e+04])]
RRU Dimer
Filename: (MACCS)_RF_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Dimer/(MACCS)_RF_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Dimer/(MACCS)_RF_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Dimer/(MACCS)_RF_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c200n13>
Subject: Job 292260: <mordred_RF_Robust Scaler_multimodal Rh_20250120> in cluster <Hazel> Done

Job <mordred_RF_Robust Scaler_multimodal Rh_20250120> was submitted from host <c038n02> by user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:18 2025
Job was executed on host(s) <8*c200n13>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:19:28 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Jan 20 12:19:28 2025
Terminated at Mon Jan 20 13:55:13 2025
Results reported at Mon Jan 20 13:55:13 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 8
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "mordred_RF_Robust Scaler_multimodal Rh_20250120"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py maccs              --regressor_type RF              --target "multimodal Rh"              --oligo_type "RRU Dimer"              --transform_type "Robust Scaler"

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   21256.26 sec.
    Max Memory :                                 4 GB
    Average Memory :                             3.84 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               12.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   5745 sec.
    Turnaround time :                            5935 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err> for stderr output of this job.



Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08118732611040849), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.07944959190527182), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.3972391978928582), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.08960456330385247), ('regressor__regressor__estimator__min_samples_split', 0.14053034090671332), ('regressor__regressor__estimator__n_estimators', 89)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.07489524705250564), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.5181462020240868), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10321342614441756), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.06889820571495679), ('regressor__regressor__estimator__min_samples_split', 0.12993794376170903), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.1250739204771708), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.32994263997855944), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10350770893570307), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.11311938757579187), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.382714579867332), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.13005785382139975), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 1698)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 1698)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08178761097293302), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.12492840153155291), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.10925035265025378), ('regressor__regressor__estimator__min_samples_split', 0.26426146736961253), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.06200228114064708), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 430)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.0711076283769105), ('regressor__regressor__estimator__n_estimators', 837)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.5599775761313313), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])


Average scores:	 r2: [ 0.044  0.06  -0.041]±[0.149 0.072 0.022]
[array([ 0.04397583,  0.06006062, -0.04057389]), array([8.48218685e+00, 1.53224176e+02, 9.38188953e+04]), array([6.40546730e+00, 1.02990551e+02, 1.41217056e+04])]
Trimer
Filename: (Mordred)_RF_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Trimer/(Mordred)_RF_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Trimer/(Mordred)_RF_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Trimer/(Mordred)_RF_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c203n08>
Subject: Job 292244: <mordred_RF_Robust Scaler_multimodal Rh_20250120> in cluster <Hazel> Done

Job <mordred_RF_Robust Scaler_multimodal Rh_20250120> was submitted from host <c038n02> by user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:16 2025
Job was executed on host(s) <8*c203n08>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:17 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Jan 20 12:16:17 2025
Terminated at Mon Jan 20 13:57:32 2025
Results reported at Mon Jan 20 13:57:32 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 8
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "mordred_RF_Robust Scaler_multimodal Rh_20250120"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py mordred              --regressor_type RF              --target "multimodal Rh"              --oligo_type "Trimer"              --transform_type "Robust Scaler"

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   23119.47 sec.
    Max Memory :                                 5 GB
    Average Memory :                             3.98 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               11.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   6078 sec.
    Turnaround time :                            6076 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err> for stderr output of this job.



Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.13795989794777352), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 174)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05131400138333695), ('regressor__regressor__estimator__min_samples_split', 0.05505716705148023), ('regressor__regressor__estimator__n_estimators', 657)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.09972138143985779), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.18025340461496553), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.1673705890907122), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.17146398542175467), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08747663594813634), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05010623315870579), ('regressor__regressor__estimator__min_samples_split', 0.05561441624444238), ('regressor__regressor__estimator__n_estimators', 1004)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 144)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.19129747655132262), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 153)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05010623315870579), ('regressor__regressor__estimator__min_samples_split', 0.05561441624444238), ('regressor__regressor__estimator__n_estimators', 1004)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05076209071725598), ('regressor__regressor__estimator__min_samples_split', 0.06866074972884742), ('regressor__regressor__estimator__n_estimators', 72)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.18437930015229587), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05088476132014544), ('regressor__regressor__estimator__min_samples_split', 0.16465690219850543), ('regressor__regressor__estimator__n_estimators', 100)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05041381029390093), ('regressor__regressor__estimator__min_samples_split', 0.16680001070114012), ('regressor__regressor__estimator__n_estimators', 101)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10423563082861056), ('regressor__regressor__estimator__n_estimators', 534)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.15210192003944578), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 105)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 520)])


Average scores:	 r2: [ 0.04   0.041 -0.041]±[0.11  0.045 0.022]
[array([ 0.04025228,  0.04060204, -0.04057392]), array([8.52482757e+00, 1.54907882e+02, 9.38188955e+04]), array([6.53614240e+00, 1.05840921e+02, 1.41217049e+04])]
RRU Trimer
Filename: (MACCS)_RF_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Trimer/(MACCS)_RF_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Trimer/(MACCS)_RF_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Trimer/(MACCS)_RF_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c205n13>
Subject: Job 292262: <mordred_RF_Robust Scaler_multimodal Rh_20250120> in cluster <Hazel> Done

Job <mordred_RF_Robust Scaler_multimodal Rh_20250120> was submitted from host <c038n02> by user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:18 2025
Job was executed on host(s) <8*c205n13>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:19:43 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Jan 20 12:19:43 2025
Terminated at Mon Jan 20 13:57:55 2025
Results reported at Mon Jan 20 13:57:55 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 8
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "mordred_RF_Robust Scaler_multimodal Rh_20250120"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py maccs              --regressor_type RF              --target "multimodal Rh"              --oligo_type "RRU Trimer"              --transform_type "Robust Scaler"

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   21279.03 sec.
    Max Memory :                                 5 GB
    Average Memory :                             4.76 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               11.00 GB
    Max Swap :                                   -
    Max Processes :                              30
    Max Threads :                                33
    Run time :                                   5893 sec.
    Turnaround time :                            6097 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err> for stderr output of this job.



Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05061535769865157), ('regressor__regressor__estimator__min_samples_split', 0.07678351797911112), ('regressor__regressor__estimator__n_estimators', 456)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.11199900017016082), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08861648195604188), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 280)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05142727854578681), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 513)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.32397343742155466), ('regressor__regressor__estimator__n_estimators', 111)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.050692435754724194), ('regressor__regressor__estimator__min_samples_split', 0.06669574142774738), ('regressor__regressor__estimator__n_estimators', 585)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.0511112590226121), ('regressor__regressor__estimator__min_samples_split', 0.05866087268822301), ('regressor__regressor__estimator__n_estimators', 180)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05094521546846843), ('regressor__regressor__estimator__min_samples_split', 0.09052185625200138), ('regressor__regressor__estimator__n_estimators', 148)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.051028488546209366), ('regressor__regressor__estimator__min_samples_split', 0.09609012671201425), ('regressor__regressor__estimator__n_estimators', 58)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.1410276166483665), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05054933640233682), ('regressor__regressor__estimator__min_samples_split', 0.07577547637872585), ('regressor__regressor__estimator__n_estimators', 55)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05015574944519795), ('regressor__regressor__estimator__min_samples_split', 0.05761660271675556), ('regressor__regressor__estimator__n_estimators', 741)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.12370239816129948), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.1815731351186614), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.18349751046788348), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])


Average scores:	 r2: [ 0.043  0.044 -0.041]±[0.11  0.049 0.022]
[array([ 0.04338637,  0.04372974, -0.04057392]), array([8.51028381e+00, 1.54617280e+02, 9.38188955e+04]), array([6.52921644e+00, 1.05421371e+02, 1.41217049e+04])]
Dimer
Filename: (MACCS)_RF_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Dimer/(MACCS)_RF_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Dimer/(MACCS)_RF_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Dimer/(MACCS)_RF_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c205n08>
Subject: Job 292254: <mordred_RF_Robust Scaler_multimodal Rh_20250120> in cluster <Hazel> Done

Job <mordred_RF_Robust Scaler_multimodal Rh_20250120> was submitted from host <c038n02> by user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:17 2025
Job was executed on host(s) <8*c205n08>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:18:10 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Jan 20 12:18:10 2025
Terminated at Mon Jan 20 13:59:12 2025
Results reported at Mon Jan 20 13:59:12 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 8
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "mordred_RF_Robust Scaler_multimodal Rh_20250120"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py maccs              --regressor_type RF              --target "multimodal Rh"              --oligo_type "Dimer"              --transform_type "Robust Scaler"

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   21662.05 sec.
    Max Memory :                                 5 GB
    Average Memory :                             4.75 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               11.00 GB
    Max Swap :                                   -
    Max Processes :                              30
    Max Threads :                                33
    Run time :                                   6062 sec.
    Turnaround time :                            6175 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err> for stderr output of this job.



Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10174208999750044), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.1063579430870342), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05326450225227122), ('regressor__regressor__estimator__min_samples_split', 0.052153272222854145), ('regressor__regressor__estimator__n_estimators', 666)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.0826223428959683), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.1227508938938528), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 1434)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10390811803127413), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.07814382765974705), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10814129186005955), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08387759519148692), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.29106798189574873), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.08541030957581741), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 109)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.13938973648992253), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.18799003990242086), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.09127094818932405), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.07918812793610583), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05558110122114052), ('regressor__regressor__estimator__min_samples_split', 0.05543840946856854), ('regressor__regressor__estimator__n_estimators', 59)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.1149170421627944), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05015574944519795), ('regressor__regressor__estimator__min_samples_split', 0.05761660271675556), ('regressor__regressor__estimator__n_estimators', 741)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05125927906789999), ('regressor__regressor__estimator__min_samples_split', 0.13800585160836565), ('regressor__regressor__estimator__n_estimators', 1227)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10993038280304106), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.0744368255432446), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.4877385687604141), ('regressor__regressor__estimator__n_estimators', 69)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.07633871321584652), ('regressor__regressor__estimator__min_samples_split', 0.16461895558185669), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.13726908451505052), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.5899716123669946), ('regressor__regressor__estimator__n_estimators', 74)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08394253132100926), ('regressor__regressor__estimator__n_estimators', 2000)])


Average scores:	 r2: [ 0.043  0.051 -0.041]±[0.15  0.073 0.022]
[array([ 0.04326852,  0.05098188, -0.0405739 ]), array([8.48549985e+00, 1.53958693e+02, 9.38188953e+04]), array([6.39883209e+00, 1.04049141e+02, 1.41217056e+04])]
Monomer
Filename: (Mordred)_RF_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Monomer/(Mordred)_RF_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Monomer/(Mordred)_RF_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Monomer/(Mordred)_RF_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c203n14>
Subject: Job 292240: <mordred_RF_Robust Scaler_multimodal Rh_20250120> in cluster <Hazel> Done

Job <mordred_RF_Robust Scaler_multimodal Rh_20250120> was submitted from host <c038n02> by user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:16 2025
Job was executed on host(s) <8*c203n14>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:17 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Jan 20 12:16:17 2025
Terminated at Mon Jan 20 14:00:13 2025
Results reported at Mon Jan 20 14:00:13 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 8
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "mordred_RF_Robust Scaler_multimodal Rh_20250120"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py mordred              --regressor_type RF              --target "multimodal Rh"              --oligo_type "Monomer"              --transform_type "Robust Scaler"

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   23316.00 sec.
    Max Memory :                                 5 GB
    Average Memory :                             4.65 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               11.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   6258 sec.
    Turnaround time :                            6237 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err> for stderr output of this job.



Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 428)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.18584778807446878), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.11563158861669368), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.11651170213842653), ('regressor__regressor__estimator__min_samples_split', 0.3836916831222857), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05280393797775512), ('regressor__regressor__estimator__min_samples_split', 0.05568153485681433), ('regressor__regressor__estimator__n_estimators', 56)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 813)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.12285478627945585), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.12653398860246545), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.15376066853097775), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.44740570358850673), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.07580854573975127), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.0981809213950105), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 584)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.13516922761181338), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08015814747846778), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.09176545026618382), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05638339047076051), ('regressor__regressor__estimator__min_samples_split', 0.06907170140181002), ('regressor__regressor__estimator__n_estimators', 1911)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05015574944519795), ('regressor__regressor__estimator__min_samples_split', 0.05761660271675556), ('regressor__regressor__estimator__n_estimators', 741)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08513674641817243), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.2427134263254625), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.051907680310410056), ('regressor__regressor__estimator__min_samples_split', 0.05093923097989127), ('regressor__regressor__estimator__n_estimators', 1803)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.24033325154363416), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.06680679829708779), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.07945692868221227), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.050163251769812595), ('regressor__regressor__estimator__min_samples_split', 0.6086076993088065), ('regressor__regressor__estimator__n_estimators', 54)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.07989633969526086), ('regressor__regressor__estimator__n_estimators', 2000)])


Average scores:	 r2: [ 0.047  0.054 -0.041]±[0.146 0.072 0.022]
[array([ 0.04719037,  0.05363765, -0.0405739 ]), array([8.47128919e+00, 1.53745870e+02, 9.38188953e+04]), array([6.40631438e+00, 1.03692528e+02, 1.41217055e+04])]
Dimer
Filename: (Mordred)_RF_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Dimer/(Mordred)_RF_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Dimer/(Mordred)_RF_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/Dimer/(Mordred)_RF_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c203n03>
Subject: Job 292242: <mordred_RF_Robust Scaler_multimodal Rh_20250120> in cluster <Hazel> Done

Job <mordred_RF_Robust Scaler_multimodal Rh_20250120> was submitted from host <c038n02> by user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:16 2025
Job was executed on host(s) <8*c203n03>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:17 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Jan 20 12:16:17 2025
Terminated at Mon Jan 20 14:00:43 2025
Results reported at Mon Jan 20 14:00:43 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 8
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "mordred_RF_Robust Scaler_multimodal Rh_20250120"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py mordred              --regressor_type RF              --target "multimodal Rh"              --oligo_type "Dimer"              --transform_type "Robust Scaler"

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   23502.16 sec.
    Max Memory :                                 5 GB
    Average Memory :                             4.43 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               11.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   6280 sec.
    Turnaround time :                            6267 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err> for stderr output of this job.



Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.09691081054672486), ('regressor__regressor__estimator__n_estimators', 251)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.23041462318925143), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.11273819733689706), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.09535887904942346), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 56)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.051238136200717224), ('regressor__regressor__estimator__min_samples_split', 0.10906013340561857), ('regressor__regressor__estimator__n_estimators', 127)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 352)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.14030263958545985), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.48530910619194356), ('regressor__regressor__estimator__n_estimators', 317)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.090195455909045), ('regressor__regressor__estimator__min_samples_split', 0.11040617098249013), ('regressor__regressor__estimator__n_estimators', 673)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.09102122662016279), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.3280884814270998), ('regressor__regressor__estimator__n_estimators', 453)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10224196573464928), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.10558111439463669), ('regressor__regressor__estimator__min_samples_split', 0.2482323930696343), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05067341224853714), ('regressor__regressor__estimator__min_samples_split', 0.05374739338180975), ('regressor__regressor__estimator__n_estimators', 1889)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.07705446356048692), ('regressor__regressor__estimator__n_estimators', 400)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05090531285618139), ('regressor__regressor__estimator__min_samples_split', 0.07322208964467801), ('regressor__regressor__estimator__n_estimators', 53)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.061392732861763756), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.11876093384085276), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.07562045687674158), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 238)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.11660114810190389), ('regressor__regressor__estimator__min_samples_split', 0.12339770522249531), ('regressor__regressor__estimator__n_estimators', 111)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.0890820375105105), ('regressor__regressor__estimator__min_samples_split', 0.13068707100692892), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 83)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.5036920880360822), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08062923069520875), ('regressor__regressor__estimator__n_estimators', 2000)])


Average scores:	 r2: [ 0.045  0.056 -0.041]±[0.153 0.073 0.022]
[array([ 0.04474326,  0.05591505, -0.0405739 ]), array([8.47727948e+00, 1.53569476e+02, 9.38188953e+04]), array([6.39446901e+00, 1.03073916e+02, 1.41217056e+04])]
RRU Monomer
Filename: (Mordred)_RF_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Monomer/(Mordred)_RF_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Monomer/(Mordred)_RF_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Monomer/(Mordred)_RF_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c203n04>
Subject: Job 292246: <mordred_RF_Robust Scaler_multimodal Rh_20250120> in cluster <Hazel> Done

Job <mordred_RF_Robust Scaler_multimodal Rh_20250120> was submitted from host <c038n02> by user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:16 2025
Job was executed on host(s) <8*c203n04>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:35 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Jan 20 12:16:35 2025
Terminated at Mon Jan 20 14:02:40 2025
Results reported at Mon Jan 20 14:02:40 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 8
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "mordred_RF_Robust Scaler_multimodal Rh_20250120"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py mordred              --regressor_type RF              --target "multimodal Rh"              --oligo_type "RRU Monomer"              --transform_type "Robust Scaler"

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   24138.00 sec.
    Max Memory :                                 5 GB
    Average Memory :                             4.80 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               11.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   6366 sec.
    Turnaround time :                            6384 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err> for stderr output of this job.



Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.13355138858241195), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 132)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.07370663733594204), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.1303518850583663), ('regressor__regressor__estimator__min_samples_split', 0.20269372328918495), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08926585946006593), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.08147211696927466), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.11365482843452972), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10572895708369884), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.09729361241980551), ('regressor__regressor__estimator__min_samples_split', 0.17525942081777907), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.4262385478498276), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.10504077463504433), ('regressor__regressor__estimator__min_samples_split', 0.13386502267619152), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 202)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.2784186893480254), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.13880227457870503), ('regressor__regressor__estimator__min_samples_split', 0.09438636315185842), ('regressor__regressor__estimator__n_estimators', 275)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.13395085799227305), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.08768295710353233), ('regressor__regressor__estimator__min_samples_split', 0.07405010259778187), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.3241789821423845), ('regressor__regressor__estimator__n_estimators', 126)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 138)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.12013519744820972), ('regressor__regressor__estimator__n_estimators', 505)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.06422814587166695), ('regressor__regressor__estimator__min_samples_split', 0.26305249006178283), ('regressor__regressor__estimator__n_estimators', 107)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.09389350139849467), ('regressor__regressor__estimator__min_samples_split', 0.2364954148406671), ('regressor__regressor__estimator__n_estimators', 283)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.07311611065157295), ('regressor__regressor__estimator__min_samples_split', 0.09868226434824741), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.18084830060103313), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.11660114810190389), ('regressor__regressor__estimator__min_samples_split', 0.12339770522249531), ('regressor__regressor__estimator__n_estimators', 111)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.09354041859097875), ('regressor__regressor__estimator__min_samples_split', 0.20708029574567138), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.07197335813207219), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.1431652343167335), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05208503640414128), ('regressor__regressor__estimator__min_samples_split', 0.09038898576597479), ('regressor__regressor__estimator__n_estimators', 52)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.07709937466467412), ('regressor__regressor__estimator__n_estimators', 2000)])


Average scores:	 r2: [ 0.042  0.06  -0.041]±[0.152 0.074 0.022]
[array([ 0.04245443,  0.0604881 , -0.04057389]), array([8.48749280e+00, 1.53190824e+02, 9.38188953e+04]), array([6.40220178e+00, 1.02685374e+02, 1.41217056e+04])]
RRU Dimer
Filename: (Mordred)_RF_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Dimer/(Mordred)_RF_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Dimer/(Mordred)_RF_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Dimer/(Mordred)_RF_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c203n09>
Subject: Job 292248: <mordred_RF_Robust Scaler_multimodal Rh_20250120> in cluster <Hazel> Done

Job <mordred_RF_Robust Scaler_multimodal Rh_20250120> was submitted from host <c038n02> by user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:17 2025
Job was executed on host(s) <8*c203n09>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:17:05 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Jan 20 12:17:05 2025
Terminated at Mon Jan 20 14:03:55 2025
Results reported at Mon Jan 20 14:03:55 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 8
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "mordred_RF_Robust Scaler_multimodal Rh_20250120"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py mordred              --regressor_type RF              --target "multimodal Rh"              --oligo_type "RRU Dimer"              --transform_type "Robust Scaler"

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   24278.21 sec.
    Max Memory :                                 5 GB
    Average Memory :                             4.70 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               11.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   6410 sec.
    Turnaround time :                            6458 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err> for stderr output of this job.



Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.10141816723901545), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.09884563093966423), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.07488973939003214), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.10225475615252744), ('regressor__regressor__estimator__min_samples_split', 0.23133135188408804), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.057422967961397745), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.18391005644965114), ('regressor__regressor__estimator__min_samples_split', 0.05023712441909869), ('regressor__regressor__estimator__n_estimators', 56)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.06926046141405841), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.2759686147965342), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.1638692114214988), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.18221672280995066), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.12540464738215223), ('regressor__regressor__estimator__min_samples_split', 0.23966431010832817), ('regressor__regressor__estimator__n_estimators', 1768)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.44854756981397836), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.07673998921802906), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.09650603198923445), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.15807482068902334), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.29091725058779594), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.12996082975199164), ('regressor__regressor__estimator__min_samples_split', 0.21800629223973272), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.09131376821130917), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.056736064649250566), ('regressor__regressor__estimator__min_samples_split', 0.22537655817942553), ('regressor__regressor__estimator__n_estimators', 72)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.09476673974794457), ('regressor__regressor__estimator__min_samples_split', 0.11402679426614316), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 124)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.1583160735883609), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.3020498870904925), ('regressor__regressor__estimator__n_estimators', 75)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.1543520394040228), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05019507059498095), ('regressor__regressor__estimator__min_samples_split', 0.12952134720619707), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.1113276017157163), ('regressor__regressor__estimator__min_samples_split', 0.2870779838882826), ('regressor__regressor__estimator__n_estimators', 123)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.07177976498489667), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 64)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 71)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 280)])


Average scores:	 r2: [ 0.049  0.061 -0.041]±[0.145 0.072 0.022]
[array([ 0.0494165 ,  0.06090373, -0.04057389]), array([8.46062578e+00, 1.53169061e+02, 9.38188953e+04]), array([6.39553873e+00, 1.02515196e+02, 1.41217056e+04])]
RRU Trimer
Filename: (Mordred)_RF_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Trimer/(Mordred)_RF_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Trimer/(Mordred)_RF_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh/RRU Trimer/(Mordred)_RF_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c207n14>
Subject: Job 292250: <mordred_RF_Robust Scaler_multimodal Rh_20250120> in cluster <Hazel> Done

Job <mordred_RF_Robust Scaler_multimodal Rh_20250120> was submitted from host <c038n02> by user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:16:17 2025
Job was executed on host(s) <8*c207n14>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Mon Jan 20 12:17:17 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Mon Jan 20 12:17:17 2025
Terminated at Mon Jan 20 14:09:29 2025
Results reported at Mon Jan 20 14:09:29 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
          
#BSUB -n 8
#BSUB -W 40:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "mordred_RF_Robust Scaler_multimodal Rh_20250120"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py mordred              --regressor_type RF              --target "multimodal Rh"              --oligo_type "RRU Trimer"              --transform_type "Robust Scaler"

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   25869.00 sec.
    Max Memory :                                 5 GB
    Average Memory :                             4.72 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               11.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   6760 sec.
    Turnaround time :                            6792 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/mordred_RF_Robust Scaler_multimodal Rh_20250120.err> for stderr output of this job.

