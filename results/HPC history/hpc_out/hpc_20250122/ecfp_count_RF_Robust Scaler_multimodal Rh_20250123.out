Dimer



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6
RRU Dimer



OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.5218012865071259), ('regressor__regressor__estimator__min_samples_split', 0.5166610297430386), ('regressor__regressor__estimator__n_estimators', 78)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05214004475281408), ('regressor__regressor__estimator__min_samples_split', 0.0530338459239795), ('regressor__regressor__estimator__n_estimators', 58)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.7882639818002172), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 74)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.11693393771055265), ('regressor__regressor__estimator__min_samples_split', 0.9358866635354776), ('regressor__regressor__estimator__n_estimators', 51)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.09841845311424907), ('regressor__regressor__estimator__min_samples_split', 0.909599682635168), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.99), ('regressor__regressor__estimator__min_samples_split', 0.99), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.24194147374823366), ('regressor__regressor__estimator__min_samples_split', 0.5521150327077191), ('regressor__regressor__estimator__n_estimators', 53)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.1581511174116692), ('regressor__regressor__estimator__min_samples_split', 0.5433271038347002), ('regressor__regressor__estimator__n_estimators', 172)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05000951536023693), ('regressor__regressor__estimator__min_samples_split', 0.4844611428260014), ('regressor__regressor__estimator__n_estimators', 864)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.1581511174116692), ('regressor__regressor__estimator__min_samples_split', 0.5433271038347002), ('regressor__regressor__estimator__n_estimators', 172)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.20379074792023721), ('regressor__regressor__estimator__min_samples_split', 0.22711977425950436), ('regressor__regressor__estimator__n_estimators', 958)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.4439736659548448), ('regressor__regressor__estimator__min_samples_split', 0.3673121648231259), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.20379074792023721), ('regressor__regressor__estimator__min_samples_split', 0.22711977425950436), ('regressor__regressor__estimator__n_estimators', 958)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.4116611075346668), ('regressor__regressor__estimator__min_samples_split', 0.17364547463898927), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.21855085205611774), ('regressor__regressor__estimator__min_samples_split', 0.28284538002125464), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.7834934206676282), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.99), ('regressor__regressor__estimator__min_samples_split', 0.99), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.8179344270147727), ('regressor__regressor__estimator__min_samples_split', 0.8501748789167984), ('regressor__regressor__estimator__n_estimators', 79)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.2633343136563988), ('regressor__regressor__estimator__min_samples_split', 0.607441820783823), ('regressor__regressor__estimator__n_estimators', 98)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.3804116164032208), ('regressor__regressor__estimator__min_samples_split', 0.5496248136577854), ('regressor__regressor__estimator__n_estimators', 96)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.8368007163791807), ('regressor__regressor__estimator__min_samples_split', 0.06349758398171729), ('regressor__regressor__estimator__n_estimators', 84)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.7416448029320675), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.24367295193936944), ('regressor__regressor__estimator__min_samples_split', 0.05262219936997363), ('regressor__regressor__estimator__n_estimators', 52)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05145164726517664), ('regressor__regressor__estimator__min_samples_split', 0.4477936075188701), ('regressor__regressor__estimator__n_estimators', 495)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.3876680442859796), ('regressor__regressor__estimator__min_samples_split', 0.8718382117537006), ('regressor__regressor__estimator__n_estimators', 94)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.7715978078120985), ('regressor__regressor__estimator__min_samples_split', 0.46843812896913417), ('regressor__regressor__estimator__n_estimators', 386)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.3347055643061163), ('regressor__regressor__estimator__min_samples_split', 0.11211280012769421), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.7869121297973426), ('regressor__regressor__estimator__min_samples_split', 0.13222069123408348), ('regressor__regressor__estimator__n_estimators', 117)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.23448749137862562), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 66)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.822234147651446), ('regressor__regressor__estimator__min_samples_split', 0.23926743298775083), ('regressor__regressor__estimator__n_estimators', 58)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.4103246722495467), ('regressor__regressor__estimator__min_samples_split', 0.99), ('regressor__regressor__estimator__n_estimators', 139)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.207571223989099), ('regressor__regressor__estimator__min_samples_split', 0.1931359928344148), ('regressor__regressor__estimator__n_estimators', 176)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.5621839653272858), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 73)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.44479665154540016), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.6181069562950083), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])


Average scores:	 r2: [ 0.009  0.015 -0.972]±[0.095 0.051 1.812]
[array([ 0.00887384,  0.01518667, -0.97215165]), array([8.67357884e+00, 1.56896104e+02, 9.70120635e+04]), array([6.64875788e+00, 1.08462529e+02, 2.50832712e+04])]
RRU Dimer
Filename: (ECFP3.count.512)_RF_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh_without_log/RRU Dimer/(ECFP3.count.512)_RF_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh_without_log/RRU Dimer/(ECFP3.count.512)_RF_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh_without_log/RRU Dimer/(ECFP3.count.512)_RF_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c207n04>
Subject: Job 315458: <ecfp_RF_Robust Scaler_multimodal Rh_20250123> in cluster <Hazel> Done

Job <ecfp_RF_Robust Scaler_multimodal Rh_20250123> was submitted from host <c207n04> by user <sdehgha2> in cluster <Hazel> at Thu Jan 23 14:12:31 2025
Job was executed on host(s) <8*c207n04>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Thu Jan 23 14:13:30 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Thu Jan 23 14:13:30 2025
Terminated at Thu Jan 23 15:45:07 2025
Results reported at Thu Jan 23 15:45:07 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 8
#BSUB -W 45:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "ecfp_RF_Robust Scaler_multimodal Rh_20250123"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/ecfp_count_RF_Robust Scaler_multimodal Rh_20250123.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/ecfp_count_RF_Robust Scaler_multimodal Rh_20250123.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py ecfp --regressor_type RF                                        --radius 3                                        --vector count                                        --target "multimodal Rh"                                        --oligo_type "RRU Dimer"                                        --transform_type "Robust Scaler"

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   19978.00 sec.
    Max Memory :                                 2 GB
    Average Memory :                             1.99 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               14.00 GB
    Max Swap :                                   -
    Max Processes :                              26
    Max Threads :                                29
    Run time :                                   5520 sec.
    Turnaround time :                            5556 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/ecfp_count_RF_Robust Scaler_multimodal Rh_20250123.err> for stderr output of this job.



Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.11693393771055265), ('regressor__regressor__estimator__min_samples_split', 0.9358866635354776), ('regressor__regressor__estimator__n_estimators', 51)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.39589115626151256), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.99), ('regressor__regressor__estimator__min_samples_split', 0.99), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.6677398390822139), ('regressor__regressor__estimator__min_samples_split', 0.99), ('regressor__regressor__estimator__n_estimators', 105)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 6


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.8170479293694569), ('regressor__regressor__estimator__min_samples_split', 0.4421557438500059), ('regressor__regressor__estimator__n_estimators', 119)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.99), ('regressor__regressor__estimator__min_samples_split', 0.99), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.6302172133997727), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.7825471988901302), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.4833876224922612), ('regressor__regressor__estimator__n_estimators', 2000)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 13


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.574270183870964), ('regressor__regressor__estimator__n_estimators', 62)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.2063501881560481), ('regressor__regressor__estimator__min_samples_split', 0.4475708839191586), ('regressor__regressor__estimator__n_estimators', 129)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.99), ('regressor__regressor__estimator__min_samples_split', 0.99), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.2495048418070437), ('regressor__regressor__estimator__min_samples_split', 0.8363035494858228), ('regressor__regressor__estimator__n_estimators', 63)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.25037062194326554), ('regressor__regressor__estimator__min_samples_split', 0.99), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 42


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.99), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.6248641707451061), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.6292728068119291), ('regressor__regressor__estimator__min_samples_split', 0.4043719336738948), ('regressor__regressor__estimator__n_estimators', 71)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.5325849025353738), ('regressor__regressor__estimator__min_samples_split', 0.2628107279725588), ('regressor__regressor__estimator__n_estimators', 145)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.3487422473311609), ('regressor__regressor__estimator__min_samples_split', 0.7374096485611034), ('regressor__regressor__estimator__n_estimators', 270)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 69


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.09497100716419857), ('regressor__regressor__estimator__min_samples_split', 0.7935502773372392), ('regressor__regressor__estimator__n_estimators', 408)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.6166606982423406), ('regressor__regressor__estimator__min_samples_split', 0.164241816717995), ('regressor__regressor__estimator__n_estimators', 53)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.9250682956171838), ('regressor__regressor__estimator__min_samples_split', 0.9675263310361021), ('regressor__regressor__estimator__n_estimators', 282)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.16064036619751146), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05026995099271614), ('regressor__regressor__estimator__min_samples_split', 0.41572547572430596), ('regressor__regressor__estimator__n_estimators', 142)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 420


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.5449493955241506), ('regressor__regressor__estimator__min_samples_split', 0.4688246439037563), ('regressor__regressor__estimator__n_estimators', 52)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.99), ('regressor__regressor__estimator__min_samples_split', 0.7061785168964838), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.2868315344136302), ('regressor__regressor__estimator__min_samples_split', 0.4274735711087739), ('regressor__regressor__estimator__n_estimators', 51)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.05), ('regressor__regressor__estimator__min_samples_split', 0.9369489826678125), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.6948301484852198), ('regressor__regressor__estimator__min_samples_split', 0.541500930741068), ('regressor__regressor__estimator__n_estimators', 137)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 1234567890


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.3082608489932172), ('regressor__regressor__estimator__min_samples_split', 0.45480490295557957), ('regressor__regressor__estimator__n_estimators', 68)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.06692080420546521), ('regressor__regressor__estimator__min_samples_split', 0.9733482724584483), ('regressor__regressor__estimator__n_estimators', 134)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.24785173300731844), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.99), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'sqrt'), ('regressor__regressor__estimator__min_samples_leaf', 0.7092058249469484), ('regressor__regressor__estimator__min_samples_split', 0.99), ('regressor__regressor__estimator__n_estimators', 50)])





OPTIMIZING HYPERPARAMETERS FOR REGRESSOR RF 	SEED: 473129


Best parameters: OrderedDict([('regressor__regressor__estimator__max_depth', None), ('regressor__regressor__estimator__max_features', 'log2'), ('regressor__regressor__estimator__min_samples_leaf', 0.99), ('regressor__regressor__estimator__min_samples_split', 0.05), ('regressor__regressor__estimator__n_estimators', 50)])


Average scores:	 r2: [ 0.01   0.014 -1.086]±[0.103 0.056 2.207]
[array([ 0.00955345,  0.01393875, -1.08580361]), array([8.66579921e+00, 1.56984383e+02, 9.72506537e+04]), array([6.63704096e+00, 1.08400982e+02, 2.49024933e+04])]
Dimer
Filename: (ECFP3.count.512)_RF_Robust Scaler
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh_without_log/Dimer/(ECFP3.count.512)_RF_Robust Scaler_scores.json
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh_without_log/Dimer/(ECFP3.count.512)_RF_Robust Scaler_predictions.csv
/gpfs_common/share03/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/target_multimodal Rh_without_log/Dimer/(ECFP3.count.512)_RF_Robust Scaler_shape.json
Done Saving scores!

------------------------------------------------------------
Sender: LSF System <lsfadmin@c033n02>
Subject: Job 315457: <ecfp_RF_Robust Scaler_multimodal Rh_20250123> in cluster <Hazel> Done

Job <ecfp_RF_Robust Scaler_multimodal Rh_20250123> was submitted from host <c207n04> by user <sdehgha2> in cluster <Hazel> at Thu Jan 23 14:12:31 2025
Job was executed on host(s) <8*c033n02>, in queue <single_chassis>, as user <sdehgha2> in cluster <Hazel> at Thu Jan 23 14:12:45 2025
</home/sdehgha2> was used as the home directory.
</share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/code_/training/hpc_submit_training_Rh> was used as the working directory.
Started at Thu Jan 23 14:12:45 2025
Terminated at Thu Jan 23 15:45:25 2025
Results reported at Thu Jan 23 15:45:25 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input

#BSUB -n 8
#BSUB -W 45:01
#BSUB -R span[hosts=1]
#BSUB -R "rusage[mem=16GB]"
#BSUB -J "ecfp_RF_Robust Scaler_multimodal Rh_20250123"  
#BSUB -o "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/ecfp_count_RF_Robust Scaler_multimodal Rh_20250123.out"
#BSUB -e "/share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/ecfp_count_RF_Robust Scaler_multimodal Rh_20250123.err"

source ~/.bashrc
conda activate /usr/local/usrapps/ddomlab/sdehgha2/pls-dataset-env
python ../train_structure_only.py ecfp --regressor_type RF                                        --radius 3                                        --vector count                                        --target "multimodal Rh"                                        --oligo_type "Dimer"                                        --transform_type "Robust Scaler"

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   21159.02 sec.
    Max Memory :                                 3 GB
    Average Memory :                             2.95 GB
    Total Requested Memory :                     16.00 GB
    Delta Memory :                               13.00 GB
    Max Swap :                                   -
    Max Processes :                              38
    Max Threads :                                41
    Run time :                                   5560 sec.
    Turnaround time :                            5574 sec.

The output (if any) is above this job summary.



PS:

Read file </share/ddomlab/sdehgha2/working-space/main/P1_pls-dataset/pls-dataset-space/PLS-Dataset/results/ecfp_count_RF_Robust Scaler_multimodal Rh_20250123.err> for stderr output of this job.

